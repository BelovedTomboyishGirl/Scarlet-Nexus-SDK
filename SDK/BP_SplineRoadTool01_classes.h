// BlueprintGeneratedClass BP_SplineRoadTool01.BP_SplineRoadTool01_C
// Size: 0x3dd (Inherited: 0x240)
struct ABP_SplineRoadTool01_C : ABP_SplineBase_C {
	struct FPointerToUberGraphFrame UberGraphFrame; // 0x240(0x08)
	struct UBoxComponent* Box; // 0x248(0x08)
	struct USplineComponent* Spline; // 0x250(0x08)
	float Spacing; // 0x258(0x04)
	enum class ESplineCoordinateSpace CoordinatSpace; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	float TangentLength; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct TArray<struct UStaticMesh*> SplineMeshComponent; // 0x268(0x10)
	struct TArray<struct FBP_SplineRoadTool01_MeshData> AddSplineMeshComponent; // 0x278(0x10)
	int32_t RandomSeed; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct AActor* RoadClassToAdd; // 0x290(0x08)
	bool Update; // 0x298(0x01)
	bool StartAttached?; // 0x299(0x01)
	bool AddEndMesh; // 0x29a(0x01)
	char pad_29B[0x5]; // 0x29b(0x05)
	struct UStaticMesh* CrossMesh; // 0x2a0(0x08)
	struct UStaticMeshComponent* CrossReference; // 0x2a8(0x08)
	struct TArray<struct UStaticMesh*> AddCrossMesh; // 0x2b0(0x10)
	struct TArray<struct FName> SocketArray; // 0x2c0(0x10)
	struct AActor* LinkComponent; // 0x2d0(0x08)
	struct FName DockingStation; // 0x2d8(0x08)
	struct TArray<struct AActor*> ChildActor; // 0x2e0(0x10)
	bool ConnectEndToActor; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct AActor* AttachActor; // 0x2f8(0x08)
	struct TArray<struct FName> AvailableSockets; // 0x300(0x10)
	int32_t SocketID; // 0x310(0x04)
	bool AlignToSurface?; // 0x314(0x01)
	char pad_315[0x3]; // 0x315(0x03)
	float TraceDepths; // 0x318(0x04)
	char pad_31C[0x4]; // 0x31c(0x04)
	struct USplineComponent* CrossSpline; // 0x320(0x08)
	bool ShowLandscapeSzises; // 0x328(0x01)
	bool ApplyLandscapeSpline; // 0x329(0x01)
	char pad_32A[0x6]; // 0x32a(0x06)
	struct UStaticMesh* MarkingMesh; // 0x330(0x08)
	float LandscapSpineMeshSpacing; // 0x338(0x04)
	float LSM_Out_Scale; // 0x33c(0x04)
	float LSM_In_Scale; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct ALandscape* Landscape; // 0x348(0x08)
	struct ALandscapeGizmoActor* Layer; // 0x350(0x08)
	int32_t LandscapeLayerID; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
	struct FString LandscapeName; // 0x360(0x10)
	float EndTangentLentgth; // 0x370(0x04)
	char pad_374[0x4]; // 0x374(0x04)
	struct TArray<struct FName> CrossEndSockets; // 0x378(0x10)
	int32_t CrossEndSocket; // 0x388(0x04)
	float LSM_Offset; // 0x38c(0x04)
	float LSM_Cross_Start_Add; // 0x390(0x04)
	float LSM_Cross_End_Add; // 0x394(0x04)
	bool Collision; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	struct FRandomStream RadomSeedStruct; // 0x39c(0x08)
	bool CollisionInvisibleWall; // 0x3a4(0x01)
	bool CastShadow; // 0x3a5(0x01)
	bool CollisionInvisibleWallEyeblock; // 0x3a6(0x01)
	bool AttachParentBound; // 0x3a7(0x01)
	bool DynamicShadow; // 0x3a8(0x01)
	bool CrossMeshCollision; // 0x3a9(0x01)
	bool CrossMeshCollisionInvisibleWall; // 0x3aa(0x01)
	bool CrossMeshCastShadow; // 0x3ab(0x01)
	bool CrossMeshDynamicShadow; // 0x3ac(0x01)
	bool CanEverAffectNavigation; // 0x3ad(0x01)
	bool OverrideLightMapRes; // 0x3ae(0x01)
	char pad_3AF[0x1]; // 0x3af(0x01)
	int32_t OverridenLightMapRes; // 0x3b0(0x04)
	bool CrossMeshCollisionInvisibleWallEyeblock; // 0x3b4(0x01)
	bool CrossMeshCanEverAffectNavigation; // 0x3b5(0x01)
	bool CrossMeshOverrideLightMapRes; // 0x3b6(0x01)
	char pad_3B7[0x1]; // 0x3b7(0x01)
	int32_t CrossMeshOverridenLightMapRes; // 0x3b8(0x04)
	bool CrossMeshStaticShadow; // 0x3bc(0x01)
	bool CrossMeshTwoSidedLighting; // 0x3bd(0x01)
	bool CrossMeshShadowTwoSided; // 0x3be(0x01)
	bool OverrideStaticShadow; // 0x3bf(0x01)
	bool OverrideTwoSidedLighting; // 0x3c0(0x01)
	bool OverrideShadowTwoSided; // 0x3c1(0x01)
	bool UseMeshRoll; // 0x3c2(0x01)
	bool UseEndMeshPitchRotation; // 0x3c3(0x01)
	bool LightmapTypeVolumetric; // 0x3c4(0x01)
	bool CrossMeshLightmapTypeVolumetric; // 0x3c5(0x01)
	bool CrossMeshVisibleInReflectionCaptures; // 0x3c6(0x01)
	bool VisibleInReflectionCaptures; // 0x3c7(0x01)
	float MinDrawDistance; // 0x3c8(0x04)
	float DesiredMaxDrawDistance; // 0x3cc(0x04)
	bool AllowCullDistanceVolume; // 0x3d0(0x01)
	char pad_3D1[0x3]; // 0x3d1(0x03)
	float CrossMeshMinDrawDistance; // 0x3d4(0x04)
	float CrossMeshDesiredMaxDrawDistance; // 0x3d8(0x04)
	bool CrossMeshAllowCullDistanceVolume; // 0x3dc(0x01)

	void SetupAttachParentBound(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.SetupAttachParentBound // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetCrossSpline(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.SetCrossSpline // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void LandscapeTransform(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.LandscapeTransform // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void LandscapeMarks(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.LandscapeMarks // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void NormalizeUp(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.NormalizeUp // (Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void AlignToSurface(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.AlignToSurface // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEndPointTrans(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.SetEndPointTrans // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetStartPointTrans(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.SetStartPointTrans // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void AddMesh(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.AddMesh // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void AddRoadToSpline(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.AddRoadToSpline // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void UserConstructionScript(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.UserConstructionScript // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void AddEnd(); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.AddEnd // (BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ExecuteUbergraph_BP_SplineRoadTool01(int32_t EntryPoint); // Function BP_SplineRoadTool01.BP_SplineRoadTool01_C.ExecuteUbergraph_BP_SplineRoadTool01 // (Final|UbergraphFunction|HasDefaults) // @ game+0x1685580
};

