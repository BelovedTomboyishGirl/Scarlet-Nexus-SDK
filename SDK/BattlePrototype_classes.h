// Class BattlePrototype.BP_SM_MapModel_Base
// Size: 0x2e8 (Inherited: 0x240)
struct ABP_SM_MapModel_Base : AStaticMeshActor {
	bool isDetaileMap; // 0x240(0x01)
	bool isScale; // 0x241(0x01)
	char pad_242[0x2]; // 0x242(0x02)
	float playerrate; // 0x244(0x04)
	float MinimapGradationValue; // 0x248(0x04)
	float MapIconScaleRate; // 0x24c(0x04)
	float MapIconDetail_ZOffset; // 0x250(0x04)
	float MinimapOnlyIconGradationValue; // 0x254(0x04)
	bool MinimapOnlyIconGradationValueFlag; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
	struct UMaterialInstanceDynamic* m_MaterialDynamicMinimap; // 0x260(0x08)
	struct UMaterialInstanceDynamic* m_MaterialDynamicDetail; // 0x268(0x08)
	struct TArray<struct UStaticMeshComponent*> m_SubMapData; // 0x270(0x10)
	char pad_280[0x8]; // 0x280(0x08)
	struct TArray<struct FUIMapFloorAdjustData> PGAdjuster; // 0x288(0x10)
	bool m_pgAdjusterFlag; // 0x298(0x01)
	char pad_299[0x7]; // 0x299(0x07)
	struct TArray<float> PgHeightData; // 0x2a0(0x10)
	bool m_pgIconHeightFlag; // 0x2b0(0x01)
	bool m_isCenterOffsetProc; // 0x2b1(0x01)
	char pad_2B2[0x6]; // 0x2b2(0x06)
	struct TArray<struct FUIDetaileMapSubAreaCenterPosition> m_AreaCenterPos; // 0x2b8(0x10)
	bool m_FloorWidthDataCheck; // 0x2c8(0x01)
	char pad_2C9[0x3]; // 0x2c9(0x03)
	int32_t m_FloorWidthIndex; // 0x2cc(0x04)
	struct TArray<float> m_FloorWidthData; // 0x2d0(0x10)
	char pad_2E0[0x8]; // 0x2e0(0x08)

	void SetSubModelVisible(struct FName SubName, bool Flag); // Function BattlePrototype.BP_SM_MapModel_Base.SetSubModelVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x1166610
	void SetScale(bool Scale); // Function BattlePrototype.BP_SM_MapModel_Base.SetScale // (Final|Native|Public|BlueprintCallable) // @ game+0x1166560
	void SetPlayerRate(float playerrate); // Function BattlePrototype.BP_SM_MapModel_Base.SetPlayerRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1166460
	void SetPersSwitch(bool pers); // Function BattlePrototype.BP_SM_MapModel_Base.SetPersSwitch // (Final|Native|Public|BlueprintCallable) // @ game+0x11663e0
	void SetGradationValue(float Gradation); // Function BattlePrototype.BP_SM_MapModel_Base.SetGradationValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11661d0
	void SetFloorPGAdjuster(struct TArray<struct FUIMapFloorAdjustData> Update); // Function BattlePrototype.BP_SM_MapModel_Base.SetFloorPGAdjuster // (Final|Native|Public|BlueprintCallable) // @ game+0x1166090
	void SetFloorIndextoGame(int32_t floorindex); // Function BattlePrototype.BP_SM_MapModel_Base.SetFloorIndextoGame // (Final|Native|Public|BlueprintCallable) // @ game+0x1166010
	bool SetFloorIndex(int32_t floorindex); // Function BattlePrototype.BP_SM_MapModel_Base.SetFloorIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetDetaileMap(bool detaileMap); // Function BattlePrototype.BP_SM_MapModel_Base.SetDetaileMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1165f80
	void SetBrainField(bool Flag); // Function BattlePrototype.BP_SM_MapModel_Base.SetBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1165c50
	bool MaterialUpdate(); // Function BattlePrototype.BP_SM_MapModel_Base.MaterialUpdate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isPgIconHeightFlag(); // Function BattlePrototype.BP_SM_MapModel_Base.isPgIconHeightFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166da0
	bool isMinimapOnlyIconGradationValue(); // Function BattlePrototype.BP_SM_MapModel_Base.isMinimapOnlyIconGradationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166d80
	bool isCenterOffsetProc(); // Function BattlePrototype.BP_SM_MapModel_Base.isCenterOffsetProc // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166c00
	bool IsBrainField(); // Function BattlePrototype.BP_SM_MapModel_Base.IsBrainField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166bc0
	bool isAdjusterFlag(); // Function BattlePrototype.BP_SM_MapModel_Base.isAdjusterFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166ba0
	float GetZoomMin(); // Function BattlePrototype.BP_SM_MapModel_Base.GetZoomMin // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	float GetZoomMax(); // Function BattlePrototype.BP_SM_MapModel_Base.GetZoomMax // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	struct TArray<float> GetPgIconHeightFlag(); // Function BattlePrototype.BP_SM_MapModel_Base.GetPgIconHeightFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164be0
	float GetMinimapOnlyIconGradationValue(); // Function BattlePrototype.BP_SM_MapModel_Base.GetMinimapOnlyIconGradationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164bc0
	float GetMinimapGradationValue(); // Function BattlePrototype.BP_SM_MapModel_Base.GetMinimapGradationValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164ba0
	float GetMapIconScaleRate(); // Function BattlePrototype.BP_SM_MapModel_Base.GetMapIconScaleRate // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164b80
	float GetMapIconDetail_ZOffset(); // Function BattlePrototype.BP_SM_MapModel_Base.GetMapIconDetail_ZOffset // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164b60
	struct TArray<struct FUIMapFloorAdjustData> GetFloorPGAdjuster(); // Function BattlePrototype.BP_SM_MapModel_Base.GetFloorPGAdjuster // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164820
	int32_t GetFloorIndextoGameWidthNum(); // Function BattlePrototype.BP_SM_MapModel_Base.GetFloorIndextoGameWidthNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1164800
	bool GetFloorIndextoGameWidthFlag(); // Function BattlePrototype.BP_SM_MapModel_Base.GetFloorIndextoGameWidthFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11647e0
	float GetFloorIndextoGameWidthData(int32_t floorindex); // Function BattlePrototype.BP_SM_MapModel_Base.GetFloorIndextoGameWidthData // (Final|Native|Public|BlueprintCallable) // @ game+0x1164750
	int32_t GetFloorIndextoGameWidth(); // Function BattlePrototype.BP_SM_MapModel_Base.GetFloorIndextoGameWidth // (Final|Native|Public|BlueprintCallable) // @ game+0x1164730
	struct TArray<struct FUIDetaileMapFloorData> GetFloorData(); // Function BattlePrototype.BP_SM_MapModel_Base.GetFloorData // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	float GetDirectionRotate(); // Function BattlePrototype.BP_SM_MapModel_Base.GetDirectionRotate // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	struct UCapsuleComponent* GetCollisitonData(); // Function BattlePrototype.BP_SM_MapModel_Base.GetCollisitonData // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct TArray<struct FUIDetaileMapSubAreaCenterPosition> GetAreaCenterPosArray(); // Function BattlePrototype.BP_SM_MapModel_Base.GetAreaCenterPosArray // (Final|Native|Public|BlueprintCallable) // @ game+0x1164370
	struct FVector GetAreaCenterPos(); // Function BattlePrototype.BP_SM_MapModel_Base.GetAreaCenterPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1164330
	void CalcMaterialUpDateParam(float RateHeight, float Width); // Function BattlePrototype.BP_SM_MapModel_Base.CalcMaterialUpDateParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1164100
};

// Class BattlePrototype.BP_UI_SceneMap
// Size: 0x520 (Inherited: 0x230)
struct ABP_UI_SceneMap : AActor {
	struct FVector ObjectIconScale; // 0x230(0x0c)
	bool DebugCameraPers; // 0x23c(0x01)
	char pad_23D[0x3]; // 0x23d(0x03)
	struct FVector ViewModeCameraLocation; // 0x240(0x0c)
	struct FVector ViewModeViewLocation; // 0x24c(0x0c)
	float ViewModeZoom; // 0x258(0x04)
	float MapGradationValue; // 0x25c(0x04)
	float MapHeightValue; // 0x260(0x04)
	float m_FootPrintSpanNormal; // 0x264(0x04)
	float m_FootPrintSpanExtent; // 0x268(0x04)
	float m_FootPrintSpanMax; // 0x26c(0x04)
	bool m_FootPrintStop; // 0x270(0x01)
	char pad_271[0x3]; // 0x271(0x03)
	float m_CameraHeight; // 0x274(0x04)
	float m_CameraOrthoWidth; // 0x278(0x04)
	float m_CameraRotatePitch; // 0x27c(0x04)
	float m_RotateCamera; // 0x280(0x04)
	float m_CameraRoll; // 0x284(0x04)
	float m_CameraRollBase; // 0x288(0x04)
	bool isScaleFlag; // 0x28c(0x01)
	bool isCameraRotateFlag; // 0x28d(0x01)
	bool IsDetailMap; // 0x28e(0x01)
	bool m_IsPerspective; // 0x28f(0x01)
	int32_t m_AreaMax; // 0x290(0x04)
	int32_t m_FloorMax; // 0x294(0x04)
	int32_t m_CurrentFloor; // 0x298(0x04)
	int32_t m_CurrentArea; // 0x29c(0x04)
	int32_t m_CurrentLevel; // 0x2a0(0x04)
	int32_t CurrentFloorPlayer; // 0x2a4(0x04)
	int32_t CurrentAreaPlayer; // 0x2a8(0x04)
	int32_t CurrentFloorMain; // 0x2ac(0x04)
	int32_t CurrentFloorSub; // 0x2b0(0x04)
	int32_t CurrentFloorBonds; // 0x2b4(0x04)
	int32_t m_CurrentIndex; // 0x2b8(0x04)
	int32_t m_ChapterNo; // 0x2bc(0x04)
	int32_t m_ProgressNo; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct TArray<struct FUIDetaileMapFloorData> m_FloorData; // 0x2c8(0x10)
	struct FDelegate m_OnMinimapChangeFloor; // 0x2d8(0x10)
	struct TArray<struct UMaterialInterface*> m_MaterialIconArray; // 0x2e8(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> m_MaterialDynamicIconArray; // 0x2f8(0x10)
	float m_minimapDistanceSquareEnemy; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct ABP_SM_MapModel_Base* m_SM_MapModel_Base; // 0x310(0x08)
	struct TArray<struct UStaticMeshComponent*> m_MeshList; // 0x318(0x10)
	struct FUIDetaileMapCheckData m_DetailMapData; // 0x328(0x28)
	char pad_350[0x30]; // 0x350(0x30)
	struct AActor* m_AsyncLineActor; // 0x380(0x08)
	char pad_388[0xc0]; // 0x388(0xc0)
	struct URSGameInstance* Instance; // 0x448(0x08)
	struct AEnemyManager* EnemyManager; // 0x450(0x08)
	struct APlayerCameraManager* CameraManager; // 0x458(0x08)
	struct AEventManager* EventManager; // 0x460(0x08)
	struct USceneCaptureComponent2D* CaptureCamera; // 0x468(0x08)
	struct APawn* m_player; // 0x470(0x08)
	struct UInstancedStaticMeshComponent* ObjectInstancedMesh; // 0x478(0x08)
	struct UInstancedStaticMeshComponent* NpcPlInstancedMesh; // 0x480(0x08)
	struct UInstancedStaticMeshComponent* EnemyInstancedMeshNormal; // 0x488(0x08)
	struct UInstancedStaticMeshComponent* EnemyInstancedMesh0630; // 0x490(0x08)
	struct UInstancedStaticMeshComponent* FootInstancedMesh; // 0x498(0x08)
	struct UInstancedStaticMeshComponent* MainQuestInstancedMesh; // 0x4a0(0x08)
	struct UInstancedStaticMeshComponent* SubQuestActiveInstancedMesh; // 0x4a8(0x08)
	struct UInstancedStaticMeshComponent* SubQuestCompActiveInstancedMesh; // 0x4b0(0x08)
	struct UInstancedStaticMeshComponent* BoudsQuestInstancedMesh; // 0x4b8(0x08)
	struct APsychicObjectManager* PsychicObjectManager; // 0x4c0(0x08)
	struct APlayerManager* PlayerManager; // 0x4c8(0x08)
	struct TArray<struct TWeakObjectPtr<struct ARSCharacterBase>> PlayerCharacterList; // 0x4d0(0x10)
	struct TArray<struct ARSCharacterBase*> m_EnemyList; // 0x4e0(0x10)
	struct TArray<struct FTransform> m_PlPosDataListNormal; // 0x4f0(0x10)
	struct TArray<struct FTransform> m_PlPosDataListExtent; // 0x500(0x10)
	struct ARSHUDBase* m_pHudBase; // 0x510(0x08)
	char pad_518[0x8]; // 0x518(0x08)

	void UpdateMinimapCalc(); // Function BattlePrototype.BP_UI_SceneMap.UpdateMinimapCalc // (Final|Native|Public|BlueprintCallable) // @ game+0x11668c0
	void UpdateMaterialCalc(float Rate, bool Update); // Function BattlePrototype.BP_UI_SceneMap.UpdateMaterialCalc // (Final|Native|Public|BlueprintCallable) // @ game+0x11667f0
	void UpdateDetailmapCalc(); // Function BattlePrototype.BP_UI_SceneMap.UpdateDetailmapCalc // (Final|Native|Public|BlueprintCallable) // @ game+0x11667d0
	void StartMinimapBrainField(); // Function BattlePrototype.BP_UI_SceneMap.StartMinimapBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x11667b0
	bool Start(); // Function BattlePrototype.BP_UI_SceneMap.Start // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetWantsTraceRequest(struct AActor* Actor, bool Flag); // Function BattlePrototype.BP_UI_SceneMap.SetWantsTraceRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x11666e0
	void SetSubModel(); // Function BattlePrototype.BP_UI_SceneMap.SetSubModel // (Final|Native|Public|BlueprintCallable) // @ game+0x11665f0
	void SetProgressNo(int32_t Progress); // Function BattlePrototype.BP_UI_SceneMap.SetProgressNo // (Final|Native|Public|BlueprintCallable) // @ game+0x11664e0
	void SetMapHeight(float Height); // Function BattlePrototype.BP_UI_SceneMap.SetMapHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x1166360
	void SetMapGradation(float Gradation); // Function BattlePrototype.BP_UI_SceneMap.SetMapGradation // (Final|Native|Public|BlueprintCallable) // @ game+0x11662e0
	void SetIconUpdateFlag(bool Flag); // Function BattlePrototype.BP_UI_SceneMap.SetIconUpdateFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1166250
	void SetDetailMapData(struct FUIDetaileMapCheckData Data, int32_t initareano); // Function BattlePrototype.BP_UI_SceneMap.SetDetailMapData // (Final|Native|Public|BlueprintCallable) // @ game+0x1165e50
	void SetCurrentIndex(int32_t Index); // Function BattlePrototype.BP_UI_SceneMap.SetCurrentIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1165dd0
	void SetChapterNoIndex(int32_t no); // Function BattlePrototype.BP_UI_SceneMap.SetChapterNoIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1165d50
	void SetBrainField(bool Flag); // Function BattlePrototype.BP_UI_SceneMap.SetBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1165cd0
	void SceneCaptureCameraInit(struct USceneCaptureComponent2D* pCamera); // Function BattlePrototype.BP_UI_SceneMap.SceneCaptureCameraInit // (Final|Native|Public|BlueprintCallable) // @ game+0x1165bd0
	bool QuestIconInit_Native(); // Function BattlePrototype.BP_UI_SceneMap.QuestIconInit_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PsychicObjUpdate(); // Function BattlePrototype.BP_UI_SceneMap.PsychicObjUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void PsychicObjInit(struct UInstancedStaticMeshComponent* InstancedMesh, float Square); // Function BattlePrototype.BP_UI_SceneMap.PsychicObjInit // (Final|Native|Public|BlueprintCallable) // @ game+0x1165b00
	void PlayerFootIconUpdate(); // Function BattlePrototype.BP_UI_SceneMap.PlayerFootIconUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1165ae0
	void PlayerFootIconInit(struct UInstancedStaticMeshComponent* InstancedMesh); // Function BattlePrototype.BP_UI_SceneMap.PlayerFootIconInit // (Final|Native|Public|BlueprintCallable) // @ game+0x1165a60
	void OnEnemyListUpdate(); // Function BattlePrototype.BP_UI_SceneMap.OnEnemyListUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1165a40
	void NpcPlayerUpdate(); // Function BattlePrototype.BP_UI_SceneMap.NpcPlayerUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1165a20
	void NpcPlayerInit(struct UInstancedStaticMeshComponent* InstancedMesh); // Function BattlePrototype.BP_UI_SceneMap.NpcPlayerInit // (Final|Native|Public|BlueprintCallable) // @ game+0x11659a0
	bool isCheckProg(struct FUIDetaileMapCheckCoreData Data); // Function BattlePrototype.BP_UI_SceneMap.isCheckProg // (Final|Native|Public|BlueprintCallable) // @ game+0x1166cd0
	bool isCheckFlag(struct FUIDetaileMapCheckCoreData Data); // Function BattlePrototype.BP_UI_SceneMap.isCheckFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1166c20
	bool IsBrainField(); // Function BattlePrototype.BP_UI_SceneMap.IsBrainField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166be0
	bool IsAysncLocation(); // Function BattlePrototype.BP_UI_SceneMap.IsAysncLocation // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1164fc0
	bool isActorTick(); // Function BattlePrototype.BP_UI_SceneMap.isActorTick // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InstanceObjInit(struct UInstancedStaticMeshComponent* mainquest, struct UInstancedStaticMeshComponent* subquestActive, struct UInstancedStaticMeshComponent* subquestCompActive, struct UInstancedStaticMeshComponent* boudsquest); // Function BattlePrototype.BP_UI_SceneMap.InstanceObjInit // (Final|Native|Public|BlueprintCallable) // @ game+0x1164e70
	void InitializePlayerFootIconArray(); // Function BattlePrototype.BP_UI_SceneMap.InitializePlayerFootIconArray // (Final|Native|Public|BlueprintCallable) // @ game+0x1164e50
	void InitializeMaterialNative(); // Function BattlePrototype.BP_UI_SceneMap.InitializeMaterialNative // (Final|Native|Public|BlueprintCallable) // @ game+0x1164e30
	struct ASceneManager* GetSceneManager(); // Function BattlePrototype.BP_UI_SceneMap.GetSceneManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1164e00
	float GetRotateCamera(); // Function BattlePrototype.BP_UI_SceneMap.GetRotateCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1164de0
	float GetRateData(struct FVector inputpos); // Function BattlePrototype.BP_UI_SceneMap.GetRateData // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1164d40
	enum class QuestProgressState GetQuestInfoState(struct FName questId); // Function BattlePrototype.BP_UI_SceneMap.GetQuestInfoState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1164ca0
	struct TArray<struct ANpcTownPeople*> getMinimapNpcList(); // Function BattlePrototype.BP_UI_SceneMap.getMinimapNpcList // (Final|Native|Public|BlueprintCallable) // @ game+0x1166b20
	struct AStaticMeshActor* getMeshClassRefalence(struct FString Path); // Function BattlePrototype.BP_UI_SceneMap.getMeshClassRefalence // (Final|Native|Protected|BlueprintCallable) // @ game+0x1166a30
	struct UMaterialInstanceDynamic* getMaterialInstanceNative(enum class EUIMapIconNative iconTypeNatice); // Function BattlePrototype.BP_UI_SceneMap.getMaterialInstanceNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11669a0
	struct FVector GetLineTraceActorLocation(); // Function BattlePrototype.BP_UI_SceneMap.GetLineTraceActorLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1164b30
	struct UInstancedStaticMeshComponent* GetInstanceMeshSubQuestCompActive(); // Function BattlePrototype.BP_UI_SceneMap.GetInstanceMeshSubQuestCompActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1164b10
	struct UInstancedStaticMeshComponent* GetInstanceMeshSubQuestActive(); // Function BattlePrototype.BP_UI_SceneMap.GetInstanceMeshSubQuestActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1164af0
	struct UInstancedStaticMeshComponent* GetInstanceMeshMainQuest(); // Function BattlePrototype.BP_UI_SceneMap.GetInstanceMeshMainQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1164ad0
	struct UInstancedStaticMeshComponent* GetInstanceMeshBondsQuest(); // Function BattlePrototype.BP_UI_SceneMap.GetInstanceMeshBondsQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1164ab0
	struct AActor* GetIconAdjustVector(struct AActor* ActorClass, struct FName findName); // Function BattlePrototype.BP_UI_SceneMap.GetIconAdjustVector // (Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	struct FName GetGimmickActorName(struct AActor* Actor); // Function BattlePrototype.BP_UI_SceneMap.GetGimmickActorName // (Final|Native|Public|BlueprintCallable) // @ game+0x1164a20
	int32_t GetFloorIndexCore2(float floorrate, bool detail); // Function BattlePrototype.BP_UI_SceneMap.GetFloorIndexCore2 // (Final|Native|Public|BlueprintCallable) // @ game+0x11645d0
	int32_t GetFloorIndexCore(float floorrate); // Function BattlePrototype.BP_UI_SceneMap.GetFloorIndexCore // (Final|Native|Public|BlueprintCallable) // @ game+0x11646a0
	struct AEventManager* GetEventManager(); // Function BattlePrototype.BP_UI_SceneMap.GetEventManager // (Final|Native|Public|BlueprintCallable) // @ game+0x11645a0
	int32_t GetCurrentFloorSub(); // Function BattlePrototype.BP_UI_SceneMap.GetCurrentFloorSub // (Final|Native|Public|BlueprintCallable) // @ game+0x1164580
	int32_t GetCurrentFloorPlayer(); // Function BattlePrototype.BP_UI_SceneMap.GetCurrentFloorPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1164560
	int32_t GetCurrentFloorMain(); // Function BattlePrototype.BP_UI_SceneMap.GetCurrentFloorMain // (Final|Native|Public|BlueprintCallable) // @ game+0x1164540
	int32_t GetCurrentFloorBonds(); // Function BattlePrototype.BP_UI_SceneMap.GetCurrentFloorBonds // (Final|Native|Public|BlueprintCallable) // @ game+0x1164520
	int32_t GetCurrentAreaPlayer(); // Function BattlePrototype.BP_UI_SceneMap.GetCurrentAreaPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1164500
	float GetCameraRollBase(); // Function BattlePrototype.BP_UI_SceneMap.GetCameraRollBase // (Final|Native|Public|BlueprintCallable) // @ game+0x11644e0
	float GetCameraRoll(); // Function BattlePrototype.BP_UI_SceneMap.GetCameraRoll // (Final|Native|Public|BlueprintCallable) // @ game+0x11644c0
	int32_t getAreaMax(struct FName AssetClass, struct FName AssetDataPath); // Function BattlePrototype.BP_UI_SceneMap.getAreaMax // (Final|Native|Public|BlueprintCallable) // @ game+0x11668e0
	void EnemyIconUpdate(); // Function BattlePrototype.BP_UI_SceneMap.EnemyIconUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1164310
	void EnemyIconInit(struct UInstancedStaticMeshComponent* InstancedMeshNormal, struct UInstancedStaticMeshComponent* InstancedMesh0630, float Square); // Function BattlePrototype.BP_UI_SceneMap.EnemyIconInit // (Final|Native|Public|BlueprintCallable) // @ game+0x1164200
	void EndMinimapBrainField(); // Function BattlePrototype.BP_UI_SceneMap.EndMinimapBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x11641e0
	bool End(); // Function BattlePrototype.BP_UI_SceneMap.End // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool DebugUpdateIcon(); // Function BattlePrototype.BP_UI_SceneMap.DebugUpdateIcon // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void CameraUpdateMinimapPerspective(); // Function BattlePrototype.BP_UI_SceneMap.CameraUpdateMinimapPerspective // (Final|Native|Public|BlueprintCallable) // @ game+0x11641c0
	bool CameraSetPerspectiveNative(bool isperspective); // Function BattlePrototype.BP_UI_SceneMap.CameraSetPerspectiveNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool Camera_UpdateDetailMap(); // Function BattlePrototype.BP_UI_SceneMap.Camera_UpdateDetailMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector CalcMapIconLocation(enum class EUIMapIconNative Type, struct FVector inputLocation, float addZ); // Function BattlePrototype.BP_UI_SceneMap.CalcMapIconLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1163fc0
	void BgModelLoadPreviousAreaNative(int32_t Area, int32_t Lc); // Function BattlePrototype.BP_UI_SceneMap.BgModelLoadPreviousAreaNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1163ee0
	void BgModelLoadNextAreaNative(int32_t Area, int32_t Lc); // Function BattlePrototype.BP_UI_SceneMap.BgModelLoadNextAreaNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1163e00
};

// Class BattlePrototype.UISceneMapFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UUISceneMapFunctionLibrary : UBlueprintFunctionLibrary {

	void MinimapIconGetElementListUse(struct UObject* WorldContextObject, int32_t Location, int32_t Area, int32_t valiation, struct TArray<struct UDataTable*> IconTables, enum class EUiSceneMapIconType Type, struct TArray<struct FUiSceneMapIconNode> resultList); // Function BattlePrototype.UISceneMapFunctionLibrary.MinimapIconGetElementListUse // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x11654e0
	void MinimapIconGetElementList_OtherArea(struct UObject* WorldContextObject, struct TArray<struct UDataTable*> IconTables, enum class EUiSceneMapIconType Type, struct TArray<struct FUiSceneMapIconNode> resultList, struct FName AreaName); // Function BattlePrototype.UISceneMapFunctionLibrary.MinimapIconGetElementList_OtherArea // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1165780
	void MinimapIconGetElementList(struct UObject* WorldContextObject, struct TArray<struct UDataTable*> IconTables, enum class EUiSceneMapIconType Type, struct TArray<struct FUiSceneMapIconNode> resultList); // Function BattlePrototype.UISceneMapFunctionLibrary.MinimapIconGetElementList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1165300
	enum class EMapIconType MinimapIconGetArrangeIconType(struct UObject* WorldContextObject, struct TArray<struct UDataTable*> IconTables, struct FName pointName); // Function BattlePrototype.UISceneMapFunctionLibrary.MinimapIconGetArrangeIconType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11651b0
	void MinimapIconGetArrangeElementList(struct UObject* WorldContextObject, struct UDataTable* ArrangePointTable, int32_t LocationNo, int32_t AreaNo, enum class EMapIconType map_Icon_Type, struct TArray<struct FMapArrangeItemNode> resultList); // Function BattlePrototype.UISceneMapFunctionLibrary.MinimapIconGetArrangeElementList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1164fe0
};

// Class BattlePrototype.DebuggingItemBase
// Size: 0x2c8 (Inherited: 0x230)
struct ADebuggingItemBase : AActor {
	int32_t Priority; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
	struct FText HashName; // 0x238(0x18)
	struct FText dispName; // 0x250(0x18)
	struct FMulticastInlineDelegate OnInFocus; // 0x268(0x10)
	struct FMulticastInlineDelegate OnLostFocus; // 0x278(0x10)
	struct FMulticastInlineDelegate OnKeyLeft; // 0x288(0x10)
	struct FMulticastInlineDelegate OnKeyRight; // 0x298(0x10)
	struct FMulticastInlineDelegate OnKeySelect; // 0x2a8(0x10)
	char pad_2B8[0x10]; // 0x2b8(0x10)

	struct ADebuggingItemBase* SearchItem(struct FText InHashName, bool InRecursive, bool InIgnoreCase); // Function BattlePrototype.DebuggingItemBase.SearchItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d2670
	void Dump(int32_t InIndent); // Function BattlePrototype.DebuggingItemBase.Dump // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void DestroyItem(bool DestroyChild); // Function BattlePrototype.DebuggingItemBase.DestroyItem // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	struct UWidget* CreateWidgetBP(); // Function BattlePrototype.DebuggingItemBase.CreateWidgetBP // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.DebuggingItemGroup
// Size: 0x2d0 (Inherited: 0x2c8)
struct ADebuggingItemGroup : ADebuggingItemBase {
	char pad_2C8[0x8]; // 0x2c8(0x08)

	void UnregisterChildFromItem(struct ADebuggingItemBase* InItem); // Function BattlePrototype.DebuggingItemGroup.UnregisterChildFromItem // (Native|Public|BlueprintCallable) // @ game+0x11d39f0
	void UnregisterChildFromHashName(struct FText InHashName); // Function BattlePrototype.DebuggingItemGroup.UnregisterChildFromHashName // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d3810
	void RegisterChild(struct ADebuggingItemBase* InItem); // Function BattlePrototype.DebuggingItemGroup.RegisterChild // (Native|Public|BlueprintCallable) // @ game+0x11d2520
};

// Class BattlePrototype.DebuggingItemAchievementGroup
// Size: 0x308 (Inherited: 0x2d0)
struct ADebuggingItemAchievementGroup : ADebuggingItemGroup {
	char pad_2D0[0x4]; // 0x2d0(0x04)
	struct TWeakObjectPtr<struct ADebuggingItemStringArray> StringList; // 0x2d4(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemLabel> Label; // 0x2dc(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemEvent> Unlock; // 0x2e4(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemEvent> Lock; // 0x2ec(0x08)
	char pad_2F4[0x4]; // 0x2f4(0x04)
	struct TArray<int64_t> EnumValueList; // 0x2f8(0x10)

	void Update(); // Function BattlePrototype.DebuggingItemAchievementGroup.Update // (Final|Native|Public) // @ game+0x8518d0
	void OnExexUnlock(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemAchievementGroup.OnExexUnlock // (Final|Native|Public) // @ game+0x79d490
	void OnExexLock(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemAchievementGroup.OnExexLock // (Final|Native|Public) // @ game+0x79d490
	void OnChangeSelected(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingItemAchievementGroup.OnChangeSelected // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.DebuggingItemInt
// Size: 0x300 (Inherited: 0x2c8)
struct ADebuggingItemInt : ADebuggingItemBase {
	struct FMulticastInlineDelegate OnChanged; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnSliderSettingChanged; // 0x2d8(0x10)
	int32_t Min; // 0x2e8(0x04)
	int32_t Max; // 0x2ec(0x04)
	int32_t Step; // 0x2f0(0x04)
	int32_t Value; // 0x2f4(0x04)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	void SetValue(int32_t InValue); // Function BattlePrototype.DebuggingItemInt.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11d3790
	void SetSliderSettings(int32_t InMin, int32_t InMax, int32_t InStep); // Function BattlePrototype.DebuggingItemInt.SetSliderSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x11d33a0
	void OnKeyRightFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemInt.OnKeyRightFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d2250
	void OnKeyLeftFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemInt.OnKeyLeftFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d1e50
	int32_t GetValue(); // Function BattlePrototype.DebuggingItemInt.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1880
};

// Class BattlePrototype.DebuggingItemInt2
// Size: 0x308 (Inherited: 0x300)
struct ADebuggingItemInt2 : ADebuggingItemInt {
	int32_t Index; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)
};

// Class BattlePrototype.DebuggingItemBool
// Size: 0x2e8 (Inherited: 0x2c8)
struct ADebuggingItemBool : ADebuggingItemBase {
	struct FMulticastInlineDelegate OnChanged; // 0x2c8(0x10)
	bool Value; // 0x2d8(0x01)
	char pad_2D9[0xf]; // 0x2d9(0x0f)

	void SetValue(bool InValue); // Function BattlePrototype.DebuggingItemBool.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11d3680
	void OnKeySelectFunc(struct ADebuggingItemBase* InItem, bool IsRepeat); // Function BattlePrototype.DebuggingItemBool.OnKeySelectFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d2450
	bool GetValue(); // Function BattlePrototype.DebuggingItemBool.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1860
};

// Class BattlePrototype.DebuggingItemBool2
// Size: 0x2f0 (Inherited: 0x2e8)
struct ADebuggingItemBool2 : ADebuggingItemBool {
	int32_t Index; // 0x2e8(0x04)
	char pad_2EC[0x4]; // 0x2ec(0x04)
};

// Class BattlePrototype.DebuggingItemInGameAchievementGroup
// Size: 0x360 (Inherited: 0x2d0)
struct ADebuggingItemInGameAchievementGroup : ADebuggingItemGroup {
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemInt2>> IntList; // 0x2d0(0x10)
	struct TWeakObjectPtr<struct ADebuggingItemInt> IntReport; // 0x2e0(0x08)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemBool2>> TradeBool; // 0x2e8(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemBool2>> QuestBool; // 0x2f8(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemBool2>> AttachmentBool; // 0x308(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemBool2>> EnemyBool; // 0x318(0x10)
	struct TWeakObjectPtr<struct ADebuggingItemInt2> IntMoney; // 0x328(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemEvent> ExecMoney; // 0x330(0x08)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemBool2>> PresentBool; // 0x338(0x10)
	struct UAchievementManager* Manager; // 0x348(0x08)
	struct UAchievementParamDBAsset* DBAsset; // 0x350(0x08)
	char pad_358[0x8]; // 0x358(0x08)

	void OnPageOpened(); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnPageOpened // (Final|Native|Public) // @ game+0x8518d0
	void OnEventChangeKins(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnEventChangeKins // (Final|Native|Public) // @ game+0x79d490
	void OnChangeReportCount(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeReportCount // (Final|Native|Public) // @ game+0x79d490
	void OnChangeIntParam(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeIntParam // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolTrade(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeBoolTrade // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolQuest(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeBoolQuest // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolPresent(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeBoolPresent // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolEnemy(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeBoolEnemy // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolAttachment(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingItemInGameAchievementGroup.OnChangeBoolAttachment // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.RSTickableManagerBase
// Size: 0x38 (Inherited: 0x28)
struct URSTickableManagerBase : UObject {
	char pad_28[0x10]; // 0x28(0x10)
};

// Class BattlePrototype.AchievementManager
// Size: 0x1f8 (Inherited: 0x38)
struct UAchievementManager : URSTickableManagerBase {
	char pad_38[0x10]; // 0x38(0x10)
	struct URSGameInstance* _gameInstance; // 0x48(0x08)
	char pad_50[0x10]; // 0x50(0x10)
	struct FAchievementParam Parameter; // 0x60(0x130)
	char pad_190[0x28]; // 0x190(0x28)
	struct TArray<struct FName> achievementQueue; // 0x1b8(0x10)
	struct TArray<struct FName> achievementFailedQueue; // 0x1c8(0x10)
	char pad_1D8[0x8]; // 0x1d8(0x08)
	struct TArray<struct FName> openCompleted; // 0x1e0(0x10)
	char pad_1F0[0x8]; // 0x1f0(0x08)

	void WatchOpeningMovie(); // Function BattlePrototype.AchievementManager.WatchOpeningMovie // (Final|Native|Public|BlueprintCallable) // @ game+0x116b5a0
	void UseSas(); // Function BattlePrototype.AchievementManager.UseSas // (Final|Native|Public|BlueprintCallable) // @ game+0x116b510
	void UsePKObject(); // Function BattlePrototype.AchievementManager.UsePKObject // (Final|Native|Public|BlueprintCallable) // @ game+0x116b480
	void UseDrive(); // Function BattlePrototype.AchievementManager.UseDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x116b3f0
	void UseCombinationVision(enum class EPlayerID playerId, enum class EPlayerID visionCharID); // Function BattlePrototype.AchievementManager.UseCombinationVision // (Final|Native|Public|BlueprintCallable) // @ game+0x116b240
	void UseBrainCrash(); // Function BattlePrototype.AchievementManager.UseBrainCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x116b1b0
	void Use4CVinCombo(); // Function BattlePrototype.AchievementManager.Use4CVinCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x116b120
	void TradeItem(struct FName ItemId); // Function BattlePrototype.AchievementManager.TradeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x116afe0
	void TimeoverInBF(); // Function BattlePrototype.AchievementManager.TimeoverInBF // (Final|Native|Public|BlueprintCallable) // @ game+0x116af50
	void SupportedInBrainField(); // Function BattlePrototype.AchievementManager.SupportedInBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x116aec0
	void SuohIncident(enum class EPlayerID playerId); // Function BattlePrototype.AchievementManager.SuohIncident // (Final|Native|Public|BlueprintCallable) // @ game+0x116ad90
	void StartStory(enum class EPlayerID playerId); // Function BattlePrototype.AchievementManager.StartStory // (Final|Native|Public|BlueprintCallable) // @ game+0x116ac60
	void StartPsychicObjectBus(); // Function BattlePrototype.AchievementManager.StartPsychicObjectBus // (Final|Native|Public|BlueprintCallable) // @ game+0x116abd0
	void SasHologram(); // Function BattlePrototype.AchievementManager.SasHologram // (Final|Native|Public|BlueprintCallable) // @ game+0x116ab40
	void ResuscitateFollow(); // Function BattlePrototype.AchievementManager.ResuscitateFollow // (Final|Native|Public|BlueprintCallable) // @ game+0x116aa20
	void Resuscitated(); // Function BattlePrototype.AchievementManager.Resuscitated // (Final|Native|Public|BlueprintCallable) // @ game+0x116aab0
	void QueryAchievements(); // Function BattlePrototype.AchievementManager.QueryAchievements // (Final|Native|Public|BlueprintCallable) // @ game+0x116aa00
	void Protected(); // Function BattlePrototype.AchievementManager.Protected // (Final|Native|Public|BlueprintCallable) // @ game+0x116a970
	void Present(enum class EPlayerID playerId, enum class EPlayerID TargetID, struct FName ItemId); // Function BattlePrototype.AchievementManager.Present // (Final|Native|Public|BlueprintCallable) // @ game+0x116a740
	void PlayVoice(struct FString CueName); // Function BattlePrototype.AchievementManager.PlayVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x116a560
	bool OpenAchievementCheckProgress_EnemyKill(); // Function BattlePrototype.AchievementManager.OpenAchievementCheckProgress_EnemyKill // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0xad4510
	bool OpenAchievement(enum class EAchievementsType Type); // Function BattlePrototype.AchievementManager.OpenAchievement // (Final|Native|Public|BlueprintCallable) // @ game+0x116a4d0
	void MaMoRu(); // Function BattlePrototype.AchievementManager.MaMoRu // (Final|Native|Public|BlueprintCallable) // @ game+0x116a440
	void KillsInBrainField(int32_t Num); // Function BattlePrototype.AchievementManager.KillsInBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x116a310
	void KillEnemys(int32_t Num); // Function BattlePrototype.AchievementManager.KillEnemys // (Final|Native|Public|BlueprintCallable) // @ game+0x116a0b0
	void KillEnemyDataForAchievement(struct FName enemyName, struct FHCHitResult hcResult, enum class EPsychicObjectUniqueType poType, bool bBrainCrashMulti); // Function BattlePrototype.AchievementManager.KillEnemyDataForAchievement // (Final|Native|Public|BlueprintCallable) // @ game+0x1169ce0
	void Kill_UseBus(int32_t Num); // Function BattlePrototype.AchievementManager.Kill_UseBus // (Final|Native|Public|BlueprintCallable) // @ game+0x116a1e0
	void JustDodge(); // Function BattlePrototype.AchievementManager.JustDodge // (Final|Native|Public|BlueprintCallable) // @ game+0x1169c50
	bool IsOpenAchievement(enum class EAchievementsType Type); // Function BattlePrototype.AchievementManager.IsOpenAchievement // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1169bc0
	void GetItem(struct FName ItemId); // Function BattlePrototype.AchievementManager.GetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1169a80
	struct FString GetDebugString(int32_t idx); // Function BattlePrototype.AchievementManager.GetDebugString // (Final|Native|Public|BlueprintCallable) // @ game+0x11699d0
	void GatherAllMember(); // Function BattlePrototype.AchievementManager.GatherAllMember // (Final|Native|Public|BlueprintCallable) // @ game+0x1169940
	void FinishLastBattle(); // Function BattlePrototype.AchievementManager.FinishLastBattle // (Final|Native|Public|BlueprintCallable) // @ game+0x11698b0
	void EquipItems(enum class EPlayerID playerId, struct FName ItemId); // Function BattlePrototype.AchievementManager.EquipItems // (Final|Native|Public|BlueprintCallable) // @ game+0x11696f0
	void EndStory(enum class EPlayerID playerId); // Function BattlePrototype.AchievementManager.EndStory // (Final|Native|Public|BlueprintCallable) // @ game+0x11695c0
	void EndPsychicObjectBus(); // Function BattlePrototype.AchievementManager.EndPsychicObjectBus // (Final|Native|Public|BlueprintCallable) // @ game+0x1169530
	void DriveMaxBonus(); // Function BattlePrototype.AchievementManager.DriveMaxBonus // (Final|Native|Public|BlueprintCallable) // @ game+0x11694a0
	void CompleteEnemyLibrary(); // Function BattlePrototype.AchievementManager.CompleteEnemyLibrary // (Final|Native|Public|BlueprintCallable) // @ game+0x1169410
	void ClearQuest(struct FName questId); // Function BattlePrototype.AchievementManager.ClearQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x11692d0
	void ClearBondsEp(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t episodeNo); // Function BattlePrototype.AchievementManager.ClearBondsEp // (Final|Native|Public|BlueprintCallable) // @ game+0x11690a0
	void CheckCompleteSkill(enum class EPlayerID playerId); // Function BattlePrototype.AchievementManager.CheckCompleteSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x1168f00
	void ChaseAttack(); // Function BattlePrototype.AchievementManager.ChaseAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x1168e70
	void BrainCrashKillsSameTime(int32_t Num); // Function BattlePrototype.AchievementManager.BrainCrashKillsSameTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1168d40
	void BondsLvOver6(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.AchievementManager.BondsLvOver6 // (Final|Native|Public|BlueprintCallable) // @ game+0x1168b90
	void AddMoney(int32_t Num); // Function BattlePrototype.AchievementManager.AddMoney // (Final|Native|Public|BlueprintCallable) // @ game+0x1168a60
	void AcquireSkill(enum class EPlayerID playerId, enum class EPlayerSkill skill); // Function BattlePrototype.AchievementManager.AcquireSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x11688b0
};

// Class BattlePrototype.AchievementUtility
// Size: 0x28 (Inherited: 0x28)
struct UAchievementUtility : UBlueprintFunctionLibrary {

	void WatchOpeningMovie(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.WatchOpeningMovie // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b5c0
	void UseSas(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.UseSas // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b530
	void UsePKObject(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.UsePKObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b4a0
	void UseDrive(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.UseDrive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b410
	void UseCombinationVision(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerID visionCharID); // Function BattlePrototype.AchievementUtility.UseCombinationVision // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b300
	void UseBrainCrash(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.UseBrainCrash // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b1d0
	void Use4CVinCombo(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.Use4CVinCombo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b140
	void TradeItem(struct UObject* WorldContextObject, struct FName ItemId); // Function BattlePrototype.AchievementUtility.TradeItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116b070
	void TimeoverInBF(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.TimeoverInBF // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116af70
	void SupportedInBrainField(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.SupportedInBrainField // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116aee0
	void SuohIncident(struct UObject* WorldContextObject, enum class EPlayerID playerId); // Function BattlePrototype.AchievementUtility.SuohIncident // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116ae10
	void StartStory(struct UObject* WorldContextObject, enum class EPlayerID playerId); // Function BattlePrototype.AchievementUtility.StartStory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116ace0
	void StartPsychicObjectBus(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.StartPsychicObjectBus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116abf0
	void SasHologram(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.SasHologram // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116ab60
	void ResuscitateFollow(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.ResuscitateFollow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116aa40
	void Resuscitated(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.Resuscitated // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116aad0
	void Protected(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.Protected // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a990
	void Present(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerID TargetID, struct FName ItemId); // Function BattlePrototype.AchievementUtility.Present // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a840
	void PlayVoice(struct UObject* WorldContextObject, struct FString CueName); // Function BattlePrototype.AchievementUtility.PlayVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a630
	void MaMoRu(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.MaMoRu // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a460
	void KillsInBrainField(struct UObject* WorldContextObject, int32_t Num); // Function BattlePrototype.AchievementUtility.KillsInBrainField // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a390
	void KillEnemys(struct UObject* WorldContextObject, int32_t Num); // Function BattlePrototype.AchievementUtility.KillEnemys // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a130
	void KillEnemyDataForAchievement(struct UObject* WorldContextObject, struct FName enemyName, struct FHCHitResult hcResult, enum class EPsychicObjectUniqueType poType, bool bBrainCrashMulti); // Function BattlePrototype.AchievementUtility.KillEnemyDataForAchievement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169eb0
	void Kill_UseBus(struct UObject* WorldContextObject, int32_t Num); // Function BattlePrototype.AchievementUtility.Kill_UseBus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x116a260
	void JustDodge(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.JustDodge // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169c70
	void GetItem(struct UObject* WorldContextObject, struct FName ItemId); // Function BattlePrototype.AchievementUtility.GetItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169b10
	void GatherAllMember(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.GatherAllMember // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169960
	void FinishLastBattle(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.FinishLastBattle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11698d0
	void EquipItems(struct UObject* WorldContextObject, enum class EPlayerID playerId, struct FName ItemId); // Function BattlePrototype.AchievementUtility.EquipItems // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11697c0
	void EndStory(struct UObject* WorldContextObject, enum class EPlayerID playerId); // Function BattlePrototype.AchievementUtility.EndStory // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169640
	void EndPsychicObjectBus(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.EndPsychicObjectBus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169550
	void DriveMaxBonus(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.DriveMaxBonus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11694c0
	void CompleteEnemyLibrary(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.CompleteEnemyLibrary // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169430
	void ClearQuest(struct UObject* WorldContextObject, struct FName questId); // Function BattlePrototype.AchievementUtility.ClearQuest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169360
	void ClearBondsEp(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t episodeNo); // Function BattlePrototype.AchievementUtility.ClearBondsEp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11691a0
	void Clear(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.Clear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1169030
	void CheckCompleteSkill(struct UObject* WorldContextObject, enum class EPlayerID playerId); // Function BattlePrototype.AchievementUtility.CheckCompleteSkill // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1168f80
	void ChaseAttack(struct UObject* WorldContextObject); // Function BattlePrototype.AchievementUtility.ChaseAttack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1168e90
	void BrainCrashKillsSameTime(struct UObject* WorldContextObject, int32_t Num); // Function BattlePrototype.AchievementUtility.BrainCrashKillsSameTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1168dc0
	void BondsLvOver6(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.AchievementUtility.BondsLvOver6 // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1168c50
	void AddMoney(struct UObject* WorldContextObject, int32_t Num); // Function BattlePrototype.AchievementUtility.AddMoney // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1168ae0
	void AcquireSkill(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerSkill skill); // Function BattlePrototype.AchievementUtility.AcquireSkill // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1168970
};

// Class BattlePrototype.AchievementParamDBAsset
// Size: 0x280 (Inherited: 0x28)
struct UAchievementParamDBAsset : UObject {
	struct TMap<enum class EPlayerID, struct FAchievementPresentItem> PresentItemListM; // 0x28(0x50)
	struct TMap<enum class EPlayerID, struct FAchievementPresentItem> PresentItemListF; // 0x78(0x50)
	int32_t PresentItemTotal; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct TArray<struct FName> AttachmentItemList; // 0xd0(0x10)
	struct TArray<struct FName> TradeItemList; // 0xe0(0x10)
	struct TArray<struct FName> CostumeEquipItemList; // 0xf0(0x10)
	struct TArray<struct FName> BakiHeadItemList; // 0x100(0x10)
	struct TArray<struct FString> BoredomVoiceList; // 0x110(0x10)
	struct TArray<struct FName> QuestList; // 0x120(0x10)
	struct TMap<enum class EPlayerID, int32_t> bondsProgressM; // 0x130(0x50)
	struct TMap<enum class EPlayerID, int32_t> bondsProgressF; // 0x180(0x50)
	struct TArray<struct FName> EnemyLibraryList; // 0x1d0(0x10)
	struct TMap<enum class EPlayerSkillCategory, struct FAchievementSkillItem> SkillListM; // 0x1e0(0x50)
	struct TMap<enum class EPlayerSkillCategory, struct FAchievementSkillItem> SkillListF; // 0x230(0x50)

	void Convert(); // Function BattlePrototype.AchievementParamDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.ActionIcon
// Size: 0x298 (Inherited: 0x230)
struct AActionIcon : AActor {
	struct AActionIcon* PairActionIconActor; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x240(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x248(0x08)
	char pad_250[0x20]; // 0x250(0x20)
	struct FVector WorldPositionOffset; // 0x270(0x0c)
	enum class EActionIconType actionIconType; // 0x27c(0x01)
	enum class EActionIconSubQuestState ActionIconSubQuestState; // 0x27d(0x01)
	bool ActionIconSubQuestActive; // 0x27e(0x01)
	char pad_27F[0x1]; // 0x27f(0x01)
	struct UUIActionIcon* UIActionIcon; // 0x280(0x08)
	struct AActionIcon* PairActionIcon; // 0x288(0x08)
	char pad_290[0x4]; // 0x290(0x04)
	bool OverlapEventInvalidFlag; // 0x294(0x01)
	char pad_295[0x3]; // 0x295(0x03)

	void UpdateActionIconState(); // Function BattlePrototype.ActionIcon.UpdateActionIconState // (Final|Native|Public|BlueprintCallable) // @ game+0x116fb60
	void SetWorldPositionOffset(struct FVector WorldPositionOffset); // Function BattlePrototype.ActionIcon.SetWorldPositionOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x116f9b0
	void SetVisible(bool Flag, bool UpdateState); // Function BattlePrototype.ActionIcon.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x116f8e0
	void SetSubQuestState(enum class EActionIconSubQuestState State, bool subquestActive); // Function BattlePrototype.ActionIcon.SetSubQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x116f810
	void SetOverlapEventInvalidFlag(bool Enable); // Function BattlePrototype.ActionIcon.SetOverlapEventInvalidFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x116f790
	void SetLockIconMode(bool isLock); // Function BattlePrototype.ActionIcon.SetLockIconMode // (Final|Native|Public|BlueprintCallable) // @ game+0x116f700
	void setIconType(enum class EActionIconType actionIconType, bool IsActive); // Function BattlePrototype.ActionIcon.setIconType // (Final|Native|Public|BlueprintCallable) // @ game+0x116f630
	void SetBattleFlag(bool bBattle); // Function BattlePrototype.ActionIcon.SetBattleFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x116f480
	void SetActionIconSupportParam(struct FActionIconSupportParam ActionIconSupportParam); // Function BattlePrototype.ActionIcon.SetActionIconSupportParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x116f3c0
	void SetActionCollisionEnable(bool Enable); // Function BattlePrototype.ActionIcon.SetActionCollisionEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x116f330
	void SafeSetIconMode(enum class EActionIconMode Mode); // Function BattlePrototype.ActionIcon.SafeSetIconMode // (Final|Native|Public|BlueprintCallable) // @ game+0x116f2b0
	void RestoreVisible(); // Function BattlePrototype.ActionIcon.RestoreVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x116f290
	void OnReActivate(); // Function BattlePrototype.ActionIcon.OnReActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BattlePrototype.ActionIcon.OnOverlapEnd // (Final|Native|Public) // @ game+0x116f030
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function BattlePrototype.ActionIcon.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x116ee40
	void OnDecide(); // Function BattlePrototype.ActionIcon.OnDecide // (Final|Native|Public|BlueprintCallable) // @ game+0x116ee20
	bool IsPlayingActionIcon(); // Function BattlePrototype.ActionIcon.IsPlayingActionIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116edf0
	bool IsActionAbleIcon(); // Function BattlePrototype.ActionIcon.IsActionAbleIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116eca0
	enum class EActionIconSubQuestState GetSubQuestState(); // Function BattlePrototype.ActionIcon.GetSubQuestState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116ec80
	bool GetOverlapEventInvalidFlag(); // Function BattlePrototype.ActionIcon.GetOverlapEventInvalidFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x116ec60
	enum class EActionIconType GetIconType(); // Function BattlePrototype.ActionIcon.GetIconType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116eb10
	bool CheckVisibleIcon(struct AActor* Actor); // Function BattlePrototype.ActionIcon.CheckVisibleIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x116e410
};

// Class BattlePrototype.ActionManager
// Size: 0x298 (Inherited: 0x230)
struct AActionManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	float VisibilityCheckDistance; // 0x238(0x04)
	bool IsDispAreaNextUI; // 0x23c(0x01)
	bool IsDebug; // 0x23d(0x01)
	char pad_23E[0x5a]; // 0x23e(0x5a)

	void UnregistAction2(int32_t Handle); // Function BattlePrototype.ActionManager.UnregistAction2 // (Final|Native|Public|BlueprintCallable) // @ game+0x116fa40
	void UnregistAction(int32_t Handle); // Function BattlePrototype.ActionManager.UnregistAction // (Final|Native|Public|BlueprintCallable) // @ game+0x116fac0
	void SetEnableActionCheck(bool bEnable); // Function BattlePrototype.ActionManager.SetEnableActionCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x116f5a0
	void SetBattleFlag(bool bBattle); // Function BattlePrototype.ActionManager.SetBattleFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x116f510
	int32_t RegisterAction2(struct AActor* Actor); // Function BattlePrototype.ActionManager.RegisterAction2 // (Final|Native|Public|BlueprintCallable) // @ game+0x116f170
	int32_t RegisterAction(struct AActor* Actor); // Function BattlePrototype.ActionManager.RegisterAction // (Final|Native|Public|BlueprintCallable) // @ game+0x116f200
	bool IsExistEnableAction2(); // Function BattlePrototype.ActionManager.IsExistEnableAction2 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116ed90
	bool IsExistEnableAction(); // Function BattlePrototype.ActionManager.IsExistEnableAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116edc0
	void ClearActionAll(); // Function BattlePrototype.ActionManager.ClearActionAll // (Final|Native|Public|BlueprintCallable) // @ game+0x116e4a0
};

// Class BattlePrototype.ActionManagerInterface
// Size: 0x28 (Inherited: 0x28)
struct UActionManagerInterface : UInterface {

	void ActionManagerSetIconMode(int32_t Handle, enum class EActionIconMode Mode); // Function BattlePrototype.ActionManagerInterface.ActionManagerSetIconMode // (Native|Event|Public|BlueprintEvent) // @ game+0x116e350
	void ActionManagerSetBattleFlag(bool bBattle); // Function BattlePrototype.ActionManagerInterface.ActionManagerSetBattleFlag // (Native|Event|Public|BlueprintEvent) // @ game+0x116e2c0
	struct AActor* ActionManagerGetPairActor(); // Function BattlePrototype.ActionManagerInterface.ActionManagerGetPairActor // (Native|Event|Public|BlueprintEvent) // @ game+0x116e290
	float ActionManagerGetEditableAngle(); // Function BattlePrototype.ActionManagerInterface.ActionManagerGetEditableAngle // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x116e260
	bool ActionManagerExecute(int32_t Handle); // Function BattlePrototype.ActionManagerInterface.ActionManagerExecute // (Native|Event|Public|BlueprintEvent) // @ game+0x116e1c0
	bool ActionManagerCheck(int32_t Handle); // Function BattlePrototype.ActionManagerInterface.ActionManagerCheck // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x116e120
};

// Class BattlePrototype.ActorVisibleChangeBase
// Size: 0x260 (Inherited: 0x230)
struct AActorVisibleChangeBase : AActor {
	bool IsCollectArrangeItem; // 0x230(0x01)
	bool IsCollectArrangeObject; // 0x231(0x01)
	bool IsCollectAnotherActor; // 0x232(0x01)
	char pad_233[0x5]; // 0x233(0x05)
	struct USphereComponent* CollectorComponent; // 0x238(0x08)
	struct TArray<struct AActor*> ChangeActors; // 0x240(0x10)
	struct TArray<struct AArrangeItemBase*> ChangeActors_ArrangeItemBase; // 0x250(0x10)

	void VisibleActors(); // Function BattlePrototype.ActorVisibleChangeBase.VisibleActors // (Final|Native|Public|BlueprintCallable) // @ game+0x116fb80
	void UnvisibleActors(); // Function BattlePrototype.ActorVisibleChangeBase.UnvisibleActors // (Final|Native|Public|BlueprintCallable) // @ game+0x116fb40
	void CollectActors(); // Function BattlePrototype.ActorVisibleChangeBase.CollectActors // (Final|Native|Public|BlueprintCallable) // @ game+0x116e4c0
};

// Class BattlePrototype.AddContentManager
// Size: 0xd8 (Inherited: 0x28)
struct UAddContentManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UDataTable* _RefDataTable; // 0x30(0x08)
	struct UDataTable* _AddContentsPresentListDataTable; // 0x38(0x08)
	struct TMap<struct FName, bool> _EntitledData; // 0x40(0x50)
	char pad_90[0x48]; // 0x90(0x48)

	bool IsEntitled(struct FName AddContentName); // Function BattlePrototype.AddContentManager.IsEntitled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116ed00
	bool IsCheckingEntitlementInProgress(); // Function BattlePrototype.AddContentManager.IsCheckingEntitlementInProgress // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x116ecd0
	struct TArray<struct FName> GetInvalidContentsList(struct TArray<struct FName> possessionContentsList); // Function BattlePrototype.AddContentManager.GetInvalidContentsList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x116eb30
	struct TArray<struct FName> GetEntitledContentsList(); // Function BattlePrototype.AddContentManager.GetEntitledContentsList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x116ea90
	struct TArray<struct FName> GetAllContentsList(); // Function BattlePrototype.AddContentManager.GetAllContentsList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x116ea10
	bool GetAddContentsTitleIdAndExplanationId(struct FName AddContentName, struct FString TitleID, struct FString ExplanationID); // Function BattlePrototype.AddContentManager.GetAddContentsTitleIdAndExplanationId // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x116e8b0
	bool GetAddContentsPresentInfo(struct TArray<struct FAddContentsPresentInfo> infoList, struct FName AddContentName); // Function BattlePrototype.AddContentManager.GetAddContentsPresentInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x116e790
	bool GetAddContentRefDataID(struct FName ID, struct FName AddContentName); // Function BattlePrototype.AddContentManager.GetAddContentRefDataID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x116e6b0
	bool GetAddContentRefDataCell(struct FAddContentRefDataCell rowParam, struct FName AddContentName); // Function BattlePrototype.AddContentManager.GetAddContentRefDataCell // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x116e510
	bool ConstructLocalEntitleData(); // Function BattlePrototype.AddContentManager.ConstructLocalEntitleData // (Final|Native|Public|BlueprintCallable) // @ game+0x116e4e0
};

// Class BattlePrototype.AjitoBase
// Size: 0x230 (Inherited: 0x230)
struct AAjitoBase : AActor {
};

// Class BattlePrototype.AjitoManager
// Size: 0x238 (Inherited: 0x230)
struct AAjitoManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
};

// Class BattlePrototype.AjitoMember
// Size: 0x390 (Inherited: 0x230)
struct AAjitoMember : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x238(0x08)
	struct FTransform m_storeSkeletalMeshTransform; // 0x240(0x30)
	char pad_270[0x4]; // 0x270(0x04)
	enum class EPlayerID playerId; // 0x274(0x01)
	char pad_275[0x3]; // 0x275(0x03)
	int32_t PlaceID; // 0x278(0x04)
	int32_t PlaceNo; // 0x27c(0x04)
	struct TArray<int32_t> ExclusivePlaceNoList; // 0x280(0x10)
	struct TArray<struct FString> WithPlaceNoList; // 0x290(0x10)
	struct FName ActionName; // 0x2a0(0x08)
	bool IsLookAtPlayer; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)
	struct UCapsuleComponent* CharacterCapsuleComponent; // 0x2b0(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x2b8(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x2c0(0x08)
	struct AMakeEventActor* MakeEventActorClass; // 0x2c8(0x08)
	struct AMakeEventActor* MakeEventActor; // 0x2d0(0x08)
	char pad_2D8[0x1]; // 0x2d8(0x01)
	bool IsOverlappingPlayer; // 0x2d9(0x01)
	char pad_2DA[0x6]; // 0x2da(0x06)
	float ActionIconCoolTime; // 0x2e0(0x04)
	bool IsAvalableAction; // 0x2e4(0x01)
	char pad_2E5[0xb]; // 0x2e5(0x0b)
	struct UChildActorComponent* ChildActionIcon; // 0x2f0(0x08)
	struct AActionIcon* ActionIcon; // 0x2f8(0x08)
	struct FVector ActionIconWorldPositionOffset; // 0x300(0x0c)
	enum class EActionIconType actionIconType; // 0x30c(0x01)
	char pad_30D[0x3]; // 0x30d(0x03)
	float TargetIconOffsetZ; // 0x310(0x04)
	char pad_314[0x4]; // 0x314(0x04)
	struct URSAjitoAnimInstance* AnimClass; // 0x318(0x08)
	struct TWeakObjectPtr<struct URSAjitoAnimInstance> AnimationBP; // 0x320(0x08)
	struct UDataTable* IconOffsetDataTable; // 0x328(0x08)
	struct TMap<struct FName, struct FNpcIconOffsetInfo> IconOffsetDataInfos; // 0x330(0x50)
	float WaitTimeTransitionToTalk; // 0x380(0x04)
	float WaitTimeTransitionToIdle; // 0x384(0x04)
	char pad_388[0x8]; // 0x388(0x08)

	void WaitTransitionToTalk(float WaitTime); // Function BattlePrototype.AjitoMember.WaitTransitionToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11744f0
	void WaitTransitionToIdle(float WaitTime); // Function BattlePrototype.AjitoMember.WaitTransitionToIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x1174470
	void UpdateTargetIconOffsetZ(); // Function BattlePrototype.AjitoMember.UpdateTargetIconOffsetZ // (Final|Native|Public|BlueprintCallable) // @ game+0x1174450
	bool UpdateActionIcon(); // Function BattlePrototype.AjitoMember.UpdateActionIcon // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174420
	void SetTargetIconOffsetZ(float HeadHeight); // Function BattlePrototype.AjitoMember.SetTargetIconOffsetZ // (Final|Native|Public|BlueprintCallable) // @ game+0x1174310
	void SetIconOffsetPreset(struct FName RawName); // Function BattlePrototype.AjitoMember.SetIconOffsetPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x1174290
	bool SetAttachmentVisible(bool Visible); // Function BattlePrototype.AjitoMember.SetAttachmentVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11741f0
	void SetActionIcoVisible(bool Visible); // Function BattlePrototype.AjitoMember.SetActionIcoVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x11740e0
	void SetActionIconType(enum class EActionIconType Type); // Function BattlePrototype.AjitoMember.SetActionIconType // (Final|Native|Public|BlueprintCallable) // @ game+0x1174170
	void RequestTalkStart(); // Function BattlePrototype.AjitoMember.RequestTalkStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174080
	void RequestTalkEnd(); // Function BattlePrototype.AjitoMember.RequestTalkEnd // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174060
	void PresentEventStart(); // Function BattlePrototype.AjitoMember.PresentEventStart // (Final|Native|Public|BlueprintCallable) // @ game+0x1173b60
	void PresentEventEnd(); // Function BattlePrototype.AjitoMember.PresentEventEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1173b40
	bool IsWaitTransitionToTalk(); // Function BattlePrototype.AjitoMember.IsWaitTransitionToTalk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1173b10
	bool IsWaitTransitionToIdle(); // Function BattlePrototype.AjitoMember.IsWaitTransitionToIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1173ae0
	bool IsTalkEnablePlayer(); // Function BattlePrototype.AjitoMember.IsTalkEnablePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsReadyToTalk(); // Function BattlePrototype.AjitoMember.IsReadyToTalk // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1173a80
	bool IsActiveMakeEvent(); // Function BattlePrototype.AjitoMember.IsActiveMakeEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11738f0
	float GetHeadHeight(); // Function BattlePrototype.AjitoMember.GetHeadHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x1173890
	struct TArray<struct AActor*> GetAllOmActors(); // Function BattlePrototype.AjitoMember.GetAllOmActors // (Final|Native|Public|BlueprintCallable) // @ game+0x1173720
	void ClearWaitTransitionToTalk(); // Function BattlePrototype.AjitoMember.ClearWaitTransitionToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x1173700
	void ClearWaitTransitionToIdle(); // Function BattlePrototype.AjitoMember.ClearWaitTransitionToIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x11736e0
	void AdjustIconOffsetByHeadHeightForce(float HeadHeight); // Function BattlePrototype.AjitoMember.AdjustIconOffsetByHeadHeightForce // (Final|Native|Public|BlueprintCallable) // @ game+0x1173660
	void AdjustIconOffsetByHeadHeight(); // Function BattlePrototype.AjitoMember.AdjustIconOffsetByHeadHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x1173640
};

// Class BattlePrototype.AjitoNpcPlaceHolderBase
// Size: 0x238 (Inherited: 0x230)
struct AAjitoNpcPlaceHolderBase : AActor {
	int32_t PlacementID; // 0x230(0x04)
	bool IsAvailable; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)

	void SetVisible(bool Visible); // Function BattlePrototype.AjitoNpcPlaceHolderBase.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x1174390
};

// Class BattlePrototype.RSActorSystemBase
// Size: 0x230 (Inherited: 0x230)
struct ARSActorSystemBase : AActor {
};

// Class BattlePrototype.AjitoPlacementManager
// Size: 0x248 (Inherited: 0x230)
struct AAjitoPlacementManager : ARSActorSystemBase {
	enum class EPlayerID playerId; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct TArray<struct FAjitoPlacementInfo> ActorInfos; // 0x238(0x10)
};

// Class BattlePrototype.AnimControllerComponent
// Size: 0xe0 (Inherited: 0xc0)
struct UAnimControllerComponent : UActorComponent {
	char pad_C0[0x20]; // 0xc0(0x20)

	void RequestTumbleWakeup(); // Function BattlePrototype.AnimControllerComponent.RequestTumbleWakeup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11740c0
	void RequestTumble(); // Function BattlePrototype.AnimControllerComponent.RequestTumble // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11740a0
	void RequestFaintWakeup(); // Function BattlePrototype.AnimControllerComponent.RequestFaintWakeup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174040
	void RequestFaint(); // Function BattlePrototype.AnimControllerComponent.RequestFaint // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174020
	void RequestDamageFlyWakeup(); // Function BattlePrototype.AnimControllerComponent.RequestDamageFlyWakeup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174000
	void RequestDamageFly(); // Function BattlePrototype.AnimControllerComponent.RequestDamageFly // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1173fe0
	void RequestDamage(enum class HCDamageKind damageKind, float StiffenSec, float HitStopSec, float HitStopRate, struct FRotator Rot); // Function BattlePrototype.AnimControllerComponent.RequestDamage // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1173e30
	void ReceiveNotifySuperArmor(struct UObject* Notify, int32_t ResistStagger, bool bBegin); // Function BattlePrototype.AnimControllerComponent.ReceiveNotifySuperArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x1173d30
	void ReceiveNotifyDirectionControl(struct UObject* Notify, bool bBegin, float RotateSpeed, bool bUseSocket, struct FName SocketName); // Function BattlePrototype.AnimControllerComponent.ReceiveNotifyDirectionControl // (Final|Native|Public|BlueprintCallable) // @ game+0x1173b80
	bool IsUseSocketDirectionControl(); // Function BattlePrototype.AnimControllerComponent.IsUseSocketDirectionControl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1173ab0
	bool IsEnableDirectionControl(); // Function BattlePrototype.AnimControllerComponent.IsEnableDirectionControl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1173a50
	bool IsAnimTumbleDowning(); // Function BattlePrototype.AnimControllerComponent.IsAnimTumbleDowning // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1173a20
	bool IsAnimTumble(); // Function BattlePrototype.AnimControllerComponent.IsAnimTumble // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11739f0
	bool IsAnimFaintDowning(); // Function BattlePrototype.AnimControllerComponent.IsAnimFaintDowning // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11739c0
	bool IsAnimFaint(); // Function BattlePrototype.AnimControllerComponent.IsAnimFaint // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1173990
	bool IsAnimDamageFlyRise(); // Function BattlePrototype.AnimControllerComponent.IsAnimDamageFlyRise // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x6939d0
	bool IsAnimDamageFlyLanding(); // Function BattlePrototype.AnimControllerComponent.IsAnimDamageFlyLanding // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x693a00
	bool IsAnimDamageFly(); // Function BattlePrototype.AnimControllerComponent.IsAnimDamageFly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1173960
	int32_t GetResistStagger(); // Function BattlePrototype.AnimControllerComponent.GetResistStagger // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11738c0
	struct FName GetDirectionControlSocketName(); // Function BattlePrototype.AnimControllerComponent.GetDirectionControlSocketName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1173820
	float GetDirectionControllRotateSpeed(); // Function BattlePrototype.AnimControllerComponent.GetDirectionControllRotateSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1173860
	struct UAnimControllerComponent* GetAnimControllerComponentFromActor(struct AActor* Actor); // Function BattlePrototype.AnimControllerComponent.GetAnimControllerComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11737a0
};

// Class BattlePrototype.AnimeInterlockingManager
// Size: 0xb0 (Inherited: 0x28)
struct UAnimeInterlockingManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct URSGameInstance* m_gameInstance; // 0x38(0x08)
	struct UDataTable* m_AnimeInterlockingData_DataTable; // 0x40(0x08)
	struct UDataTable* m_AnimeInterlockingReward_DataTable; // 0x48(0x08)
	struct UDataTable* m_AnimeInterlockingSubReward_DataTable; // 0x50(0x08)
	struct UDataTable* m_AnimeInterlockingNumData_DataTable; // 0x58(0x08)
	struct UDataTable* m_AnimeInterlockingNumReward_DataTable; // 0x60(0x08)
	struct UDataTable* m_AnimeInterlockingSubNumReward_DataTable; // 0x68(0x08)
	struct UDataTable* m_AnimeInterlockingRewardToKins_DataTable; // 0x70(0x08)
	struct FAnimeInterlockingChallengeQuestInfo m_ChallengeInfo; // 0x78(0x18)
	struct TArray<struct FAnimeInterlockingSaveParams> m_AnimeInterlockingSaveParamsList; // 0x90(0x10)
	struct TArray<struct FAnimeInterlockingNumRewardSaveParams> m_AnimeInterlockingNumRewardSaveParamsList; // 0xa0(0x10)

	void SetIsChallengeInfoCorrectAnswer(bool isCorrectAnswer); // Function BattlePrototype.AnimeInterlockingManager.SetIsChallengeInfoCorrectAnswer // (Final|Native|Public|BlueprintCallable) // @ game+0x1177e90
	void SetIsAnimeInterlockingNumRewardAchievement(struct FName AnimeInterlockingNumRewardName, bool isAchievement); // Function BattlePrototype.AnimeInterlockingManager.SetIsAnimeInterlockingNumRewardAchievement // (Final|Native|Public|BlueprintCallable) // @ game+0x1177dc0
	void SetIsAnimeInterlockingNoticedFlag(struct FName AnimeInterlockingName, bool isNoticed); // Function BattlePrototype.AnimeInterlockingManager.SetIsAnimeInterlockingNoticedFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1177cf0
	void SetIsAnimeInterlockingNewFlag(struct FName AnimeInterlockingName, bool isNewFlag); // Function BattlePrototype.AnimeInterlockingManager.SetIsAnimeInterlockingNewFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1177c20
	void SetIsAnimeInterlockingGetReward(struct FName AnimeInterlockingName, bool isGetReward); // Function BattlePrototype.AnimeInterlockingManager.SetIsAnimeInterlockingGetReward // (Final|Native|Public|BlueprintCallable) // @ game+0x1177b50
	void SetIsAnimeInterlockingGetNumReward(struct FName AnimeInterlockingNumRewardName, bool isGetNumReward); // Function BattlePrototype.AnimeInterlockingManager.SetIsAnimeInterlockingGetNumReward // (Final|Native|Public|BlueprintCallable) // @ game+0x1177a80
	void SetIsAnimeInterlockingAchievementQuest(struct FName AnimeInterlockingName, bool isAchievementQuest); // Function BattlePrototype.AnimeInterlockingManager.SetIsAnimeInterlockingAchievementQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x11779b0
	void SetChallengeInfoAnimeInterlockingName(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.SetChallengeInfoAnimeInterlockingName // (Final|Native|Public|BlueprintCallable) // @ game+0x1177930
	bool SetAnimeInterlockingSaveParams(struct FName AnimeInterlockingName, struct FAnimeInterlockingSaveParams SaveParams); // Function BattlePrototype.AnimeInterlockingManager.SetAnimeInterlockingSaveParams // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1177820
	bool SetAnimeInterlockingNumRewardSaveParams(struct FName AnimeInterlockingNumName, struct FAnimeInterlockingNumRewardSaveParams SaveParams); // Function BattlePrototype.AnimeInterlockingManager.SetAnimeInterlockingNumRewardSaveParams // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1177720
	void SetAnimeInterlockingIncorrectAnswerNum(struct FName AnimeInterlockingName, int32_t IncorrectAnswerNum); // Function BattlePrototype.AnimeInterlockingManager.SetAnimeInterlockingIncorrectAnswerNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1177660
	bool IsEnableQuest(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.IsEnableQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1177550
	bool IsChallengeInfoCorrectAnswer(); // Function BattlePrototype.AnimeInterlockingManager.IsChallengeInfoCorrectAnswer // (Final|Native|Public|BlueprintCallable) // @ game+0x1177530
	bool IsAnimeInterlockingNumRewardAchievement(struct FName AnimeInterlockingNumRewardName); // Function BattlePrototype.AnimeInterlockingManager.IsAnimeInterlockingNumRewardAchievement // (Final|Native|Public|BlueprintCallable) // @ game+0x11774a0
	bool IsAnimeInterlockingNoticedFlag(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.IsAnimeInterlockingNoticedFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1177410
	bool IsAnimeInterlockingNewFlag(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.IsAnimeInterlockingNewFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1177380
	bool IsAnimeInterlockingGetReward(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.IsAnimeInterlockingGetReward // (Final|Native|Public|BlueprintCallable) // @ game+0x11772f0
	bool IsAnimeInterlockingGetNumReward(struct FName AnimeInterlockingNumRewardName); // Function BattlePrototype.AnimeInterlockingManager.IsAnimeInterlockingGetNumReward // (Final|Native|Public|BlueprintCallable) // @ game+0x1177260
	bool IsAnimeInterlockingAchievementQuest(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.IsAnimeInterlockingAchievementQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x11771d0
	int32_t GetQuestClearNum(); // Function BattlePrototype.AnimeInterlockingManager.GetQuestClearNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1177100
	struct FName GetChallengeInfoAnimeInterlockingName(); // Function BattlePrototype.AnimeInterlockingManager.GetChallengeInfoAnimeInterlockingName // (Final|Native|Public|BlueprintCallable) // @ game+0x11770e0
	bool GetAnimeInterlockingSubReward(struct FName AnimeInterlockingName, struct FAnimeInterlockingsPresentList presentList); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingSubReward // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176fd0
	bool GetAnimeInterlockingSaveParams(struct FName AnimeInterlockingName, struct FAnimeInterlockingSaveParams SaveParams); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingSaveParams // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176ec0
	bool GetAnimeInterlockingRewardToKins(struct FString ItemId, int32_t KinsNum); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingRewardToKins // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176d80
	bool GetAnimeInterlockingReward(struct FName AnimeInterlockingName, struct FAnimeInterlockingsPresentList presentList); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingReward // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176c70
	void GetAnimeInterlockingRefDataList(struct FName AnimeInterlockingName, struct TArray<struct FAnimeInterlockingRefDataCell> refDataList); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingRefDataList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176b50
	bool GetAnimeInterlockingRefData(struct FName AnimeInterlockingName, struct FAnimeInterlockingRefDataCell refData); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingRefData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176a30
	bool GetAnimeInterlockingNumSubReward(struct FName AnimeInterlockingNumName, struct FAnimeInterlockingsPresentList presentList); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingNumSubReward // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176920
	bool GetAnimeInterlockingNumRewardSaveParams(struct FName AnimeInterlockingNumName, struct FAnimeInterlockingNumRewardSaveParams SaveParams); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingNumRewardSaveParams // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176820
	bool GetAnimeInterlockingNumReward(struct FName AnimeInterlockingNumName, struct FAnimeInterlockingsPresentList presentList); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingNumReward // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176710
	void GetAnimeInterlockingNumRefDataList(struct FName AnimeInterlockingNumName, struct TArray<struct FAnimeInterlockingNumRefDataCell> refDataList); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingNumRefDataList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11765f0
	bool GetAnimeInterlockingNumRefData(struct FName AnimeInterlockingNumName, struct FAnimeInterlockingNumRefDataCell refData); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingNumRefData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11764d0
	int32_t GetAnimeInterlockingIncorrectAnswerNum(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.GetAnimeInterlockingIncorrectAnswerNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1176440
	void GetAcquirableButNotAcquiredNumRewardNameList(struct TArray<struct FName> nameList); // Function BattlePrototype.AnimeInterlockingManager.GetAcquirableButNotAcquiredNumRewardNameList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1176390
	void AddAnimeInterlockingIncorrectAnswerNum(struct FName AnimeInterlockingName); // Function BattlePrototype.AnimeInterlockingManager.AddAnimeInterlockingIncorrectAnswerNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1176240
};

// Class BattlePrototype.AnimNotify_OnRadialBlur
// Size: 0x68 (Inherited: 0x38)
struct UAnimNotify_OnRadialBlur : UAnimNotify {
	int32_t Priority; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct UCurveVector* CurveData; // 0x40(0x08)
	enum class ENotifyRadialBlurModulateType ModulateType; // 0x48(0x01)
	char pad_49[0x3]; // 0x49(0x03)
	struct FVector Location; // 0x4c(0x0c)
	struct FName BoneName; // 0x58(0x08)
	bool IsUseExecuteKind; // 0x60(0x01)
	char pad_61[0x7]; // 0x61(0x07)

	void PlayBlur(struct USkeletalMeshComponent* MeshComp); // Function BattlePrototype.AnimNotify_OnRadialBlur.PlayBlur // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x11775e0
	struct UCurveVector* GetUseCurveData(struct USkeletalMeshComponent* MeshComp); // Function BattlePrototype.AnimNotify_OnRadialBlur.GetUseCurveData // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x1177130
};

// Class BattlePrototype.AnimNotify_RSPlayParticleEffect
// Size: 0xd0 (Inherited: 0x90)
struct UAnimNotify_RSPlayParticleEffect : UAnimNotify_PlayParticleEffect {
	char pad_90[0x8]; // 0x90(0x08)
	struct URSParticleSystemComponentBase* ComponentClass; // 0x98(0x08)
	bool Ignore; // 0xa0(0x01)
	char pad_A1[0x3]; // 0xa1(0x03)
	struct FVector ScaleOffset; // 0xa4(0x0c)
	enum class EAttachLocation LocationType; // 0xb0(0x01)
	bool OptionSeeThrough; // 0xb1(0x01)
	bool IsRegistToChara; // 0xb2(0x01)
	bool IsInterruptTelepo; // 0xb3(0x01)
	struct FBoolVector SocketLocation; // 0xb4(0x03)
	struct FBoolVector SocketRotation; // 0xb7(0x03)
	enum class ERSParticleSystemAttachRotationOffMode SocketRotationOffMode; // 0xba(0x01)
	struct FBoolVector SocketScale; // 0xbb(0x03)
	enum class ESequencerDilationOwner DilationOwner; // 0xbe(0x01)
	char pad_BF[0x1]; // 0xbf(0x01)
	struct UParticleComponentListManager* ParticleComponentManager; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)
};

// Class BattlePrototype.AnimNotify_RSPlayParticleEffect_SASCopyBase
// Size: 0xd0 (Inherited: 0xd0)
struct UAnimNotify_RSPlayParticleEffect_SASCopyBase : UAnimNotify_RSPlayParticleEffect {

	bool CheckExecNotify(struct USkeletalMeshComponent* MeshComp); // Function BattlePrototype.AnimNotify_RSPlayParticleEffect_SASCopyBase.CheckExecNotify // (Event|Protected|BlueprintEvent|Const) // @ game+0x1685580
};

// Class BattlePrototype.AnimNotify_RSPlayParticleEffectWithCondition
// Size: 0xd0 (Inherited: 0xd0)
struct UAnimNotify_RSPlayParticleEffectWithCondition : UAnimNotify_RSPlayParticleEffect {

	bool CheckCondition(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation); // Function BattlePrototype.AnimNotify_RSPlayParticleEffectWithCondition.CheckCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11762c0
};

// Class BattlePrototype.AnimNotifyState_DirectionControl
// Size: 0x30 (Inherited: 0x30)
struct UAnimNotifyState_DirectionControl : UAnimNotifyState {
};

// Class BattlePrototype.AnimNotifyState_RSTimedFootStepEffect
// Size: 0x98 (Inherited: 0x30)
struct UAnimNotifyState_RSTimedFootStepEffect : UAnimNotifyState {
	struct URSParticleSystemComponentBase* ComponentClass; // 0x30(0x08)
	struct FName ActionType; // 0x38(0x08)
	struct FVector HitSegmentOffset; // 0x40(0x0c)
	bool Ignore; // 0x4c(0x01)
	char pad_4D[0x3]; // 0x4d(0x03)
	struct FVector ScaleOffset; // 0x50(0x0c)
	enum class EAttachLocation LocationType; // 0x5c(0x01)
	bool OptionSeeThrough; // 0x5d(0x01)
	struct FBoolVector SocketLocation; // 0x5e(0x03)
	struct FBoolVector SocketRotation; // 0x61(0x03)
	struct FBoolVector SocketScale; // 0x64(0x03)
	char pad_67[0x1]; // 0x67(0x01)
	struct FName SocketName; // 0x68(0x08)
	struct FVector LocationOffset; // 0x70(0x0c)
	struct FRotator RotationOffset; // 0x7c(0x0c)
	enum class ESequencerDilationOwner DilationOwner; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)
	struct URSParticleSystemComponentBase* m_pParticle; // 0x90(0x08)
};

// Class BattlePrototype.AnimNotifyState_RSTimedParticleSystem
// Size: 0x88 (Inherited: 0x60)
struct UAnimNotifyState_RSTimedParticleSystem : UAnimNotifyState_TimedParticleEffect {
	struct URSParticleSystemComponentBase* ComponentClass; // 0x60(0x08)
	bool Ignore; // 0x68(0x01)
	char pad_69[0x3]; // 0x69(0x03)
	struct FVector ScaleOffset; // 0x6c(0x0c)
	enum class EAttachLocation LocationType; // 0x78(0x01)
	bool OptionSeeThrough; // 0x79(0x01)
	bool IsRegistToChara; // 0x7a(0x01)
	bool IsInterruptTelepo; // 0x7b(0x01)
	struct FBoolVector SocketLocation; // 0x7c(0x03)
	struct FBoolVector SocketRotation; // 0x7f(0x03)
	enum class ERSParticleSystemAttachRotationOffMode SocketRotationOffMode; // 0x82(0x01)
	struct FBoolVector SocketScale; // 0x83(0x03)
	enum class ESequencerDilationOwner DilationOwner; // 0x86(0x01)
	char pad_87[0x1]; // 0x87(0x01)
};

// Class BattlePrototype.AnimNotifyState_RSTimedParticleSystem_SASCopyBase
// Size: 0x88 (Inherited: 0x88)
struct UAnimNotifyState_RSTimedParticleSystem_SASCopyBase : UAnimNotifyState_RSTimedParticleSystem {

	bool CheckExecNotifyBegin(struct USkeletalMeshComponent* MeshComp); // Function BattlePrototype.AnimNotifyState_RSTimedParticleSystem_SASCopyBase.CheckExecNotifyBegin // (Event|Protected|BlueprintEvent|Const) // @ game+0x1685580
};

// Class BattlePrototype.AnimNotifyState_RSTimedParticleSystemWithCondition
// Size: 0x88 (Inherited: 0x88)
struct UAnimNotifyState_RSTimedParticleSystemWithCondition : UAnimNotifyState_RSTimedParticleSystem {

	bool CheckCondition(struct USkeletalMeshComponent* MeshComp, struct UAnimSequenceBase* Animation); // Function BattlePrototype.AnimNotifyState_RSTimedParticleSystemWithCondition.CheckCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1179ec0
};

// Class BattlePrototype.AnimNotifyState_RSTrail
// Size: 0x98 (Inherited: 0x58)
struct UAnimNotifyState_RSTrail : UAnimNotifyState_Trail {
	char pad_58[0x1]; // 0x58(0x01)
	bool bPlayerCopyMode; // 0x59(0x01)
	bool bIgnoreOriginal; // 0x5a(0x01)
	bool bIgnoreCopy; // 0x5b(0x01)
	char pad_5C[0x4]; // 0x5c(0x04)
	struct URSParticleSystemComponentBase* ComponentClass; // 0x60(0x08)
	bool Ignore; // 0x68(0x01)
	char pad_69[0x7]; // 0x69(0x07)
	struct UParticleComponentListManager* ParticleComponentManager; // 0x70(0x08)
	float WidthScale; // 0x78(0x04)
	float FadeOutStart; // 0x7c(0x04)
	struct FName FadeOutMaterialScalarName; // 0x80(0x08)
	bool OptionSeeThrough; // 0x88(0x01)
	enum class ESequencerDilationOwner DilationOwner; // 0x89(0x01)
	bool IsRegistToChara; // 0x8a(0x01)
	bool IsInterruptTelepo; // 0x8b(0x01)
	char pad_8C[0xc]; // 0x8c(0x0c)
};

// Class BattlePrototype.AnimNotifyState_SuperArmor
// Size: 0x38 (Inherited: 0x30)
struct UAnimNotifyState_SuperArmor : UAnimNotifyState {
	int32_t ResistStagger; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class BattlePrototype.AnyObjectCreator
// Size: 0x58 (Inherited: 0x28)
struct UAnyObjectCreator : UObject {
	struct AActor* SpawnClass; // 0x28(0x08)
	struct AActor* SpawnObject; // 0x30(0x08)
	bool bSuccessConstruct; // 0x38(0x01)
	char pad_39[0x7]; // 0x39(0x07)
	struct FString LoadAssetName; // 0x40(0x10)
	struct UObject* LoadedObject; // 0x50(0x08)
};

// Class BattlePrototype.DebuggingItemAppVersionGroup
// Size: 0x2e0 (Inherited: 0x2d0)
struct ADebuggingItemAppVersionGroup : ADebuggingItemGroup {
	struct TWeakObjectPtr<struct ADebuggingItemLabel> DispLabel; // 0x2d0(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemInt> VersionInt; // 0x2d8(0x08)

	void OnPageOpened(); // Function BattlePrototype.DebuggingItemAppVersionGroup.OnPageOpened // (Final|Native|Public) // @ game+0x8518d0
	void OnExecChangeReleaseVersion(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemAppVersionGroup.OnExecChangeReleaseVersion // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.ArrangeItemBase
// Size: 0x318 (Inherited: 0x230)
struct AArrangeItemBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	bool isDoBeginPlay; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
	struct UChildActorComponent* ChildActionIcon; // 0x240(0x08)
	struct FName ActionIconSupportParamID; // 0x248(0x08)
	struct FVector ActionIconWorldPositionOffset; // 0x250(0x0c)
	enum class EActionIconType actionIconType; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct FString ID; // 0x260(0x10)
	struct FString RandomArrangeItemID; // 0x270(0x10)
	char pad_280[0x4]; // 0x280(0x04)
	int32_t LevelID; // 0x284(0x04)
	int32_t GroupID; // 0x288(0x04)
	char pad_28C[0x4]; // 0x28c(0x04)
	struct FString ArrangeItemId; // 0x290(0x10)
	struct FArrangeItemDataCell ArrangeItemDataCell; // 0x2a0(0x28)
	bool Acquired; // 0x2c8(0x01)
	bool isInvisivleInEvent; // 0x2c9(0x01)
	char pad_2CA[0x6]; // 0x2ca(0x06)
	double IntervalTime; // 0x2d0(0x08)
	struct FName OnScenarioFlagName; // 0x2d8(0x08)
	struct USoundAtomCue* AddItemSeCue; // 0x2e0(0x08)
	struct USoundAtomCue* AcquisitionFailureSound; // 0x2e8(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x2f0(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x2f8(0x08)
	char pad_300[0x6]; // 0x300(0x06)
	bool WhetherToGetFullItem; // 0x306(0x01)
	enum class EArrangeItemBrainTalkType BrainTalkType; // 0x307(0x01)
	bool bAutoGet; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	struct FVector EvetBoxSize; // 0x30c(0x0c)

	void SetVisible(bool Flag); // Function BattlePrototype.ArrangeItemBase.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x117af10
	void Setup(); // Function BattlePrototype.ArrangeItemBase.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x117b0a0
	void RestoreVisible(); // Function BattlePrototype.ArrangeItemBase.RestoreVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x117aa80
	void OnRebirth(bool IsInitialize); // Function BattlePrototype.ArrangeItemBase.OnRebirth // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x117a8a0
	void OnBindShowBoxBeginOverlap(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function BattlePrototype.ArrangeItemBase.OnBindShowBoxBeginOverlap // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x117a500
	void OnBindAcquire(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult SweepResult); // Function BattlePrototype.ArrangeItemBase.OnBindAcquire // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x117a310
	void OnAcquire(bool IsInitialize); // Function BattlePrototype.ArrangeItemBase.OnAcquire // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x117a280
};

// Class BattlePrototype.ArrangeItemIDSetter
// Size: 0x28 (Inherited: 0x28)
struct UArrangeItemIDSetter : UBlueprintFunctionLibrary {
};

// Class BattlePrototype.ArrangeItemManager
// Size: 0x2c0 (Inherited: 0x230)
struct AArrangeItemManager : AActor {
	char pad_230[0x18]; // 0x230(0x18)
	struct TArray<struct FArrangeItemListForSaveData> m_allArrangeItemList; // 0x248(0x10)
	struct TArray<struct FRandomArrangeItemIDInfo> m_allRandomArrangeItemIDInfo; // 0x258(0x10)
	double m_timerCount; // 0x268(0x08)
	struct FDelegate OnChangeMinimapStateDelegate; // 0x270(0x10)
	struct FMulticastInlineDelegate OnAcquireDispather; // 0x280(0x10)
	struct FMulticastInlineDelegate OnRebirthDispather; // 0x290(0x10)
	double m_LotteryPrintDispEndTime; // 0x2a0(0x08)
	struct TArray<struct FString> m_LotteryPrintTextList; // 0x2a8(0x10)
	bool m_isLotteryPrintDispDrawed; // 0x2b8(0x01)
	bool m_isDebugLotteryPrintDispFlag; // 0x2b9(0x01)
	bool m_isDebugForceRepopTimeFlag; // 0x2ba(0x01)
	char pad_2BB[0x1]; // 0x2bb(0x01)
	float m_debugForceRepopTime; // 0x2bc(0x04)

	bool SetRebirth(struct FName ID); // Function BattlePrototype.ArrangeItemManager.SetRebirth // (Final|Native|Public|BlueprintCallable) // @ game+0x117ae80
	void SetRandomArrangeParam2Actor(struct AArrangeItemBase* _actor); // Function BattlePrototype.ArrangeItemManager.SetRandomArrangeParam2Actor // (Final|Native|Public|BlueprintCallable) // @ game+0x117ae00
	bool SetIntervalTime(struct FName ID, float arrangeItemIntervaltime, float resultIntervalTime); // Function BattlePrototype.ArrangeItemManager.SetIntervalTime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x117acf0
	bool SetAcquired(struct FName ID, bool Flag); // Function BattlePrototype.ArrangeItemManager.SetAcquired // (Final|Native|Public|BlueprintCallable) // @ game+0x117ab60
	bool SetAccessed(struct FName ID, bool Flag); // Function BattlePrototype.ArrangeItemManager.SetAccessed // (Final|Native|Public|BlueprintCallable) // @ game+0x117aaa0
	bool GetArrangeItemParam(struct FName ID, float IntervalTime, bool Acquired, bool Accessed); // Function BattlePrototype.ArrangeItemManager.GetArrangeItemParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1179f90
	void ChangeAreaWork(); // Function BattlePrototype.ArrangeItemManager.ChangeAreaWork // (Final|Native|Public|BlueprintCallable) // @ game+0x1179ea0
};

// Class BattlePrototype.ArrangeItemParticle
// Size: 0x340 (Inherited: 0x318)
struct AArrangeItemParticle : AArrangeItemBase {
	struct URSParticleSystemComponentBase* ParticleComponent; // 0x318(0x08)
	struct URSParticleSystemComponentBase* ParticleComponentSub1; // 0x320(0x08)
	struct URSParticleSystemComponentBase* AcquiredParticleComponent; // 0x328(0x08)
	struct URSParticleSystemComponentBase* AcquiredParticleComponentSub1; // 0x330(0x08)
	struct USoundAtomCue* AcquiredSeCue; // 0x338(0x08)

	struct UParticleSystem* GetEmitterTemplate(); // Function BattlePrototype.ArrangeItemParticle.GetEmitterTemplate // (Native|Event|Public|BlueprintEvent) // @ game+0x117a1c0
};

// Class BattlePrototype.ArrangeItemParticleEvent
// Size: 0x340 (Inherited: 0x340)
struct AArrangeItemParticleEvent : AArrangeItemParticle {

	bool DoEvent(); // Function BattlePrototype.ArrangeItemParticleEvent.DoEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.ArrangeObject
// Size: 0x2a8 (Inherited: 0x230)
struct AArrangeObject : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	bool isDoBeginPlay; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	int32_t ID; // 0x23c(0x04)
	int32_t LevelID; // 0x240(0x04)
	int32_t GroupID; // 0x244(0x04)
	struct UStaticMeshComponent* ArrangeMesh; // 0x248(0x08)
	struct FVector FirstPosition; // 0x250(0x0c)
	struct FRotator FirstRotation; // 0x25c(0x0c)
	struct FVector TempPosition; // 0x268(0x0c)
	struct FRotator TempRotation; // 0x274(0x0c)
	struct UFootStepComponent* FootStepComponent; // 0x280(0x08)
	struct TArray<struct FHitActorInfo> HitActorList; // 0x288(0x10)
	float HitSeInterval; // 0x298(0x04)
	float PlaySeVelocity; // 0x29c(0x04)
	float PlayRunSeVelocity; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)

	void OnHitCallback(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function BattlePrototype.ArrangeObject.OnHitCallback // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x117a6f0
};

// Class BattlePrototype.ArrangeObjectManager
// Size: 0x38 (Inherited: 0x28)
struct UArrangeObjectManager : UObject {
	struct TArray<struct AArrangeObject*> ArrangeObjects; // 0x28(0x10)

	void UnregisterObjectAll(); // Function BattlePrototype.ArrangeObjectManager.UnregisterObjectAll // (Native|Public|BlueprintCallable) // @ game+0x117b150
	void UnregisterObject(struct AArrangeObject* ArrangeObject); // Function BattlePrototype.ArrangeObjectManager.UnregisterObject // (Native|Public|BlueprintCallable) // @ game+0x117b0c0
	void SetVisible(bool IsVisible, int32_t LevelID, int32_t GroupID); // Function BattlePrototype.ArrangeObjectManager.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x117afa0
	void SetEnableCollision(bool Flag, bool bHiddenCheck); // Function BattlePrototype.ArrangeObjectManager.SetEnableCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x117ac20
	void RestoreObjectInfo(int32_t LevelID, int32_t GroupID); // Function BattlePrototype.ArrangeObjectManager.RestoreObjectInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x117a9c0
	void RestoreFirstObjectInfo(int32_t LevelID, int32_t GroupID); // Function BattlePrototype.ArrangeObjectManager.RestoreFirstObjectInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x117a9c0
	void RegisterObject(struct AArrangeObject* ArrangeObject); // Function BattlePrototype.ArrangeObjectManager.RegisterObject // (Native|Public|BlueprintCallable) // @ game+0x117a930
	void Initialize(struct UObject* WorldContextObject); // Function BattlePrototype.ArrangeObjectManager.Initialize // (Native|Public|BlueprintCallable) // @ game+0x117a1f0
	struct AArrangeObject* GetArrangeObject(int32_t ID); // Function BattlePrototype.ArrangeObjectManager.GetArrangeObject // (Final|Native|Public|BlueprintCallable) // @ game+0x117a130
	void BackupObjectInfo(int32_t LevelID, int32_t GroupID); // Function BattlePrototype.ArrangeObjectManager.BackupObjectInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1179de0
	void BackupFirstObjectInfo(int32_t LevelID, int32_t GroupID); // Function BattlePrototype.ArrangeObjectManager.BackupFirstObjectInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1179de0
};

// Class BattlePrototype.AssetFuncLib
// Size: 0x28 (Inherited: 0x28)
struct UAssetFuncLib : UBlueprintFunctionLibrary {

	void SetForceMipLevelsToBeResidentByTexture(struct UTexture2D* Texture, float Seconds, int32_t CinematicLODGroupMask, bool HighProirity); // Function BattlePrototype.AssetFuncLib.SetForceMipLevelsToBeResidentByTexture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117fc90
	void SetForceMipLevelsToBeResidentBySkeletalMeshComp(struct USkeletalMeshComponent* SkelMeshComp, float Seconds, int32_t CinematicLODGroupMask, bool HighProirity); // Function BattlePrototype.AssetFuncLib.SetForceMipLevelsToBeResidentBySkeletalMeshComp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117fb50
	void SetChapterChunkPriority(int32_t ChapterNo); // Function BattlePrototype.AssetFuncLib.SetChapterChunkPriority // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xd6c4f0
	void ResetForceMipLevelsToBeResidentByTexture(struct UTexture2D* Texture); // Function BattlePrototype.AssetFuncLib.ResetForceMipLevelsToBeResidentByTexture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117f780
	void ResetForceMipLevelsToBeResidentBySkeletalMeshComp(struct USkeletalMeshComponent* SkelMeshComp); // Function BattlePrototype.AssetFuncLib.ResetForceMipLevelsToBeResidentBySkeletalMeshComp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117f710
	struct FString ObjectSoftRefToStringRaw(struct TSoftObjectPtr<UObject> Object); // Function BattlePrototype.AssetFuncLib.ObjectSoftRefToStringRaw // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x117f140
	struct FString ObjectSoftRefToString(struct TSoftObjectPtr<UObject> Object); // Function BattlePrototype.AssetFuncLib.ObjectSoftRefToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x117f040
	struct FName ObjectSoftRefToName(struct TSoftObjectPtr<UObject> Object); // Function BattlePrototype.AssetFuncLib.ObjectSoftRefToName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x117ef80
	void ModifyAssets(struct TArray<struct UObject*> Assets); // Function BattlePrototype.AssetFuncLib.ModifyAssets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117eeb0
	bool IsReadyForceMipLevelsToBeResidentByTexture(struct UTexture2D* Texture); // Function BattlePrototype.AssetFuncLib.IsReadyForceMipLevelsToBeResidentByTexture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117ed70
	bool IsFullInstallPackage(); // Function BattlePrototype.AssetFuncLib.IsFullInstallPackage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117ed40
	bool IsChunkLoaded(int32_t ChunkId, bool isNotExistError); // Function BattlePrototype.AssetFuncLib.IsChunkLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117eb20
	bool IsChapterChunkLoaded(int32_t ChapterNo); // Function BattlePrototype.AssetFuncLib.IsChapterChunkLoaded // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117ea10
	struct FString GetPrimaryAssetPath(struct FPrimaryAssetId PrimaryAssetId); // Function BattlePrototype.AssetFuncLib.GetPrimaryAssetPath // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x117e620
	bool GetPackagePath(struct UObject* Object, struct FName OutName); // Function BattlePrototype.AssetFuncLib.GetPackagePath // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x117e550
	struct TArray<struct FName> GetAssetSoftDependencies(struct FName AssetName); // Function BattlePrototype.AssetFuncLib.GetAssetSoftDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117e200
	struct TArray<struct FName> GetAssetSearchableNameDependencies(struct FName AssetName); // Function BattlePrototype.AssetFuncLib.GetAssetSearchableNameDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117e130
	struct TArray<struct FName> GetAssetPackagesDependencies(struct FName AssetName); // Function BattlePrototype.AssetFuncLib.GetAssetPackagesDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117e060
	struct TArray<struct FName> GetAssetManageDependencies(struct FName AssetName); // Function BattlePrototype.AssetFuncLib.GetAssetManageDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117df90
	struct TArray<struct FName> GetAssetHardDependencies(struct FName AssetName); // Function BattlePrototype.AssetFuncLib.GetAssetHardDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117dec0
	struct TArray<struct FName> GetAssetDependencies(struct FName AssetName, bool hard, bool soft, bool searchableName, bool manage); // Function BattlePrototype.AssetFuncLib.GetAssetDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117dcb0
	struct TArray<struct FName> GetAssetAllDependencies(struct FName AssetName); // Function BattlePrototype.AssetFuncLib.GetAssetAllDependencies // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x117dbe0
};

// Class BattlePrototype.AssetLoadComponent
// Size: 0xe0 (Inherited: 0xc0)
struct UAssetLoadComponent : UActorComponent {
	struct USoundAtomCueSheet* SoundCueSheet; // 0xc0(0x08)
	struct TArray<struct UParticleSystem*> ParticleList; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)
};

// Class BattlePrototype.AssetMemoryData
// Size: 0x50 (Inherited: 0x28)
struct UAssetMemoryData : UObject {
	struct FName ObjectPath; // 0x28(0x08)
	struct FName AssetName; // 0x30(0x08)
	struct FName AssetClass; // 0x38(0x08)
	uint64_t PhysicalSize; // 0x40(0x08)
	uint64_t VirtualSize; // 0x48(0x08)
};

// Class BattlePrototype.AttachEffectBackgroundVolume
// Size: 0x290 (Inherited: 0x268)
struct AAttachEffectBackgroundVolume : AVolume {
	struct TArray<struct AEffectBackground*> Particles; // 0x268(0x10)
	bool Subtract; // 0x278(0x01)
	bool Unbound; // 0x279(0x01)
	char pad_27A[0x16]; // 0x27a(0x16)

	void OnActorEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.AttachEffectBackgroundVolume.OnActorEndOverlapFunc // (Final|Native|Public) // @ game+0x117f300
	void OnActorBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.AttachEffectBackgroundVolume.OnActorBeginOverlapFunc // (Final|Native|Public) // @ game+0x117f240
};

// Class BattlePrototype.AttackComponentBase
// Size: 0xf0 (Inherited: 0xc0)
struct UAttackComponentBase : UActorComponent {
	char pad_C0[0x10]; // 0xc0(0x10)
	struct UPlayerAnimControllerComponent* _animCon; // 0xd0(0x08)
	char pad_D8[0x18]; // 0xd8(0x18)

	void SpawnSASVisionActor(struct AActor* ActorClass, struct FName locationTagName, bool bFollow); // Function BattlePrototype.AttackComponentBase.SpawnSASVisionActor // (Final|Native|Public|BlueprintCallable) // @ game+0x117fe50
	void SetAttackInputKind(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackComponentBase.SetAttackInputKind // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x117f810
	void SetAttacking(bool bAttacking, bool bAddComboCount); // Function BattlePrototype.AttackComponentBase.SetAttacking // (Final|Native|Protected|BlueprintCallable) // @ game+0x117f8b0
	bool OnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.AttackComponentBase.OnMontageEnded // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnMontageBlendingOut(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.AttackComponentBase.OnMontageBlendingOut // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnCustomAttackTimingNotified(struct FString CustomName); // Function BattlePrototype.AttackComponentBase.OnCustomAttackTimingNotified // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnChangeAttacking(bool bAttacking); // Function BattlePrototype.AttackComponentBase.OnChangeAttacking // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void OnChangeAnimKind(enum class PlayerAnimKind NewKind, enum class PlayerAnimKind OldKind); // Function BattlePrototype.AttackComponentBase.OnChangeAnimKind // (Final|Native|Public|BlueprintCallable) // @ game+0x117f490
	bool IsAttacking(); // Function BattlePrototype.AttackComponentBase.IsAttacking // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11739c0
	bool IsAttackCombo(); // Function BattlePrototype.AttackComponentBase.IsAttackCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117e8f0
	bool InputButtonByCombo(bool bPressed, bool bComboFirst); // Function BattlePrototype.AttackComponentBase.InputButtonByCombo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UPlayerAnimControllerComponent* GetOwnerAnimCon(); // Function BattlePrototype.AttackComponentBase.GetOwnerAnimCon // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e530
	int32_t GetBranchComboCount(); // Function BattlePrototype.AttackComponentBase.GetBranchComboCount // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	enum class RSAttackInputKind GetBranchComboAttackInputKind(); // Function BattlePrototype.AttackComponentBase.GetBranchComboAttackInputKind // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	enum class RSAttackInputKind GetAttackInputKind(); // Function BattlePrototype.AttackComponentBase.GetAttackInputKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e2f0
	struct UAttackInputComponent* GetAttackInputComponent(); // Function BattlePrototype.AttackComponentBase.GetAttackInputComponent // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e2d0
	struct UAttackComponentBase* FindAttackingComponent(struct AActor* Actor); // Function BattlePrototype.AttackComponentBase.FindAttackingComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117dad0
	struct UAttackComponentBase* FindAttackComponentBySASVisionActor(struct AActor* Actor, struct AActor* ActorClass); // Function BattlePrototype.AttackComponentBase.FindAttackComponentBySASVisionActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x117da10
	void DisappearSASVisionActor(); // Function BattlePrototype.AttackComponentBase.DisappearSASVisionActor // (Final|Native|Public|BlueprintCallable) // @ game+0x117d9f0
	void DestroySASVisionActor(); // Function BattlePrototype.AttackComponentBase.DestroySASVisionActor // (Final|Native|Public|BlueprintCallable) // @ game+0x117d9d0
	void ClearInputAll(); // Function BattlePrototype.AttackComponentBase.ClearInputAll // (Final|Native|Public|BlueprintCallable) // @ game+0x117d8d0
	bool ClearInput(); // Function BattlePrototype.AttackComponentBase.ClearInput // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckStartAttack(float DeltaTime); // Function BattlePrototype.AttackComponentBase.CheckStartAttack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void AddComboCount(); // Function BattlePrototype.AttackComponentBase.AddComboCount // (Final|Native|Protected|BlueprintCallable) // @ game+0x117d410
};

// Class BattlePrototype.AttackInputComponent
// Size: 0x2ea8 (Inherited: 0xc0)
struct UAttackInputComponent : UActorComponent {
	struct FMulticastInlineDelegate OnComboInputEnd; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnChangePsychicComboLevel; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnChangeFlyingPsychicComboLevel; // 0xe0(0x10)
	char pad_F0[0x2da0]; // 0xf0(0x2da0)
	struct TArray<struct UAttackComponentBase*> _inputAttackComponentList; // 0x2e90(0x10)
	char pad_2EA0[0x8]; // 0x2ea0(0x08)

	void UnregisterCurrentAttackComponent(struct UAttackComponentBase* attackComp); // Function BattlePrototype.AttackInputComponent.UnregisterCurrentAttackComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x117ff60
	void SetPsychicComboLevel(int32_t PsychicComboLevel); // Function BattlePrototype.AttackInputComponent.SetPsychicComboLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x117fdd0
	void SetFlyingPsychicComboLevel(int32_t PsychicComboLevel); // Function BattlePrototype.AttackInputComponent.SetFlyingPsychicComboLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x117fad0
	void SetDisableCombo(enum class RSAttackInputKind kind, bool bDisable); // Function BattlePrototype.AttackInputComponent.SetDisableCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117fa00
	void SetComboAttackInputKind(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.SetComboAttackInputKind // (Final|Native|Public|BlueprintCallable) // @ game+0x117f980
	void SetAttackedFlyingCombo(); // Function BattlePrototype.AttackInputComponent.SetAttackedFlyingCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117f890
	void ResetPsychicComboLevel(); // Function BattlePrototype.AttackInputComponent.ResetPsychicComboLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x117f7f0
	void ResetFlyingCombo(); // Function BattlePrototype.AttackInputComponent.ResetFlyingCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117f6f0
	void ResetComboByInputKind(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.ResetComboByInputKind // (Final|Native|Public|BlueprintCallable) // @ game+0x117f670
	void ResetCombo(); // Function BattlePrototype.AttackInputComponent.ResetCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117f650
	void RegisterCurrentAttackComponent(struct UAttackComponentBase* attackComp); // Function BattlePrototype.AttackInputComponent.RegisterCurrentAttackComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x117f5d0
	void OverwriteComboCount(int32_t comboCount); // Function BattlePrototype.AttackInputComponent.OverwriteComboCount // (Final|Native|Public|BlueprintCallable) // @ game+0x117f550
	void OnAttackComponentChangeAttacking(struct UAttackComponentBase* attackComp, bool bAttacking); // Function BattlePrototype.AttackInputComponent.OnAttackComponentChangeAttacking // (Final|Native|Protected) // @ game+0x117f3c0
	bool IsWaitPsychicCombo(); // Function BattlePrototype.AttackInputComponent.IsWaitPsychicCombo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117ee80
	bool IsRegisterCombo(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.IsRegisterCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117edf0
	bool IsDisableCombo(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.IsDisableCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117ecb0
	bool IsComboInterval(enum class RSAttackInputKind kind, bool bCheckWaitFlag); // Function BattlePrototype.AttackInputComponent.IsComboInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x117ebe0
	bool IsCheckStartAttack(enum class RSAttackInputKind AttackKind); // Function BattlePrototype.AttackInputComponent.IsCheckStartAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x117ea90
	bool IsAttackingByKind(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.IsAttackingByKind // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x117e980
	bool IsAttacking(); // Function BattlePrototype.AttackInputComponent.IsAttacking // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x117e950
	bool IsAttackedFlyingCombo(); // Function BattlePrototype.AttackInputComponent.IsAttackedFlyingCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x117e920
	void InputAttackByPC(enum class RSAttackInputKind inputKind, bool bPressed); // Function BattlePrototype.AttackInputComponent.InputAttackByPC // (Final|Native|Public|BlueprintCallable) // @ game+0x117e820
	int32_t GetRemainUseCount(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.GetRemainUseCount // (Final|Native|Public|BlueprintCallable) // @ game+0x117e790
	int32_t GetPsychicComboLevelMax(); // Function BattlePrototype.AttackInputComponent.GetPsychicComboLevelMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e760
	int32_t GetPsychicComboLevel(); // Function BattlePrototype.AttackInputComponent.GetPsychicComboLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e730
	int32_t GetPsychicComboCount(); // Function BattlePrototype.AttackInputComponent.GetPsychicComboCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x117e700
	struct TArray<struct UAttackComponentBase*> GetInputAttackComponentList(); // Function BattlePrototype.AttackInputComponent.GetInputAttackComponentList // (Final|Native|Public|BlueprintCallable) // @ game+0x117e4b0
	int32_t GetFlyingPsychicComboLevelMax(); // Function BattlePrototype.AttackInputComponent.GetFlyingPsychicComboLevelMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e480
	int32_t GetFlyingPsychicComboLevel(); // Function BattlePrototype.AttackInputComponent.GetFlyingPsychicComboLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e450
	struct FName GetComboPattern(); // Function BattlePrototype.AttackInputComponent.GetComboPattern // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e410
	int32_t GetComboCountByInputKind(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.GetComboCountByInputKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e380
	int32_t GetComboCount(); // Function BattlePrototype.AttackInputComponent.GetComboCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e350
	enum class RSAttackInputKind GetComboAttackInputKind(); // Function BattlePrototype.AttackInputComponent.GetComboAttackInputKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x117e320
	struct UAttackComponentBase* FindAttackingComponent(enum class RSAttackInputKind kind); // Function BattlePrototype.AttackInputComponent.FindAttackingComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x117db50
	void DebugSetComboDisp(bool bDisp); // Function BattlePrototype.AttackInputComponent.DebugSetComboDisp // (Final|Native|Public|BlueprintCallable) // @ game+0x117d950
	void ClearUseCount(); // Function BattlePrototype.AttackInputComponent.ClearUseCount // (Final|Native|Public|BlueprintCallable) // @ game+0x117d930
	void ClearPsychicComboCount(); // Function BattlePrototype.AttackInputComponent.ClearPsychicComboCount // (Final|Native|Public|BlueprintCallable) // @ game+0x117d910
	void ClearInputAll(); // Function BattlePrototype.AttackInputComponent.ClearInputAll // (Final|Native|Public|BlueprintCallable) // @ game+0x117d8f0
	void ClearComboPattern(struct FName patternName); // Function BattlePrototype.AttackInputComponent.ClearComboPattern // (Final|Native|Public|BlueprintCallable) // @ game+0x117d850
	void CheckStartAttack(float DeltaTime); // Function BattlePrototype.AttackInputComponent.CheckStartAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x117d7d0
	void ChangeComboPattern(struct FName patternName); // Function BattlePrototype.AttackInputComponent.ChangeComboPattern // (Final|Native|Public|BlueprintCallable) // @ game+0x117d750
	void BeginComboInterval(); // Function BattlePrototype.AttackInputComponent.BeginComboInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x117d730
	void AddPsychicComboCount(); // Function BattlePrototype.AttackInputComponent.AddPsychicComboCount // (Final|Native|Public|BlueprintCallable) // @ game+0x117d710
	void AddComboPattern(struct FName patternName, enum class RSAttackInputKind inputKind, struct TArray<struct UAttackComponentBase*> attackComps, float comboInterval, int32_t maxUseCount); // Function BattlePrototype.AttackInputComponent.AddComboPattern // (Final|Native|Public|BlueprintCallable) // @ game+0x117d530
	void AddComboCount(enum class RSAttackInputKind kind, enum class RSAttackInputKind branchKind, int32_t branchComboCount); // Function BattlePrototype.AttackInputComponent.AddComboCount // (Final|Native|Public|BlueprintCallable) // @ game+0x117d430
};

// Class BattlePrototype.AttackPropertyMediatorComponent
// Size: 0x110 (Inherited: 0xc0)
struct UAttackPropertyMediatorComponent : UActorComponent {
	char pad_C0[0x50]; // 0xc0(0x50)

	void SetAttackRate(struct FName ClaimantName, float AttackRate); // Function BattlePrototype.AttackPropertyMediatorComponent.SetAttackRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1184a00
	struct UAttackPropertyMediatorComponent* GetAttackPropertyMediator(struct AActor* Actor); // Function BattlePrototype.AttackPropertyMediatorComponent.GetAttackPropertyMediator // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1183f90
	struct UAttackPropertyMediatorComponent* FindAttackPropertyMediator(struct AActor* Actor); // Function BattlePrototype.AttackPropertyMediatorComponent.FindAttackPropertyMediator // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1183f90
	void ClearAttackRate(struct FName ClaimantName); // Function BattlePrototype.AttackPropertyMediatorComponent.ClearAttackRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1183e60
	float CalcTotalAttackRate(); // Function BattlePrototype.AttackPropertyMediatorComponent.CalcTotalAttackRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1183cd0
};

// Class BattlePrototype.AutoAimComponent
// Size: 0x130 (Inherited: 0xc0)
struct UAutoAimComponent : UActorComponent {
	float _aimSpeed; // 0xc0(0x04)
	float _aimSpeedInternalLock; // 0xc4(0x04)
	float _maxAimAngle; // 0xc8(0x04)
	bool _isInternalLock; // 0xcc(0x01)
	bool _isToCamera; // 0xcd(0x01)
	bool _isToBrainCrash; // 0xce(0x01)
	char pad_CF[0x1]; // 0xcf(0x01)
	float _offsetDegree; // 0xd0(0x04)
	enum class EDirectionOfRotation _directionOfRotation; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
	float _frontDegree; // 0xd8(0x04)
	bool _isToWeakPoint; // 0xdc(0x01)
	char pad_DD[0x53]; // 0xdd(0x53)

	void UpdateRotateAim(float DeltaSeconds); // Function BattlePrototype.AutoAimComponent.UpdateRotateAim // (Final|Native|Protected) // @ game+0x1184e10
	float UpdateFromDirectionOfRotation(float Rot, float Sign); // Function BattlePrototype.AutoAimComponent.UpdateFromDirectionOfRotation // (Final|Native|Protected) // @ game+0x1184d40
	void PauseAutoAim(bool bPause); // Function BattlePrototype.AutoAimComponent.PauseAutoAim // (Final|Native|Public|BlueprintCallable) // @ game+0x11848a0
	void LockLocation(bool bLock, struct FVector LockLocation); // Function BattlePrototype.AutoAimComponent.LockLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11847c0
	bool IsLockLocation(); // Function BattlePrototype.AutoAimComponent.IsLockLocation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1184640
	bool IsBindOwnerTick(); // Function BattlePrototype.AutoAimComponent.IsBindOwnerTick // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1184430
	struct UAutoAimComponent* GetAutoAimComponentFromActor(struct AActor* Actor); // Function BattlePrototype.AutoAimComponent.GetAutoAimComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1184040
	void EndAutoAim(struct UObject* Notify); // Function BattlePrototype.AutoAimComponent.EndAutoAim // (Final|Native|Public|BlueprintCallable) // @ game+0x1183f10
	void BeginAutoAimLocation(struct UObject* Notify, float aimSpeed, float maxAimAngle, struct FVector aimLocation, struct UMeshComponent* socketRotateMesh, struct FName SocketName, float offsetDegree, enum class EDirectionOfRotation directionOfRotation, float frontDegree); // Function BattlePrototype.AutoAimComponent.BeginAutoAimLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1183a40
	void BeginAutoAim(struct UObject* Notify, float aimSpeed, float maxAimAngle, bool isInternalLock, bool isToCamera, struct AActor* brainCrashActor, struct UMeshComponent* socketRotateMesh, struct FName SocketName, float offsetDegree, enum class EDirectionOfRotation directionOfRotation, float frontDegree, float aimSpeedInternalLock, bool findAimTargetWhenNoTarget, bool isDetectTargetChange, bool isToWeakPoint); // Function BattlePrototype.AutoAimComponent.BeginAutoAim // (Final|Native|Public|BlueprintCallable) // @ game+0x1183620
};

// Class BattlePrototype.AutoRecoverComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UAutoRecoverComponent : UActorComponent {
	float _HPRecoverStartSec; // 0xc0(0x04)
	float _HPRecoverSpeed; // 0xc4(0x04)
	float _autoRecoverHPFraction; // 0xc8(0x04)
	float _PPRecoverStartSec; // 0xcc(0x04)
	float _autoRecoverFullPPSec; // 0xd0(0x04)
	float _autoRecoverPPFraction; // 0xd4(0x04)

	void Setup(float hpRecoverSpeed, float hpRecoverStartSec); // Function BattlePrototype.AutoRecoverComponent.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x1184c80
	void ProcessAutoRecoverPP(float delataTime, bool enableRecover); // Function BattlePrototype.AutoRecoverComponent.ProcessAutoRecoverPP // (Final|Native|Public|BlueprintCallable) // @ game+0x1184930
	void ProcessAutoRecoverHP(float delataTime, bool enableRecover); // Function BattlePrototype.AutoRecoverComponent.ProcessAutoRecoverHP // (Final|Native|Public|BlueprintCallable) // @ game+0x1184930
};

// Class BattlePrototype.BattleCharacterDebugInterface
// Size: 0x28 (Inherited: 0x28)
struct UBattleCharacterDebugInterface : UInterface {

	bool IsDebugInvincible(); // Function BattlePrototype.BattleCharacterDebugInterface.IsDebugInvincible // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
};

// Class BattlePrototype.BattleCharacterHudInterface
// Size: 0x28 (Inherited: 0x28)
struct UBattleCharacterHudInterface : UInterface {

	bool SetEmphasisCrashGauge(bool bEmphasisCrashGauge); // Function BattlePrototype.BattleCharacterHudInterface.SetEmphasisCrashGauge // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void IsSpawnWait(bool bSpawnWait); // Function BattlePrototype.BattleCharacterHudInterface.IsSpawnWait // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsInvisibleMiniMap(); // Function BattlePrototype.BattleCharacterHudInterface.IsInvisibleMiniMap // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsInvisibleHPGauge(bool bInvisible); // Function BattlePrototype.BattleCharacterHudInterface.IsInvisibleHPGauge // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsHpGaugeAlwaysMax(bool bAlwaysMax); // Function BattlePrototype.BattleCharacterHudInterface.IsHpGaugeAlwaysMax // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEmphasisCrashGauge(); // Function BattlePrototype.BattleCharacterHudInterface.IsEmphasisCrashGauge // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	int32_t GetWeakNumber(); // Function BattlePrototype.BattleCharacterHudInterface.GetWeakNumber // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetTargetCursorPoint(struct FVector Point); // Function BattlePrototype.BattleCharacterHudInterface.GetTargetCursorPoint // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetHpGaugePoint(struct FVector Point); // Function BattlePrototype.BattleCharacterHudInterface.GetHpGaugePoint // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetCrashChanceCursorPoint(struct FVector Point); // Function BattlePrototype.BattleCharacterHudInterface.GetCrashChanceCursorPoint // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool BrainCrashUnlock(); // Function BattlePrototype.BattleCharacterHudInterface.BrainCrashUnlock // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.BattleCharacterInterface
// Size: 0x28 (Inherited: 0x28)
struct UBattleCharacterInterface : UInterface {

	bool VibrationControllerInDamageInterface(struct FHCHitResult HitResult); // Function BattlePrototype.BattleCharacterInterface.VibrationControllerInDamageInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StopBehaviorTree(bool bTickDisable); // Function BattlePrototype.BattleCharacterInterface.StopBehaviorTree // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ShakeCameraInDamageInterface(struct FHCHitResult HitResult); // Function BattlePrototype.BattleCharacterInterface.ShakeCameraInDamageInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetUseGuts(bool bUse); // Function BattlePrototype.BattleCharacterInterface.SetUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184bf0
	void SetNoDeadEvent(bool noDeadEvent); // Function BattlePrototype.BattleCharacterInterface.SetNoDeadEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetNoCrashChanceEvent(bool noCrashChanceEvent); // Function BattlePrototype.BattleCharacterInterface.SetNoCrashChanceEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetNoCrashChanceByUseGuts(bool bEnable); // Function BattlePrototype.BattleCharacterInterface.SetNoCrashChanceByUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184b60
	void SetInvalidDamageInterface(bool bInvalidDamage, struct FName ClaimantName, int32_t Param); // Function BattlePrototype.BattleCharacterInterface.SetInvalidDamageInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetInfinityCrashChance(bool bEnable); // Function BattlePrototype.BattleCharacterInterface.SetInfinityCrashChance // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184ad0
	bool SetHiddenCharacterAttachment(bool NewHidden); // Function BattlePrototype.BattleCharacterInterface.SetHiddenCharacterAttachment // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetCounterInterface(); // Function BattlePrototype.BattleCharacterInterface.SetCounterInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetBehaviorTreeTickEnable(bool bEnable); // Function BattlePrototype.BattleCharacterInterface.SetBehaviorTreeTickEnable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetActorAllTickEnabled(bool bEnabled); // Function BattlePrototype.BattleCharacterInterface.SetActorAllTickEnabled // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RestartBehaviorTree(bool bTickEnable); // Function BattlePrototype.BattleCharacterInterface.RestartBehaviorTree // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsUseGuts(); // Function BattlePrototype.BattleCharacterInterface.IsUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184790
	bool IsUniqueNoDead(); // Function BattlePrototype.BattleCharacterInterface.IsUniqueNoDead // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184760
	bool IsSuperArmorInterface(); // Function BattlePrototype.BattleCharacterInterface.IsSuperArmorInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsNotAbleBrainCrashTarget(); // Function BattlePrototype.BattleCharacterInterface.IsNotAbleBrainCrashTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184730
	bool IsNoDeadTutorial(); // Function BattlePrototype.BattleCharacterInterface.IsNoDeadTutorial // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184700
	bool IsNoDeadEvent(); // Function BattlePrototype.BattleCharacterInterface.IsNoDeadEvent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11846d0
	bool IsNoCrashChanceEvent(); // Function BattlePrototype.BattleCharacterInterface.IsNoCrashChanceEvent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11846a0
	bool IsNoCrashChanceByUseGuts(); // Function BattlePrototype.BattleCharacterInterface.IsNoCrashChanceByUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184670
	bool IsInfinityCrashChance(); // Function BattlePrototype.BattleCharacterInterface.IsInfinityCrashChance // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184610
	bool IsHitWeakChangeDefaultEffectInterface(); // Function BattlePrototype.BattleCharacterInterface.IsHitWeakChangeDefaultEffectInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEventCondition(); // Function BattlePrototype.BattleCharacterInterface.IsEventCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11845e0
	bool IsEnableSlashEffectInterface(struct FHCHitResult HitResult); // Function BattlePrototype.BattleCharacterInterface.IsEnableSlashEffectInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableReactionCoefficientInterface(float OutReactionSRate, float OutReactionLRate, float OutDownRate, float OutCrashRate); // Function BattlePrototype.BattleCharacterInterface.IsEnableReactionCoefficientInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDisableAtomCuePlayInterface(); // Function BattlePrototype.BattleCharacterInterface.IsDisableAtomCuePlayInterface // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11845b0
	bool IsDeadPsychicObjOnly(); // Function BattlePrototype.BattleCharacterInterface.IsDeadPsychicObjOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184580
	bool IsDeadPsychicObjComboOnly(); // Function BattlePrototype.BattleCharacterInterface.IsDeadPsychicObjComboOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184550
	bool IsDeadPhysicsAttackOnly(); // Function BattlePrototype.BattleCharacterInterface.IsDeadPhysicsAttackOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184520
	bool IsDeadLaunchAttackOnly(); // Function BattlePrototype.BattleCharacterInterface.IsDeadLaunchAttackOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11844f0
	bool IsDeadChaseAttackOnly(); // Function BattlePrototype.BattleCharacterInterface.IsDeadChaseAttackOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11844c0
	bool IsDeadBrainCrashOnly(); // Function BattlePrototype.BattleCharacterInterface.IsDeadBrainCrashOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184490
	bool IsCrashMaxWithGuts(); // Function BattlePrototype.BattleCharacterInterface.IsCrashMaxWithGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184460
	bool IsCounterWaitInterface(); // Function BattlePrototype.BattleCharacterInterface.IsCounterWaitInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsAttractSelfInterface(); // Function BattlePrototype.BattleCharacterInterface.IsAttractSelfInterface // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184400
	bool IsAttackerTargetSelf(struct FHCHitResult HitResult); // Function BattlePrototype.BattleCharacterInterface.IsAttackerTargetSelf // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11842f0
	bool IsAbsoluteVisibilityTrace(); // Function BattlePrototype.BattleCharacterInterface.IsAbsoluteVisibilityTrace // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11842c0
	struct FVector GetWeakTargetPointInterface(struct FVector AttackerPos); // Function BattlePrototype.BattleCharacterInterface.GetWeakTargetPointInterface // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetLookAtTargetLocation(); // Function BattlePrototype.BattleCharacterInterface.GetLookAtTargetLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector GetDamageReactionDirInterface(struct FHCHitResult HitResult); // Function BattlePrototype.BattleCharacterInterface.GetDamageReactionDirInterface // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t GetCharaKind(); // Function BattlePrototype.BattleCharacterInterface.GetCharaKind // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184260
	enum class ECharacterHitPriority GetCharacterHitPriorityInterface(); // Function BattlePrototype.BattleCharacterInterface.GetCharacterHitPriorityInterface // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184290
	void GetCameraStabilizeParameter(float distLockHz, float distRestoreHz, float distLockVt, float distRestoreVt); // Function BattlePrototype.BattleCharacterInterface.GetCameraStabilizeParameter // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x11840c0
	struct FVector GetAutoAimTargetLocation(); // Function BattlePrototype.BattleCharacterInterface.GetAutoAimTargetLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EAssassinAttackHit GetAssasinAttackHitType(); // Function BattlePrototype.BattleCharacterInterface.GetAssasinAttackHitType // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1184010
	bool EventStartForceEndBadStatus(); // Function BattlePrototype.BattleCharacterInterface.EventStartForceEndBadStatus // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EndNoDeadNoCrashChanceEvent(); // Function BattlePrototype.BattleCharacterInterface.EndNoDeadNoCrashChanceEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void DisEnableNoDeadTutorial(); // Function BattlePrototype.BattleCharacterInterface.DisEnableNoDeadTutorial // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1183ef0
	bool CheckEmphasisCrashGauge(struct FHCHitResult HitResult); // Function BattlePrototype.BattleCharacterInterface.CheckEmphasisCrashGauge // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float CalcUniqueDamage(struct FHCHitResult HitResult, float BaseDamage); // Function BattlePrototype.BattleCharacterInterface.CalcUniqueDamage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1183d00
	bool AddScarFromHitDamageInfoInterface(struct AActor* Actor, struct FHitDamageInfo HitDamageInfo); // Function BattlePrototype.BattleCharacterInterface.AddScarFromHitDamageInfoInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.BattleEnemyInterface
// Size: 0x28 (Inherited: 0x28)
struct UBattleEnemyInterface : UInterface {

	void UpdateOutRangeFade_Native(float ToTargetLenge, bool ForceDisp); // Function BattlePrototype.BattleEnemyInterface.UpdateOutRangeFade_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool UpdateMoveMaxSpeed(); // Function BattlePrototype.BattleEnemyInterface.UpdateMoveMaxSpeed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool UpdateFall_Native(); // Function BattlePrototype.BattleEnemyInterface.UpdateFall_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void UpdateDamageAnim_Native(bool DamageEnd, bool DamageDownEnd); // Function BattlePrototype.BattleEnemyInterface.UpdateDamageAnim_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SwitchDispCore_Native(bool DisplayOn); // Function BattlePrototype.BattleEnemyInterface.SwitchDispCore_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StoreWeakState_Native(); // Function BattlePrototype.BattleEnemyInterface.StoreWeakState_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StopCrashChanceLoopEffect_Native(); // Function BattlePrototype.BattleEnemyInterface.StopCrashChanceLoopEffect_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartVanish_Native(float VanishSec, float StartVanish, float EndVanish); // Function BattlePrototype.BattleEnemyInterface.StartVanish_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartReactionDilation_CallFromCPP(char ReactionKind, bool bAddDamage); // Function BattlePrototype.BattleEnemyInterface.StartReactionDilation_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartFallIfFlyingIF(bool bDummy); // Function BattlePrototype.BattleEnemyInterface.StartFallIfFlyingIF // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartDamageFloating_Native(); // Function BattlePrototype.BattleEnemyInterface.StartDamageFloating_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetWeakEmissiveOff_Native(struct FString WeakSlotName); // Function BattlePrototype.BattleEnemyInterface.SetWeakEmissiveOff_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetUseWaitNoInterpolation_Native(bool Use); // Function BattlePrototype.BattleEnemyInterface.SetUseWaitNoInterpolation_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetTickEnableMeshOnly(bool bMeshOnly); // Function BattlePrototype.BattleEnemyInterface.SetTickEnableMeshOnly // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetReserveAction_Native(char Action, float Param00, float Param01); // Function BattlePrototype.BattleEnemyInterface.SetReserveAction_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetLanding_Native(bool bLanding); // Function BattlePrototype.BattleEnemyInterface.SetLanding_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetIsMoveAnim_Native(bool NewIsMoveAnim); // Function BattlePrototype.BattleEnemyInterface.SetIsMoveAnim_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetIsLaunchDown_Native(bool NewIsLaunchDown); // Function BattlePrototype.BattleEnemyInterface.SetIsLaunchDown_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetIsLandCheck_Native(bool NewIsLandCheck); // Function BattlePrototype.BattleEnemyInterface.SetIsLandCheck_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetIsBrainAccess_Native(bool NewIsBrainAccess); // Function BattlePrototype.BattleEnemyInterface.SetIsBrainAccess_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetIdleMove_Native(bool IsIdle); // Function BattlePrototype.BattleEnemyInterface.SetIdleMove_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetHp_Native(int32_t HP); // Function BattlePrototype.BattleEnemyInterface.SetHp_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEnemyConsiderDownDead(bool bEnable); // Function BattlePrototype.BattleEnemyInterface.SetEnemyConsiderDownDead // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetDownTimer_Native(float NewTime); // Function BattlePrototype.BattleEnemyInterface.SetDownTimer_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetDamageCollisionDisable_Native(struct FName ClaimantName); // Function BattlePrototype.BattleEnemyInterface.SetDamageCollisionDisable_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SafeDestroy_Native(struct AActor* Actor); // Function BattlePrototype.BattleEnemyInterface.SafeDestroy_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RestoreWeakState_Native(); // Function BattlePrototype.BattleEnemyInterface.RestoreWeakState_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RestoreWeakEmissive_Native(struct FString WeakSlotName); // Function BattlePrototype.BattleEnemyInterface.RestoreWeakEmissive_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetStateReceivedExecuteAi_Native(); // Function BattlePrototype.BattleEnemyInterface.ResetStateReceivedExecuteAi_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetCore_Native(struct AActor* Enemy, bool RemoveCore); // Function BattlePrototype.BattleEnemyInterface.ResetCore_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetAction_Native(); // Function BattlePrototype.BattleEnemyInterface.ResetAction_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ReceivedNotifyAnimEnd_Native(bool Received); // Function BattlePrototype.BattleEnemyInterface.ReceivedNotifyAnimEnd_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OutputLogCrashChanceEnd_Native(); // Function BattlePrototype.BattleEnemyInterface.OutputLogCrashChanceEnd_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnEndCrashChance_Native(); // Function BattlePrototype.BattleEnemyInterface.OnEndCrashChance_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnEndAnimDieIF(bool bDummy); // Function BattlePrototype.BattleEnemyInterface.OnEndAnimDieIF // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool LeaveBrainCrashAccess_Native(struct ARSCharacterBase* Character); // Function BattlePrototype.BattleEnemyInterface.LeaveBrainCrashAccess_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void LaunchDown_Native(bool IsEnd); // Function BattlePrototype.BattleEnemyInterface.LaunchDown_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool KickCrashChanceLoopEffect_Native(); // Function BattlePrototype.BattleEnemyInterface.KickCrashChanceLoopEffect_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsWeakUiDamageHit_CallFromCPP(); // Function BattlePrototype.BattleEnemyInterface.IsWeakUiDamageHit_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsUpdateEnemyTickEnable(); // Function BattlePrototype.BattleEnemyInterface.IsUpdateEnemyTickEnable // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsUpdateEnemySpawn(); // Function BattlePrototype.BattleEnemyInterface.IsUpdateEnemySpawn // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsUniqueAroundEffectPause(); // Function BattlePrototype.BattleEnemyInterface.IsUniqueAroundEffectPause // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsTickDisableCondition(); // Function BattlePrototype.BattleEnemyInterface.IsTickDisableCondition // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsSuspendFollowAttackInterface(); // Function BattlePrototype.BattleEnemyInterface.IsSuspendFollowAttackInterface // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsSpawned(); // Function BattlePrototype.BattleEnemyInterface.IsSpawned // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsReflectContainer(); // Function BattlePrototype.BattleEnemyInterface.IsReflectContainer // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPressDown_Native(); // Function BattlePrototype.BattleEnemyInterface.IsPressDown_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPossibleTargetAttack_CallFromCPP(struct AActor* Actor); // Function BattlePrototype.BattleEnemyInterface.IsPossibleTargetAttack_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsNotFindPlayer_CallFromCPP(); // Function BattlePrototype.BattleEnemyInterface.IsNotFindPlayer_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsMotionEnd_Native(bool ReturnValue); // Function BattlePrototype.BattleEnemyInterface.IsMotionEnd_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsLaunchDown_Native(); // Function BattlePrototype.BattleEnemyInterface.IsLaunchDown_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsInvincible_Native(); // Function BattlePrototype.BattleEnemyInterface.IsInvincible_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsIgnoreLandingCheck_Native(bool bIgnoreLandingCheck); // Function BattlePrototype.BattleEnemyInterface.IsIgnoreLandingCheck_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsFlyEnemyCheck_Native(); // Function BattlePrototype.BattleEnemyInterface.IsFlyEnemyCheck_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsExecLowProcess(); // Function BattlePrototype.BattleEnemyInterface.IsExecLowProcess // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnemyStateAttack_CallFromCPP(); // Function BattlePrototype.BattleEnemyInterface.IsEnemyStateAttack_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnemySpawn_Interface(); // Function BattlePrototype.BattleEnemyInterface.IsEnemySpawn_Interface // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsEnemyLandingCheck_Native(bool bHit); // Function BattlePrototype.BattleEnemyInterface.IsEnemyLandingCheck_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnemyFalling_Interface(); // Function BattlePrototype.BattleEnemyInterface.IsEnemyFalling_Interface // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnemyDamageDown_CallFromCPP(); // Function BattlePrototype.BattleEnemyInterface.IsEnemyDamageDown_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnemyConsiderDownDead(); // Function BattlePrototype.BattleEnemyInterface.IsEnemyConsiderDownDead // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDisableUroAction_Interface(); // Function BattlePrototype.BattleEnemyInterface.IsDisableUroAction_Interface // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDisableDownMotionInterface(); // Function BattlePrototype.BattleEnemyInterface.IsDisableDownMotionInterface // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDamageMotionEnd_Native(); // Function BattlePrototype.BattleEnemyInterface.IsDamageMotionEnd_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsCheckSameCompareGroundLoaction(); // Function BattlePrototype.BattleEnemyInterface.IsCheckSameCompareGroundLoaction // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCheckLookTargetTick(struct FVector Start, struct FVector End); // Function BattlePrototype.BattleEnemyInterface.IsCheckLookTargetTick // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsCheckLookScrollTick(struct FVector Start, struct FVector End); // Function BattlePrototype.BattleEnemyInterface.IsCheckLookScrollTick // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCheckHeightChangeTick(); // Function BattlePrototype.BattleEnemyInterface.IsCheckHeightChangeTick // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsBrainSuccess_Native(); // Function BattlePrototype.BattleEnemyInterface.IsBrainSuccess_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsBrainCrashMiss_Native(bool IsMiss); // Function BattlePrototype.BattleEnemyInterface.IsBrainCrashMiss_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsBossEnemy_CallFromCPP(); // Function BattlePrototype.BattleEnemyInterface.IsBossEnemy_CallFromCPP // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	float GetUniqueTickEnableRange(); // Function BattlePrototype.BattleEnemyInterface.GetUniqueTickEnableRange // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetTopHeightLocation(); // Function BattlePrototype.BattleEnemyInterface.GetTopHeightLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct AActor* GetTargetCharacter_Native(); // Function BattlePrototype.BattleEnemyInterface.GetTargetCharacter_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct USearchingComponent* GetSearchingComponent_Native(); // Function BattlePrototype.BattleEnemyInterface.GetSearchingComponent_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool GetPressDownLoop_Native(); // Function BattlePrototype.BattleEnemyInterface.GetPressDownLoop_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool GetNewDamageFloating_Native(); // Function BattlePrototype.BattleEnemyInterface.GetNewDamageFloating_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetLostData_Native(float LostMoveTimeMin, float LostMoveTimeMax, float LostMoveRotationRate, float SpeedScale, bool IsNoMoveAnim); // Function BattlePrototype.BattleEnemyInterface.GetLostData_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetLostActionInfoList_Native(struct TArray<struct FEmLostActionInfo> LostActionInfo); // Function BattlePrototype.BattleEnemyInterface.GetLostActionInfoList_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool GetIsLandCheck(); // Function BattlePrototype.BattleEnemyInterface.GetIsLandCheck // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool GetIsJumpEnd(); // Function BattlePrototype.BattleEnemyInterface.GetIsJumpEnd // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetHitObjectType_Native(struct TArray<enum class EObjectTypeQuery> ObjectType); // Function BattlePrototype.BattleEnemyInterface.GetHitObjectType_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UHateTargetComponent* GetHateTarget_Native(); // Function BattlePrototype.BattleEnemyInterface.GetHateTarget_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool GetFall_Native(); // Function BattlePrototype.BattleEnemyInterface.GetFall_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool GetFailedFall_Native(); // Function BattlePrototype.BattleEnemyInterface.GetFailedFall_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EEnemyTribe GetEnemyTribe(); // Function BattlePrototype.BattleEnemyInterface.GetEnemyTribe // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UEnemyScriptComponent* GetEnemyScriptComponent(); // Function BattlePrototype.BattleEnemyInterface.GetEnemyScriptComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct UEnemyAnimControllerComponent* GetEnemyAnimControllerComponent(); // Function BattlePrototype.BattleEnemyInterface.GetEnemyAnimControllerComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct UEnemyAiComponentBase* GetEnemyAiComponent(); // Function BattlePrototype.BattleEnemyInterface.GetEnemyAiComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	enum class EnemyMoveAnimKind GetDownUpMoveAnimKind_Native(); // Function BattlePrototype.BattleEnemyInterface.GetDownUpMoveAnimKind_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	float GetDownTimer_Native(); // Function BattlePrototype.BattleEnemyInterface.GetDownTimer_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool GetDebugEnemyDownInfinity_Native(); // Function BattlePrototype.BattleEnemyInterface.GetDebugEnemyDownInfinity_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetDamageHitDirectionIF(); // Function BattlePrototype.BattleEnemyInterface.GetDamageHitDirectionIF // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct AActor* GetCurrentTarget(); // Function BattlePrototype.BattleEnemyInterface.GetCurrentTarget // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetCurrentActionTime_Native(float ActionTime); // Function BattlePrototype.BattleEnemyInterface.GetCurrentActionTime_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UCapsuleComponent* GetCapsuleComponent_Native(); // Function BattlePrototype.BattleEnemyInterface.GetCapsuleComponent_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void FlyDown_Native(bool IsEnd); // Function BattlePrototype.BattleEnemyInterface.FlyDown_Native // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EntryBrainCrashAccess_Native(struct ARSCharacterBase* Character); // Function BattlePrototype.BattleEnemyInterface.EntryBrainCrashAccess_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EnemyUpdateEvDitherNative(float DeltaSec); // Function BattlePrototype.BattleEnemyInterface.EnemyUpdateEvDitherNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EnemyStartEvDitherNative(bool bDisp, float DitherTime); // Function BattlePrototype.BattleEnemyInterface.EnemyStartEvDitherNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EnemyEndEvDitherNative(bool bDisp); // Function BattlePrototype.BattleEnemyInterface.EnemyEndEvDitherNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EndDamageFloating_Native(); // Function BattlePrototype.BattleEnemyInterface.EndDamageFloating_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EnableFitGroundTmp_Native(); // Function BattlePrototype.BattleEnemyInterface.EnableFitGroundTmp_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EnableAllWeak_Native(bool bEnable); // Function BattlePrototype.BattleEnemyInterface.EnableAllWeak_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DropFlyingEnemy_Native(struct AActor* Enemy); // Function BattlePrototype.BattleEnemyInterface.DropFlyingEnemy_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DisableFitGroundTmp_Native(); // Function BattlePrototype.BattleEnemyInterface.DisableFitGroundTmp_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DeadStart_Native(); // Function BattlePrototype.BattleEnemyInterface.DeadStart_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DamageMotionEnd_Native(float DeltaTime); // Function BattlePrototype.BattleEnemyInterface.DamageMotionEnd_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DamageFloatEnd_Native(); // Function BattlePrototype.BattleEnemyInterface.DamageFloatEnd_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckSASHologramAttack_Native(enum class ESASHologramAttackTiming Timing, struct ARSCharacterBase* RequestCharacter); // Function BattlePrototype.BattleEnemyInterface.CheckSASHologramAttack_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckNpcDrive_Native(enum class ENpcDriveCheckType CheckType, struct AActor* EnemyActor); // Function BattlePrototype.BattleEnemyInterface.CheckNpcDrive_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CameraAttentionEnd_Native(struct UCurveFloat* FovCurveOut); // Function BattlePrototype.BattleEnemyInterface.CameraAttentionEnd_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CallFuncDamageDownStart_Native(); // Function BattlePrototype.BattleEnemyInterface.CallFuncDamageDownStart_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CallFuncDamageDownLoop_Native(); // Function BattlePrototype.BattleEnemyInterface.CallFuncDamageDownLoop_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CallFuncDamageDownEnd_Native(); // Function BattlePrototype.BattleEnemyInterface.CallFuncDamageDownEnd_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CallDead_Native(); // Function BattlePrototype.BattleEnemyInterface.CallDead_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool BrainCrashLock_Native(); // Function BattlePrototype.BattleEnemyInterface.BrainCrashLock_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.BattlefieldFenceInterface
// Size: 0x28 (Inherited: 0x28)
struct UBattlefieldFenceInterface : UInterface {

	void SetBattlefieldVisibleForce(bool Visible); // Function BattlePrototype.BattlefieldFenceInterface.SetBattlefieldVisibleForce // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetBattlefieldEnable(bool Enable); // Function BattlePrototype.BattlefieldFenceInterface.SetBattlefieldEnable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct USplineComponent* GetBattlefieldSpline(); // Function BattlePrototype.BattlefieldFenceInterface.GetBattlefieldSpline // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool GetBattlefieldEnable(); // Function BattlePrototype.BattlefieldFenceInterface.GetBattlefieldEnable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.BattlefieldManager
// Size: 0x310 (Inherited: 0x230)
struct ABattlefieldManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct FMulticastInlineDelegate DispatchBattleFieldBegin; // 0x238(0x10)
	struct FMulticastInlineDelegate DispatchBattleFieldEnd; // 0x248(0x10)
	struct FMulticastInlineDelegate DispatchBattleFieldRushEnd; // 0x258(0x10)
	struct TMap<struct FString, struct FBattlefieldInfo> CurrentBFInfos; // 0x268(0x50)
	int32_t FenceLotterySeed; // 0x2b8(0x04)
	struct FRandomStream RandomStream; // 0x2bc(0x08)
	bool IsActiveEvent; // 0x2c4(0x01)
	char pad_2C5[0x3]; // 0x2c5(0x03)
	struct AMakeEventActor* MakeEventActorClass; // 0x2c8(0x08)
	struct AMakeEventActor* MakeEventActor; // 0x2d0(0x08)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct TArray<struct AActor*> AllFenceActors; // 0x2e0(0x10)
	char pad_2F0[0x8]; // 0x2f0(0x08)
	struct TArray<struct AActor*> AllTriggerActors; // 0x2f8(0x10)
	char pad_308[0x8]; // 0x308(0x08)

	void UpdateAtStartArea(); // Function BattlePrototype.BattlefieldManager.UpdateAtStartArea // (Final|Native|Public|BlueprintCallable) // @ game+0x118b8f0
	bool StartWipeoutBattlefield(int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.StartWipeoutBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x118b860
	bool StartEventInBattleField(struct AMakeEventActor* MakeEventActorClass); // Function BattlePrototype.BattlefieldManager.StartEventInBattleField // (Final|Native|Public|BlueprintCallable) // @ game+0x118b7d0
	bool StartEventBattlefield(int32_t BFGroupID, int32_t SubGroupID); // Function BattlePrototype.BattlefieldManager.StartEventBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x118b710
	bool StartBattlefield(enum class EBattlefieldEventType EventType, int32_t BFGroupID, int32_t SubGroupID, struct TArray<struct FBattlefieldTutorialInfo> AdditionalTutorialInfo, struct AMakeEventActor* MakeEventActorClass, int32_t TutorialGroupID, int32_t TutorialSubGroupID, float FenceBattleRate, struct FString SeedString, bool IsOnceBattle); // Function BattlePrototype.BattlefieldManager.StartBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x118b390
	bool SetFenceEnableForce(int32_t fenceID, bool Enable); // Function BattlePrototype.BattlefieldManager.SetFenceEnableForce // (Final|Native|Public|BlueprintCallable) // @ game+0x118b210
	bool SetFenceEnable(int32_t fenceID, bool Enable); // Function BattlePrototype.BattlefieldManager.SetFenceEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x118b150
	void SetEnableEnemyOutField(bool Enable, int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.SetEnableEnemyOutField // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x118b080
	void SetCurrentLocationAndArea(int32_t LocationId, int32_t areaId); // Function BattlePrototype.BattlefieldManager.SetCurrentLocationAndArea // (Final|Native|Public|BlueprintCallable) // @ game+0x118afc0
	bool SetCurrentBattlefieldInfos(struct TMap<struct FString, struct FBattlefieldInfo> Infos); // Function BattlePrototype.BattlefieldManager.SetCurrentBattlefieldInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x118ae70
	bool SetBattlefieldInfo(int32_t BFGroupID, struct FBattlefieldInfo BFInfo); // Function BattlePrototype.BattlefieldManager.SetBattlefieldInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x118ad40
	bool ResetFenceRandomSeed(); // Function BattlePrototype.BattlefieldManager.ResetFenceRandomSeed // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118ac80
	bool RepopBattlefieldInfos(int32_t LocationId, int32_t areaId, struct FString SeedString); // Function BattlePrototype.BattlefieldManager.RepopBattlefieldInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x118ab20
	bool RepopBattlefieldEnemy(int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.RepopBattlefieldEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x118aa90
	bool OverwriteTmpBfInfo(int32_t GroupID, struct FString TriggerName); // Function BattlePrototype.BattlefieldManager.OverwriteTmpBfInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x118a700
	bool OnSave_SaveData(); // Function BattlePrototype.BattlefieldManager.OnSave_SaveData // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1173a80
	bool OnLoad_SaveData(); // Function BattlePrototype.BattlefieldManager.OnLoad_SaveData // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118a6d0
	bool IsStartBattlefield(int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.IsStartBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x118a640
	bool IsPlayerInFence(int32_t GroupID); // Function BattlePrototype.BattlefieldManager.IsPlayerInFence // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x118a5b0
	bool IsInSplineLoopDetail(struct FVector Pos, struct USplineComponent* Spline); // Function BattlePrototype.BattlefieldManager.IsInSplineLoopDetail // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x118a4d0
	bool IsInSplineLoop(struct FVector Pos, struct USplineComponent* Spline); // Function BattlePrototype.BattlefieldManager.IsInSplineLoop // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x118a3f0
	bool IsInFence(struct FVector Pos, int32_t GroupID); // Function BattlePrototype.BattlefieldManager.IsInFence // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x118a310
	bool IsFenceEnabled(int32_t GroupID); // Function BattlePrototype.BattlefieldManager.IsFenceEnabled // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118a240
	bool IsExistBattlefieldEnemiesStrictly(int32_t BFGroupID, int32_t SubGroupID); // Function BattlePrototype.BattlefieldManager.IsExistBattlefieldEnemiesStrictly // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118a140
	bool IsExistBattlefieldEnemies(int32_t BFGroupID, int32_t SubGroupID, int32_t FirstSubGroup); // Function BattlePrototype.BattlefieldManager.IsExistBattlefieldEnemies // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x118a030
	bool IsCharacterInCurrentBattleField(struct ARSCharacterBase* InCharacter); // Function BattlePrototype.BattlefieldManager.IsCharacterInCurrentBattleField // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1189fa0
	bool IsCharacterInBattleField(struct FBattlefieldInfo InInfo, struct ARSCharacterBase* InCharacter); // Function BattlePrototype.BattlefieldManager.IsCharacterInBattleField // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1189e60
	bool IsBattlefieldWillAppear(int32_t GroupID, float FenceBattleRate, struct FString SeedString, struct FString TargetName); // Function BattlePrototype.BattlefieldManager.IsBattlefieldWillAppear // (Final|Native|Public|BlueprintCallable) // @ game+0x1189c80
	bool IsAnyFenceEnabled(); // Function BattlePrototype.BattlefieldManager.IsAnyFenceEnabled // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174420
	bool InitializeAtStartBattlefield(struct FBattlefieldInfo currentBFInfo); // Function BattlePrototype.BattlefieldManager.InitializeAtStartBattlefield // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1189b60
	void InitializeAtStartArea(); // Function BattlePrototype.BattlefieldManager.InitializeAtStartArea // (Final|Native|Public|BlueprintCallable) // @ game+0x1189b40
	bool HaveDestroyedBattlefield(int32_t BFGroupID, struct FString TargetName); // Function BattlePrototype.BattlefieldManager.HaveDestroyedBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x1189a20
	struct FBattlefieldInfo GetCurrentBattlefieldInfo(bool Exist); // Function BattlePrototype.BattlefieldManager.GetCurrentBattlefieldInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1189920
	void GetBfFenceStatus(int32_t GroupID, bool Exist, bool IsVisible); // Function BattlePrototype.BattlefieldManager.GetBfFenceStatus // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1189800
	struct TArray<struct AActor*> GetBfFenceAll(int32_t GroupID); // Function BattlePrototype.BattlefieldManager.GetBfFenceAll // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1189730
	struct AActor* GetBfFence(int32_t GroupID); // Function BattlePrototype.BattlefieldManager.GetBfFence // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11896a0
	void GetBattlefieldInfo(int32_t BFGroupID, struct FBattlefieldInfo BFInfo, bool IsExist); // Function BattlePrototype.BattlefieldManager.GetBattlefieldInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1189520
	void FinalizeAtStartArea(); // Function BattlePrototype.BattlefieldManager.FinalizeAtStartArea // (Final|Native|Public|BlueprintCallable) // @ game+0x1189390
	bool EndEventBattlefield(int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.EndEventBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x1189270
	bool EndBattlefieldForce(int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.EndBattlefieldForce // (Final|Native|Public|BlueprintCallable) // @ game+0x11891e0
	bool EndBattlefield(int32_t BFGroupID); // Function BattlePrototype.BattlefieldManager.EndBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x1189150
	bool EndAllBattlefieldForce(); // Function BattlePrototype.BattlefieldManager.EndAllBattlefieldForce // (Final|Native|Public|BlueprintCallable) // @ game+0x1189120
	bool BroadcastBattlefieldRushEnd(int32_t GroupID, int32_t SubGroupID); // Function BattlePrototype.BattlefieldManager.BroadcastBattlefieldRushEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1188ff0
};

// Class BattlePrototype.BattleLogBuffer
// Size: 0x38 (Inherited: 0x28)
struct UBattleLogBuffer : UObject {
	struct TArray<struct FBattleLogParam> battleLogBufferArray; // 0x28(0x10)

	bool IsExistLogBuffer(); // Function BattlePrototype.BattleLogBuffer.IsExistLogBuffer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118a210
	void Initialize(); // Function BattlePrototype.BattleLogBuffer.Initialize // (Final|Native|Public) // @ game+0x11890e0
	struct TArray<struct FBattleLogParam> GetBattleLogBuffer(); // Function BattlePrototype.BattleLogBuffer.GetBattleLogBuffer // (Final|Native|Public|BlueprintCallable) // @ game+0x1189460
	void Clear(); // Function BattlePrototype.BattleLogBuffer.Clear // (Final|Native|Public|BlueprintCallable) // @ game+0x11890e0
	void AddBattleLogBuffer(struct FBattleLogParam Param); // Function BattlePrototype.BattleLogBuffer.AddBattleLogBuffer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1188e90
};

// Class BattlePrototype.BattleManager
// Size: 0x300 (Inherited: 0x230)
struct ABattleManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct TArray<struct ARSCharacterBase*> _battleActorList; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)
	struct TArray<struct FName> _ForceBattleList; // 0x250(0x10)
	float BATTLEFIELD_SPEEDRUN_TIME; // 0x260(0x04)
	int32_t BATTLEFIELD_HORDE_ENEMY_NUM; // 0x264(0x04)
	char pad_268[0x8]; // 0x268(0x08)
	struct TArray<struct FActorBattleEndLogData> _BattleLogDataList; // 0x270(0x10)
	int32_t OneFrameHitEffectMax; // 0x280(0x04)
	int32_t HitEffectPoolNum_Other; // 0x284(0x04)
	int32_t HitEffectPoolNum_Npc; // 0x288(0x04)
	int32_t HitEffectPoolNum_Enemy; // 0x28c(0x04)
	int32_t HitEffectPoolNum_PlayerDamage; // 0x290(0x04)
	int32_t HitEffectPoolNum_Player; // 0x294(0x04)
	int32_t HitEffectPoolNum_Special; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct TArray<struct FPoolHitEffectData> _HitEffectPool_Other; // 0x2a0(0x10)
	struct TArray<struct FPoolHitEffectData> _HitEffectPool_Npc; // 0x2b0(0x10)
	struct TArray<struct FPoolHitEffectData> _HitEffectPool_Enemy; // 0x2c0(0x10)
	struct TArray<struct FPoolHitEffectData> _HitEffectPool_PlayerDamage; // 0x2d0(0x10)
	struct TArray<struct FPoolHitEffectData> _HitEffectPool_Player; // 0x2e0(0x10)
	struct TArray<struct FPoolHitEffectData> _HitEffectPool_Special; // 0x2f0(0x10)

	void StartTutorialOperation(struct FName helpTutoID, float delaySec); // Function BattlePrototype.BattleManager.StartTutorialOperation // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetForceBattle(bool bForce, struct FName ClaimantName); // Function BattlePrototype.BattleManager.SetForceBattle // (Final|Native|Public|BlueprintCallable) // @ game+0x118b2d0
	void SetBattleMode(bool bBattle); // Function BattlePrototype.BattleManager.SetBattleMode // (Final|Native|Protected|BlueprintCallable) // @ game+0x118acb0
	void RemoveBattleActor(struct ARSCharacterBase* Actor, enum class EReasonBattleEnd reason); // Function BattlePrototype.BattleManager.RemoveBattleActor // (Final|Native|Public|BlueprintCallable) // @ game+0x118a9d0
	void PoolHitEffectData(struct AActor* HitActor, struct FHCHitResult HitResult, bool bNoLimit); // Function BattlePrototype.BattleManager.PoolHitEffectData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x118a850
	bool PlayBrainTalkStealthLost(); // Function BattlePrototype.BattleManager.PlayBrainTalkStealthLost // (Final|Native|Public|BlueprintCallable) // @ game+0x118a820
	bool IsForceBattle(); // Function BattlePrototype.BattleManager.IsForceBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118a2e0
	bool IsBattleMode(); // Function BattlePrototype.BattleManager.IsBattleMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1189c50
	struct UBattleSituationComponent* GetSituation(); // Function BattlePrototype.BattleManager.GetSituation // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	struct UBattleSettingComponent* GetBattleSetting(); // Function BattlePrototype.BattleManager.GetBattleSetting // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	struct TArray<struct ARSCharacterBase*> GetBattleActorList(); // Function BattlePrototype.BattleManager.GetBattleActorList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11893d0
	void ForceEndRecordBattleLog(); // Function BattlePrototype.BattleManager.ForceEndRecordBattleLog // (Final|Native|Public|BlueprintCallable) // @ game+0x11893b0
	void EndRecordBattleLog(bool bBattleField); // Function BattlePrototype.BattleManager.EndRecordBattleLog // (Final|Native|Public|BlueprintCallable) // @ game+0x1189300
	void ClearBattleActor(); // Function BattlePrototype.BattleManager.ClearBattleActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1189100
	bool CheckBattleLog_StealthLost(); // Function BattlePrototype.BattleManager.CheckBattleLog_StealthLost // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11890b0
	void BeginRecordBattleLog(bool bBattleField); // Function BattlePrototype.BattleManager.BeginRecordBattleLog // (Final|Native|Public|BlueprintCallable) // @ game+0x1188f60
	void AddBattleActor(struct ARSCharacterBase* Actor); // Function BattlePrototype.BattleManager.AddBattleActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1188e10
};

// Class BattlePrototype.BattlePrototypeUtility
// Size: 0x28 (Inherited: 0x28)
struct UBattlePrototypeUtility : UObject {

	void SetNotSaveLoadDebugingParameter(bool Flag); // Function BattlePrototype.BattlePrototypeUtility.SetNotSaveLoadDebugingParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x118f0a0
	void SetDebugAreaSceneSelectable(bool Flag); // Function BattlePrototype.BattlePrototypeUtility.SetDebugAreaSceneSelectable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x118f0a0
	bool IsNotSaveLoadDebugingParameter(); // Function BattlePrototype.BattlePrototypeUtility.IsNotSaveLoadDebugingParameter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7af460
	bool IsMasterReleaseVersion(); // Function BattlePrototype.BattlePrototypeUtility.IsMasterReleaseVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7b7230
	bool IsEnableUserReview202005EOM(); // Function BattlePrototype.BattlePrototypeUtility.IsEnableUserReview202005EOM // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0xad4510
	bool IsDebugSoundSpawnDisable(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugSoundSpawnDisable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e270
	bool IsDebugSASInfinity(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugSASInfinity // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e240
	bool IsDebugSASBetaEnable(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugSASBetaEnable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e210
	bool IsDebugPlayerInvincible(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugPlayerInvincible // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e1e0
	bool IsDebugParticleSpawnDisable(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugParticleSpawnDisable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e1b0
	bool IsDebugEnemyParameter(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugEnemyParameter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e180
	bool IsDebugEnemyInvincible(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugEnemyInvincible // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e150
	bool IsDebugEnemyDrawData(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugEnemyDrawData // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e120
	bool IsDebugEnemyDamagePartHitPrint(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugEnemyDamagePartHitPrint // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e0f0
	bool IsDebugDrawTargetSearch(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugDrawTargetSearch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e0c0
	bool IsDebugDrawPrintString(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugDrawPrintString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e090
	bool IsDebugDrawNonLockonTargetSearch(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugDrawNonLockonTargetSearch // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e060
	bool IsDebugDrawAttackCollision(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugDrawAttackCollision // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e030
	bool IsDebugDrawAI(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugDrawAI // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118e000
	bool IsDebugDirectPause(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugDirectPause // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118dfd0
	bool IsDebugBrainCrashOpend(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugBrainCrashOpend // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118dfa0
	bool IsDebugAreaSceneSelectable(); // Function BattlePrototype.BattlePrototypeUtility.IsDebugAreaSceneSelectable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7b7230
	int32_t GetMasterReleaseVersion(); // Function BattlePrototype.BattlePrototypeUtility.GetMasterReleaseVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118dea0
	int32_t GetDebugBadState(); // Function BattlePrototype.BattlePrototypeUtility.GetDebugBadState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118ddc0
	void getCallStackBP(struct FString Output); // Function BattlePrototype.BattlePrototypeUtility.getCallStackBP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x118f1b0
	void getCallStack(struct FString Output); // Function BattlePrototype.BattlePrototypeUtility.getCallStack // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x118f1b0
	struct FIntPoint GetAppBaseResolution(); // Function BattlePrototype.BattlePrototypeUtility.GetAppBaseResolution // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x118d640
	void DrawDebugPrintString(struct UObject* CallingObj, struct FString inString, float ScreenX, float ScreenY, struct AActor* TargetActor, struct FLinearColor TextColor, float Scale); // Function BattlePrototype.BattlePrototypeUtility.DrawDebugPrintString // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x118d320
};

// Class BattlePrototype.BattleSettingComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UBattleSettingComponent : UActorComponent {
	float AttackExPsychicRateForArmor; // 0xc0(0x04)
	int32_t EnemyLockOnMax; // 0xc4(0x04)
	int32_t EnemyAttackActionMax; // 0xc8(0x04)
	float WinceAccumulationStopSeconds; // 0xcc(0x04)
	float KnockBackAccumulationStopSeconds; // 0xd0(0x04)
	float DownAccumulationStopSeconds; // 0xd4(0x04)

	void SetAttackExPsychicRateForArmor(float Value); // Function BattlePrototype.BattleSettingComponent.SetAttackExPsychicRateForArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x118eee0
	float GetWinceAccumationStopSeconds(); // Function BattlePrototype.BattleSettingComponent.GetWinceAccumationStopSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118def0
	float GetKnockBackAccumationStopSeconds(); // Function BattlePrototype.BattleSettingComponent.GetKnockBackAccumationStopSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118de70
	int32_t GetEnemyLockOnMax(); // Function BattlePrototype.BattleSettingComponent.GetEnemyLockOnMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118de40
	int32_t GetEnemyAttackActionMax(); // Function BattlePrototype.BattleSettingComponent.GetEnemyAttackActionMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118de10
	float GetDownAccumationStopSeconds(); // Function BattlePrototype.BattleSettingComponent.GetDownAccumationStopSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118dde0
	float GetAttackExPsychicRateForArmor(); // Function BattlePrototype.BattleSettingComponent.GetAttackExPsychicRateForArmor // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x118d680
};

// Class BattlePrototype.BattleSituationComponent
// Size: 0xf8 (Inherited: 0xc0)
struct UBattleSituationComponent : UActorComponent {
	struct FMulticastInlineDelegate OnChangeSituation; // 0xc0(0x10)
	float IgnoreChangeSituationRemainTimer; // 0xd0(0x04)
	float NormalSituationRemainTimer; // 0xd4(0x04)
	float IgnoreChangeSituationTime; // 0xd8(0x04)
	float ChangeSituationTime; // 0xdc(0x04)
	enum class EBattleSituationType SituationType; // 0xe0(0x01)
	char pad_E1[0x17]; // 0xe1(0x17)

	void OnAction(struct FActionParameter Parameter); // Function BattlePrototype.BattleSituationComponent.OnAction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118e2a0
	void GetSituationParameter(enum class EBattleSituationActionType ActionType, float RemainTime, int32_t Priority); // Function BattlePrototype.BattleSituationComponent.GetSituationParameter // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	enum class EBattleSituationType GetSituation(); // Function BattlePrototype.BattleSituationComponent.GetSituation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118ded0
	void ChangeSituation(enum class EBattleSituationType Type); // Function BattlePrototype.BattleSituationComponent.ChangeSituation // (Final|Native|Public|BlueprintCallable) // @ game+0x118d2a0
};

// Class BattlePrototype.BlendableVolume
// Size: 0x288 (Inherited: 0x268)
struct ABlendableVolume : AVolume {
	char pad_268[0xc]; // 0x268(0x0c)
	float Priority; // 0x274(0x04)
	float BlendRadius; // 0x278(0x04)
	float BlendWeight; // 0x27c(0x04)
	char bEnabled : 1; // 0x280(0x01)
	char bUnbound : 1; // 0x280(0x01)
	char pad_280_2 : 6; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)
};

// Class BattlePrototype.BlendableVolumeManager
// Size: 0x248 (Inherited: 0x230)
struct ABlendableVolumeManager : AActor {
	char pad_230[0x18]; // 0x230(0x18)

	void BlueprintAddCalcVolume(struct ABlendableVolume* Volume, float Weight); // Function BattlePrototype.BlendableVolumeManager.BlueprintAddCalcVolume // (Event|Protected|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.BlownAwayComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UBlownAwayComponent : UActorComponent {
	bool _isBlowOnDamage; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float _guardBlowPowerRate; // 0xc4(0x04)
	char pad_C8[0x10]; // 0xc8(0x10)

	void SetIsBlowOnDamage(bool blowEnable); // Function BattlePrototype.BlownAwayComponent.SetIsBlowOnDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x118f120
	struct UBlownAwayComponent* GetBlownAwayComponentFromActor(struct AActor* Actor); // Function BattlePrototype.BlownAwayComponent.GetBlownAwayComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x118dd40
	struct FVector GetBlowImpulse(struct AActor* attackActor, struct FRotator blowAngle, float blowPower); // Function BattlePrototype.BlownAwayComponent.GetBlowImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x118dc00
	void AddDamageBlowImpulse(struct FHCHitResult HitResult, bool IsGuard); // Function BattlePrototype.BlownAwayComponent.AddDamageBlowImpulse // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x118d150
};

// Class BattlePrototype.BrainCrashFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBrainCrashFunctionLibrary : UBlueprintFunctionLibrary {

	void SetBCSafePointAllowRotationBit(struct FBrainCrashSafePoint RefSafePoint, int32_t EnemyIndex, int32_t AllowRotateBit); // Function BattlePrototype.BrainCrashFunctionLibrary.SetBCSafePointAllowRotationBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x118ef60
	void SearchBCSafePointList(bool HitNearLocation, struct FTransform NearLocationTransform, float NearLocationLength, bool HitNearAngle, struct FTransform NearAngleTransform, float NearAngleLength, struct TArray<struct FBrainCrashSafePoint> SafePoints, struct TArray<struct USplineMeshComponent*> BattleFieldMeshComps, struct UBrainCrashParam* Param, struct FBrainCrashSequenceSettings SequencerSetting, int32_t RotationAngle, int32_t EnemyIndex, struct FVector Location, struct FVector SequencerCenterLocation, float TargetRawDir, float TargetNormalizedDir); // Function BattlePrototype.BrainCrashFunctionLibrary.SearchBCSafePointList // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x118e880
	void SearchBCSafePoint(bool HitNearLocation, struct FTransform NearLocationTransform, float NearLocationLength, bool HitNearAngle, struct FTransform NearAngleTransform, float NearAngleLength, float NearAngleAngle, struct FBrainCrashSafePoint SafePoints, struct UBrainCrashParam* Param, int32_t RotationAngle, int32_t EnemyIndex, struct FVector Location, struct FVector SequencerCenterLocation, float TargetRawDir, float TargetNormalizedDir); // Function BattlePrototype.BrainCrashFunctionLibrary.SearchBCSafePoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x118e320
	bool IsBCSafePointAllowAllRotation(int32_t RotationBit); // Function BattlePrototype.BrainCrashFunctionLibrary.IsBCSafePointAllowAllRotation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x118df20
	struct FTransform GetBCSafePointCylinderTransform(struct FVector Location, struct FBrainCrashSequenceSettingsData SeqenceSetting, float HeightFloating, float Scale); // Function BattlePrototype.BrainCrashFunctionLibrary.GetBCSafePointCylinderTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x118da20
	struct FTransform GetBCSafePointBoxTransform(struct FVector Location, struct FBrainCrashSequenceSettingsData SeqenceSetting, float RotationYaw, float HeightFloating, float Scale); // Function BattlePrototype.BrainCrashFunctionLibrary.GetBCSafePointBoxTransform // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x118d800
	int32_t GetBCSafePointAllowRotationBit(struct FBrainCrashSafePoint SafePoint, int32_t EnemyIndex); // Function BattlePrototype.BrainCrashFunctionLibrary.GetBCSafePointAllowRotationBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x118d6e0
	int32_t GetBCSafePointAllowAllRotation(); // Function BattlePrototype.BrainCrashFunctionLibrary.GetBCSafePointAllowAllRotation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x118d6b0
	void EditorSetBCSequenceSettingsFromJSONString(struct UDataTable* DataTable, struct FString JsonString); // Function BattlePrototype.BrainCrashFunctionLibrary.EditorSetBCSequenceSettingsFromJSONString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x118d570
};

// Class BattlePrototype.BrainCrashManager
// Size: 0x300 (Inherited: 0x230)
struct ABrainCrashManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	bool bEmptyTriggerTransform; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
	struct FTransform LastTriggerTransform; // 0x240(0x30)
	char pad_270[0x90]; // 0x270(0x90)

	void SetupSafePointGroup(struct UBrainCrashLocationSettings* LocationSettings, bool ForceUpdate); // Function BattlePrototype.BrainCrashManager.SetupSafePointGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x11935f0
	bool SearchUniqueFinishEnemyLocation(struct FTransform OutEnmeyTransform, struct FTransform SeqeuncerEnemyTransform, struct FTransform SeqeuncerPlayerTransform, struct FTransform PlayerTransform, struct TArray<struct FVector> CollisionCheckOffset, int32_t CollisionCheckRadius, struct TArray<enum class EObjectTypeQuery> CollisionObjectTypes, enum class EDrawDebugTrace CollisionDebugType); // Function BattlePrototype.BrainCrashManager.SearchUniqueFinishEnemyLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1192dc0
	struct ABrainCrashSettingVolume* GetTriggerTransformVolume(); // Function BattlePrototype.BrainCrashManager.GetTriggerTransformVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x8519c0
	bool GetTriggerTransform(struct FTransform TriggerTransform); // Function BattlePrototype.BrainCrashManager.GetTriggerTransform // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11929f0
	struct TArray<struct FBrainCrashSafePoint> GetSafePointGroupPointsFromUnbound(struct UBrainCrashLocationSettings* LocationSettings); // Function BattlePrototype.BrainCrashManager.GetSafePointGroupPointsFromUnbound // (Final|Native|Public|BlueprintCallable) // @ game+0x1192910
	struct TArray<struct FBrainCrashSafePoint> GetSafePointGroupPointsFromID(struct UBrainCrashLocationSettings* LocationSettings, int32_t SafePointID); // Function BattlePrototype.BrainCrashManager.GetSafePointGroupPointsFromID // (Final|Native|Public|BlueprintCallable) // @ game+0x1192800
	struct TArray<struct FBrainCrashSafePoint> GetSafePointGroupPoints(struct UBrainCrashLocationSettings* LocationSettings); // Function BattlePrototype.BrainCrashManager.GetSafePointGroupPoints // (Final|Native|Public|BlueprintCallable) // @ game+0x1192720
	int32_t GetSafePointGroupPlayerID(struct UBrainCrashLocationSettings* LocationSettings); // Function BattlePrototype.BrainCrashManager.GetSafePointGroupPlayerID // (Final|Native|Public|BlueprintCallable) // @ game+0x1192690
	bool CheckUseCutin(); // Function BattlePrototype.BrainCrashManager.CheckUseCutin // (Final|Native|Public|BlueprintCallable) // @ game+0x11919e0
};

// Class BattlePrototype.BrainCrashParam
// Size: 0x70 (Inherited: 0x30)
struct UBrainCrashParam : UDataAsset {
	float CameraInterpStartTime; // 0x30(0x04)
	enum class EViewTargetBlendFunction CameraInterpStartFunc; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float CameraInterpStartEaseExp; // 0x38(0x04)
	float CameraInterpFinishTime; // 0x3c(0x04)
	enum class EViewTargetBlendFunction CameraInterpFinishFunc; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	float CameraInterpFinishEaseExp; // 0x44(0x04)
	float DitherHiddenSeconds; // 0x48(0x04)
	float SafePointPriorityAngleLength; // 0x4c(0x04)
	float SafePointPriorityAngle; // 0x50(0x04)
	float SafePointLimitLength; // 0x54(0x04)
	float SafePointLimitAngle; // 0x58(0x04)
	float SafePointLimitHeight; // 0x5c(0x04)
	float GeneralDamageSeconds; // 0x60(0x04)
	float GeneralDamageMaxIntervalSeconds; // 0x64(0x04)
	float UniqueWaitSecdons; // 0x68(0x04)
	char pad_6C[0x4]; // 0x6c(0x04)
};

// Class BattlePrototype.BrainCrashLocationSettings
// Size: 0x40 (Inherited: 0x30)
struct UBrainCrashLocationSettings : UDataAsset {
	struct TArray<struct FBrainCrashSafePoint> SafePoints; // 0x30(0x10)
};

// Class BattlePrototype.BrainCrashPointGroupVolume
// Size: 0x288 (Inherited: 0x268)
struct ABrainCrashPointGroupVolume : AVolume {
	int32_t GroupID; // 0x268(0x04)
	int32_t Priority; // 0x26c(0x04)
	bool bEnabled; // 0x270(0x01)
	bool bUnbound; // 0x271(0x01)
	char pad_272[0x16]; // 0x272(0x16)

	void OnActorEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.BrainCrashPointGroupVolume.OnActorEndOverlapFunc // (Final|Native|Public) // @ game+0x1192d00
	void OnActorBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.BrainCrashPointGroupVolume.OnActorBeginOverlapFunc // (Final|Native|Public) // @ game+0x1192c40
};

// Class BattlePrototype.BrainCrashSafePointConfigVolume
// Size: 0x270 (Inherited: 0x268)
struct ABrainCrashSafePointConfigVolume : AVolume {
	bool bDisableMakePoint; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
};

// Class BattlePrototype.BrainCrashSettingVolume
// Size: 0x2b0 (Inherited: 0x268)
struct ABrainCrashSettingVolume : AVolume {
	char pad_268[0x8]; // 0x268(0x08)
	struct FTransform TriggerTransform; // 0x270(0x30)
	int32_t Priority; // 0x2a0(0x04)
	bool bEnabled; // 0x2a4(0x01)
	bool bUnbound; // 0x2a5(0x01)
	char pad_2A6[0xa]; // 0x2a6(0x0a)

	struct FTransform GetTriggerTransformWS(); // Function BattlePrototype.BrainCrashSettingVolume.GetTriggerTransformWS // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1192ad0
	void FitGroundTriggerTransform(); // Function BattlePrototype.BrainCrashSettingVolume.FitGroundTriggerTransform // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
};

// Class BattlePrototype.BrainFieldEnemyLocation
// Size: 0x238 (Inherited: 0x230)
struct ABrainFieldEnemyLocation : AActor {
	int32_t LocationNo; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class BattlePrototype.BrainFieldEnemyLocationWave
// Size: 0x238 (Inherited: 0x230)
struct ABrainFieldEnemyLocationWave : AActor {
	int32_t LocationNo; // 0x230(0x04)
	bool LongAway; // 0x234(0x01)
	char pad_235[0x3]; // 0x235(0x03)
};

// Class BattlePrototype.BrainFieldManager
// Size: 0xba0 (Inherited: 0x230)
struct ABrainFieldManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	int32_t MaxTrainEnemy; // 0x238(0x04)
	bool DebugCollisionMode; // 0x23c(0x01)
	char pad_23D[0x953]; // 0x23d(0x953)
	struct FMulticastInlineDelegate m_EDBrainFieldBattleEndNativeEvent; // 0xb90(0x10)

	void VisibleNormalActorsNative(bool IsVisible, int32_t ObjectNum, int32_t VisibleSplitIndex, struct TArray<struct AActor*> ActorList, struct TArray<struct FBrainFieldRestoreFlag> SettingFlags); // Function BattlePrototype.BrainFieldManager.VisibleNormalActorsNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11936c0
	void SetupEnemyWaveTransformNative(struct TArray<struct ARSCharacterBase*> Enemies, struct TArray<struct FBrainFieldWaveEnemyFlag> EnemyFlags, struct FTransform PlayerTransform); // Function BattlePrototype.BrainFieldManager.SetupEnemyWaveTransformNative // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1193440
	void SelectJumpBrainFieldTrainEnemy(struct TArray<struct AActor*> TrainList, struct TArray<struct AActor*> NoTrainList, struct TArray<struct AActor*> TargetEnemyListBattleField, struct TArray<struct AActor*> TargetEnemyListBattleFieldWave, struct TArray<struct AActor*> TargetEnemyListNormal, struct FVector NormalFieldPlayerLocation); // Function BattlePrototype.BrainFieldManager.SelectJumpBrainFieldTrainEnemy // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11931a0
	void IsValidEventCommandTypeAtBrainField(enum class EEventTriggerCheckType EventCommandType, bool CheckBrainTalkEvent, bool IsValid); // Function BattlePrototype.BrainFieldManager.IsValidEventCommandTypeAtBrainField // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1192b30
	bool IsPerformanceSequencer_FromNative(); // Function BattlePrototype.BrainFieldManager.IsPerformanceSequencer_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool IsInvokeBrainField_FromNative(); // Function BattlePrototype.BrainFieldManager.IsInvokeBrainField_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool InBranField_FromNative(); // Function BattlePrototype.BrainFieldManager.InBranField_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool GetUserIsPlayer(); // Function BattlePrototype.BrainFieldManager.GetUserIsPlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void GetNormalLevelActorListNative(struct FBrainFieldNormalLevelActorListInput Inputs, struct TArray<struct AActor*> NormalLevelActors, struct TArray<struct AActor*> Characters, struct TArray<struct AActor*> Weapons, struct TArray<struct AActor*> PsychicObjects, struct TArray<struct AActor*> PsychicGrabs, struct TArray<struct AActor*> EffectBackround, struct TArray<struct AActor*> EffectBackroundMother); // Function BattlePrototype.BrainFieldManager.GetNormalLevelActorListNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11922f0
	bool GetLocationSettings(struct TArray<struct AActor*> TrainEnemyList, struct FBrainFieldSettingsLocation OutSettings); // Function BattlePrototype.BrainFieldManager.GetLocationSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11921d0
	int32_t GetEnemyLocationWaveNum(bool LongAway); // Function BattlePrototype.BrainFieldManager.GetEnemyLocationWaveNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1192140
	bool GetEnemyLocationWaveFromNo(struct FTransform EnemyTransform, int32_t LocationNo); // Function BattlePrototype.BrainFieldManager.GetEnemyLocationWaveFromNo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1192020
	bool GetEnemyLocationWave(struct FTransform EnemyTransform, int32_t Index, bool LongAway); // Function BattlePrototype.BrainFieldManager.GetEnemyLocationWave // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1191ec0
	int32_t GetEnemyLocationNum(); // Function BattlePrototype.BrainFieldManager.GetEnemyLocationNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1191e90
	bool GetEnemyLocation(struct FTransform EnemyTransform, int32_t Index); // Function BattlePrototype.BrainFieldManager.GetEnemyLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1191d70
	struct TArray<struct AActor*> GetBrainFieldActors(struct ULevelStreaming* Level); // Function BattlePrototype.BrainFieldManager.GetBrainFieldActors // (Final|Native|Public|BlueprintCallable) // @ game+0x1191c90
	void DebugCheckEnemyWaveTransformNativeCollision(struct FTransform PlayerTransform, struct FTransform EnemyTransform, bool ValidIndex, bool UseCollision, int32_t Index, bool LongAway); // Function BattlePrototype.BrainFieldManager.DebugCheckEnemyWaveTransformNativeCollision // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1191a10
	void CalcJumpBrainFieldTransformEnemyCustomCollision2(struct TArray<struct FTransform> OutTransforms, struct TArray<struct AActor*> Enemies, struct FBrainFieldSettingsLocation LocationSetting, float BrainFieldPlayerHeight, bool UserPlayer, struct AActor* UserActor); // Function BattlePrototype.BrainFieldManager.CalcJumpBrainFieldTransformEnemyCustomCollision2 // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1191560
	void CalcJumpBrainFieldTransformEnemyCustomCollision(struct TArray<struct FTransform> OutTransforms, struct TArray<struct AActor*> Enemies, struct TArray<struct FTransform> NormalFieldTransforms, struct FVector CustomCollisionPlayerLocation, float BrainFieldPlayerHeight); // Function BattlePrototype.BrainFieldManager.CalcJumpBrainFieldTransformEnemyCustomCollision // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11917d0
	void CalcJumpBrainFieldTransformEnemy(struct TArray<struct FTransform> OutTransforms, struct TArray<struct AActor*> Enemies, struct TArray<struct FTransform> NormalFieldTransforms, struct TArray<bool> IsWaves, struct FVector NormalFieldPlayerLocation); // Function BattlePrototype.BrainFieldManager.CalcJumpBrainFieldTransformEnemy // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1191320
	void Broadcast_EDBrainFieldBattleEndNativeEvent(enum class EBrainFieldEndType EndType); // Function BattlePrototype.BrainFieldManager.Broadcast_EDBrainFieldBattleEndNativeEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1191290
};

// Class BattlePrototype.BrainFieldSettingsActor
// Size: 0x460 (Inherited: 0x230)
struct ABrainFieldSettingsActor : AActor {
	struct FBrainFieldSettings Settings; // 0x230(0x28)
	bool bUseCollisionLocationOrigin; // 0x258(0x01)
	bool bUseDefaultPlayerStartLeftRight; // 0x259(0x01)
	char pad_25A[0x6]; // 0x25a(0x06)
	struct FTransform PlayerStartMain; // 0x260(0x30)
	struct FTransform PlayerStartLeft; // 0x290(0x30)
	struct FTransform PlayerStartRight; // 0x2c0(0x30)
	bool bEnemyRelativeJump; // 0x2f0(0x01)
	char pad_2F1[0xf]; // 0x2f1(0x0f)
	struct FTransform EnemyStart01; // 0x300(0x30)
	struct FTransform EnemyStart02; // 0x330(0x30)
	struct FTransform EnemyStart03; // 0x360(0x30)
	struct FTransform EnemyStart04; // 0x390(0x30)
	bool bUseRestoreTransform; // 0x3c0(0x01)
	char pad_3C1[0xf]; // 0x3c1(0x0f)
	struct FTransform PlayerRestoreMain; // 0x3d0(0x30)
	struct FTransform PlayerRestoreLeft; // 0x400(0x30)
	struct FTransform PlayerRestoreRight; // 0x430(0x30)
};

// Class BattlePrototype.BrainMessageData
// Size: 0x30 (Inherited: 0x28)
struct UBrainMessageData : UObject {
	struct UBrainMessageDBAsset* brainMessageDataAsset_; // 0x28(0x08)

	bool LoadDataAsset(struct FString dtPath); // Function BattlePrototype.BrainMessageData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1196d50
	struct FBrainMessageDBDataCell GetBrainMessageDataCellFromAsset(struct FName RowName, bool isFound); // Function BattlePrototype.BrainMessageData.GetBrainMessageDataCellFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11963b0
	struct UBrainMessageDBAsset* GetBrainMessageDataAsset(); // Function BattlePrototype.BrainMessageData.GetBrainMessageDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1196380
	int32_t GetAllThreadNum(); // Function BattlePrototype.BrainMessageData.GetAllThreadNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1196230
};

// Class BattlePrototype.BrainMessageDBAsset
// Size: 0x78 (Inherited: 0x28)
struct UBrainMessageDBAsset : UObject {
	struct TMap<struct FName, struct FBrainMessageDBDataCell> brainMessageDBMap_; // 0x28(0x50)

	void ConvertArray(struct FBrainMessageContentData bMesData, struct FBrainMessageRowDataCell rowCell); // Function BattlePrototype.BrainMessageDBAsset.ConvertArray // (Final|Native|Private|HasOutParms) // @ game+0x1196040
	void Convert(); // Function BattlePrototype.BrainMessageDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.BrainMessageParamManager
// Size: 0x90 (Inherited: 0x28)
struct UBrainMessageParamManager : UObject {
	struct FMulticastInlineDelegate OnChangeNoticeUiStateDelegate; // 0x28(0x10)
	struct URSGameInstance* gameInst_; // 0x38(0x08)
	struct UBrainMessageData* brainMessageData_; // 0x40(0x08)
	struct ALevelManager* levelManager_; // 0x48(0x08)
	struct TArray<struct FThreadData> threadDatas_; // 0x50(0x10)
	char pad_60[0x28]; // 0x60(0x28)
	bool bUseDebugReplyTime_DEBUG; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	float debugReplyTime_DEBUG; // 0x8c(0x04)

	void UpdateMessageIndication_BindInner(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.UpdateMessageIndication_BindInner // (Final|Native|Public) // @ game+0x11972b0
	void UpdateMessageIndication_Bind(); // Function BattlePrototype.BrainMessageParamManager.UpdateMessageIndication_Bind // (Final|Native|Public) // @ game+0x1197290
	void UpdateMessageIndication(int32_t threadNum, int32_t messageNum, bool isReply, bool isNoticeEnable); // Function BattlePrototype.BrainMessageParamManager.UpdateMessageIndication // (Final|Native|Public|BlueprintCallable) // @ game+0x1197150
	void StopThreadTimer(); // Function BattlePrototype.BrainMessageParamManager.StopThreadTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1197130
	void SetStopUpdatingMessageFlag(bool bStop); // Function BattlePrototype.BrainMessageParamManager.SetStopUpdatingMessageFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11970a0
	void SetIsOpenThred(int32_t threadNum, bool IsOpen); // Function BattlePrototype.BrainMessageParamManager.SetIsOpenThred // (Final|Native|Public|BlueprintCallable) // @ game+0x1196fe0
	void SetAlreadyLookNum(int32_t threadNum, int32_t lookNum); // Function BattlePrototype.BrainMessageParamManager.SetAlreadyLookNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1196f20
	void SetAlreadyEmergenceNum(int32_t threadNum, int32_t lookNum); // Function BattlePrototype.BrainMessageParamManager.SetAlreadyEmergenceNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1196e60
	void ResumeThreadTimer(); // Function BattlePrototype.BrainMessageParamManager.ResumeThreadTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1196e40
	bool IsReadyToReply(int32_t threadNum, int32_t messageNum, bool ignoreCommonTimming); // Function BattlePrototype.BrainMessageParamManager.IsReadyToReply // (Final|Native|Public|BlueprintCallable) // @ game+0x1196c50
	bool IsBanToReply(int32_t threadNum, int32_t messageNum); // Function BattlePrototype.BrainMessageParamManager.IsBanToReply // (Final|Native|Public|BlueprintCallable) // @ game+0x1196b90
	bool IsActiveThreadTimer(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.IsActiveThreadTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1196b00
	void InitData(struct URSGameInstance* gameInst); // Function BattlePrototype.BrainMessageParamManager.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x1196a80
	void InitAtExNewGame(enum class EPlayerID MainPlayerID); // Function BattlePrototype.BrainMessageParamManager.InitAtExNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x1196a00
	bool GetTiedBondsEPID(int32_t threadNum, int32_t messageNum, struct FString bondsBPReference); // Function BattlePrototype.BrainMessageParamManager.GetTiedBondsEPID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11968e0
	int32_t GetThreadNumFromThreadID(struct FName threadID); // Function BattlePrototype.BrainMessageParamManager.GetThreadNumFromThreadID // (Final|Native|Public|BlueprintCallable) // @ game+0x1196850
	void GetSortedIndexArray(enum class EBrainMesSortType SortType, struct TArray<int32_t> sortedIndexArray); // Function BattlePrototype.BrainMessageParamManager.GetSortedIndexArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1196760
	int32_t GetNextMessageNum(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.GetNextMessageNum // (Final|Native|Public|BlueprintCallable) // @ game+0x11966d0
	bool GetIsOpenThread(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.GetIsOpenThread // (Final|Native|Public|BlueprintCallable) // @ game+0x1196640
	struct TArray<int32_t> GetEmergenceMessageNum(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.GetEmergenceMessageNum // (Final|Native|Public|BlueprintCallable) // @ game+0x11965a0
	int32_t GetAlreadyLookNum(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.GetAlreadyLookNum // (Final|Native|Public|BlueprintCallable) // @ game+0x11962f0
	int32_t GetAlreadyEmergenceNum(int32_t threadNum); // Function BattlePrototype.BrainMessageParamManager.GetAlreadyEmergenceNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1196260
	void FinishWork(struct URSGameInstance* gameInst); // Function BattlePrototype.BrainMessageParamManager.FinishWork // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
	void CheckMessageConditions(int32_t threadNum, int32_t messageNum, bool isReply, bool isNoticeEnable); // Function BattlePrototype.BrainMessageParamManager.CheckMessageConditions // (Final|Native|Public) // @ game+0x1195f00
	bool CheckAppropriateThreadFromTitleID(struct FName TitleID, enum class EPlayerID MainPlayerID); // Function BattlePrototype.BrainMessageParamManager.CheckAppropriateThreadFromTitleID // (Final|Native|Public|BlueprintCallable) // @ game+0x1195e40
	void AllOpenMessageIgnorConditionsAndLock(int32_t targetThread); // Function BattlePrototype.BrainMessageParamManager.AllOpenMessageIgnorConditionsAndLock // (Final|Native|Public|BlueprintCallable) // @ game+0x1195dc0
	void AddMessageIgnorConditions(int32_t targetThread, int32_t messageNum); // Function BattlePrototype.BrainMessageParamManager.AddMessageIgnorConditions // (Final|Native|Public|BlueprintCallable) // @ game+0x1195d00
};

// Class BattlePrototype.BrainTalkBattleManager
// Size: 0x9a8 (Inherited: 0x28)
struct UBrainTalkBattleManager : UObject {
	struct URSGameInstance* _gameInstance; // 0x28(0x08)
	struct TArray<struct FSystemBrainTalkManageStructParam> m_BrainTalkSystemConditionManageList; // 0x30(0x10)
	struct TArray<struct FSystemBrainTalkManageStructParam> m_BrainTalkEnemyConditionManageList; // 0x40(0x10)
	struct TArray<struct FSystemBrainTalkManageStructParam> m_BrainTalkTutorialConditionManageList; // 0x50(0x10)
	struct TArray<struct FSystemBrainTalkManageStructParam> m_BrainTalkGimmickConditionManageList; // 0x60(0x10)
	struct FBrainTalkOnceCheck_Category m_BrainTalkOnceCheck; // 0x70(0x10)
	struct TArray<struct FBrainTalkBt_WataruHarukaExistenceProgressID> m_BrainTalkBt_WataruHarukaNoExistenceProgressIDList; // 0x80(0x10)
	struct TArray<struct FBrainTalkBt_InvalidProgressID> m_BrainTalkBt_InvalidProgressIDList; // 0x90(0x10)
	struct TArray<struct FBrainTalkCh_InvalidProgressID> m_BrainTalkCh_InvalidProgressIDList; // 0xa0(0x10)
	struct TArray<enum class EBrainTalkChGroup> m_BrainTalkCharacterGroup; // 0xb0(0x10)
	struct TArray<struct FBrainTalkBt_Hp30p> m_BrainTalkBt_Hp30pList; // 0xc0(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_Hp30pList_Param; // 0xd0(0x10)
	struct TArray<struct FBrainTalkBt_KillByEn> m_BrainTalkBt_KillByEnList; // 0xe0(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillByEnList_Param; // 0xf0(0x10)
	struct TArray<struct FBrainTalkBt_BrainCrashByEn> m_BrainTalkBt_BrainCrashByEnList; // 0x100(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_BrainCrashByEnList_Param; // 0x110(0x10)
	struct TArray<struct FBrainTalkBt_BadStateByEn> m_BrainTalkBt_BadStateByEnList; // 0x120(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_BadStateByEnList_Param; // 0x130(0x10)
	struct TArray<struct FBrainTalkBt_BadStateForEn> m_BrainTalkBt_BadStateForEnList; // 0x140(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_BadStateForEnList_Param; // 0x150(0x10)
	struct TArray<struct FBrainTalkBt_Recovery> m_BrainTalkBt_RecoveryList; // 0x160(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_RecoveryList_Param; // 0x170(0x10)
	struct TArray<struct FBrainTalkBt_Revival> m_BrainTalkBt_RevivalList; // 0x180(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_RevivalList_Param; // 0x190(0x10)
	struct TArray<struct FBrainTalkBt_BFActivate> m_BrainTalkBt_BFActivateList; // 0x1a0(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_BFActivateList_Param; // 0x1b0(0x10)
	struct TArray<struct FBrainTalkBt_SasCombo> m_BrainTalkBt_SasComboList; // 0x1c0(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_SasComboList_Param; // 0x1d0(0x10)
	struct TArray<struct FBrainTalkBt_PsychicCombo> m_BrainTalkBt_PsychicComboList; // 0x1e0(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_PsychicComboList_Param; // 0x1f0(0x10)
	struct TArray<struct FBrainTalkBt_DriveActive> m_BrainTalkBt_DriveActiveList; // 0x200(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DriveActiveList_Param; // 0x210(0x10)
	struct TArray<struct FBrainTalkBt_HiKizunaEffect> m_BrainTalkBt_HiKizunaEffectList; // 0x220(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_HiKizunaEffectList_Param; // 0x230(0x10)
	struct TArray<struct FBrainTalkBt_TouchBFWall> m_BrainTalkBt_TouchBFWallList; // 0x240(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_TouchBFWallList_Param; // 0x250(0x10)
	struct TArray<struct FBrainTalkBt_NearCC> m_BrainTalkBt_NearCCList; // 0x260(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_NearCCList_Param; // 0x270(0x10)
	struct TArray<struct FBrainTalkBt_BattleEscape> m_BrainTalkBt_BattleEscapeList; // 0x280(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_BattleEscapeList_Param; // 0x290(0x10)
	struct TArray<struct FBrainTalkBt_KizunaLvUp> m_BrainTalkBt_KizunaLvUpList; // 0x2a0(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KizunaLvUpList_Param; // 0x2b0(0x10)
	enum class EBrainTalkKizunaLvUpFlow m_KizunaLvUpFlow; // 0x2c0(0x01)
	char pad_2C1[0x3]; // 0x2c1(0x03)
	int32_t m_KizunaLvUpReplayTime; // 0x2c4(0x04)
	struct TArray<enum class EPlayerID> m_KizunaLvUpReplayPlayerList; // 0x2c8(0x10)
	struct TArray<struct FBrainTalkBt_DamageTakeOver> m_BrainTalkBt_DamageTakeOverList; // 0x2d8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DamageTakeOverList_Param; // 0x2e8(0x10)
	struct TArray<struct FBrainTalkBt_LvUp> m_BrainTalkBt_LvUpList; // 0x2f8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_LvUpList_Param; // 0x308(0x10)
	struct TArray<struct FBrainTalkBt_DeadInarow> m_BrainTalkBt_DeadInarowList; // 0x318(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DeadInarowList_Param; // 0x328(0x10)
	struct TArray<struct FBrainTalkBt_SallyTimes> m_BrainTalkBt_SallyTimesList; // 0x338(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_SallyTimesList_Param; // 0x348(0x10)
	struct TArray<struct FBrainTalkBt_NoSallyTimes> m_BrainTalkBt_NoSallyTimesList; // 0x358(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_NoSallyTimesList_Param; // 0x368(0x10)
	struct TArray<struct FBrainTalkBt_JumpOff> m_BrainTalkBt_JumpOffList; // 0x378(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_JumpOffList_Param; // 0x388(0x10)
	struct TArray<struct FBrainTalkBt_PLChangeAttachment> m_BrainTalkBt_PLChangeAttachmentList; // 0x398(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_PLChangeAttachmentList_Param; // 0x3a8(0x10)
	struct TArray<struct FBrainTalkBt_PLDead> m_BrainTalkBt_PLDeadList; // 0x3b8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_PLDeadList_Param; // 0x3c8(0x10)
	struct TArray<struct FBrainTalkBt_KillEnRest> m_BrainTalkBt_KillEnRestList; // 0x3d8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillEnRestList_Param; // 0x3e8(0x10)
	struct TArray<struct FBrainTalkBt_KillAllEnForPT> m_BrainTalkBt_KillAllEnForPTList; // 0x3f8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillAllEnForPTList_Param; // 0x408(0x10)
	struct TArray<struct FBrainTalkBt_KillAllEnForPL> m_BrainTalkBt_KillAllEnForPLList; // 0x418(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillAllEnForPLList_Param; // 0x428(0x10)
	struct TArray<struct FBrainTalkBt_KillAllEnShortTime> m_BrainTalkBt_KillAllEnShortTimeList; // 0x438(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillAllEnShortTimeList_Param; // 0x448(0x10)
	struct TArray<struct FBrainTalkBt_KillAllEnStrEn> m_BrainTalkBt_KillAllEnStrEnList; // 0x458(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillAllEnStrEnList_Param; // 0x468(0x10)
	struct TArray<struct FBrainTalkBt_KillAllEnManyEn> m_BrainTalkBt_KillAllEnManyEnList; // 0x478(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillAllEnManyEnList_Param; // 0x488(0x10)
	struct TArray<struct FBrainTalkBt_KillAllEnManyWeakEn> m_BrainTalkBt_KillAllEnManyWeakEnList; // 0x498(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillAllEnManyWeakEnList_Param; // 0x4a8(0x10)
	struct TArray<struct FBrainTalkBt_KillEnStrategy> m_BrainTalkBt_KillEnStrategyList; // 0x4b8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillEnStrategyList_Param; // 0x4c8(0x10)
	struct TArray<struct FBrainTalkBt_DiscStrEn> m_BrainTalkBt_DiscStrEnList; // 0x4d8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DiscStrEnList_Param; // 0x4e8(0x10)
	struct TArray<struct FBrainTalkBt_DestroyShell> m_BrainTalkBt_DestroyShellList; // 0x4f8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DestroyShellList_Param; // 0x508(0x10)
	struct TArray<struct FBrainTalkBt_EnemyDown> m_BrainTalkBt_EnemyDownList; // 0x518(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_EnemyDownList_Param; // 0x528(0x10)
	struct TArray<struct FBrainTalkBt_DiscEn> m_BrainTalkBt_DiscEnList; // 0x538(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DiscEnList_Param; // 0x548(0x10)
	struct TArray<struct FBrainTalkBt_DispCrashTrg> m_BrainTalkBt_DispCrashTrgList; // 0x558(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DispCrashTrgList_Param; // 0x568(0x10)
	struct TArray<struct FBrainTalkBt_KillEnemyBC> m_BrainTalkBt_KillEnemyBCList; // 0x578(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillEnemyBCList_Param; // 0x588(0x10)
	struct TArray<struct FBrainTalkBt_EnBerserkSign> m_BrainTalkBt_EnBerserkSignList; // 0x598(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_EnBerserkSignList_Param; // 0x5a8(0x10)
	struct TArray<struct FBrainTalkBt_EnBerserk> m_BrainTalkBt_EnBerserkList; // 0x5b8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_EnBerserkList_Param; // 0x5c8(0x10)
	struct TArray<struct FBrainTalkBt_AttackEnShell> m_BrainTalkBt_AttackEnShellList; // 0x5d8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_AttackEnShellList_Param; // 0x5e8(0x10)
	struct TArray<struct FBrainTalkBt_AttackEnWeak> m_BrainTalkBt_AttackEnWeakList; // 0x5f8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_AttackEnWeakList_Param; // 0x608(0x10)
	struct TArray<struct FBrainTalkBt_FirstStrike> m_BrainTalkBt_FirstStrikeList; // 0x618(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_FirstStrikeList_Param; // 0x628(0x10)
	struct TArray<struct FBrainTalkBt_OilEnAtkFire> m_BrainTalkBt_OilEnAtkFireList; // 0x638(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_OilEnAtkFireList_Param; // 0x648(0x10)
	struct TArray<struct FBrainTalkBt_WaterEnAtkElectric> m_BrainTalkBt_WaterEnAtkElectricList; // 0x658(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_WaterEnAtkElectricList_Param; // 0x668(0x10)
	struct TArray<struct FBrainTalkBt_DiscStealth> m_BrainTalkBt_DiscStealthList; // 0x678(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DiscStealthList_Param; // 0x688(0x10)
	struct TArray<struct FBrainTalkBt_DiscSasValidEn> m_BrainTalkBt_DiscSasValidEnList; // 0x698(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DiscSasValidEnList_Param; // 0x6a8(0x10)
	struct TArray<struct FBrainTalkBt_StealthLosePL> m_BrainTalkBt_StealthLosePLList; // 0x6b8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_StealthLosePLList_Param; // 0x6c8(0x10)
	struct TArray<struct FBrainTalkBt_SasNoUse> m_BrainTalkBt_SasNoUseList; // 0x6d8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_SasNoUseList_Param; // 0x6e8(0x10)
	struct TArray<struct FBrainTalkBt_SasContinuity> m_BrainTalkBt_SasContinuityList; // 0x6f8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_SasContinuityList_Param; // 0x708(0x10)
	struct TArray<struct FBrainTalkBt_SasHoloPossible> m_BrainTalkBt_SasHoloPossibleList; // 0x718(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_SasHoloPossibleList_Param; // 0x728(0x10)
	struct TArray<struct FBrainTalkBt_SasHoloPursuit> m_BrainTalkBt_SasHoloPursuitList; // 0x738(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_SasHoloPursuitList_Param; // 0x748(0x10)
	struct TArray<struct FBrainTalkBt_GetItem> m_BrainTalkBt_GetItemList; // 0x758(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_GetItemList_Param; // 0x768(0x10)
	struct TArray<struct FBrainTalkBt_EnemyDrop> m_BrainTalkBt_EnemyDropList; // 0x778(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_EnemyDropList_Param; // 0x788(0x10)
	struct TArray<struct FBrainTalkBt_UnopenedTreasure> m_BrainTalkBt_UnopenedTreasureList; // 0x798(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_UnopenedTreasureList_Param; // 0x7a8(0x10)
	struct TArray<struct FBrainTalkBt_GatherPoint> m_BrainTalkBt_GatherPointList; // 0x7b8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_GatherPointList_Param; // 0x7c8(0x10)
	struct TArray<struct FBrainTalkBt_RecoveryItemZero> m_BrainTalkBt_RecoveryItemZeroList; // 0x7d8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_RecoveryItemZeroList_Param; // 0x7e8(0x10)
	struct TArray<struct FBrainTalkBt_DiscQuestEnemy> m_BrainTalkBt_DiscQuestEnemyList; // 0x7f8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DiscQuestEnemyList_Param; // 0x808(0x10)
	struct TArray<struct FBrainTalkBt_ClearQuest> m_BrainTalkBt_ClearQuestList; // 0x818(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_ClearQuestList_Param; // 0x828(0x10)
	struct TArray<struct FBrainTalkBt_BirthKizunaEp> m_BrainTalkBt_BirthKizunaEpList; // 0x838(0x10)
	struct TArray<enum class EPlayerID> m_BrainTalkBt_BirthKizunaEp_FadePlayList; // 0x848(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_BirthKizunaEpList_Param; // 0x858(0x10)
	struct TArray<struct FBrainTalkBt_KillQuestTgtEn> m_BrainTalkBt_KillQuestTgtEnList; // 0x868(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_KillQuestTgtEnList_Param; // 0x878(0x10)
	struct TArray<struct FBrainTalkBt_GetQuestTgtItem> m_BrainTalkBt_GetQuestTgtItemList; // 0x888(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_GetQuestTgtItemList_Param; // 0x898(0x10)
	struct TArray<struct FBrainTalkBt_PTChangeAttachment> m_BrainTalkBt_PTChangeAttachmentList; // 0x8a8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_PTChangeAttachmentList_Param; // 0x8b8(0x10)
	struct TArray<struct FBrainTalkBt_DriveGaugeMax> m_BrainTalkBt_DriveGaugeMaxList; // 0x8c8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_DriveGaugeMaxList_Param; // 0x8d8(0x10)
	struct TArray<struct FBrainTalkBt_EquipStrongestWeapon> m_BrainTalkBt_EquipStrongestWeaponList; // 0x8e8(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_EquipStrongestWeaponList_Param; // 0x8f8(0x10)
	struct TArray<struct FBrainTalkBt_WaitingVoice> m_BrainTalkBt_WaitingVoiceList; // 0x908(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_WaitingVoiceList_Param; // 0x918(0x10)
	struct TArray<struct FBrainTalkBt_RecoveryHpToPL> m_BrainTalkBt_RecoveryHpToPLList; // 0x928(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_RecoveryHpToPLList_Param; // 0x938(0x10)
	struct TArray<struct FBrainTalkBt_RecoveryAbToPL> m_BrainTalkBt_RecoveryAbToPLList; // 0x948(0x10)
	struct FBrainTalkBattle_ConditionsParam m_BrainTalkBt_RecoveryAbToPLList_Param; // 0x958(0x10)
	struct TArray<struct FBrainTalkEm_ConditionParam> m_BrainTalkEm_ConditionParamList; // 0x968(0x10)
	struct TArray<struct FBrainTalkTutorial_ConditionParam> m_BrainTalkTutorial_ConditionParamList; // 0x978(0x10)
	struct TArray<struct FBrainTalkGimmick_ConditionParam> m_BrainTalkGimmick_ConditionParamList; // 0x988(0x10)
	char pad_998[0x10]; // 0x998(0x10)
};

// Class BattlePrototype.BrainTalkManager
// Size: 0x2d8 (Inherited: 0x230)
struct ABrainTalkManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct URSGameInstance* _gameInstance; // 0x238(0x08)
	char pad_240[0x10]; // 0x240(0x10)
	struct UBrainTalkBattleManager* m_pBrainTalkBattleManager; // 0x250(0x08)
	struct TArray<struct FBrainTalk_CategoryDatatable> m_BrainTalkMasterDataQueCategoryDatatableList; // 0x258(0x10)
	struct TArray<struct FBrainTalkMasterData> m_BrainTalkMasterDataQueList; // 0x268(0x10)
	char pad_278[0x8]; // 0x278(0x08)
	struct TArray<int32_t> m_StrongestWeaponIdList; // 0x280(0x10)
	bool m_isUpdateEquipIdList; // 0x290(0x01)
	char pad_291[0x7]; // 0x291(0x07)
	struct TArray<struct FPlayerInfo> m_OpenMenuWindowEquipIdList; // 0x298(0x10)
	struct UDataTable* m_dataTable; // 0x2a8(0x08)
	enum class EBrainTalkPriority m_Priority; // 0x2b0(0x01)
	char pad_2B1[0x3]; // 0x2b1(0x03)
	int32_t m_ReferenceIndex; // 0x2b4(0x04)
	float m_massageWaitTime; // 0x2b8(0x04)
	bool m_isPauseBrainTalk; // 0x2bc(0x01)
	bool m_isFinishBrainTalk; // 0x2bd(0x01)
	bool m_isNoStopBrainTalk; // 0x2be(0x01)
	char pad_2BF[0x1]; // 0x2bf(0x01)
	struct TArray<struct FBrainTalkBt_PlayInfo> m_BrainTalkBt_PlayReqList; // 0x2c0(0x10)
	bool m_isStartTalkEventPauseBT; // 0x2d0(0x01)
	bool m_isStartTalkEventKeepPlayingBT; // 0x2d1(0x01)
	bool m_DebbugBrainTalkAllInvalidFlag; // 0x2d2(0x01)
	bool m_DebbugBrainTalkBTInvalidFlag; // 0x2d3(0x01)
	bool m_DebugDispBrainTalkLogFlag; // 0x2d4(0x01)
	char pad_2D5[0x3]; // 0x2d5(0x03)

	void StopBrainTalkVoice(); // Function BattlePrototype.BrainTalkManager.StopBrainTalkVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3d80
	void StopBrainTalk_BPFL_FromNative(); // Function BattlePrototype.BrainTalkManager.StopBrainTalk_BPFL_FromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void StopBrainTalk(); // Function BattlePrototype.BrainTalkManager.StopBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3d60
	void StartBrainTalk_FromNative2(struct FName BrainTalkID, enum class EBrainTalkCategory Category); // Function BattlePrototype.BrainTalkManager.StartBrainTalk_FromNative2 // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void StartBrainTalk_FromNative(struct FBrainTalkMasterData BrainTalkData, struct FBrainTalk_CategoryDatatable categoryDatatable); // Function BattlePrototype.BrainTalkManager.StartBrainTalk_FromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void StartBrainTalk(); // Function BattlePrototype.BrainTalkManager.StartBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3d40
	void SetStrongestWeaponId(enum class EPlayerID Player, int32_t ID); // Function BattlePrototype.BrainTalkManager.SetStrongestWeaponId // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3c80
	void SetReferenceIndex(int32_t Num); // Function BattlePrototype.BrainTalkManager.SetReferenceIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3c00
	void SetOpenMenuWindowEquipWeaponIdList(); // Function BattlePrototype.BrainTalkManager.SetOpenMenuWindowEquipWeaponIdList // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3be0
	void SetNewRowBrainTalk(float WaitTime); // Function BattlePrototype.BrainTalkManager.SetNewRowBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3b60
	void SetMassageWaitTime(float sec); // Function BattlePrototype.BrainTalkManager.SetMassageWaitTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3ae0
	void SetIsStartTalkEventPauseBT(bool Flag); // Function BattlePrototype.BrainTalkManager.SetIsStartTalkEventPauseBT // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3a60
	void SetIsStartTalkEventKeepPlayingBT(bool Flag); // Function BattlePrototype.BrainTalkManager.SetIsStartTalkEventKeepPlayingBT // (Final|Native|Public|BlueprintCallable) // @ game+0x11a39e0
	void SetIsNoStopBrainTalk(bool Flag); // Function BattlePrototype.BrainTalkManager.SetIsNoStopBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3960
	void SetIsFinishBrainTalk(bool Flag); // Function BattlePrototype.BrainTalkManager.SetIsFinishBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a38e0
	void SetDebugDispBrainTalkLogFlag(bool Flag); // Function BattlePrototype.BrainTalkManager.SetDebugDispBrainTalkLogFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3860
	void SetDebbugBrainTalkBTInvalidFlag(bool Flag); // Function BattlePrototype.BrainTalkManager.SetDebbugBrainTalkBTInvalidFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11a37e0
	void SetDebbugBrainTalkAllInvalidFlag(bool Flag); // Function BattlePrototype.BrainTalkManager.SetDebbugBrainTalkAllInvalidFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3760
	void PlaySystemBrainTalk(enum class EBrainTalkSystemType Type, int32_t Index, enum class EPlayerID player1); // Function BattlePrototype.BrainTalkManager.PlaySystemBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3660
	void PauseBrainTalk(bool IsPause); // Function BattlePrototype.BrainTalkManager.PauseBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a35d0
	void OpenBrainTalkUI(int32_t characterId, int32_t ExpressionID, struct FString messageID, float DrawSecond); // Function BattlePrototype.BrainTalkManager.OpenBrainTalkUI // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3470
	void LoadBrainTalkDatatable(struct FBrainTalkMasterData BrainTalkData); // Function BattlePrototype.BrainTalkManager.LoadBrainTalkDatatable // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3360
	bool IsTimingEnableCheck(); // Function BattlePrototype.BrainTalkManager.IsTimingEnableCheck // (Final|Native|Private|BlueprintCallable) // @ game+0x11a3330
	bool IsSysInvalidProgressIDCheck(enum class EBrainTalkBtGroup Group); // Function BattlePrototype.BrainTalkManager.IsSysInvalidProgressIDCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11a32a0
	bool IsStartTalkEventPauseBT(); // Function BattlePrototype.BrainTalkManager.IsStartTalkEventPauseBT // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3280
	bool IsStartTalkEventKeepPlayingBT(); // Function BattlePrototype.BrainTalkManager.IsStartTalkEventKeepPlayingBT // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3260
	bool IsNoStopBrainTalk(); // Function BattlePrototype.BrainTalkManager.IsNoStopBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3240
	bool IsLowerPriority(); // Function BattlePrototype.BrainTalkManager.IsLowerPriority // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3210
	bool IsGameOverCheck(); // Function BattlePrototype.BrainTalkManager.IsGameOverCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11a31e0
	bool IsFinishLoad(); // Function BattlePrototype.BrainTalkManager.IsFinishLoad // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11a31b0
	bool IsFinishBrainTalk(); // Function BattlePrototype.BrainTalkManager.IsFinishBrainTalk // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11a3190
	bool IsFindBrainTalkOnceCheck_LoadReset(enum class EBrainTalkCategory _Category, struct FName _ID); // Function BattlePrototype.BrainTalkManager.IsFindBrainTalkOnceCheck_LoadReset // (Final|Native|Public|BlueprintCallable) // @ game+0x11a30d0
	bool IsEnableCheck(bool isPlaySuppressionCheck, bool isPlayerHPCheck); // Function BattlePrototype.BrainTalkManager.IsEnableCheck // (Final|Native|Private|BlueprintCallable) // @ game+0x11a2ff0
	bool IsDoEventCheck(); // Function BattlePrototype.BrainTalkManager.IsDoEventCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2fc0
	void InitializeStrongestWeaponIdList(); // Function BattlePrototype.BrainTalkManager.InitializeStrongestWeaponIdList // (Event|Public|BlueprintEvent) // @ game+0x1685580
	int32_t GetReferenceIndex(); // Function BattlePrototype.BrainTalkManager.GetReferenceIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1164520
	enum class EBrainTalkPriorityCheckResult GetPriorityCheck(enum class EBrainTalkPriority playReqPriority); // Function BattlePrototype.BrainTalkManager.GetPriorityCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2f30
	enum class EBrainTalkPriority GetPriority(); // Function BattlePrototype.BrainTalkManager.GetPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166da0
	float GetMassageWaitTime(); // Function BattlePrototype.BrainTalkManager.GetMassageWaitTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11a2f10
	bool GetDebugDispBrainTalkLogFlag(); // Function BattlePrototype.BrainTalkManager.GetDebugDispBrainTalkLogFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2ef0
	struct UDataTable* GetDataTable(); // Function BattlePrototype.BrainTalkManager.GetDataTable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11a2ed0
	bool GetCategoryDataTableRow(enum class EBrainTalkCategory Category, struct FName BrainTalkID, struct FBrainTalkMasterData RowData); // Function BattlePrototype.BrainTalkManager.GetCategoryDataTableRow // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11a2d70
	struct UDataTable* GetCategoryDataTable(enum class EBrainTalkCategory Category); // Function BattlePrototype.BrainTalkManager.GetCategoryDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2ce0
	bool GetBrainTalkParam(struct FName BrainTalkID, enum class EBrainTalkCategory Category, float OccurRate, bool IsOnce); // Function BattlePrototype.BrainTalkManager.GetBrainTalkParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11a2b60
	struct FMessageDataCell GetBrainTalkMessage(struct FString messageID); // Function BattlePrototype.BrainTalkManager.GetBrainTalkMessage // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11a2990
	struct TArray<struct FBrainTalkMasterData> GetBrainTalkMasterDataQueList(); // Function BattlePrototype.BrainTalkManager.GetBrainTalkMasterDataQueList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11a27f0
	int32_t GetBrainTalkMapGimmickWaitTime(enum class EBrainTalkGimmickCondition Type, struct FString conditionLabel); // Function BattlePrototype.BrainTalkManager.GetBrainTalkMapGimmickWaitTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11a26c0
	void CloseBrainTalkUI(); // Function BattlePrototype.BrainTalkManager.CloseBrainTalkUI // (Final|Native|Public|BlueprintCallable) // @ game+0x11a26a0
	void ClearBrainTalkMasterDataQueList(); // Function BattlePrototype.BrainTalkManager.ClearBrainTalkMasterDataQueList // (Final|Native|Public|BlueprintCallable) // @ game+0x11a25d0
	bool CheckEquipChangeBrainTalk(); // Function BattlePrototype.BrainTalkManager.CheckEquipChangeBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x11a25a0
	void CallbackFinishBrainTalk(); // Function BattlePrototype.BrainTalkManager.CallbackFinishBrainTalk // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool BrainTalkTuto_tutorial_m_J(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_m_J // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2570
	bool BrainTalkTuto_tutorial_m_I(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_m_I // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2540
	bool BrainTalkTuto_tutorial_m_H(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_m_H // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2510
	bool BrainTalkTuto_tutorial_m_G(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_m_G // (Final|Native|Public|BlueprintCallable) // @ game+0x11a24e0
	bool BrainTalkTuto_tutorial_m_F(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_m_F // (Final|Native|Public|BlueprintCallable) // @ game+0x11a24b0
	bool BrainTalkTuto_tutorial_f_J(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_f_J // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2480
	bool BrainTalkTuto_tutorial_f_I(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_f_I // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2450
	bool BrainTalkTuto_tutorial_f_H(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_f_H // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2420
	bool BrainTalkTuto_tutorial_f_G(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_f_G // (Final|Native|Public|BlueprintCallable) // @ game+0x11a23f0
	bool BrainTalkTuto_tutorial_f_F(); // Function BattlePrototype.BrainTalkManager.BrainTalkTuto_tutorial_f_F // (Final|Native|Public|BlueprintCallable) // @ game+0x11a23c0
	bool BrainTalkMapGimmick(enum class EBrainTalkGimmickCondition Type, struct FString conditionLabel); // Function BattlePrototype.BrainTalkManager.BrainTalkMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2290
	void BrainTalkLoadWork(); // Function BattlePrototype.BrainTalkManager.BrainTalkLoadWork // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2270
	bool BrainTalkEm_WaterCharge_WaterAttack(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_WaterCharge_WaterAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x11a13d0
	bool BrainTalkEm_OilCharge_OilAttack(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_OilCharge_OilAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x11a13a0
	bool BrainTalkEm_np1100_06(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_np1100_06 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2240
	bool BrainTalkEm_np1100_05(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_np1100_05 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2210
	bool BrainTalkEm_np1100_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_np1100_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a21e0
	bool BrainTalkEm_np1100_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_np1100_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a21b0
	bool BrainTalkEm_np1100_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_np1100_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2180
	bool BrainTalkEm_np1100_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_np1100_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2150
	bool BrainTalkEm_FlameCharge_OilMember(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_FlameCharge_OilMember // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1370
	bool BrainTalkEm_FlameCharge_FlameAttack(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_FlameCharge_FlameAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1340
	bool BrainTalkEm_em8300_06(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8300_06 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2120
	bool BrainTalkEm_em8300_05(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8300_05 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a20f0
	bool BrainTalkEm_em8300_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8300_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a20c0
	bool BrainTalkEm_em8300_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8300_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2090
	bool BrainTalkEm_em8300_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8300_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2060
	bool BrainTalkEm_em8300_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8300_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2030
	bool BrainTalkEm_em8200_08(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_08 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a2000
	bool BrainTalkEm_em8200_07(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_07 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1fd0
	bool BrainTalkEm_em8200_05(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_05 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1fa0
	bool BrainTalkEm_em8200_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1f70
	bool BrainTalkEm_em8200_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1f40
	bool BrainTalkEm_em8200_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1f10
	bool BrainTalkEm_em8200_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8200_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1ee0
	bool BrainTalkEm_em8000_06(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8000_06 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1eb0
	bool BrainTalkEm_em8000_05(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8000_05 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1e80
	bool BrainTalkEm_em8000_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8000_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1e50
	bool BrainTalkEm_em8000_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8000_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1e20
	bool BrainTalkEm_em8000_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8000_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1df0
	bool BrainTalkEm_em8000_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em8000_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1dc0
	bool BrainTalkEm_em1430_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1430_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1d90
	bool BrainTalkEm_em1430_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1430_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1d60
	bool BrainTalkEm_em1420_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1420_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1d30
	bool BrainTalkEm_em1420_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1420_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1d00
	bool BrainTalkEm_em1420_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1420_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1cd0
	bool BrainTalkEm_em1420_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1420_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1ca0
	bool BrainTalkEm_em1410_05(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1410_05 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1c70
	bool BrainTalkEm_em1410_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1410_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1c40
	bool BrainTalkEm_em1410_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1410_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1c10
	bool BrainTalkEm_em1410_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1410_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1be0
	bool BrainTalkEm_em1410_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1410_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1bb0
	bool BrainTalkEm_em1400_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1400_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1b80
	bool BrainTalkEm_em1300_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1300_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1b50
	bool BrainTalkEm_em1300_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1300_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1b20
	bool BrainTalkEm_em1300_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1300_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1af0
	bool BrainTalkEm_em1210_05(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1210_05 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1ac0
	bool BrainTalkEm_em1210_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1210_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1a90
	bool BrainTalkEm_em1210_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1210_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1a60
	bool BrainTalkEm_em1210_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1210_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1a30
	bool BrainTalkEm_em1210_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1210_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1a00
	bool BrainTalkEm_em1200_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1200_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a19d0
	bool BrainTalkEm_em1200_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1200_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a19a0
	bool BrainTalkEm_em1200_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1200_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1970
	bool BrainTalkEm_em1120_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1120_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1940
	bool BrainTalkEm_em1100_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1100_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1910
	bool BrainTalkEm_em1020_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1020_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a18e0
	bool BrainTalkEm_em1010_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em1010_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a18b0
	bool BrainTalkEm_em0830_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0830_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1880
	bool BrainTalkEm_em0820_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0820_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1850
	bool BrainTalkEm_em0800_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0800_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1820
	bool BrainTalkEm_em0700_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0700_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a17f0
	bool BrainTalkEm_em0620_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0620_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a17c0
	bool BrainTalkEm_em0500_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0500_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1790
	bool BrainTalkEm_em0330_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0330_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1760
	bool BrainTalkEm_em0330_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0330_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1730
	bool BrainTalkEm_em0330_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0330_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1700
	bool BrainTalkEm_em0320_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0320_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a16d0
	bool BrainTalkEm_em0320_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0320_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a16a0
	bool BrainTalkEm_em0310_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0310_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1670
	bool BrainTalkEm_em0310_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0310_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1640
	bool BrainTalkEm_em0310_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0310_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1610
	bool BrainTalkEm_em0310_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0310_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a15e0
	bool BrainTalkEm_em0300_04(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0300_04 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a15b0
	bool BrainTalkEm_em0300_03(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0300_03 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1580
	bool BrainTalkEm_em0300_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0300_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1550
	bool BrainTalkEm_em0300_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0300_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1520
	bool BrainTalkEm_em0210_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0210_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a14f0
	bool BrainTalkEm_em0120_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_em0120_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a14c0
	bool BrainTalkEm_ElectricCharge_WaterMember(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ElectricCharge_WaterMember // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1310
	bool BrainTalkEm_ElectricCharge_ElectricAttack(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ElectricCharge_ElectricAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x11a12e0
	bool BrainTalkEm_ConfusionCharge_ConfusionAttack(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ConfusionCharge_ConfusionAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x11a12b0
	bool BrainTalkEm_ch0200_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ch0200_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1490
	bool BrainTalkEm_ch0200_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ch0200_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1460
	bool BrainTalkEm_ch0100_02(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ch0100_02 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1430
	bool BrainTalkEm_ch0100_01(); // Function BattlePrototype.BrainTalkManager.BrainTalkEm_ch0100_01 // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1400
	bool BrainTalkBt_WaterEnAtkElectric(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_WaterEnAtkElectric // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1280
	bool BrainTalkBt_WaitingVoice(enum class EPlayerID WaitCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_WaitingVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x11a11f0
	bool BrainTalkBt_UnopenedTreasure(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_UnopenedTreasure // (Final|Native|Public|BlueprintCallable) // @ game+0x11a11c0
	bool BrainTalkBt_TouchBFWall(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_TouchBFWall // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1190
	bool BrainTalkBt_StealthLosePL(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_StealthLosePL // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1160
	bool BrainTalkBt_SasNoUse(enum class EPlayerID TargetCharacter, enum class E_SASKindNative SasEffect, int32_t lastSasProgressTime, int32_t lastSasBTProgressTime); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_SasNoUse // (Final|Native|Public|BlueprintCallable) // @ game+0x11a1020
	bool BrainTalkBt_SasHoloPursuit(enum class EPlayerID HoloCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_SasHoloPursuit // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0f90
	bool BrainTalkBt_SasHoloPossible(enum class EPlayerID HoloCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_SasHoloPossible // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0f00
	bool BrainTalkBt_SasContinuity(enum class E_SASKindNative SasEffect, int32_t Num); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_SasContinuity // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0e40
	bool BrainTalkBt_SasCombo(int32_t comboNum); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_SasCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0db0
	bool BrainTalkBt_SallyTimes(enum class EPlayerID TargetCharacter, int32_t SallyMinutes, int32_t BeforeBTMinutes); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_SallyTimes // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0cb0
	bool BrainTalkBt_Revival(enum class EPlayerID RevivalFrom, enum class EPlayerID RevivalTo); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_Revival // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0be0
	bool BrainTalkBt_RecoveryItemZero(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_RecoveryItemZero // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0bb0
	bool BrainTalkBt_RecoveryHpToPL(enum class EPlayerID RecoveryFrom); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_RecoveryHpToPL // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0b20
	bool BrainTalkBt_RecoveryAbToPL(enum class EPlayerID RecoveryFrom); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_RecoveryAbToPL // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0a90
	bool BrainTalkBt_Recovery(enum class EPlayerID RecoveryTo); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_Recovery // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0a00
	bool BrainTalkBt_PTChangeAttachment(enum class EPlayerID ChangeAttachmentCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_PTChangeAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x11a08e0
	bool BrainTalkBt_PsychicCombo(int32_t comboNum); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_PsychicCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0970
	bool BrainTalkBt_PLDead(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_PLDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11a08b0
	bool BrainTalkBt_PLChangeAttachment(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_PLChangeAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0880
	bool BrainTalkBt_OilEnAtkFire(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_OilEnAtkFire // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0850
	bool BrainTalkBt_NoSallyTimes(enum class EPlayerID TargetCharacter, int32_t NoSallyMinutes, int32_t BeforeBTMinutes); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_NoSallyTimes // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0750
	bool BrainTalkBt_NearCC(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_NearCC // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0720
	bool BrainTalkBt_LvUp(enum class EPlayerID LvUpCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_LvUp // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0690
	bool BrainTalkBt_KizunaLvUp(enum class EPlayerID KizunaLvUpCharacter, bool isRetry); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KizunaLvUp // (Final|Native|Public|BlueprintCallable) // @ game+0x11a05c0
	bool BrainTalkBt_KillQuestTgtEn(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillQuestTgtEn // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0590
	bool BrainTalkBt_KillEnStrategy(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillEnStrategy // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0530
	bool BrainTalkBt_KillEnRest(enum class EPlayerID KillCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillEnRest // (Final|Native|Public|BlueprintCallable) // @ game+0x11a04a0
	bool BrainTalkBt_KillEnemyBC(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillEnemyBC // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0560
	bool BrainTalkBt_KillByEn(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillByEn // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0470
	bool BrainTalkBt_KillAllEnStrEn(enum class EPlayerID KillCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillAllEnStrEn // (Final|Native|Public|BlueprintCallable) // @ game+0x11a03e0
	bool BrainTalkBt_KillAllEnShortTime(enum class EPlayerID KillCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillAllEnShortTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0350
	bool BrainTalkBt_KillAllEnManyWeakEn(enum class EPlayerID KillCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillAllEnManyWeakEn // (Final|Native|Public|BlueprintCallable) // @ game+0x11a02c0
	bool BrainTalkBt_KillAllEnManyEn(enum class EPlayerID KillCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillAllEnManyEn // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0230
	bool BrainTalkBt_KillAllEnForPT(enum class EPlayerID KillCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillAllEnForPT // (Final|Native|Public|BlueprintCallable) // @ game+0x11a01a0
	bool BrainTalkBt_KillAllEnForPL(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_KillAllEnForPL // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0170
	bool BrainTalkBt_JumpOff(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_JumpOff // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0140
	bool BrainTalkBt_Hp30p(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_Hp30p // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0110
	bool BrainTalkBt_HiKizunaEffect(enum class EPlayerID hologramPlayerID); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_HiKizunaEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0080
	bool BrainTalkBt_GetQuestTgtItem(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_GetQuestTgtItem // (Final|Native|Public|BlueprintCallable) // @ game+0x11a0050
	bool BrainTalkBt_GetItem(enum class EItemRarity rarity); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_GetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x119ffc0
	bool BrainTalkBt_GatherPoint(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_GatherPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x119ff90
	bool BrainTalkBt_FirstStrike(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_FirstStrike // (Final|Native|Public|BlueprintCallable) // @ game+0x119ff60
	bool BrainTalkBt_EquipStrongestWeapon(enum class EPlayerID EquiCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_EquipStrongestWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x119fed0
	bool BrainTalkBt_EnemyDrop(enum class EItemRarity rarity); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_EnemyDrop // (Final|Native|Public|BlueprintCallable) // @ game+0x119fe40
	bool BrainTalkBt_EnemyDown(enum class EPlayerID DownCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_EnemyDown // (Final|Native|Public|BlueprintCallable) // @ game+0x119fdb0
	bool BrainTalkBt_EnBerserkSign(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_EnBerserkSign // (Final|Native|Public|BlueprintCallable) // @ game+0x119fd80
	bool BrainTalkBt_EnBerserk(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_EnBerserk // (Final|Native|Public|BlueprintCallable) // @ game+0x119fd50
	bool BrainTalkBt_DriveGaugeMax(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DriveGaugeMax // (Final|Native|Public|BlueprintCallable) // @ game+0x119fd20
	bool BrainTalkBt_DriveActive(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DriveActive // (Final|Native|Public|BlueprintCallable) // @ game+0x119fcf0
	bool BrainTalkBt_DispCrashTrg(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DispCrashTrg // (Final|Native|Public|BlueprintCallable) // @ game+0x119fcc0
	bool BrainTalkBt_DiscStrEn(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DiscStrEn // (Final|Native|Public|BlueprintCallable) // @ game+0x119fc90
	bool BrainTalkBt_DiscStealth(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DiscStealth // (Final|Native|Public|BlueprintCallable) // @ game+0x119fc60
	bool BrainTalkBt_DiscSasValidEn(enum class E_SASKindNative SasEffect); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DiscSasValidEn // (Final|Native|Public|BlueprintCallable) // @ game+0x119fbd0
	bool BrainTalkBt_DiscQuestEnemy(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DiscQuestEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x119fba0
	bool BrainTalkBt_DiscEn(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DiscEn // (Final|Native|Public|BlueprintCallable) // @ game+0x119fb70
	bool BrainTalkBt_DestroyShell(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DestroyShell // (Final|Native|Public|BlueprintCallable) // @ game+0x119fb40
	bool BrainTalkBt_DeadInarow(int32_t DeadNum); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DeadInarow // (Final|Native|Public|BlueprintCallable) // @ game+0x119fab0
	bool BrainTalkBt_DamageTakeOver(enum class EPlayerID TakeOverCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_DamageTakeOver // (Final|Native|Public|BlueprintCallable) // @ game+0x119fa20
	bool BrainTalkBt_ClearQuest(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_ClearQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x119f9f0
	bool BrainTalkBt_BrainCrashByEn(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_BrainCrashByEn // (Final|Native|Public|BlueprintCallable) // @ game+0x119f9c0
	bool BrainTalkBt_BirthKizunaEp(enum class EPlayerID EpCharacter); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_BirthKizunaEp // (Final|Native|Public|BlueprintCallable) // @ game+0x119f930
	bool BrainTalkBt_BFActivate(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_BFActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x119f730
	bool BrainTalkBt_BattleEscape(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_BattleEscape // (Final|Native|Public|BlueprintCallable) // @ game+0x119f900
	bool BrainTalkBt_BadStateForEn(enum class EPlayerID BadStateMember, enum class HCSkillAttribute BadState); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_BadStateForEn // (Final|Native|Public|BlueprintCallable) // @ game+0x119f830
	bool BrainTalkBt_BadStateByEn(enum class EPlayerID BadStateMember, enum class HCSkillAttribute BadState); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_BadStateByEn // (Final|Native|Public|BlueprintCallable) // @ game+0x119f760
	bool BrainTalkBt_AttackEnWeak(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_AttackEnWeak // (Final|Native|Public|BlueprintCallable) // @ game+0x119f700
	bool BrainTalkBt_AttackEnShell(); // Function BattlePrototype.BrainTalkManager.BrainTalkBt_AttackEnShell // (Final|Native|Public|BlueprintCallable) // @ game+0x119f6d0
	void BPFL_PauseBrainTalkAtStartTalkEventBefore(); // Function BattlePrototype.BrainTalkManager.BPFL_PauseBrainTalkAtStartTalkEventBefore // (Final|Native|Public|BlueprintCallable) // @ game+0x119f6b0
	void BPFL_PauseBrainTalkAtEndTalkEventAfter(); // Function BattlePrototype.BrainTalkManager.BPFL_PauseBrainTalkAtEndTalkEventAfter // (Final|Native|Public|BlueprintCallable) // @ game+0x119f690
	void AddBrainTalkMasterDataQueList(struct FBrainTalkMasterData Data, struct FBrainTalk_CategoryDatatable categoryDatatable); // Function BattlePrototype.BrainTalkManager.AddBrainTalkMasterDataQueList // (Final|Native|Public|BlueprintCallable) // @ game+0x119f450
};

// Class BattlePrototype.BSPBlockBase
// Size: 0x238 (Inherited: 0x230)
struct ABSPBlockBase : ARSActorSystemBase {
	struct UBrushComponent* BrushComponent; // 0x230(0x08)
};

// Class BattlePrototype.BSPBlockVolume
// Size: 0x310 (Inherited: 0x2b8)
struct ABSPBlockVolume : AAudioVolume {
	struct FMulticastInlineDelegate OnBSPVolumeBeginOverlap; // 0x2b8(0x10)
	struct FMulticastInlineDelegate OnBSPVolumeEndOverlap; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnBSPVolumeHit; // 0x2d8(0x10)
	struct TArray<struct ABSPPortalBase*> Portals; // 0x2e8(0x10)
	float CurSoundAttenuationRate; // 0x2f8(0x04)
	float TargetSoundAttenuationRate; // 0x2fc(0x04)
	float SoundSettingInterporateSpeed; // 0x300(0x04)
	float TotalDistanceFromPlayer; // 0x304(0x04)
	int32_t UpdateID; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)

	void UpdateSoundAttenuation(float DeltaSeconds); // Function BattlePrototype.BSPBlockVolume.UpdateSoundAttenuation // (Final|Native|Public|BlueprintCallable) // @ game+0x11a9480
	void SetDistanceFromPlayer(float Distance); // Function BattlePrototype.BSPBlockVolume.SetDistanceFromPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x11a90f0
	void ResetAttenuation(); // Function BattlePrototype.BSPBlockVolume.ResetAttenuation // (Final|Native|Public|BlueprintCallable) // @ game+0x11a90d0
	void PrepareUpdateSoundAttenuation(); // Function BattlePrototype.BSPBlockVolume.PrepareUpdateSoundAttenuation // (Final|Native|Public|BlueprintCallable) // @ game+0x11a90b0
	void OnActorHitFunc(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult Hit); // Function BattlePrototype.BSPBlockVolume.OnActorHitFunc // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x11a8bd0
	void OnActorEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.BSPBlockVolume.OnActorEndOverlapFunc // (Final|Native|Public) // @ game+0x11a8b10
	void OnActorBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.BSPBlockVolume.OnActorBeginOverlapFunc // (Final|Native|Public) // @ game+0x11a8b10
	bool IsInVolume(struct FVector Point, float SphereRadius); // Function BattlePrototype.BSPBlockVolume.IsInVolume // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11a88f0
};

// Class BattlePrototype.BSPManager
// Size: 0x268 (Inherited: 0x230)
struct ABSPManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct FMulticastInlineDelegate OnBlockBeginOverlap; // 0x238(0x10)
	struct FMulticastInlineDelegate OnBlockEndOverlap; // 0x248(0x10)
	struct FMulticastInlineDelegate OnBlockHit; // 0x258(0x10)

	void UpdateBSPAttenuation_Native(float DeltaSeconds, bool isPlayerInBlock, struct TArray<struct ABSPBlockVolume*> areaBlocks, struct TArray<struct ABSPBlockVolume*> BlockWithPlayer, int32_t BlockUpdateID, float MaxSoundDistance); // Function BattlePrototype.BSPManager.UpdateBSPAttenuation_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11a9210
	void UpdateAllAtomBSPAttenuation_Native(); // Function BattlePrototype.BSPManager.UpdateAllAtomBSPAttenuation_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11a91f0
	void OnBlockHitFunc(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult Hit); // Function BattlePrototype.BSPManager.OnBlockHitFunc // (Native|Public|HasOutParms|HasDefaults) // @ game+0x11a8f10
	void OnBlockEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.BSPManager.OnBlockEndOverlapFunc // (Native|Public) // @ game+0x11a8e40
	void OnBlockBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.BSPManager.OnBlockBeginOverlapFunc // (Native|Public) // @ game+0x11a8d70
	struct ABSPBlockVolume* IsPosInAnyBlock_Native(struct TArray<struct ABSPBlockVolume*> areaBlocks, struct FVector Pos); // Function BattlePrototype.BSPManager.IsPosInAnyBlock_Native // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11a89d0
	void GetSoundAttenuationRate_Native(struct TArray<struct ABSPBlockVolume*> areaBlocks, struct FVector Pos, bool isPlayerInBlock, float AttenuationRate, struct ABSPBlockVolume* bLock); // Function BattlePrototype.BSPManager.GetSoundAttenuationRate_Native // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11a86b0
	void GetSoundAttenuationRate_Call(struct FVector Pos, float AttenuationRate); // Function BattlePrototype.BSPManager.GetSoundAttenuationRate_Call // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1685580
	void CalcBSPAttenuationFirstFromPlayer_Native(struct ABSPBlockVolume* pFromBSPVolume, struct TArray<struct ABSPPortalBase*> Portals, struct FVector BasePos, int32_t BlockUpdateID, float MaxSoundDistance); // Function BattlePrototype.BSPManager.CalcBSPAttenuationFirstFromPlayer_Native // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11a83f0
};

// Class BattlePrototype.BSPPortalBase
// Size: 0x258 (Inherited: 0x230)
struct ABSPPortalBase : ARSActorSystemBase {
	struct TArray<struct ABSPBlockVolume*> NearVolumes; // 0x230(0x10)
	float AttenuationBaseRate; // 0x240(0x04)
	float DistanceAttenuationRate; // 0x244(0x04)
	float TotalDistanceFromPlayer; // 0x248(0x04)
	float OpenRate; // 0x24c(0x04)
	int32_t UpdateID; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)

	void SetDistanceFromPlayer(float Distance); // Function BattlePrototype.BSPPortalBase.SetDistanceFromPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x11a9170
	float GetTotalAttenuationRate(); // Function BattlePrototype.BSPPortalBase.GetTotalAttenuationRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11a88c0
	void CheckAndSetUpdateID(int32_t ID, bool IsFirstTime); // Function BattlePrototype.BSPPortalBase.CheckAndSetUpdateID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11a85e0
	void AddNearVolume(struct ABSPBlockVolume* BlockVolume); // Function BattlePrototype.BSPPortalBase.AddNearVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11a8370
};

// Class BattlePrototype.BTDecoratorEnemyBase
// Size: 0xa8 (Inherited: 0x68)
struct UBTDecoratorEnemyBase : UBTDecorator {
	struct AAIController* _AIOwner; // 0x68(0x08)
	struct AActor* _ActorOwner; // 0x70(0x08)
	struct UEnemyScriptComponent* _EnemyScript; // 0x78(0x08)
	struct TArray<struct FName> ObservedKeyNames; // 0x80(0x10)
	char pad_90[0x10]; // 0x90(0x10)
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0xa0(0x01)
	char bIsObservingBB : 1; // 0xa0(0x01)
	char pad_A0_2 : 6; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class BattlePrototype.BTD_DistanceAngleCheck_Native
// Size: 0xd8 (Inherited: 0xa8)
struct UBTD_DistanceAngleCheck_Native : UBTDecoratorEnemyBase {
	struct FBlackboardKeySelector Target; // 0xa8(0x28)
	float Distance; // 0xd0(0x04)
	float Angle; // 0xd4(0x04)
};

// Class BattlePrototype.BTD_Enemy_EnableActionTimer_Native
// Size: 0xd0 (Inherited: 0xa8)
struct UBTD_Enemy_EnableActionTimer_Native : UBTDecoratorEnemyBase {
	struct FBlackboardKeySelector ActionTimerKey; // 0xa8(0x28)
};

// Class BattlePrototype.BTD_Enemy_EnableLostAction_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_EnableLostAction_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_FormType_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_Enemy_FormType_Native : UBTDecoratorEnemyBase {
	enum class EEnemyFormType FormType; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_Enemy_IsAlive_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_Enemy_IsAlive_Native : UBTDecoratorEnemyBase {
	enum class EnemyAliveAnimKind EnemyAliveAnimKind; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_Enemy_IsBadStatus_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_Enemy_IsBadStatus_Native : UBTDecoratorEnemyBase {
	enum class EHCBadState BadStatus; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_Enemy_IsBattle_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsBattle_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsCanFlyModeChange_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsCanFlyModeChange_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsDead_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsDead_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsEnableWander_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsEnableWander_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsForceBreak_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsForceBreak_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsNotWallHit_Native
// Size: 0xb8 (Inherited: 0xa8)
struct UBTD_Enemy_IsNotWallHit_Native : UBTDecoratorEnemyBase {
	float _tmpDistance; // 0xa8(0x04)
	struct FGameTimer _tmpGameTimer; // 0xac(0x0c)
};

// Class BattlePrototype.BTD_Enemy_IsRandom_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_Enemy_IsRandom_Native : UBTDecoratorEnemyBase {
	int32_t Num; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class BattlePrototype.BTD_Enemy_IsSpawnNow_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsSpawnNow_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsSpawnState_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_Enemy_IsSpawnState_Native : UBTDecoratorEnemyBase {
	enum class Enum_EnemySpawnStateNative State; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_Enemy_IsTickEnable_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsTickEnable_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_Enemy_IsWander_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_Enemy_IsWander_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_IsEnemyBattleStart_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_IsEnemyBattleStart_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_IsEnemyDamageAnimKind_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_IsEnemyDamageAnimKind_Native : UBTDecoratorEnemyBase {
	enum class EnemyDamageAnimKind damageKind; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_IsEnemyDamageDownAnimKind_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_IsEnemyDamageDownAnimKind_Native : UBTDecoratorEnemyBase {
	enum class EnemyDamageDownAnimKind DamageDownKind; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_IsEnemyDamageStopAnimKind_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_IsEnemyDamageStopAnimKind_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_IsEnemyKind_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_IsEnemyKind_Native : UBTDecoratorEnemyBase {
	enum class EnemyKind _EnemyKind; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_IsEnemyStopAnimKind_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_IsEnemyStopAnimKind_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_IsEnemyTargetNearRange_Native
// Size: 0xd8 (Inherited: 0xa8)
struct UBTD_IsEnemyTargetNearRange_Native : UBTDecoratorEnemyBase {
	char pad_A8[0x28]; // 0xa8(0x28)
	float NearRange; // 0xd0(0x04)
	bool IsInRange; // 0xd4(0x01)
	char pad_D5[0x3]; // 0xd5(0x03)
};

// Class BattlePrototype.BTD_IsEnemyWait_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_IsEnemyWait_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_IsFlyEnemy_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_IsFlyEnemy_Native : UBTDecoratorEnemyBase {
	bool bIsFlying; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_IsFlyType_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_IsFlyType_Native : UBTDecoratorEnemyBase {
	bool bIsFlying; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTD_IsInitLayout_Native
// Size: 0xa8 (Inherited: 0xa8)
struct UBTD_IsInitLayout_Native : UBTDecoratorEnemyBase {
};

// Class BattlePrototype.BTD_IsMoveAnim_Native
// Size: 0xb0 (Inherited: 0xa8)
struct UBTD_IsMoveAnim_Native : UBTDecoratorEnemyBase {
	enum class EnemyMoveAnimKind _MoveAnimKind; // 0xa8(0x01)
	char pad_A9[0x7]; // 0xa9(0x07)
};

// Class BattlePrototype.BTDecorator_RSPlayerBase
// Size: 0xa0 (Inherited: 0x68)
struct UBTDecorator_RSPlayerBase : UBTDecorator {
	struct AAIController* _AIOwner; // 0x68(0x08)
	struct UPlayerScriptComponent* _PlayerScript; // 0x70(0x08)
	struct TArray<struct FName> ObservedKeyNames; // 0x78(0x10)
	char pad_88[0x10]; // 0x88(0x10)
	char bCheckConditionOnlyBlackBoardChanges : 1; // 0x98(0x01)
	char bIsObservingBB : 1; // 0x98(0x01)
	char pad_98_2 : 6; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class BattlePrototype.BTDecorator_RSPlayerCheckDistanceToPlayer
// Size: 0xa8 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerCheckDistanceToPlayer : UBTDecorator_RSPlayerBase {
	float Distance; // 0xa0(0x04)
	char pad_A4[0x4]; // 0xa4(0x04)
};

// Class BattlePrototype.BTDecorator_RSPlayerIsAssist
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsAssist : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsAttackAble
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsAttackAble : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsBattleMode
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsBattleMode : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsBattleThink
// Size: 0xa8 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsBattleThink : UBTDecorator_RSPlayerBase {
	enum class EPlayerAIBattleThinkTypeCPP ThinkTypeCPP; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class BattlePrototype.BTDecorator_RSPlayerIsBattleThinkParam
// Size: 0xa8 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsBattleThinkParam : UBTDecorator_RSPlayerBase {
	enum class EPlayerAIBattleThinkParamCPP ThinkParamCPP; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class BattlePrototype.BTDecorator_RSPlayerIsBrainField
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsBrainField : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsDamage
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsDamage : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsDead
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsDead : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsDodgeAble
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsDodgeAble : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsDown
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsDown : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsEvent
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsEvent : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsEventMove
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsEventMove : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsEventWait
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsEventWait : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsJump
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsJump : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsMoveAble
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsMoveAble : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsNoThink
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsNoThink : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsPlayerRevive
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsPlayerRevive : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsPsychicAble
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsPsychicAble : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsResetBehaviorTree
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsResetBehaviorTree : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsReviveNpc
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsReviveNpc : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTDecorator_RSPlayerIsUseCppFunc
// Size: 0xa8 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsUseCppFunc : UBTDecorator_RSPlayerBase {
	bool bEnable; // 0xa0(0x01)
	char pad_A1[0x7]; // 0xa1(0x07)
};

// Class BattlePrototype.BTDecorator_RSPlayerIsUseItem
// Size: 0xa0 (Inherited: 0xa0)
struct UBTDecorator_RSPlayerIsUseItem : UBTDecorator_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSNativeBase
// Size: 0xa0 (Inherited: 0x70)
struct UBTTask_RSNativeBase : UBTTaskNode {
	struct AAIController* _AIOwner; // 0x70(0x08)
	struct FIntervalCountdown TickInterval; // 0x78(0x08)
	char pad_80[0x18]; // 0x80(0x18)
	char ReceiveTickImplementations : 1; // 0x98(0x01)
	char pad_98_1 : 7; // 0x98(0x01)
	char pad_99[0x7]; // 0x99(0x07)
};

// Class BattlePrototype.BTTask_RSPlayerBase
// Size: 0xa8 (Inherited: 0xa0)
struct UBTTask_RSPlayerBase : UBTTask_RSNativeBase {
	struct UPlayerScriptComponent* _PlayerScript; // 0xa0(0x08)
};

// Class BattlePrototype.BTTask_RSPlayerBattleStart
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerBattleStart : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerBrainField
// Size: 0xb8 (Inherited: 0xa8)
struct UBTTask_RSPlayerBrainField : UBTTask_RSPlayerBase {
	struct FGameTimer Timer; // 0xa8(0x0c)
	char pad_B4[0x4]; // 0xb4(0x04)
};

// Class BattlePrototype.BTTask_RSPlayerDamage
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerDamage : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerDead
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerDead : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerDown
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerDown : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerEvent
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerEvent : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerEventWait
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerEventWait : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerJump
// Size: 0xb8 (Inherited: 0xa8)
struct UBTTask_RSPlayerJump : UBTTask_RSPlayerBase {
	bool bPress; // 0xa8(0x01)
	char pad_A9[0x3]; // 0xa9(0x03)
	struct FGameTimer Timer; // 0xac(0x0c)
};

// Class BattlePrototype.BTTask_RSPlayerMoveToBase
// Size: 0xe0 (Inherited: 0xa8)
struct UBTTask_RSPlayerMoveToBase : UBTTask_RSPlayerBase {
	float AcceptionRadius; // 0xa8(0x04)
	bool bJumpCheck; // 0xac(0x01)
	bool bWallBackCheck; // 0xad(0x01)
	bool bExit; // 0xae(0x01)
	bool bInputMoveMode; // 0xaf(0x01)
	struct FGameTimer Timer; // 0xb0(0x0c)
	int32_t Step; // 0xbc(0x04)
	struct FGameTimer CheckWallTimer; // 0xc0(0x0c)
	float CheckJumpInterval; // 0xcc(0x04)
	struct FGameTimer BackInputTimer; // 0xd0(0x0c)
	enum class EPlayerAIMoveWallCPP WallTypeCPP; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
};

// Class BattlePrototype.BTTask_RSPlayerMoveRoute
// Size: 0xe0 (Inherited: 0xe0)
struct UBTTask_RSPlayerMoveRoute : UBTTask_RSPlayerMoveToBase {
};

// Class BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase
// Size: 0x170 (Inherited: 0xa8)
struct UBTTask_RSPlayerMoveTo_BlueprintBase : UBTTask_BlueprintBase {
	struct ARSCharacterBase* OwnerCharacter; // 0xa8(0x08)
	struct UPlayerScriptComponent* OwnerPlayerScript; // 0xb0(0x08)
	struct UPlayerAIBaseComponent* OwnerPlayerAIComponent; // 0xb8(0x08)
	float AcceptionRadius; // 0xc0(0x04)
	float AcceptionHeight; // 0xc4(0x04)
	bool bExit; // 0xc8(0x01)
	bool bInputMoveMode; // 0xc9(0x01)
	char pad_CA[0x2]; // 0xca(0x02)
	struct FGameTimer ResetAIMoveToTimer; // 0xcc(0x0c)
	int32_t Step; // 0xd8(0x04)
	bool bJumpCheck; // 0xdc(0x01)
	bool bNeedsJumpCheckCurrent; // 0xdd(0x01)
	char pad_DE[0x2]; // 0xde(0x02)
	float JumpCheckMoveSpeedRatioThreshold; // 0xe0(0x04)
	struct FGameTimer CheckWallTimer; // 0xe4(0x0c)
	float CheckJumpInterval; // 0xf0(0x04)
	struct FGameTimer BackInputTimer; // 0xf4(0x0c)
	struct FGameTimer DetourInputTimer; // 0x100(0x0c)
	float DetourInputDuration; // 0x10c(0x04)
	float DetourInputBeginYawAngle; // 0x110(0x04)
	float DetourInputDurationShort; // 0x114(0x04)
	float DetourInputBeginYawAngleShort; // 0x118(0x04)
	float DetourInputDurationRateWalk; // 0x11c(0x04)
	float DetourInputDurationRateRun; // 0x120(0x04)
	float DetourInputDurationRateSprint; // 0x124(0x04)
	float DetourInputRotateDirection; // 0x128(0x04)
	float DetourInputBeginYawAngleCurrent; // 0x12c(0x04)
	enum class EPlayerAIMoveWallCPP WallTypeCPP; // 0x130(0x01)
	bool bWallBackCheck; // 0x131(0x01)
	char pad_132[0x2]; // 0x132(0x02)
	float ForceWallBackNotMovedTime; // 0x134(0x04)
	bool bWallDetourCheck; // 0x138(0x01)
	bool bAIMoving; // 0x139(0x01)
	bool bEnemyCheck; // 0x13a(0x01)
	bool bWarpCheck; // 0x13b(0x01)
	struct FVector2D MovedDistanceCurrent; // 0x13c(0x08)
	struct FVector2D MovedDistancePrevLocation; // 0x144(0x08)
	float MovedDistanceCheckTimer; // 0x14c(0x04)
	float MovedDistanceCheckInterval; // 0x150(0x04)
	float MovedDistanceThreshold; // 0x154(0x04)
	float NotMovedElapsedTime; // 0x158(0x04)
	float ForceWarpThresholdTime; // 0x15c(0x04)
	bool bForceWarpRequest; // 0x160(0x01)
	bool bChangeWalkOrRun; // 0x161(0x01)
	char pad_162[0x2]; // 0x162(0x02)
	float WalkingDistanceMax; // 0x164(0x04)
	float RunningDistanceMin; // 0x168(0x04)
	bool bWalking; // 0x16c(0x01)
	char pad_16D[0x3]; // 0x16d(0x03)

	void TickMoveCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.TickMoveCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ad9a0
	void StopAIMoveToCPP(bool bRechargeResetAIMoveTimer); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.StopAIMoveToCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ad7e0
	void SetAIMoveTo_CallFromCPP(struct AAIController* OwnerController, struct APawn* ControlledPawn); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.SetAIMoveTo_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UPlayerScriptComponent* GetOwnerPlayerScript(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.GetOwnerPlayerScript // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad2c0
	struct UPlayerAIBaseComponent* GetOwnerPlayerAI(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.GetOwnerPlayerAI // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad290
	struct ARSCharacterBase* GetOwnerCharacter(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.GetOwnerCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad260
	void ForceWarpCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.ForceWarpCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ad0d0
	void ExitCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.ExitCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ad0b0
	void Exit_CallFromCPP(struct AAIController* OwnerController, struct APawn* ControlledPawn); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.Exit_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CheckWallCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckWallCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ad060
	bool CheckStickMoveEndCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckStickMoveEndCPP // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad030
	bool CheckPlayerIsRun(struct ARSCharacterBase* Character); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckPlayerIsRun // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11acfa0
	bool CheckMoveDistance_IsEndCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckMoveDistance_IsEndCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11aced0
	void CheckMovedDistance_TickCPP(float DeltaSeconds); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckMovedDistance_TickCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11acf20
	void CheckMovedDistance_InitializeCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckMovedDistance_InitializeCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11acf00
	bool CheckDistanceXY_Z_CPP(struct FVector Location1, struct FVector Location2, float DistanceXY, float DistanceZ); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckDistanceXY_Z_CPP // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11acd40
	bool CheckDistanceXY_CPP(struct FVector Location1, struct FVector Location2, float DistanceXY); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckDistanceXY_CPP // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11acc10
	bool CheckAvoidWallOrWarpCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckAvoidWallOrWarpCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x11acbe0
	bool CheckArrivedGoalCPP(); // Function BattlePrototype.BTTask_RSPlayerMoveTo_BlueprintBase.CheckArrivedGoalCPP // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11acbb0
};

// Class BattlePrototype.BTTask_RSPlayerMoveToHero
// Size: 0xe0 (Inherited: 0xe0)
struct UBTTask_RSPlayerMoveToHero : UBTTask_RSPlayerMoveToBase {
};

// Class BattlePrototype.BTTask_RSPlayerMoveToRevive
// Size: 0xe0 (Inherited: 0xe0)
struct UBTTask_RSPlayerMoveToRevive : UBTTask_RSPlayerMoveToBase {
};

// Class BattlePrototype.BTTask_RSPlayerNextBattleThink
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerNextBattleThink : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerPlayerRevive
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerPlayerRevive : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerResetBehaviorTree
// Size: 0xa8 (Inherited: 0xa8)
struct UBTTask_RSPlayerResetBehaviorTree : UBTTask_RSPlayerBase {
};

// Class BattlePrototype.BTTask_RSPlayerUseItem
// Size: 0xb0 (Inherited: 0xa8)
struct UBTTask_RSPlayerUseItem : UBTTask_RSPlayerBase {
	int32_t Step; // 0xa8(0x04)
	char pad_AC[0x4]; // 0xac(0x04)
};

// Class BattlePrototype.CalcMemoryManager
// Size: 0xa8 (Inherited: 0x28)
struct UCalcMemoryManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	enum class CalcMode CurCalcMode; // 0x30(0x01)
	char pad_31[0x3]; // 0x31(0x03)
	int32_t ListIndex; // 0x34(0x04)
	bool bStartCalcMemory; // 0x38(0x01)
	bool bCalcPlayer; // 0x39(0x01)
	bool bCalcEnemy; // 0x3a(0x01)
	bool bCalcNPC; // 0x3b(0x01)
	bool bCalcObject; // 0x3c(0x01)
	bool bCalcLevel; // 0x3d(0x01)
	bool bCancel; // 0x3e(0x01)
	bool bRequestLevel; // 0x3f(0x01)
	char pad_40[0x8]; // 0x40(0x08)
	struct TArray<struct UAssetMemoryData*> AssetInfos; // 0x48(0x10)
	struct UAnyObjectCreator* CreateObject; // 0x58(0x08)
	struct TArray<struct UAssetMemoryData*> LevelInfos; // 0x60(0x10)
	int32_t CurrentIndex; // 0x70(0x04)
	float WaitTimer; // 0x74(0x04)
	bool bFinishedCurrentAsset; // 0x78(0x01)
	bool bExecLevel; // 0x79(0x01)
	char pad_7A[0x2]; // 0x7a(0x02)
	int32_t CurrentLevelIndex; // 0x7c(0x04)
	enum class CalcProcess MyProcess; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	uint64_t PreUsedPhysical; // 0x88(0x08)
	uint64_t PreUsedVirtual; // 0x90(0x08)
	uint64_t PostUsedPhysical; // 0x98(0x08)
	uint64_t PostUsedVirtual; // 0xa0(0x08)

	void SwitchCalcTargetPlayer(); // Function BattlePrototype.CalcMemoryManager.SwitchCalcTargetPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad980
	void SwitchCalcTargetObject(); // Function BattlePrototype.CalcMemoryManager.SwitchCalcTargetObject // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad960
	void SwitchCalcTargetNPC(); // Function BattlePrototype.CalcMemoryManager.SwitchCalcTargetNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad940
	void SwitchCalcTargetLevel(); // Function BattlePrototype.CalcMemoryManager.SwitchCalcTargetLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad920
	void SwitchCalcTargetEnemy(); // Function BattlePrototype.CalcMemoryManager.SwitchCalcTargetEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad900
	enum class CalcMode SwitchCalcMode(bool isLevel); // Function BattlePrototype.CalcMemoryManager.SwitchCalcMode // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad870
	void StartCurrentAsset(); // Function BattlePrototype.CalcMemoryManager.StartCurrentAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad7c0
	void StartCalcMemory(); // Function BattlePrototype.CalcMemoryManager.StartCalcMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad7a0
	void StartCalcLevel(); // Function BattlePrototype.CalcMemoryManager.StartCalcLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad780
	void SetCancel(); // Function BattlePrototype.CalcMemoryManager.SetCancel // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad760
	void SelectPrevPageAsset(); // Function BattlePrototype.CalcMemoryManager.SelectPrevPageAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad740
	void SelectPrevAsset(int32_t subValue); // Function BattlePrototype.CalcMemoryManager.SelectPrevAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad6c0
	void SelectNextPageAsset(); // Function BattlePrototype.CalcMemoryManager.SelectNextPageAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad6a0
	void SelectNextAsset(int32_t addValue); // Function BattlePrototype.CalcMemoryManager.SelectNextAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad620
	void ResetStartCalcMemory(); // Function BattlePrototype.CalcMemoryManager.ResetStartCalcMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad600
	void ResetCalcMemory(); // Function BattlePrototype.CalcMemoryManager.ResetCalcMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad5e0
	void RefleshSelectAsset(); // Function BattlePrototype.CalcMemoryManager.RefleshSelectAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad5c0
	void ReadyNextAsset(); // Function BattlePrototype.CalcMemoryManager.ReadyNextAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad5a0
	void PrintLevelInfo(); // Function BattlePrototype.CalcMemoryManager.PrintLevelInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void PreMeasureLevel(); // Function BattlePrototype.CalcMemoryManager.PreMeasureLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad580
	void PostMeasureLevel(); // Function BattlePrototype.CalcMemoryManager.PostMeasureLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad560
	bool IsStartCalcMemory(); // Function BattlePrototype.CalcMemoryManager.IsStartCalcMemory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xae4f00
	bool IsRequestLevel(); // Function BattlePrototype.CalcMemoryManager.IsRequestLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad530
	bool IsReadyCurrentAsset(); // Function BattlePrototype.CalcMemoryManager.IsReadyCurrentAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad500
	bool IsFinishedCurrentAsset(); // Function BattlePrototype.CalcMemoryManager.IsFinishedCurrentAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad4d0
	bool IsFinished(); // Function BattlePrototype.CalcMemoryManager.IsFinished // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad4a0
	bool IsExecLevel(); // Function BattlePrototype.CalcMemoryManager.IsExecLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad470
	bool IsExec(); // Function BattlePrototype.CalcMemoryManager.IsExec // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad440
	bool IsCancel(); // Function BattlePrototype.CalcMemoryManager.IsCancel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad420
	bool IsCalcTargetPlayer(); // Function BattlePrototype.CalcMemoryManager.IsCalcTargetPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xae4fb0
	bool IsCalcTargetObject(); // Function BattlePrototype.CalcMemoryManager.IsCalcTargetObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad400
	bool IsCalcTargetNPC(); // Function BattlePrototype.CalcMemoryManager.IsCalcTargetNPC // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad3e0
	bool IsCalcTargetLevel(); // Function BattlePrototype.CalcMemoryManager.IsCalcTargetLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad3c0
	bool IsCalcTargetEnemy(); // Function BattlePrototype.CalcMemoryManager.IsCalcTargetEnemy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xae4fd0
	void IncrementLevel(); // Function BattlePrototype.CalcMemoryManager.IncrementLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad3a0
	enum class CalcTarget IncrementCalcTarget(); // Function BattlePrototype.CalcMemoryManager.IncrementCalcTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad370
	struct FString GetStatusText(); // Function BattlePrototype.CalcMemoryManager.GetStatusText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad2f0
	struct FString GetLevelStatusText(); // Function BattlePrototype.CalcMemoryManager.GetLevelStatusText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad1e0
	struct FString GetIndividualStatusText(); // Function BattlePrototype.CalcMemoryManager.GetIndividualStatusText // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad160
	struct FName GetCurrentLevelName(); // Function BattlePrototype.CalcMemoryManager.GetCurrentLevelName // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad120
	enum class CalcMode GetCalcMode(); // Function BattlePrototype.CalcMemoryManager.GetCalcMode // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad0f0
	enum class CalcTarget DecrementCalcTarget(); // Function BattlePrototype.CalcMemoryManager.DecrementCalcTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad080
	void CancelLevel(); // Function BattlePrototype.CalcMemoryManager.CancelLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11acb90
	void CalcMemory(); // Function BattlePrototype.CalcMemoryManager.CalcMemory // (Final|Native|Public|BlueprintCallable) // @ game+0x11acb70
};

// Class BattlePrototype.CameraInterface
// Size: 0x28 (Inherited: 0x28)
struct UCameraInterface : UInterface {

	bool SetPlayerCameraViewTarget(float BlendTime, enum class EViewTargetBlendFunction BlendFunc, float BlendExp); // Function BattlePrototype.CameraInterface.SetPlayerCameraViewTarget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerCameraRotation(struct FRotator Rot); // Function BattlePrototype.CameraInterface.SetPlayerCameraRotation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerCameraMode(enum class EPlayerCameraMode Mode); // Function BattlePrototype.CameraInterface.SetPlayerCameraMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerCameraLocation(struct FVector Pos); // Function BattlePrototype.CameraInterface.SetPlayerCameraLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerCameraFieldOfView(float FOV); // Function BattlePrototype.CameraInterface.SetPlayerCameraFieldOfView // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerCameraDirection(struct FVector Pos); // Function BattlePrototype.CameraInterface.SetPlayerCameraDirection // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FRotator GetRemoteActorRotation(); // Function BattlePrototype.CameraInterface.GetRemoteActorRotation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x11b0530
	struct FVector GetRemoteActorLocation(); // Function BattlePrototype.CameraInterface.GetRemoteActorLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x11b04f0
	struct FRotator GetPlayerCameraRotation(); // Function BattlePrototype.CameraInterface.GetPlayerCameraRotation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EPlayerCameraMode GetPlayerCameraMode(); // Function BattlePrototype.CameraInterface.GetPlayerCameraMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector GetPlayerCameraLocation(); // Function BattlePrototype.CameraInterface.GetPlayerCameraLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float GetPlayerCameraFieldOfView(); // Function BattlePrototype.CameraInterface.GetPlayerCameraFieldOfView // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector GetPlayerCameraDirection(); // Function BattlePrototype.CameraInterface.GetPlayerCameraDirection // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector GetCameraLookAtPos(); // Function BattlePrototype.CameraInterface.GetCameraLookAtPos // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.CameraPropertyMediatorComponent
// Size: 0x150 (Inherited: 0xc0)
struct UCameraPropertyMediatorComponent : UActorComponent {
	float PitchNoMove; // 0xc0(0x04)
	char pad_C4[0x8c]; // 0xc4(0x8c)

	void SetTargetArmLengthPitchByObject(struct UObject* Object, float Length, float Pitch, float KeepSec, float InterpSec, enum class EEasingFunc InterpType); // Function BattlePrototype.CameraPropertyMediatorComponent.SetTargetArmLengthPitchByObject // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0fc0
	void SetTargetArmLengthPitchByName(struct FName Name, float Length, float Pitch, float KeepSec, float InterpSec, enum class EEasingFunc InterpType); // Function BattlePrototype.CameraPropertyMediatorComponent.SetTargetArmLengthPitchByName // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0e00
	void SetControlledCameraByOwner(); // Function BattlePrototype.CameraPropertyMediatorComponent.SetControlledCameraByOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0c10
	bool IsRestoreCamera(); // Function BattlePrototype.CameraPropertyMediatorComponent.IsRestoreCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b0850
	struct UCameraPropertyMediatorComponent* GetCameraPropertyMediatorComponentFromActor(struct AActor* Actor); // Function BattlePrototype.CameraPropertyMediatorComponent.GetCameraPropertyMediatorComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b00e0
	void ClearTargetArmLengthPitchByObject(struct UObject* Object); // Function BattlePrototype.CameraPropertyMediatorComponent.ClearTargetArmLengthPitchByObject // (Final|Native|Public|BlueprintCallable) // @ game+0x11afe50
	void ClearTargetArmLengthPitchByName(struct FName Name); // Function BattlePrototype.CameraPropertyMediatorComponent.ClearTargetArmLengthPitchByName // (Final|Native|Public|BlueprintCallable) // @ game+0x11afdd0
};

// Class BattlePrototype.ChangeMinimapStateComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UChangeMinimapStateComponent : UActorComponent {
	bool IsAccessed; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float SquareDistance; // 0xc4(0x04)
	float HeightDifference; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)

	void InitializeParam(bool isAlreadyAccessed, float checkDistance, float HeightDifference); // Function BattlePrototype.ChangeMinimapStateComponent.InitializeParam // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0620
};

// Class BattlePrototype.ChangeMinimapStateInterface
// Size: 0x28 (Inherited: 0x28)
struct UChangeMinimapStateInterface : UInterface {
};

// Class BattlePrototype.ChangeWeakStateComponentBase
// Size: 0x1e8 (Inherited: 0xc0)
struct UChangeWeakStateComponentBase : UActorComponent {
	float mWeakFullInactiveTime; // 0xc0(0x04)
	float mElapsedWeakFullInactiveTime; // 0xc4(0x04)
	bool mFullInactiveWeak; // 0xc8(0x01)
	char pad_C9[0x3]; // 0xc9(0x03)
	float mFullInactiveColorMapValueMin; // 0xcc(0x04)
	float mFullInactiveColorMapValueMax; // 0xd0(0x04)
	float mFullInactiveFrenelColorPowerMin; // 0xd4(0x04)
	float mFullInactiveFrenelColorPowerMax; // 0xd8(0x04)
	bool mForceEnableWeak; // 0xdc(0x01)
	char pad_DD[0x3]; // 0xdd(0x03)
	float mForceEnableWeakTime; // 0xe0(0x04)
	float mElapsedForceEnableWeakTime; // 0xe4(0x04)
	bool mStartWeakEmissive; // 0xe8(0x01)
	char pad_E9[0x7]; // 0xe9(0x07)
	struct UCurveFloat* mWeakMaterialEmissiveCurve; // 0xf0(0x08)
	struct TArray<struct FEnemyWeakMaterialData> mWeakMaterialList; // 0xf8(0x10)
	float mWeakEmissiveTime; // 0x108(0x04)
	char pad_10C[0x4]; // 0x10c(0x04)
	struct TArray<struct FEnemyWeakMaterialData> mDisableWeakMaterialList; // 0x110(0x10)
	float mDisableWeakEmissiveTime; // 0x120(0x04)
	float mWeakExtendTime; // 0x124(0x04)
	bool mbWeakExtendTime; // 0x128(0x01)
	char pad_129[0x3]; // 0x129(0x03)
	float mCurrentWeakExtendTime; // 0x12c(0x04)
	struct TArray<int32_t> mDisableWeakNumList; // 0x130(0x10)
	bool mEnableWeakExtendTime; // 0x140(0x01)
	char pad_141[0x3]; // 0x141(0x03)
	float mMaxExtendTime; // 0x144(0x04)
	float mAddFirstExtendTime; // 0x148(0x04)
	float mAddPconExtendTime; // 0x14c(0x04)
	bool mChangeWeakState; // 0x150(0x01)
	char pad_151[0x7]; // 0x151(0x07)
	struct TArray<struct FEnemyEnableWeakData> mEnableWeakDataList; // 0x158(0x10)
	struct TArray<bool> mBeforeWeakStateList; // 0x168(0x10)
	struct TArray<float> mCurrentTimeList; // 0x178(0x10)
	struct TArray<bool> mEnableWeakList; // 0x188(0x10)
	struct TArray<bool> mChangeWeakMaterial; // 0x198(0x10)
	struct TArray<bool> mFullInactivateList; // 0x1a8(0x10)
	struct TArray<bool> mChangeFullInactiveList; // 0x1b8(0x10)
	struct UCurveFloat* mWeakMaterialRateCurveData; // 0x1c8(0x08)
	char pad_1D0[0x18]; // 0x1d0(0x18)

	void Update_Native(float DeltaSec); // Function BattlePrototype.ChangeWeakStateComponentBase.Update_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b1570
	void StoreWeakState_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.StoreWeakState_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b1490
	void StartFullInactiveWeak_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.StartFullInactiveWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b1470
	void StartForceEnableWeak_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.StartForceEnableWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b1450
	void SetFullInactiveWeak_Native(bool FullInactive, int32_t WeakListNum); // Function BattlePrototype.ChangeWeakStateComponentBase.SetFullInactiveWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0d40
	void SetEnableWeakExtendTime_Native(bool EnableExtend); // Function BattlePrototype.ChangeWeakStateComponentBase.SetEnableWeakExtendTime_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0cc0
	void SetChangeWeakMaterial_Native(bool bChange, int32_t WeakListNum); // Function BattlePrototype.ChangeWeakStateComponentBase.SetChangeWeakMaterial_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0b50
	void SetAllWeakFullInactive_Native(bool bFullInactive); // Function BattlePrototype.ChangeWeakStateComponentBase.SetAllWeakFullInactive_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0a10
	void RestoreWeakState_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.RestoreWeakState_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b09f0
	bool IsWeakFullInactive_Native(int32_t WeakListNum); // Function BattlePrototype.ChangeWeakStateComponentBase.IsWeakFullInactive_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b08a0
	bool IsWeakExtendTime_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.IsWeakExtendTime_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b0880
	bool IsForceEnableWeak_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.IsForceEnableWeak_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b0800
	bool IsEnableWeakExtendTime_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.IsEnableWeakExtendTime_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b07e0
	bool IsAllWeakFullInactive_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.IsAllWeakFullInactive_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b07b0
	void Initialize_Native(bool isChangeWeakState); // Function BattlePrototype.ChangeWeakStateComponentBase.Initialize_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0720
	struct TArray<bool> GetFullInactiveList_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.GetFullInactiveList_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b0220
	void ForceDisableAllWeak_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.ForceDisableAllWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0080
	void EndWeakExtendTime_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.EndWeakExtendTime_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0060
	void EndFullInactiveWeak_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.EndFullInactiveWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0040
	void EndForceEnableWeak_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.EndForceEnableWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0020
	void EnableWeak_Native(bool bEnable, int32_t WeakListNum); // Function BattlePrototype.ChangeWeakStateComponentBase.EnableWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11aff60
	void EnableAllWeak_Native(bool bEnable); // Function BattlePrototype.ChangeWeakStateComponentBase.EnableAllWeak_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11afed0
	void ClearChangeWeakMaterial_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.ClearChangeWeakMaterial_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11afdb0
	void AddWeakExtendTime_Native(); // Function BattlePrototype.ChangeWeakStateComponentBase.AddWeakExtendTime_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11afd90
};

// Class BattlePrototype.CharacterDatatableAccessorComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UCharacterDatatableAccessorComponent : UActorComponent {
	struct FAttackCalcInfo _attackCalcInfo; // 0xc0(0x10)

	void SetAttackCalcInfo(struct FAttackCalcInfo AttackCalcInfo); // Function BattlePrototype.CharacterDatatableAccessorComponent.SetAttackCalcInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b0aa0
	void InheritAttackCalcInfo(struct AActor* Parent, struct AActor* child); // Function BattlePrototype.CharacterDatatableAccessorComponent.InheritAttackCalcInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11b0570
	struct FCharactersParameterTable GetParamTable(); // Function BattlePrototype.CharacterDatatableAccessorComponent.GetParamTable // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11b0410
	struct FCharactersParameterBasic GetParamBasic(); // Function BattlePrototype.CharacterDatatableAccessorComponent.GetParamBasic // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11b02e0
	struct FDamageCalcInfo GetDamageCalcInfo(); // Function BattlePrototype.CharacterDatatableAccessorComponent.GetDamageCalcInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11b01e0
	struct UCharacterDatatableAccessorComponent* GetCharacterDatatableAccessorComponent(struct AActor* Actor); // Function BattlePrototype.CharacterDatatableAccessorComponent.GetCharacterDatatableAccessorComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b0160
	struct FAttackCalcInfo GetAttackCalcInfo(); // Function BattlePrototype.CharacterDatatableAccessorComponent.GetAttackCalcInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11b00a0
};

// Class BattlePrototype.CharacterDitherDataAsset
// Size: 0x38 (Inherited: 0x30)
struct UCharacterDitherDataAsset : UDataAsset {
	float DitherSpeed; // 0x30(0x04)
	char pad_34[0x4]; // 0x34(0x04)
};

// Class BattlePrototype.CharacterHitCheckComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UCharacterHitCheckComponent : UActorComponent {
	char pad_C0[0x18]; // 0xc0(0x18)

	void UnregisterHitCheck(struct UCapsuleComponent* Capsule0, struct UCapsuleComponent* Capsule1); // Function BattlePrototype.CharacterHitCheckComponent.UnregisterHitCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11b14b0
	void SetEnable(bool bEnable); // Function BattlePrototype.CharacterHitCheckComponent.SetEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0c30
	void RegisterHitCheck(struct UCapsuleComponent* Capsule0, struct UCapsuleComponent* Capsule1); // Function BattlePrototype.CharacterHitCheckComponent.RegisterHitCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11b0930
	bool IsRegisteredAny(); // Function BattlePrototype.CharacterHitCheckComponent.IsRegisteredAny // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b0820
	struct ARSCharacterBase* GetRegisteredHitCharacter(int32_t Index); // Function BattlePrototype.CharacterHitCheckComponent.GetRegisteredHitCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b0460
	int32_t GetRegisteredCount(); // Function BattlePrototype.CharacterHitCheckComponent.GetRegisteredCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118de10
};

// Class BattlePrototype.CharacterMaterialLightFunction
// Size: 0x28 (Inherited: 0x28)
struct UCharacterMaterialLightFunction : UBlueprintFunctionLibrary {

	void SetupCharacterMaterialLight(struct UMeshComponent* MeshComponent, struct FCharacterMaterialLightSetting LightSetting, struct TMap<struct FName, struct FArrayOfFloat> DefaultScalars, struct TMap<struct FName, struct FArrayOfLinearColor> DefaultVectors, float Rate); // Function BattlePrototype.CharacterMaterialLightFunction.SetupCharacterMaterialLight // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x11b1180
};

// Class BattlePrototype.CharactersParameterComponent
// Size: 0x660 (Inherited: 0xc0)
struct UCharactersParameterComponent : UActorComponent {
	struct FMulticastInlineDelegate HpEvent; // 0xc0(0x10)
	struct FMulticastInlineDelegate BadStateOnEvent; // 0xd0(0x10)
	struct FMulticastInlineDelegate BadStateOffEvent; // 0xe0(0x10)
	struct FMulticastInlineDelegate BrainCrashAccessOnEvent; // 0xf0(0x10)
	struct FMulticastInlineDelegate BrainCrashAccessOffEvent; // 0x100(0x10)
	bool mIsUseTick; // 0x110(0x01)
	char pad_111[0x7]; // 0x111(0x07)
	struct FCharactersParameterTable mParamTable; // 0x118(0x1f8)
	struct FCharactersParameterBasic mParamBasic; // 0x310(0x68)
	struct FCharactersParameterTable mParamInitTable; // 0x378(0x1f8)
	bool mIsBrainCrashLock; // 0x570(0x01)
	bool mIsNotUseBrainCrashTimer; // 0x571(0x01)
	char pad_572[0x2]; // 0x572(0x02)
	float mBrainCrashTimer; // 0x574(0x04)
	bool mIsPauseBrainCrashTimer; // 0x578(0x01)
	char pad_579[0x7]; // 0x579(0x07)
	struct FMulticastInlineDelegate OnFinishActor; // 0x580(0x10)
	struct FMulticastInlineDelegate OnDead; // 0x590(0x10)
	bool mIsElectricTimer; // 0x5a0(0x01)
	char pad_5A1[0x2f]; // 0x5a1(0x2f)
	float mBrainCrashTime; // 0x5d0(0x04)
	float mBrainCrashMissAccumulationScale; // 0x5d4(0x04)
	float mFrameBaseTime; // 0x5d8(0x04)
	float mElectricBaseTime; // 0x5dc(0x04)
	float mElectricAddTime; // 0x5e0(0x04)
	float mFloodedBaseTime; // 0x5e4(0x04)
	float mOilBaseTime; // 0x5e8(0x04)
	float mConfusionBaseTime; // 0x5ec(0x04)
	float mAddFrameBaseTime; // 0x5f0(0x04)
	float mAddElectricBaseTime; // 0x5f4(0x04)
	float mOilDownScale; // 0x5f8(0x04)
	float mFloodedMoveScale; // 0x5fc(0x04)
	float mFlameScaleByOil; // 0x600(0x04)
	float mElectricScaleByFlooded; // 0x604(0x04)
	bool mEndlessFlame; // 0x608(0x01)
	bool mEndlessFlooded; // 0x609(0x01)
	bool mEndlessOil; // 0x60a(0x01)
	bool mIsBeforeEndlessFlooded; // 0x60b(0x01)
	bool mIsBeforeEndlessOil; // 0x60c(0x01)
	bool mIsUpdateCrashOldFrame; // 0x60d(0x01)
	char pad_60E[0x2]; // 0x60e(0x02)
	int32_t mUpdateCrashOldFrameCnt; // 0x610(0x04)
	float FlameUpdateTimeRate; // 0x614(0x04)
	float ElectricUpdateTimeRate; // 0x618(0x04)
	float FloodedUpdateTimeRate; // 0x61c(0x04)
	float OilUpdateTimeRate; // 0x620(0x04)
	float ConfusionUpdateTimeRate; // 0x624(0x04)
	char pad_628[0x30]; // 0x628(0x30)
	uint32_t mIgnoreDamageFlag; // 0x658(0x04)
	char pad_65C[0x4]; // 0x65c(0x04)

	void SufferPartDamage(int32_t part, int32_t Damage); // Function BattlePrototype.CharactersParameterComponent.SufferPartDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11b7110
	int32_t SufferDamage(int32_t Damage, bool IsEnemy, bool isNoDead, bool IsDelayDeath, bool isGuts, struct AActor* attacker); // Function BattlePrototype.CharactersParameterComponent.SufferDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6f40
	void StartLimitCrashAccumulation(); // Function BattlePrototype.CharactersParameterComponent.StartLimitCrashAccumulation // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6f20
	void StartDamageReactionAccumulationStopTimer(); // Function BattlePrototype.CharactersParameterComponent.StartDamageReactionAccumulationStopTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6f00
	void SetPauseUpdate(); // Function BattlePrototype.CharactersParameterComponent.SetPauseUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6ee0
	void SetPauseBrainCrashTimer(bool bPause); // Function BattlePrototype.CharactersParameterComponent.SetPauseBrainCrashTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6e50
	void SetParameterTable(struct FCharactersParameterTable Param); // Function BattlePrototype.CharactersParameterComponent.SetParameterTable // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b6da0
	void SetParameterInitTable(struct FCharactersParameterTable Param); // Function BattlePrototype.CharactersParameterComponent.SetParameterInitTable // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b6cf0
	void SetParameterBasic(struct FCharactersParameterTable Param); // Function BattlePrototype.CharactersParameterComponent.SetParameterBasic // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b6c40
	void SetParameterAll(struct FCharactersParameterTable Param); // Function BattlePrototype.CharactersParameterComponent.SetParameterAll // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b6b90
	void SetOilTimeCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetOilTimeCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6b10
	void SetOilDownScale(float Num); // Function BattlePrototype.CharactersParameterComponent.SetOilDownScale // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6a90
	void SetOilBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetOilBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6a10
	void SetOilAttenuationCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetOilAttenuationCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6990
	void SetNotUseBrainCrashTimer(bool bNotUse); // Function BattlePrototype.CharactersParameterComponent.SetNotUseBrainCrashTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6900
	void SetNoReleaseBadState(bool bNoRelease); // Function BattlePrototype.CharactersParameterComponent.SetNoReleaseBadState // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetLevelTable(float HP, float Attack, float brain, float Defense, float Exp); // Function BattlePrototype.CharactersParameterComponent.SetLevelTable // (Final|Native|Public|BlueprintCallable) // @ game+0x11b66d0
	void SetHpWithoutEvent(int32_t HP); // Function BattlePrototype.CharactersParameterComponent.SetHpWithoutEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6650
	void SetHpPart(int32_t no, int32_t HP); // Function BattlePrototype.CharactersParameterComponent.SetHpPart // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6590
	void SetHpDownLimit(enum class EHpDownLimitType LimitType, float limitValue); // Function BattlePrototype.CharactersParameterComponent.SetHpDownLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x11b64d0
	void SetHp(struct TArray<int32_t> HP); // Function BattlePrototype.CharactersParameterComponent.SetHp // (Final|Native|Public|BlueprintCallable) // @ game+0x11b63f0
	void SetFrameBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetFrameBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6370
	void SetFloodedTimeCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetFloodedTimeCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b62f0
	void SetFloodedMoveScale(float Num); // Function BattlePrototype.CharactersParameterComponent.SetFloodedMoveScale // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6270
	void SetFloodedBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetFloodedBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b61f0
	void SetFloodedAttenuationCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetFloodedAttenuationCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6170
	void SetFlameTimeCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetFlameTimeCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b60f0
	void SetFlameAttenuationCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetFlameAttenuationCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6070
	void SetEndlessOil(bool bEndless); // Function BattlePrototype.CharactersParameterComponent.SetEndlessOil // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5fe0
	void SetEndlessFlooded(bool bEndless); // Function BattlePrototype.CharactersParameterComponent.SetEndlessFlooded // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5f50
	void SetEndlessFlame(bool bEndless); // Function BattlePrototype.CharactersParameterComponent.SetEndlessFlame // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5ec0
	void SetEnableBadStatusTimeRate(bool bEnable); // Function BattlePrototype.CharactersParameterComponent.SetEnableBadStatusTimeRate // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5e30
	void SetElectricTimerOn(bool on); // Function BattlePrototype.CharactersParameterComponent.SetElectricTimerOn // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5da0
	void SetElectricTimeCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetElectricTimeCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5d20
	void SetElectricBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetElectricBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5ca0
	void SetElectricAttenuationCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetElectricAttenuationCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5c20
	void SetElectricAddTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetElectricAddTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5ba0
	void SetCrashMax(); // Function BattlePrototype.CharactersParameterComponent.SetCrashMax // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5b80
	void SetConfusionTimeCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetConfusionTimeCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5b00
	void SetConfusionBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetConfusionBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5a80
	void SetConfusionAttenuationCoefficient(float Coefficient); // Function BattlePrototype.CharactersParameterComponent.SetConfusionAttenuationCoefficient // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5a00
	void SetCharacterIgnoreDamageFlag(int32_t Flags); // Function BattlePrototype.CharactersParameterComponent.SetCharacterIgnoreDamageFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5980
	void SetBrainCrashTimeSeconds(float Seconds); // Function BattlePrototype.CharactersParameterComponent.SetBrainCrashTimeSeconds // (Final|Native|Private|BlueprintCallable) // @ game+0x11b5900
	void SetBrainCrashMissAccumulationScale(float Num); // Function BattlePrototype.CharactersParameterComponent.SetBrainCrashMissAccumulationScale // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5880
	void SetBrainCrashMiss(); // Function BattlePrototype.CharactersParameterComponent.SetBrainCrashMiss // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5860
	void SetBrainCrashLock(bool Lock); // Function BattlePrototype.CharactersParameterComponent.SetBrainCrashLock // (Final|Native|Public|BlueprintCallable) // @ game+0x11b57d0
	void SetBrainCrashEnableTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetBrainCrashEnableTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5750
	void SetBadStatusAttenuation(struct FCharactersParameterBasic Param); // Function BattlePrototype.CharactersParameterComponent.SetBadStatusAttenuation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b5660
	void SetAttenuation(struct FCharactersParameterBasic Param); // Function BattlePrototype.CharactersParameterComponent.SetAttenuation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b5570
	void SetArmorHp(int32_t HP); // Function BattlePrototype.CharactersParameterComponent.SetArmorHp // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void SetAddFrameBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetAddFrameBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5470
	void SetAddElectricBaseTime(float Num); // Function BattlePrototype.CharactersParameterComponent.SetAddElectricBaseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b53f0
	void ResetPauseUpdate(); // Function BattlePrototype.CharactersParameterComponent.ResetPauseUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x11b53d0
	void ResetHpDownLimit(); // Function BattlePrototype.CharactersParameterComponent.ResetHpDownLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x11b53b0
	void ResetDelayDeath(); // Function BattlePrototype.CharactersParameterComponent.ResetDelayDeath // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5390
	void ResetCrash(); // Function BattlePrototype.CharactersParameterComponent.ResetCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5370
	void ResetBadStatusAttenuation(); // Function BattlePrototype.CharactersParameterComponent.ResetBadStatusAttenuation // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5350
	void ResetAttenuation(bool bResetCrash); // Function BattlePrototype.CharactersParameterComponent.ResetAttenuation // (Final|Native|Public|BlueprintCallable) // @ game+0x11b52c0
	void ReleaseOil(bool bRsetAccumulation); // Function BattlePrototype.CharactersParameterComponent.ReleaseOil // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5230
	void ReleaseFlooded(bool bRsetAccumulation); // Function BattlePrototype.CharactersParameterComponent.ReleaseFlooded // (Final|Native|Public|BlueprintCallable) // @ game+0x11b51a0
	void ReleaseFlame(bool bRsetAccumulation); // Function BattlePrototype.CharactersParameterComponent.ReleaseFlame // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5110
	void ReleaseElectric(bool bRsetAccumulation); // Function BattlePrototype.CharactersParameterComponent.ReleaseElectric // (Final|Native|Public|BlueprintCallable) // @ game+0x11b5080
	void ReleaseConfusion(bool bRsetAccumulation); // Function BattlePrototype.CharactersParameterComponent.ReleaseConfusion // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4ff0
	void ReleaseAllBadStatus(bool bRsetAccumulation); // Function BattlePrototype.CharactersParameterComponent.ReleaseAllBadStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4f60
	void ParameterBasicCopy(struct FCharactersParameterBasic Param); // Function BattlePrototype.CharactersParameterComponent.ParameterBasicCopy // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b4e70
	void OutBreakOil(struct AActor* attacker, float Time, bool bEndless); // Function BattlePrototype.CharactersParameterComponent.OutBreakOil // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4d60
	void OutBreakFlooded(struct AActor* attacker, float Time, bool bEndless); // Function BattlePrototype.CharactersParameterComponent.OutBreakFlooded // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4c50
	void OutBreakFlame(struct AActor* attacker, float Time, bool bEndless); // Function BattlePrototype.CharactersParameterComponent.OutBreakFlame // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4b40
	void OutBreakElectric(struct AActor* attacker, float Time); // Function BattlePrototype.CharactersParameterComponent.OutBreakElectric // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4a70
	void OutBreakConfusion(struct AActor* attacker, float Time); // Function BattlePrototype.CharactersParameterComponent.OutBreakConfusion // (Final|Native|Public|BlueprintCallable) // @ game+0x11b49a0
	bool NeedsStatusAssist(); // Function BattlePrototype.CharactersParameterComponent.NeedsStatusAssist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4970
	void ModifyParameterTable_Attack(int32_t NewValue); // Function BattlePrototype.CharactersParameterComponent.ModifyParameterTable_Attack // (Final|Native|Public|BlueprintCallable) // @ game+0x11b48f0
	bool IsReinfoceFlame(); // Function BattlePrototype.CharactersParameterComponent.IsReinfoceFlame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsPauseUpdate(); // Function BattlePrototype.CharactersParameterComponent.IsPauseUpdate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4890
	bool IsOil(); // Function BattlePrototype.CharactersParameterComponent.IsOil // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4860
	bool IsLimitCrashAccumulation(); // Function BattlePrototype.CharactersParameterComponent.IsLimitCrashAccumulation // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b4830
	bool IsHpDownLimit(); // Function BattlePrototype.CharactersParameterComponent.IsHpDownLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4800
	bool IsFlooded(); // Function BattlePrototype.CharactersParameterComponent.IsFlooded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b47d0
	bool IsFlame(); // Function BattlePrototype.CharactersParameterComponent.IsFlame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b47a0
	bool IsEndlessOil(); // Function BattlePrototype.CharactersParameterComponent.IsEndlessOil // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4770
	bool IsEndlessFlooded(); // Function BattlePrototype.CharactersParameterComponent.IsEndlessFlooded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4740
	bool IsEndlessFlame(); // Function BattlePrototype.CharactersParameterComponent.IsEndlessFlame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4710
	bool IsElectricTimer(); // Function BattlePrototype.CharactersParameterComponent.IsElectricTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b46e0
	bool IsElectric(); // Function BattlePrototype.CharactersParameterComponent.IsElectric // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b46b0
	bool IsDelayDeath(); // Function BattlePrototype.CharactersParameterComponent.IsDelayDeath // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b4680
	bool IsDead(); // Function BattlePrototype.CharactersParameterComponent.IsDead // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b4650
	bool IsConfusion(); // Function BattlePrototype.CharactersParameterComponent.IsConfusion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4620
	bool IsCharacterIgnoreDamage(enum class ECharacterIgnoreDamage CheckFlag); // Function BattlePrototype.CharactersParameterComponent.IsCharacterIgnoreDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4590
	bool IsBrainCrashLock(); // Function BattlePrototype.CharactersParameterComponent.IsBrainCrashLock // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b4560
	bool IsBrainCrashAccess(); // Function BattlePrototype.CharactersParameterComponent.IsBrainCrashAccess // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b4530
	bool IsAnyBadStatus(); // Function BattlePrototype.CharactersParameterComponent.IsAnyBadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4500
	float GetWeakPointRateOldFrame(int32_t part); // Function BattlePrototype.CharactersParameterComponent.GetWeakPointRateOldFrame // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b4470
	float GetWeakPointRate(int32_t part); // Function BattlePrototype.CharactersParameterComponent.GetWeakPointRate // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b43e0
	float GetSensingArea(); // Function BattlePrototype.CharactersParameterComponent.GetSensingArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b43b0
	float GetSearchRange(); // Function BattlePrototype.CharactersParameterComponent.GetSearchRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4380
	float GetSearchAngle(); // Function BattlePrototype.CharactersParameterComponent.GetSearchAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4350
	struct FCharactersParameterTable GetParameterTable(); // Function BattlePrototype.CharactersParameterComponent.GetParameterTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4300
	struct FCharactersParameterTable GetParameterInitTable(); // Function BattlePrototype.CharactersParameterComponent.GetParameterInitTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b42b0
	struct FCharactersParameterBasic GetParameterBasic(); // Function BattlePrototype.CharactersParameterComponent.GetParameterBasic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4190
	float GetMoveArea(); // Function BattlePrototype.CharactersParameterComponent.GetMoveArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4160
	int32_t GetMaxHpPart(int32_t no); // Function BattlePrototype.CharactersParameterComponent.GetMaxHpPart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b40d0
	int32_t GetMaxHp(); // Function BattlePrototype.CharactersParameterComponent.GetMaxHp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b40a0
	int32_t GetMaxArmorHp(); // Function BattlePrototype.CharactersParameterComponent.GetMaxArmorHp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c60
	float GetHPPercent(); // Function BattlePrototype.CharactersParameterComponent.GetHPPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3bd0
	int32_t GetHpPart(int32_t no); // Function BattlePrototype.CharactersParameterComponent.GetHpPart // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b4010
	int32_t GetHpDownLimit(); // Function BattlePrototype.CharactersParameterComponent.GetHpDownLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3fe0
	struct TArray<int32_t> GetHpArray(); // Function BattlePrototype.CharactersParameterComponent.GetHpArray // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3f60
	int32_t GetHp(); // Function BattlePrototype.CharactersParameterComponent.GetHp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c00
	float GetFloodedMoveScale(); // Function BattlePrototype.CharactersParameterComponent.GetFloodedMoveScale // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b3f30
	float GetElectricScaleByFlooded(); // Function BattlePrototype.CharactersParameterComponent.GetElectricScaleByFlooded // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3f10
	float GetCrashResistanceMax(); // Function BattlePrototype.CharactersParameterComponent.GetCrashResistanceMax // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3ee0
	float GetCrashResistance(int32_t part); // Function BattlePrototype.CharactersParameterComponent.GetCrashResistance // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3e50
	struct UCharactersParameterComponent* GetCharactersParameterComponentFromActor(struct AActor* Actor); // Function BattlePrototype.CharactersParameterComponent.GetCharactersParameterComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b3dd0
	int32_t GetCharacterIgnoreDamageFlagFromType(enum class ECharacterIgnoreDamageType ignoreType); // Function BattlePrototype.CharactersParameterComponent.GetCharacterIgnoreDamageFlagFromType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3d40
	int32_t GetCharacterIgnoreDamageFlag(); // Function BattlePrototype.CharactersParameterComponent.GetCharacterIgnoreDamageFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3d10
	float GetCaptureArea(); // Function BattlePrototype.CharactersParameterComponent.GetCaptureArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3ce0
	float GetBrainCrashTimer(); // Function BattlePrototype.CharactersParameterComponent.GetBrainCrashTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3cb0
	float GetBrainCrashMissAccumulationScale(); // Function BattlePrototype.CharactersParameterComponent.GetBrainCrashMissAccumulationScale // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3c90
	float GetArmorHPPercent(); // Function BattlePrototype.CharactersParameterComponent.GetArmorHPPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c30
	int32_t GetArmorHp(); // Function BattlePrototype.CharactersParameterComponent.GetArmorHp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c60
	float GetAllHPPercent(); // Function BattlePrototype.CharactersParameterComponent.GetAllHPPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3bd0
	int32_t GetAllHp(); // Function BattlePrototype.CharactersParameterComponent.GetAllHp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c00
	void EndLimitCrashAccumulation(); // Function BattlePrototype.CharactersParameterComponent.EndLimitCrashAccumulation // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3bb0
	void EnableCharacterIgnoreDamageFromType(enum class ECharacterIgnoreDamageType ignoreType); // Function BattlePrototype.CharactersParameterComponent.EnableCharacterIgnoreDamageFromType // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3b30
	void EnableCharacterIgnoreDamageAll(); // Function BattlePrototype.CharactersParameterComponent.EnableCharacterIgnoreDamageAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3b10
	void EnableCharacterIgnoreDamage(enum class ECharacterIgnoreDamage setFlag); // Function BattlePrototype.CharactersParameterComponent.EnableCharacterIgnoreDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3a90
	void DisableCharacterIgnoreDamageFromType(enum class ECharacterIgnoreDamageType ignoreType); // Function BattlePrototype.CharactersParameterComponent.DisableCharacterIgnoreDamageFromType // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3a10
	void DisableCharacterIgnoreDamageAll(); // Function BattlePrototype.CharactersParameterComponent.DisableCharacterIgnoreDamageAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11b39f0
	void DisableCharacterIgnoreDamage(enum class ECharacterIgnoreDamage setFlag); // Function BattlePrototype.CharactersParameterComponent.DisableCharacterIgnoreDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3970
	void AddParameterBasic(struct FCharactersParameterBasic Param, struct AActor* attacker, bool IsEnemy); // Function BattlePrototype.CharactersParameterComponent.AddParameterBasic // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b3810
	void AddHpArray(struct TArray<int32_t> HP); // Function BattlePrototype.CharactersParameterComponent.AddHpArray // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3730
	void AddHp(int32_t HP); // Function BattlePrototype.CharactersParameterComponent.AddHp // (Final|Native|Public|BlueprintCallable) // @ game+0x11b36b0
	void AddBrainCrashExtraTime(float ExtraTime); // Function BattlePrototype.CharactersParameterComponent.AddBrainCrashExtraTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b3630
};

// Class BattlePrototype.CharactersParameterManager
// Size: 0x38 (Inherited: 0x28)
struct UCharactersParameterManager : UObject {
	struct TArray<struct FCharacterInfo> m_characterInfoList; // 0x28(0x10)

	void UpdateCharacterInfo(struct AActor* Actor, struct FCharactersParameterBasic charaParam); // Function BattlePrototype.CharactersParameterManager.UpdateCharacterInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x11b98b0
};

// Class BattlePrototype.CheatCommandListenerComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UCheatCommandListenerComponent : UActorComponent {
	struct FMulticastInlineDelegate OnCheatCommand; // 0xc0(0x10)

	struct UCheatCommandListenerComponent* GetCheatCommandListenerComponentFromActor(struct AActor* Actor); // Function BattlePrototype.CheatCommandListenerComponent.GetCheatCommandListenerComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b9730
};

// Class BattlePrototype.DebuggingItemClearGetterGroup
// Size: 0x2e8 (Inherited: 0x2d0)
struct ADebuggingItemClearGetterGroup : ADebuggingItemGroup {
	struct TWeakObjectPtr<struct ADebuggingItemBool> DebugDispBool; // 0x2d0(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemEvent> ExecParamChange; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct UClearGetterManager> Manager; // 0x2e0(0x08)

	void OnPageOpened(); // Function BattlePrototype.DebuggingItemClearGetterGroup.OnPageOpened // (Final|Native|Public) // @ game+0x8518d0
	void OnExecuteParameterChange(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemClearGetterGroup.OnExecuteParameterChange // (Final|Native|Public) // @ game+0x79d490
	void DisplayDebugParam(float X, float Y, struct FLinearColor Color, struct FVector2D Scale); // Function BattlePrototype.DebuggingItemClearGetterGroup.DisplayDebugParam // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11b95c0
};

// Class BattlePrototype.ClearGetterManager
// Size: 0x118 (Inherited: 0x28)
struct UClearGetterManager : UObject {
	char pad_28[0xf0]; // 0x28(0xf0)

	void ClearParameter(bool bExNewGame); // Function BattlePrototype.ClearGetterManager.ClearParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9530
	void CheckUniquePsychicObjectSuccess(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckUniquePsychicObjectSuccess // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9490
	void CheckTotalPlayTime(); // Function BattlePrototype.ClearGetterManager.CheckTotalPlayTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9470
	void CheckTotalNexusDriveTime(float Time); // Function BattlePrototype.ClearGetterManager.CheckTotalNexusDriveTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b93f0
	void CheckTotalExp(int32_t AddExp); // Function BattlePrototype.ClearGetterManager.CheckTotalExp // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9370
	void CheckThrowPsychicObject(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckThrowPsychicObject // (Final|Native|Public|BlueprintCallable) // @ game+0x11b92f0
	void CheckTeamBonds(); // Function BattlePrototype.ClearGetterManager.CheckTeamBonds // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckReviveNpc(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckReviveNpc // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9270
	void CheckQuestClear(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckQuestClear // (Final|Native|Public|BlueprintCallable) // @ game+0x11b91f0
	void CheckProtectVision(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckProtectVision // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9170
	void CheckPresentUnique(); // Function BattlePrototype.ClearGetterManager.CheckPresentUnique // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckPresent(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckPresent // (Final|Native|Public|BlueprintCallable) // @ game+0x11b90f0
	void CheckPlayerParameter(struct FPlayerInfo PlayerInfo); // Function BattlePrototype.ClearGetterManager.CheckPlayerParameter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b8ff0
	void CheckPlayerLevel(); // Function BattlePrototype.ClearGetterManager.CheckPlayerLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8fd0
	void CheckPlayerDrive(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckPlayerDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8f50
	void CheckPhaseClear(); // Function BattlePrototype.ClearGetterManager.CheckPhaseClear // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8f30
	void CheckNpcDrive(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckNpcDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8eb0
	void CheckNexusDrive(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckNexusDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void CheckMoney(); // Function BattlePrototype.ClearGetterManager.CheckMoney // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8e90
	void CheckKarenEpisode(); // Function BattlePrototype.ClearGetterManager.CheckKarenEpisode // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckGetStrongestWeapon(struct FName WeaponId); // Function BattlePrototype.ClearGetterManager.CheckGetStrongestWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b8e00
	void CheckGameClear(); // Function BattlePrototype.ClearGetterManager.CheckGameClear // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8de0
	void CheckExistStrongestWeapon(); // Function BattlePrototype.ClearGetterManager.CheckExistStrongestWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8dc0
	void CheckEnemyDefeated(struct FHCHitResult HitResult, bool bBrainField); // Function BattlePrototype.ClearGetterManager.CheckEnemyDefeated // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11b8bd0
	void CheckEnableNexusDrive(); // Function BattlePrototype.ClearGetterManager.CheckEnableNexusDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckDLCBondsEpisode(); // Function BattlePrototype.ClearGetterManager.CheckDLCBondsEpisode // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckCrashVisionCombo(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckCrashVisionCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void CheckCombinationVisionDamage(int32_t Damage); // Function BattlePrototype.ClearGetterManager.CheckCombinationVisionDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8b50
	void CheckCombinationVisionCombo(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckCombinationVisionCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8ad0
	void CheckClearGetterMission(); // Function BattlePrototype.ClearGetterManager.CheckClearGetterMission // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckBrainField(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8a50
	void CheckBrainCrash(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckBrainCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x11b89d0
	void CheckBattleSimulatorClear(); // Function BattlePrototype.ClearGetterManager.CheckBattleSimulatorClear // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CheckAssaultVision(int32_t Num); // Function BattlePrototype.ClearGetterManager.CheckAssaultVision // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8950
	void CheckAllClearGetterMission(); // Function BattlePrototype.ClearGetterManager.CheckAllClearGetterMission // (Final|Native|Public|BlueprintCallable) // @ game+0x11b8930
	void AddItemUseCount(int32_t Num); // Function BattlePrototype.ClearGetterManager.AddItemUseCount // (Final|Native|Public|BlueprintCallable) // @ game+0x11b88b0
};

// Class BattlePrototype.PostProcessSettingsDataAsset
// Size: 0x7b0 (Inherited: 0x30)
struct UPostProcessSettingsDataAsset : UDataAsset {
	struct FPostProcessSettings PostProcessSettings; // 0x30(0x780)
};

// Class BattlePrototype.ConditionComponent
// Size: 0x160 (Inherited: 0xc0)
struct UConditionComponent : UActorComponent {
	float _accumulationLimit; // 0xc0(0x04)
	float _accumulationAddedScale; // 0xc4(0x04)
	float _cureAccumulation; // 0xc8(0x04)
	float _conditionAutoEndSec; // 0xcc(0x04)
	float _intervalSec; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct FMulticastInlineDelegate _dispatchInterval; // 0xd8(0x10)
	struct FMulticastInlineDelegate _dispatchBeginCondition; // 0xe8(0x10)
	struct FMulticastInlineDelegate _dispatchEndCondition; // 0xf8(0x10)
	char pad_108[0x58]; // 0x108(0x58)

	void SetFreeze(bool Flag); // Function BattlePrototype.ConditionComponent.SetFreeze // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9820
	void OnInterval(); // Function BattlePrototype.ConditionComponent.OnInterval // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x694cb0
	void OnEndCondition(); // Function BattlePrototype.ConditionComponent.OnEndCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11b9800
	void OnBeginCondition(); // Function BattlePrototype.ConditionComponent.OnBeginCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11b97e0
	bool IsStateCondition(); // Function BattlePrototype.ConditionComponent.IsStateCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1173960
	bool IsActiveCondition(); // Function BattlePrototype.ConditionComponent.IsActiveCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b97b0
	enum class ConditionKind GetConditionKind(); // Function BattlePrototype.ConditionComponent.GetConditionKind // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1173a20
	void FinishCondition(); // Function BattlePrototype.ConditionComponent.FinishCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9710
	void ClearAccumulation(); // Function BattlePrototype.ConditionComponent.ClearAccumulation // (Final|Native|Public|BlueprintCallable) // @ game+0x11b9510
	enum class ConditionExclusionKind CheckExclusion(struct UConditionComponent* Other); // Function BattlePrototype.ConditionComponent.CheckExclusion // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x11b8d20
	void Accumulate(float Value, bool IsGuard); // Function BattlePrototype.ConditionComponent.Accumulate // (Final|Native|Public|BlueprintCallable) // @ game+0x1184930
};

// Class BattlePrototype.ConditionUtility
// Size: 0x28 (Inherited: 0x28)
struct UConditionUtility : UBlueprintFunctionLibrary {

	bool IsActiveStateCondition(struct AActor* Actor); // Function BattlePrototype.ConditionUtility.IsActiveStateCondition // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c2440
	void FinishStateConditionAll(struct AActor* Actor); // Function BattlePrototype.ConditionUtility.FinishStateConditionAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c1a90
	void AccumulateCondition(struct AActor* Actor, struct FHCHitResult HitResult, bool IsGuard); // Function BattlePrototype.ConditionUtility.AccumulateCondition // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x11beaa0
};

// Class BattlePrototype.ContinualMoveComponent
// Size: 0xe0 (Inherited: 0xc0)
struct UContinualMoveComponent : UActorComponent {
	char pad_C0[0x20]; // 0xc0(0x20)

	void UpdateFunction(float DeltaTime); // Function BattlePrototype.ContinualMoveComponent.UpdateFunction // (Final|Native|Private) // @ game+0x11c2ba0
	void StartMove(struct FName ClaimantName, struct FVector frontVector, float initSpeed, float Acceleration, float endSpeed); // Function BattlePrototype.ContinualMoveComponent.StartMove // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11c2a00
	void SetInvalidMove(bool bInvalid); // Function BattlePrototype.ContinualMoveComponent.SetInvalidMove // (Final|Native|Public|BlueprintCallable) // @ game+0x11c2690
	struct UContinualMoveComponent* GetContinualMoveComponent(struct AActor* Actor); // Function BattlePrototype.ContinualMoveComponent.GetContinualMoveComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c1e30
	void ForceClearMove(); // Function BattlePrototype.ContinualMoveComponent.ForceClearMove // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1b00
	void ClearMove(struct FName ClaimantName); // Function BattlePrototype.ContinualMoveComponent.ClearMove // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11bf490
};

// Class BattlePrototype.ControllablePsychicObjectComponent
// Size: 0x108 (Inherited: 0xc0)
struct UControllablePsychicObjectComponent : UActorComponent {
	float MaxTurnSpeed; // 0xc0(0x04)
	float MaxSpeed; // 0xc4(0x04)
	float AccelerationSpeed; // 0xc8(0x04)
	float SlowDownSpeed; // 0xcc(0x04)
	bool bTurnSlowDown; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float TurnSlowDownAngleMin; // 0xd4(0x04)
	float TurnSlowDownAngleMax; // 0xd8(0x04)
	float TurnSlowDownMaxSpeedRate; // 0xdc(0x04)
	char pad_E0[0x28]; // 0xe0(0x28)

	void EndControl(); // Function BattlePrototype.ControllablePsychicObjectComponent.EndControl // (Final|Native|Public|BlueprintCallable) // @ game+0x11c19f0
	bool BeginControl(struct ARSCharacterBase* InControlOwner, struct UPlayerInputBaseComponent* InInputComponent, float InitializeSpeed); // Function BattlePrototype.ControllablePsychicObjectComponent.BeginControl // (Final|Native|Public|BlueprintCallable) // @ game+0x11befa0
};

// Class BattlePrototype.CopyPlayerAnimInstance
// Size: 0x300 (Inherited: 0x270)
struct UCopyPlayerAnimInstance : UAnimInstance {
	struct TWeakObjectPtr<struct USkeletalMeshComponent> SourceMesh; // 0x270(0x08)
	bool bUseMontage; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	struct FRotator SpineAimRot; // 0x27c(0x0c)
	float FootIKBlendRate; // 0x288(0x04)
	float FootIKMaxHeight; // 0x28c(0x04)
	struct FVector FootIKOffset_Left; // 0x290(0x0c)
	struct FVector FootIKOffset_Right; // 0x29c(0x0c)
	struct FVector FootIKJointTargetLocation_Left; // 0x2a8(0x0c)
	struct FVector FootIKJointTargetLocation_Right; // 0x2b4(0x0c)
	float _MeshOffset; // 0x2c0(0x04)
	char pad_2C4[0x3c]; // 0x2c4(0x3c)

	void SetupFootIK(struct URSPlayerAnimInstance* InOriginalAnimInstance, float InFloorAngle, float InCapsuleHeight); // Function BattlePrototype.CopyPlayerAnimInstance.SetupFootIK // (Final|Native|Public|BlueprintCallable) // @ game+0x11c27b0
};

// Class BattlePrototype.CosmosSaveTest
// Size: 0x40 (Inherited: 0x28)
struct UCosmosSaveTest : USaveGame {
	struct TArray<struct FCosmosSaveImageBuf> ImageData; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)

	void AddImageData(struct TArray<char> Data); // Function BattlePrototype.CosmosSaveTest.AddImageData // (Final|Native|Public|BlueprintCallable) // @ game+0x11bec20
};

// Class BattlePrototype.CosmosWebManager
// Size: 0x6c0 (Inherited: 0x230)
struct ACosmosWebManager : AActor {
	char pad_230[0x38]; // 0x230(0x38)
	struct FName titleCd; // 0x268(0x08)
	float limitsec; // 0x270(0x04)
	float TimeOutSec; // 0x274(0x04)
	int32_t RetryCount; // 0x278(0x04)
	int32_t ResultOK; // 0x27c(0x04)
	int32_t ResultMaintenance; // 0x280(0x04)
	int32_t ResponseOK; // 0x284(0x04)
	int32_t SessionNG; // 0x288(0x04)
	int32_t SessionTimeout; // 0x28c(0x04)
	int32_t ResponseNotExistUser; // 0x290(0x04)
	int32_t AreaMax; // 0x294(0x04)
	int32_t BaseYear; // 0x298(0x04)
	int32_t BaseMonth; // 0x29c(0x04)
	int32_t BaseDay; // 0x2a0(0x04)
	int32_t LoginSkuType; // 0x2a4(0x04)
	int32_t RankingGetNum; // 0x2a8(0x04)
	float SealDistnce; // 0x2ac(0x04)
	char pad_2B0[0x10]; // 0x2b0(0x10)
	float DebugConnsectTime; // 0x2c0(0x04)
	int32_t ErrorCodeSuccess; // 0x2c4(0x04)
	int32_t AnimeInterlockingProgressIdYuito; // 0x2c8(0x04)
	int32_t AnimeInterlockingProgressIdKasane; // 0x2cc(0x04)
	int32_t AnimeInterlockingContentsId; // 0x2d0(0x04)
	int32_t AnimeInterlockingTssSlotTop; // 0x2d4(0x04)
	bool IsEnvInitialized; // 0x2d8(0x01)
	bool IsRunningAuthEvent; // 0x2d9(0x01)
	bool IsRunningWebEvent; // 0x2da(0x01)
	bool IsRunningWebLoginEvent; // 0x2db(0x01)
	bool IsRunningWebSubEvent; // 0x2dc(0x01)
	bool IsRunningWebSealEvent; // 0x2dd(0x01)
	bool IsRunningHttpEvet; // 0x2de(0x01)
	bool IsRunningMainEvent; // 0x2df(0x01)
	int32_t Platform; // 0x2e0(0x04)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct FCosmosResultParam ResultParam; // 0x2e8(0x28)
	struct FCosmosSysGetEnvResponse SysGetEnvResponse; // 0x310(0x18)
	struct FCosmosSysKpiParam SysKpiParam; // 0x328(0x10)
	struct FCosmsoSysKpiResponse SysKpiResponse; // 0x338(0x04)
	struct FCosmosSysAgreeKpiParam SysAgreeKpiParam; // 0x33c(0x04)
	struct FCosmosSysAgreeKpiResponse SysAgreeKpiResponse; // 0x340(0x04)
	char pad_344[0x4]; // 0x344(0x04)
	struct FCosmosUserParam UserParam; // 0x348(0x28)
	struct FCosmosUserResponse UserResponse; // 0x370(0x18)
	struct FCosmosUserResponseV2 UserResponseV2; // 0x388(0x20)
	struct FCosmosTusReadParam TusReadParam; // 0x3a8(0x18)
	struct FCosmosTusReadResponse TusReadResponse; // 0x3c0(0x18)
	struct FCosmosTusWriteParam TusWriteParam; // 0x3d8(0x18)
	struct FCosmosTusWriteResponse TusWriteResponse; // 0x3f0(0x04)
	char pad_3F4[0x4]; // 0x3f4(0x04)
	struct FCosmosRankingGetMasterResponse RankingGetMasterResponse; // 0x3f8(0x18)
	struct FCosmosRankingSetScoreParam RankingSetScoreParam; // 0x410(0x28)
	struct FCosmosRankingSetScoreResponse RankingSetScoreResponse; // 0x438(0x04)
	char pad_43C[0x4]; // 0x43c(0x04)
	struct FCosmosRankingGetByRangeParam RankingGetByRangeParam; // 0x440(0x20)
	struct FCosmosRankingGetByRangeResponse RankingGetByRangeResponse; // 0x460(0x30)
	struct TMap<struct FString, struct FString> RankingIDList; // 0x490(0x50)
	struct FCosmosSavedataUploadParam SavedataUploadParam; // 0x4e0(0x48)
	struct FCosmosSavedataUploadResponse SavedataUploadResponse; // 0x528(0x04)
	char pad_52C[0x4]; // 0x52c(0x04)
	struct FCosmosSavedataDownloadParam SavedataDownloadParam; // 0x530(0x18)
	struct FCosmosSavedataDownloadResponse SavedataDownloadResponse; // 0x548(0x18)
	struct FCosmosSavedataDeleteParam SavedataDeleteParam; // 0x560(0x18)
	struct FCosmosSavedataDeleteResponse SavedataDeleteResponse; // 0x578(0x04)
	char pad_57C[0x4]; // 0x57c(0x04)
	struct URSFrameGrabberComponent* FrameGrabberComponent; // 0x580(0x08)
	struct TMap<struct FString, struct FCosmosSealInfo> SealInfoList; // 0x588(0x50)
	struct TArray<int32_t> HttpLastErrorCode; // 0x5d8(0x10)
	struct FCosmosHugeTssReadListParam HugeTssReadListParam; // 0x5e8(0x0c)
	char pad_5F4[0x4]; // 0x5f4(0x04)
	struct FCosmosHugeTssReadListResponse HugeTssReadListResponse; // 0x5f8(0x18)
	struct TArray<struct FAnimeInterlockingURL> PlayableQuestList; // 0x610(0x10)
	struct FAnimeInterlockingAnswer AnimeInterlockingAnswer; // 0x620(0x20)
	struct FDelegate GetPlayableQuestsDelegate; // 0x640(0x10)
	struct FDelegate GetQuestAnswersDelegate; // 0x650(0x10)
	struct FDelegate CheckAnswerDelegate; // 0x660(0x10)
	enum class EAnimeInterlockingState AnimeInterlockingState; // 0x670(0x01)
	enum class EAnimeInterlockingErrorType AnimeInterlockingErrorType; // 0x671(0x01)
	bool AnimeInterlockingIsGetPlayableQuestListLoaded; // 0x672(0x01)
	bool AnimeInterlockingIsAnswerSuccess; // 0x673(0x01)
	bool AnimeInterlockingIsAnswerLoaded; // 0x674(0x01)
	char pad_675[0x3]; // 0x675(0x03)
	struct UUITitleCrossSave_UpdatingWidget* UITitleCrossSave_UpdatingWidget; // 0x678(0x08)
	char pad_680[0x40]; // 0x680(0x40)

	void UserConvertUserIdResponseEventBroadcast(struct FCosmosUserConvertUserIdResponseParam Param); // Function BattlePrototype.CosmosWebManager.UserConvertUserIdResponseEventBroadcast // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x11c2c20
	void SpawnSealByWebData(struct UObject* WorldContextObject, struct UMaterialInterface* DecalMaterial, struct FString AreaName); // Function BattlePrototype.CosmosWebManager.SpawnSealByWebData // (Final|Native|Public|BlueprintCallable) // @ game+0x11c28b0
	bool SetPlayableQuestList(bool isTimeOut); // Function BattlePrototype.CosmosWebManager.SetPlayableQuestList // (Final|Native|Public|BlueprintCallable) // @ game+0x11c2720
	bool RequestGetPlayableQuestListInternal(bool IsWait); // Function BattlePrototype.CosmosWebManager.RequestGetPlayableQuestListInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x11c2600
	bool RequestAddNotificationBrainMessage(); // Function BattlePrototype.CosmosWebManager.RequestAddNotificationBrainMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x11c25d0
	void ReceiveErrorResponse(enum class ECosmosWebAPIType Type, int32_t respCode); // Function BattlePrototype.CosmosWebManager.ReceiveErrorResponse // (Final|Native|Public|BlueprintCallable) // @ game+0x11c2510
	bool IsRunningCosmosWebAPI(); // Function BattlePrototype.CosmosWebManager.IsRunningCosmosWebAPI // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c24e0
	bool IsEnvironmentBuildComplete(); // Function BattlePrototype.CosmosWebManager.IsEnvironmentBuildComplete // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsCompleteTokenAndSignature(); // Function BattlePrototype.CosmosWebManager.IsCompleteTokenAndSignature // (Final|Native|Public|BlueprintCallable) // @ game+0x11c24c0
	void GetTusData(struct UObject* WorldContextObject, struct FString Data, struct FCosmosTusData tusData); // Function BattlePrototype.CosmosWebManager.GetTusData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c22c0
	bool GetTokenAndSignature(); // Function BattlePrototype.CosmosWebManager.GetTokenAndSignature // (Final|Native|Public|BlueprintCallable) // @ game+0x11c2290
	int32_t GetRegion(); // Function BattlePrototype.CosmosWebManager.GetRegion // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c2260
	void GetRankingUserData(struct UObject* WorldContextObject, struct FString UserData, struct FCosmosRankingUserData RankingUserData); // Function BattlePrototype.CosmosWebManager.GetRankingUserData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c20f0
	struct FString GetRankingName(struct FString Json); // Function BattlePrototype.CosmosWebManager.GetRankingName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c1fc0
	struct FString GetLoginTalken(); // Function BattlePrototype.CosmosWebManager.GetLoginTalken // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c1f40
	void GetIssuerID(int32_t IssuerID); // Function BattlePrototype.CosmosWebManager.GetIssuerID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c1eb0
	void GetBitMap(struct UTextureRenderTarget2D* Target, int32_t Quality, struct TArray<char> Buff); // Function BattlePrototype.CosmosWebManager.GetBitMap // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c1d10
	void GetBaseURL_V2(enum class ECosmosWebAPIType Type, struct FName baseUrl); // Function BattlePrototype.CosmosWebManager.GetBaseURL_V2 // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c1c40
	void GetBaseURL(struct FName baseUrl); // Function BattlePrototype.CosmosWebManager.GetBaseURL // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c1bb0
	bool GetAgreeKpiFlg(struct UObject* WorldContextObject); // Function BattlePrototype.CosmosWebManager.GetAgreeKpiFlg // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c1b20
	int32_t EnvUpdate(); // Function BattlePrototype.CosmosWebManager.EnvUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1a60
	bool EnvironmentValidate(); // Function BattlePrototype.CosmosWebManager.EnvironmentValidate // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EnvironmentRebuild(); // Function BattlePrototype.CosmosWebManager.EnvironmentRebuild // (Event|Public|BlueprintEvent) // @ game+0x1685580
	int32_t EnvInitialize(); // Function BattlePrototype.CosmosWebManager.EnvInitialize // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1a30
	void EnvFinalize(); // Function BattlePrototype.CosmosWebManager.EnvFinalize // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1a10
	void DecryptImageData(struct TArray<char> tusData, struct TArray<char> Buff); // Function BattlePrototype.CosmosWebManager.DecryptImageData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c18a0
	void DebugWriteParam(enum class ECosmosWebAPIType Type, struct FString URL, struct FString userId, struct FString SessionID, bool isSend); // Function BattlePrototype.CosmosWebManager.DebugWriteParam // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1630
	void DebugWriteHttp(); // Function BattlePrototype.CosmosWebManager.DebugWriteHttp // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1610
	void DebugSetQuestRelease(int32_t Index); // Function BattlePrototype.CosmosWebManager.DebugSetQuestRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void DebugSetQuestList(); // Function BattlePrototype.CosmosWebManager.DebugSetQuestList // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void DebugSetQuestForceSuccess(bool bSet); // Function BattlePrototype.CosmosWebManager.DebugSetQuestForceSuccess // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugSetQuestForceFail(bool bSet); // Function BattlePrototype.CosmosWebManager.DebugSetQuestForceFail // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugSetOverwriteErrorType(enum class EAnimeInterlockingErrorType ErrorType); // Function BattlePrototype.CosmosWebManager.DebugSetOverwriteErrorType // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void DebugSetAnswers(struct FString QuestName); // Function BattlePrototype.CosmosWebManager.DebugSetAnswers // (Final|Native|Public|BlueprintCallable) // @ game+0x11c14b0
	void CreateTusData(struct FVector Pos, struct FRotator Rotate, struct TArray<char> Image, struct FString tusData); // Function BattlePrototype.CosmosWebManager.CreateTusData // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x11c12d0
	void CreateRankingUserData(struct UObject* WorldContextObject, struct FCosmosRankingUserData RankingUserData, struct FString UserData); // Function BattlePrototype.CosmosWebManager.CreateRankingUserData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c1190
	void CosmsoAddNotificationBrainMessageEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmsoAddNotificationBrainMessageEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebTusWriteEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebTusWriteEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebTusWriteEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, int32_t slotNo, struct FString tusData); // Function BattlePrototype.CosmosWebManager.CosmosWebTusWriteEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0fd0
	void CosmosWebTusReadEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebTusReadEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebTusReadEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, struct FString userId, int32_t slotNo); // Function BattlePrototype.CosmosWebManager.CosmosWebTusReadEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0e20
	void CosmosWebSetRankingEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebSetRankingEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebSetRankingEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, struct FString AreaName, struct FString UserData); // Function BattlePrototype.CosmosWebManager.CosmosWebSetRankingEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0c20
	void CosmosWebSealEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebSealEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebSealEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, int32_t slotNo, struct FString tusData, struct FString AreaName, struct FString RankingUserData); // Function BattlePrototype.CosmosWebManager.CosmosWebSealEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0950
	void CosmosWebLoginEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebLoginEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebLoginEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo); // Function BattlePrototype.CosmosWebManager.CosmosWebLoginEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0860
	void CosmosWebGetRankingEvnet(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, struct FString AreaName, int32_t RankingType, int32_t StartRank, int32_t GetNum); // Function BattlePrototype.CosmosWebManager.CosmosWebGetRankingEvnet // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0630
	void CosmosWebGetRankingEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebGetRankingEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebEventNoLatent(enum class ECosmosWebAPIType Type); // Function BattlePrototype.CosmosWebManager.CosmosWebEventNoLatent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebEventInternal(enum class ECosmosWebAPIType Type); // Function BattlePrototype.CosmosWebManager.CosmosWebEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, enum class ECosmosWebAPIType Type); // Function BattlePrototype.CosmosWebManager.CosmosWebEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0500
	void CosmosWebCoreLoginEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosWebCoreLoginEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebCoreLoginEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo); // Function BattlePrototype.CosmosWebManager.CosmosWebCoreLoginEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0410
	void CosmosWebCoreEventInternal(enum class ECosmosWebAPIType Type); // Function BattlePrototype.CosmosWebManager.CosmosWebCoreEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosWebCoreEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, enum class ECosmosWebAPIType Type); // Function BattlePrototype.CosmosWebManager.CosmosWebCoreEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11c02e0
	void CosmosUserConvertUserIdEventNoLatent(struct TArray<struct FString> PlatformUserIDList); // Function BattlePrototype.CosmosWebManager.CosmosUserConvertUserIdEventNoLatent // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	void CosmosSetLoading(); // Function BattlePrototype.CosmosWebManager.CosmosSetLoading // (Final|Native|Public|BlueprintCallable) // @ game+0x11c02c0
	void CosmosResetAnimeInterlocking(); // Function BattlePrototype.CosmosWebManager.CosmosResetAnimeInterlocking // (Final|Native|Public|BlueprintCallable) // @ game+0x11c02a0
	bool CosmosRequestGetQuestAnswers(struct FName QuestName); // Function BattlePrototype.CosmosWebManager.CosmosRequestGetQuestAnswers // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0210
	bool CosmosRequestGetPlayableQuestListNoWait(); // Function BattlePrototype.CosmosWebManager.CosmosRequestGetPlayableQuestListNoWait // (Final|Native|Public|BlueprintCallable) // @ game+0x11c01e0
	bool CosmosRequestGetPlayableQuestList(); // Function BattlePrototype.CosmosWebManager.CosmosRequestGetPlayableQuestList // (Final|Native|Public|BlueprintCallable) // @ game+0x11c01b0
	bool CosmosRequestCheckAnswer(struct FName QuestName, struct FString Answer); // Function BattlePrototype.CosmosWebManager.CosmosRequestCheckAnswer // (Final|Native|Public|BlueprintCallable) // @ game+0x11c0080
	bool CosmosIsQuestAnswerLoaded(struct FString QuestName); // Function BattlePrototype.CosmosWebManager.CosmosIsQuestAnswerLoaded // (Final|Native|Public|BlueprintCallable) // @ game+0x11bff90
	bool CosmosIsLoadedPlayableQuestList(); // Function BattlePrototype.CosmosWebManager.CosmosIsLoadedPlayableQuestList // (Final|Native|Public|BlueprintCallable) // @ game+0x11bff70
	bool CosmosHttpRequest(struct FString QuestName); // Function BattlePrototype.CosmosWebManager.CosmosHttpRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x11bfe80
	void CosmosHttpEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, struct FString QuestName, bool isCheckAnswer); // Function BattlePrototype.CosmosWebManager.CosmosHttpEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11bfcc0
	void CosmosGetQuestAnswersEventInternal(struct FName QuestName); // Function BattlePrototype.CosmosWebManager.CosmosGetQuestAnswersEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool CosmosGetQuestAnswers(struct FName QuestName, struct TArray<struct FString> Answers); // Function BattlePrototype.CosmosWebManager.CosmosGetQuestAnswers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11bfba0
	void CosmosGetPlayableQuestList(bool IsConnectSuccess, struct TArray<struct FString> QuestList); // Function BattlePrototype.CosmosWebManager.CosmosGetPlayableQuestList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11bfa70
	void CosmosGetPlayableQuestEventInternal(int32_t Region, int32_t Use, int32_t Language, bool IsWait); // Function BattlePrototype.CosmosWebManager.CosmosGetPlayableQuestEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosGetEvnEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosGetEvnEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosGetEnvEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo); // Function BattlePrototype.CosmosWebManager.CosmosGetEnvEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11bf980
	void CosmosCoreGetEvnEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosCoreGetEvnEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosCoreGetEnvEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo); // Function BattlePrototype.CosmosWebManager.CosmosCoreGetEnvEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11bf890
	void CosmosCoreAgreeKpiEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosCoreAgreeKpiEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosCoreAgreeKpiEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo); // Function BattlePrototype.CosmosWebManager.CosmosCoreAgreeKpiEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11bf7a0
	void CosmosCheckAnswerEventInternal(struct FAmieInterlockingCheckAnswer Param); // Function BattlePrototype.CosmosWebManager.CosmosCheckAnswerEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool CosmosAnimeInterlockingIsMaintenance(); // Function BattlePrototype.CosmosWebManager.CosmosAnimeInterlockingIsMaintenance // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11bf770
	bool CosmosAnimeInterlockingGetErrorCode(int32_t ErrorCode); // Function BattlePrototype.CosmosWebManager.CosmosAnimeInterlockingGetErrorCode // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11bf6d0
	void CosmosAgreeKpiEventNoLatent(int32_t AgreeFlag); // Function BattlePrototype.CosmosWebManager.CosmosAgreeKpiEventNoLatent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosAgreeKpiEventInternal(); // Function BattlePrototype.CosmosWebManager.CosmosAgreeKpiEventInternal // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CosmosAgreeKpiEvent(struct UObject* WorldContextObject, struct FLatentActionInfo LatentInfo, int32_t AgreeFlag); // Function BattlePrototype.CosmosWebManager.CosmosAgreeKpiEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x11bf5a0
	void CosmosAddBrainMessage(struct UObject* WorldContextObject); // Function BattlePrototype.CosmosWebManager.CosmosAddBrainMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x11bf520
	void ClearAllSeal(float StartDelay, float Duration); // Function BattlePrototype.CosmosWebManager.ClearAllSeal // (Final|Native|Public|BlueprintCallable) // @ game+0x11bf3d0
	bool CheckSealPosition(struct FVector Pos); // Function BattlePrototype.CosmosWebManager.CheckSealPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x11bf330
	void CallGetQuestAnswersDelegate(struct FName QuestName); // Function BattlePrototype.CosmosWebManager.CallGetQuestAnswersDelegate // (Final|Native|Private|BlueprintCallable) // @ game+0x11bf2b0
	void CallGetPlayableQuestListDelegate(bool bForceFinish); // Function BattlePrototype.CosmosWebManager.CallGetPlayableQuestListDelegate // (Final|Native|Private|BlueprintCallable) // @ game+0x11bf220
	bool CallCheckAnswerDelegate(struct FString QuestName, struct FString Answer); // Function BattlePrototype.CosmosWebManager.CallCheckAnswerDelegate // (Final|Native|Private|BlueprintCallable) // @ game+0x11bf0b0
	void Base64UrlToBase64(struct FString Base64Url, struct FString Base64); // Function BattlePrototype.CosmosWebManager.Base64UrlToBase64 // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11bee50
	void Base64ToBase64Url(struct FString Base64, struct FString Base64Url); // Function BattlePrototype.CosmosWebManager.Base64ToBase64Url // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11bed00
};

// Class BattlePrototype.CosmosWebManagerUtility
// Size: 0x28 (Inherited: 0x28)
struct UCosmosWebManagerUtility : UBlueprintFunctionLibrary {

	void CosmosStartMenu(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosStartMenu // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5db0
	void CosmosStartIngame(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosStartIngame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5d90
	void CosmosStartEvent(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosStartEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5d70
	void CosmosStartBattle(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosStartBattle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5d50
	void CosmosSendKpiParamStartGame(struct UObject* WorldContextObject); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParamStartGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5cc0
	void CosmosSendKpiParamNextPhase(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParamNextPhase // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5ca0
	void CosmosSendKpiParamMapChange(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParamMapChange // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5c80
	void CosmosSendKpiParamGameover(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParamGameover // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5c60
	void CosmosSendKpiParamAtFirst(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParamAtFirst // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5c40
	void CosmosSendKpiParamAfterSave(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParamAfterSave // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5c20
	void CosmosSendKpiParam(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiParam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5c00
	void CosmosSendKpiOrg9_PlayedPhases(struct FName Location); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg9_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5b90
	bool CosmosSendKpiOrg9_IsDirtyPlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg9_IsDirtyPlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5b60
	void CosmosSendKpiOrg8_PlayedPhases(int32_t driveModeActivation_num, int32_t driveModeActivation_time); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg8_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5ab0
	bool CosmosSendKpiOrg8_IsDirtyPlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg8_IsDirtyPlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5a80
	void CosmosSendKpiOrg7_PlayedPhases(struct FName Location); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg7_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5a10
	bool CosmosSendKpiOrg7_IsDirtyPlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg7_IsDirtyPlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c59e0
	void CosmosSendKpiOrg6_PlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg6_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c59c0
	bool CosmosSendKpiOrg6_IsDirtyPlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg6_IsDirtyPlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5990
	void CosmosSendKpiOrg5_KizunaLevel(enum class EPlayerID members_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg5_KizunaLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5920
	void CosmosSendKpiOrg4_PresentInfo(enum class EPlayerID members_id, struct FName present_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg4_PresentInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5870
	void CosmosSendKpiOrg3_TeamKizunaEpisodeInfo(struct FString team_kizuna_episode_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg3_TeamKizunaEpisodeInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c57a0
	void CosmosSendKpiOrg3_KizunaEpisodeInfo(enum class EPlayerID members_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg3_KizunaEpisodeInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5730
	void CosmosSendKpiOrg21_GameVoice(enum class ETextLanguage textLanguage); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg21_GameVoice // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c56c0
	void CosmosSendKpiOrg1_LapInfo(enum class EPlayerID character_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg1_LapInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5650
	void CosmosSendKpiOrg19_PlayedPhases(struct FName Location); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg19_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c55e0
	bool CosmosSendKpiOrg19_IsDirtyPlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg19_IsDirtyPlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c55b0
	void CosmosSendKpiOrg17_ShopVisits(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg17_ShopVisits // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c54e0
	void CosmosSendKpiOrg17_ShopsUsed(int32_t Status, struct FName Item); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg17_ShopsUsed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5500
	void CosmosSendKpiOrg16_PlayedPhases(enum class EPlayerSkill skill_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg16_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5470
	void CosmosSendKpiOrg14_Graphic(bool isVerticalSyncOff, enum class EOptionAAQuality antiAliasingQuality, enum class EGradualQuality textureQuality, enum class EGradualQuality shadowQuality, enum class EGradualQuality postQuality, enum class EWindowMode windowMode, enum class EFPSType fpsType); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg14_Graphic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5280
	void CosmosSendKpiOrg14_Controller(enum class ERSGamepadInputName weaponAttack, enum class ERSGamepadInputName Jump, enum class ERSGamepadInputName strafeAndDash, enum class ERSGamepadInputName specialAttack, enum class ERSGamepadInputName activateSASMenu, enum class ERSGamepadInputName enableComboVisionMenu, enum class ERSGamepadInputName PKAttack, enum class ERSGamepadInputName specialObjectAndBrainCrush, enum class ELockonActionType changeLockOnTarget); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg14_Controller // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5010
	void CosmosSendKpiOrg14_Config(enum class HCGameDifficulty difficult_id, enum class EAttackAutoLockOn attackAutoLockOn, enum class ETargetCameraTrace targetCameraTrace, enum class ECameraAfterMoveType cameraAfterMoveType, enum class EOptionDisplayEnemyDamage dispEnemyDamage, enum class EOptionMinimapDisplay minimapDisplay, enum class EOptionMinimapRotation minimapRotation, enum class EOptionMinimapScaling minimapScaling, enum class EEventMessageAutoPlay messageAutoPlay, char cameraSpeed, enum class EOptionCameraPitch cameraPitch, enum class EOptionCameraYaw cameraYaw, enum class EOptionControllerVibration vibration); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg14_Config // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4ca0
	void CosmosSendKpiOrg14_Brightness(float Brightness); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg14_Brightness // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4c30
	void CosmosSendKpiOrg13_Weapon(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_Weapon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4c10
	void CosmosSendKpiOrg13_Plugin(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_Plugin // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4bf0
	bool CosmosSendKpiOrg13_IsDirtyCostume(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_IsDirtyCostume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4bc0
	bool CosmosSendKpiOrg13_IsDirtyAttachment(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_IsDirtyAttachment // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4b90
	void CosmosSendKpiOrg13_Costume(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_Costume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4b70
	void CosmosSendKpiOrg13_BackupCostume(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_BackupCostume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4b50
	void CosmosSendKpiOrg13_BackupAttachment(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_BackupAttachment // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4b30
	void CosmosSendKpiOrg13_Attachment(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg13_Attachment // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4b10
	void CosmosSendKpiOrg10_Retry(struct FName Enemy); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg10_Retry // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4aa0
	void CosmosSendKpiOrg10_ItemsUsed(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg10_ItemsUsed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4a80
	bool CosmosSendKpiOrg10_IsDirtyItemsUsed(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg10_IsDirtyItemsUsed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4a50
	void CosmosSendKpiOrg10_GameOver(int32_t gameOverState, struct FName Enemy); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg10_GameOver // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c49a0
	void CosmosSendKpiOrg10_Avoidance(int32_t avoidancestate_0type_cnt, int32_t avoidancestate_1type_cnt, int32_t avoidancestate_2type_cnt, int32_t avoidancestate_3type_cnt, int32_t avoidancestate_4type_cnt); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpiOrg10_Avoidance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4830
	void CosmosSendKpi7_Quest(struct FName sub_quest_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi7_Quest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c47c0
	void CosmosSendKpi7_Progress(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi7_Progress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c47a0
	void CosmosSendKpi7_PlayedQuestLevel(struct FName sub_quest_id); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi7_PlayedQuestLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4730
	void CosmosSendKpi7_PlayedPhaseLevel(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi7_PlayedPhaseLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4710
	void CosmosSendKpi7_Ending(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi7_Ending // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c46f0
	void CosmosSendKpi5_TimePlayed(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi5_TimePlayed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c46d0
	void CosmosSendKpi5_ResetTimePlayed(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi5_ResetTimePlayed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c46b0
	bool CosmosSendKpi5_IsDirtyTimePlayed(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi5_IsDirtyTimePlayed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4680
	void CosmosSendKpi289_Upgrade(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi289_Upgrade // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4660
	void CosmosSendKpi22_GameLanguage(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi22_GameLanguage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4640
	void CosmosSendKpi17_Sale(struct UObject* WorldContextObject); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi17_Sale // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c45d0
	void CosmosSendKpi16_PlayedPhasesSelectedMembers(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi16_PlayedPhasesSelectedMembers // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c45b0
	bool CosmosSendKpi16_IsDirtyPlayedPhasesSelectedMembers(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi16_IsDirtyPlayedPhasesSelectedMembers // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4580
	void CosmosSendKpi14_PlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi14_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4560
	bool CosmosSendKpi14_IsDirtyPlayedPhases(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi14_IsDirtyPlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4530
	bool CosmosSendKpi10_IsDirtyCurrencyCirculation(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi10_IsDirtyCurrencyCirculation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4500
	void CosmosSendKpi10_CurrencyCirculation(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendKpi10_CurrencyCirculation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c44e0
	void CosmosSendedAtOnce(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosSendedAtOnce // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c5d30
	void CosmosResetSendedAtOnce(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosResetSendedAtOnce // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c44c0
	void CosmosResetKpiParam(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosResetKpiParam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c44a0
	bool CosmosIsSendedAtOnce(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosIsSendedAtOnce // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c4480
	void CosmosGetPlatformUserID(struct APlayerController* PlayerController, struct FString PlatformUserID, bool Result); // Function BattlePrototype.CosmosWebManagerUtility.CosmosGetPlatformUserID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11c4350
	void CosmosEndMenu(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosEndMenu // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4330
	void CosmosEndIngame(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosEndIngame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4310
	void CosmosEndEvent(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosEndEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c42f0
	void CosmosEndBattle(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosEndBattle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c42d0
	void CosmosClearParam(); // Function BattlePrototype.CosmosWebManagerUtility.CosmosClearParam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c42b0
	void CosmosAddKpiOrg9_PlayedPhases(enum class EPlayerID members_id, int32_t supportType, int32_t Num); // Function BattlePrototype.CosmosWebManagerUtility.CosmosAddKpiOrg9_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c41c0
	void CosmosAddKpiOrg8_PlayedPhases(int32_t enemySubjugation_cnt, int32_t enemySubjugation_brainCrash_0type_cnt, int32_t enemySubjugation_brainCrash_1type_cnt); // Function BattlePrototype.CosmosWebManagerUtility.CosmosAddKpiOrg8_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c40d0
	void CosmosAddKpiOrg7_PlayedPhases(int32_t brainCrash_type, int32_t Num); // Function BattlePrototype.CosmosWebManagerUtility.CosmosAddKpiOrg7_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c4020
	void CosmosAddKpiOrg6_PlayedPhases(enum class EPlayerID members_id, int32_t Num); // Function BattlePrototype.CosmosWebManagerUtility.CosmosAddKpiOrg6_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c3f70
	void CosmosAddKpiOrg19_PlayedPhases(int32_t brainSpaceActivation_cnt); // Function BattlePrototype.CosmosWebManagerUtility.CosmosAddKpiOrg19_PlayedPhases // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c3f00
	void CosmosAddKpiOrg10_ItemsUsed(enum class EConsumeItemID item_id, int32_t Num); // Function BattlePrototype.CosmosWebManagerUtility.CosmosAddKpiOrg10_ItemsUsed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11c3e50
};

// Class BattlePrototype.CullDistanceEffectBackgroundVolume
// Size: 0x278 (Inherited: 0x268)
struct ACullDistanceEffectBackgroundVolume : AVolume {
	float CullDistance; // 0x268(0x04)
	int32_t Priority; // 0x26c(0x04)
	bool Unbound; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)

	void OnActorEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.CullDistanceEffectBackgroundVolume.OnActorEndOverlapFunc // (Final|Native|Public) // @ game+0x11c91e0
	void OnActorBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.CullDistanceEffectBackgroundVolume.OnActorBeginOverlapFunc // (Final|Native|Public) // @ game+0x11c9120
};

// Class BattlePrototype.CutCameraComponent
// Size: 0x100 (Inherited: 0xc0)
struct UCutCameraComponent : UActorComponent {
	float _OwnerOldCustomDilation; // 0xc0(0x04)
	char pad_C4[0x3c]; // 0xc4(0x3c)

	void Setup(struct UDataTable* DataTable); // Function BattlePrototype.CutCameraComponent.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x11c9510
	bool IsUseCutCamera(); // Function BattlePrototype.CutCameraComponent.IsUseCutCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c90f0
	void DebugDisableCutCamera(bool bSet); // Function BattlePrototype.CutCameraComponent.DebugDisableCutCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void ChangeCameraRequest(struct FName ParameterName, bool bEnd, bool bPitchSet, float Pitch, struct UMeshComponent* Mesh); // Function BattlePrototype.CutCameraComponent.ChangeCameraRequest // (Final|Native|Public|BlueprintCallable) // @ game+0x11c87b0
	void CameraBlendTimeUpdate(); // Function BattlePrototype.CutCameraComponent.CameraBlendTimeUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x11c8790
};

// Class BattlePrototype.DamageAcceptInterface
// Size: 0x28 (Inherited: 0x28)
struct UDamageAcceptInterface : UInterface {

	bool IsStartDamageAnimAdditional(struct FHCHitResult HitResult, int32_t Damage, bool IsDown); // Function BattlePrototype.DamageAcceptInterface.IsStartDamageAnimAdditional // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.DamageAcceptComponent
// Size: 0x2c8 (Inherited: 0xc0)
struct UDamageAcceptComponent : UActorComponent {
	struct FMulticastInlineDelegate StartDamageAnim; // 0xc0(0x10)
	struct FMulticastInlineDelegate DamagePopup; // 0xd0(0x10)
	struct FMulticastInlineDelegate DamageHit; // 0xe0(0x10)
	struct FDamageAnimParam ReservedDamageAnimParam; // 0xf0(0x1c0)
	char pad_2B0[0x18]; // 0x2b0(0x18)

	void TakeDamageSimple(int32_t Damage, int32_t ReduceGuard, bool isDispDamagePoint, bool isPercentDamage); // Function BattlePrototype.DamageAcceptComponent.TakeDamageSimple // (Final|Native|Public|BlueprintCallable) // @ game+0x11c97f0
	void TakeDamage(struct FHCHitResult HitResult, int32_t Damage, float crashDamage, bool isDispDamagePoint, bool IsAnimDamage, bool IsDown); // Function BattlePrototype.DamageAcceptComponent.TakeDamage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11c9590
	bool IsStartDamageAnim(struct FHCHitResult HitResult, int32_t Damage, bool IsDown); // Function BattlePrototype.DamageAcceptComponent.IsStartDamageAnim // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8f50
	bool IsEnemy(); // Function BattlePrototype.DamageAcceptComponent.IsEnemy // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11c8960
	enum class DamagePointKind DecideDamagePointKind(); // Function BattlePrototype.DamageAcceptComponent.DecideDamagePointKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8960
};

// Class BattlePrototype.DamageArrayComponent
// Size: 0xc8 (Inherited: 0xc0)
struct UDamageArrayComponent : UActorComponent {
	char pad_C0[0x8]; // 0xc0(0x08)

	bool IsRangeCheck(struct FVector vecStart, struct FVector vecEnd, struct FVector vecForward, float Range); // Function BattlePrototype.DamageArrayComponent.IsRangeCheck // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8dd0
	struct TArray<struct FHCHitResult> HitResultMaxDamagePriorityMultiActor(struct TArray<struct FHCHitResult> HitResult, bool IsPartsInvinsible); // Function BattlePrototype.DamageArrayComponent.HitResultMaxDamagePriorityMultiActor // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8c90
	struct TArray<struct FHCHitResult> HitResultMaxDamageMultiActor(struct TArray<struct FHCHitResult> HitResult); // Function BattlePrototype.DamageArrayComponent.HitResultMaxDamageMultiActor // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8bc0
	struct FHCHitResult HitResultMaxDamage(struct TArray<struct FHCHitResult> HitResult); // Function BattlePrototype.DamageArrayComponent.HitResultMaxDamage // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8aa0
	struct TArray<struct FHCHitResult> HitResultDamageSort(struct TArray<struct FHCHitResult> HitResult, bool isDes); // Function BattlePrototype.DamageArrayComponent.HitResultDamageSort // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c8990
};

// Class BattlePrototype.DamageCalcComponent
// Size: 0x138 (Inherited: 0xc0)
struct UDamageCalcComponent : UActorComponent {
	float DAMAGE_FACTOR; // 0xc0(0x04)
	float OBJECT_DAMAGE_FACTOR; // 0xc4(0x04)
	float FIRE_DAMAGE_FACTOR; // 0xc8(0x04)
	float ELECTRIC_DAMAGE_FACTOR; // 0xcc(0x04)
	float RANDOM_FACTOR_MIN; // 0xd0(0x04)
	float RANDOM_FACTOR_MAX; // 0xd4(0x04)
	float CRITICAL_FACTOR; // 0xd8(0x04)
	float CRITICAL_CRASH_FACTOR; // 0xdc(0x04)
	float BAD_STATE_UP_FACTOR; // 0xe0(0x04)
	float BAD_STATE_DOWN_FACTOR; // 0xe4(0x04)
	float CRASH_FACTIR; // 0xe8(0x04)
	float ARMOR_DAMAGE_UP_FACTOR; // 0xec(0x04)
	float COPY_PSYCHIC_ARMOR_FACTOR; // 0xf0(0x04)
	float PSYCHICFIELD_DAMAGE_FACTOR_BOSS; // 0xf4(0x04)
	char pad_F8[0x40]; // 0xf8(0x40)

	void SetDifficultyDamageRate(enum class HCGameDifficulty difficulty, struct FDifficultyDamageRate Rate); // Function BattlePrototype.DamageCalcComponent.SetDifficultyDamageRate // (Final|Native|Public|BlueprintCallable) // @ game+0x11c9410
	int32_t CalcDamageValue(struct FHCHitResult HitResult, bool IsGuard, bool IsRandom, bool IsArmor); // Function BattlePrototype.DamageCalcComponent.CalcDamageValue // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11c85a0
};

// Class BattlePrototype.DamageCalcInterface
// Size: 0x28 (Inherited: 0x28)
struct UDamageCalcInterface : UInterface {

	bool OverwriteAttackCollisionInfo(struct FHCCollisionCommonInfo refCommonInfo, struct FHCSkillCommonInfo refSkill); // Function BattlePrototype.DamageCalcInterface.OverwriteAttackCollisionInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsPsychicFieldDamageRateToBoss(); // Function BattlePrototype.DamageCalcInterface.IsPsychicFieldDamageRateToBoss // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FCharactersParameterTable GetCharactersParameterTableInterface(); // Function BattlePrototype.DamageCalcInterface.GetCharactersParameterTableInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float CalcFinalDamageByDefence(float Damage, struct AActor* attackActor); // Function BattlePrototype.DamageCalcInterface.CalcFinalDamageByDefence // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float CalcFinalDamageByAttack(float Damage, struct AActor* defenseActor, struct FHCSkillCommonInfo skillInfo); // Function BattlePrototype.DamageCalcInterface.CalcFinalDamageByAttack // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CalcDefence(float refPhysicsDefence, float refObjDefence, float refFlameDefence, float refElectricPhysics); // Function BattlePrototype.DamageCalcInterface.CalcDefence // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CalcDamageByDefence(float refPhysicsDamage, float refObjDamage, float refFlameDamage, float refElectricDamage, float refCriticalDamageRate, struct AActor* attackActor); // Function BattlePrototype.DamageCalcInterface.CalcDamageByDefence // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CalcDamageByAttack(float refPhysicsDamage, float refObjDamage, float refFlameDamage, float refElectricDamage, float refCriticalDamageRate, struct AActor* defenseActor); // Function BattlePrototype.DamageCalcInterface.CalcDamageByAttack // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float CalcCritical(float Critical, struct AActor* defenseActor); // Function BattlePrototype.DamageCalcInterface.CalcCritical // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CalcAccumulationByDefence(float refWince, float refKnockback, float refDown, float refLaunch, float refFlame, float refElectric, float refFlooded, float refOil, float refConfusion, float refCrashScale, struct AActor* attackActor); // Function BattlePrototype.DamageCalcInterface.CalcAccumulationByDefence // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CalcAccumulationByAttack(float refWince, float refKnockback, float refDown, float refLaunch, float refFlame, float refElectric, float refFlooded, float refOil, float refConfusion, float refCrashScale, struct AActor* defenseActor, enum class HCSkillAttackType AttackType, bool bCopyActor); // Function BattlePrototype.DamageCalcInterface.CalcAccumulationByAttack // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.DamageFlyConditionComponent
// Size: 0x1a0 (Inherited: 0x160)
struct UDamageFlyConditionComponent : UConditionComponent {
	float _landingSec; // 0x160(0x04)
	float _recoverableHeight; // 0x164(0x04)
	struct FVector _recoverStartVelocity; // 0x168(0x0c)
	char pad_174[0x2c]; // 0x174(0x2c)

	void InputRecoverButton(); // Function BattlePrototype.DamageFlyConditionComponent.InputRecoverButton // (Final|Native|Public|BlueprintCallable) // @ game+0x11c8db0
};

// Class BattlePrototype.DamagePartCollisionComponent
// Size: 0x470 (Inherited: 0x430)
struct UDamagePartCollisionComponent : UCapsuleComponent {
	int32_t mParameterNo; // 0x428(0x04)
	enum class HPartNo mPartNo; // 0x42c(0x01)
	bool mIsWeakPoint; // 0x42d(0x01)
	enum class HDamageEffectType mDamageEffectType; // 0x42e(0x01)
	int32_t mDamagePriority; // 0x430(0x04)
	struct FRotator mHitRotator; // 0x434(0x0c)
	float mHitAngle; // 0x440(0x04)
	struct FVector mOffset; // 0x444(0x0c)
	bool mIsBoneEnable; // 0x450(0x01)
	struct FName mBoneBase; // 0x454(0x08)
	struct FName mBoneDir; // 0x45c(0x08)
	bool mIsNoDamage; // 0x464(0x01)
	bool mIsNoCrash; // 0x465(0x01)
	bool mIsNoReaction; // 0x466(0x01)
	bool mIsNoBadStatus; // 0x467(0x01)
	char pad_46C[0x4]; // 0x46c(0x04)

	void SetCalcDamageInfo(bool bNoDamage, bool bNoCrash, bool bNoReaction, bool bNoBadStatus); // Function BattlePrototype.DamagePartCollisionComponent.SetCalcDamageInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x11c92a0
};

// Class BattlePrototype.DamagePropertyMediatorComponent
// Size: 0x220 (Inherited: 0xc0)
struct UDamagePropertyMediatorComponent : UActorComponent {
	char pad_C0[0x140]; // 0xc0(0x140)
	struct TArray<struct UPrimitiveComponent*> _damagePrimitives; // 0x200(0x10)
	char pad_210[0x10]; // 0x210(0x10)

	void SetHitZeroEffectSE(struct FName ClaimantName, struct FHitZeroEffectAndSE effectSE); // Function BattlePrototype.DamagePropertyMediatorComponent.SetHitZeroEffectSE // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cd5d0
	void SetDamageRate(struct FName ClaimantName, float DamageRate); // Function BattlePrototype.DamagePropertyMediatorComponent.SetDamageRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1184a00
	void SetDamageCollisionDisable(struct FName ClaimantName); // Function BattlePrototype.DamagePropertyMediatorComponent.SetDamageCollisionDisable // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cd520
	void SetCacheCollisionType(int32_t Index, enum class ECollisionEnabled Type); // Function BattlePrototype.DamagePropertyMediatorComponent.SetCacheCollisionType // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd460
	void SetBlowRate(struct FName ClaimantName, float BlowRate); // Function BattlePrototype.DamagePropertyMediatorComponent.SetBlowRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cd390
	struct FHitZeroEffectAndSE GetTotalHitZeroEffectSE(); // Function BattlePrototype.DamagePropertyMediatorComponent.GetTotalHitZeroEffectSE // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11cc500
	struct UDamagePropertyMediatorComponent* GetDamagePropertyMediatorComponentFromActor(struct AActor* Actor); // Function BattlePrototype.DamagePropertyMediatorComponent.GetDamagePropertyMediatorComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbc10
	int32_t GetCacheCollisionTypeNum(); // Function BattlePrototype.DamagePropertyMediatorComponent.GetCacheCollisionTypeNum // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbbf0
	int32_t GetCacheCollisionTypeIndex(struct UPrimitiveComponent* pPrimitive); // Function BattlePrototype.DamagePropertyMediatorComponent.GetCacheCollisionTypeIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbb60
	enum class ECollisionEnabled GetCacheCollisionType(int32_t Index); // Function BattlePrototype.DamagePropertyMediatorComponent.GetCacheCollisionType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbac0
	void ClearHitZeroEffectSE(struct FName ClaimantName); // Function BattlePrototype.DamagePropertyMediatorComponent.ClearHitZeroEffectSE // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cb940
	void ClearDamageRate(struct FName ClaimantName); // Function BattlePrototype.DamagePropertyMediatorComponent.ClearDamageRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1183e60
	void ClearDamageCollisionDisable(struct FName ClaimantName); // Function BattlePrototype.DamagePropertyMediatorComponent.ClearDamageCollisionDisable // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cb8b0
	void ClearBlowRate(struct FName ClaimantName); // Function BattlePrototype.DamagePropertyMediatorComponent.ClearBlowRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cb820
	float CalcTotalDamageRate(); // Function BattlePrototype.DamagePropertyMediatorComponent.CalcTotalDamageRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1183cd0
	float CalcTotalBlowRate(); // Function BattlePrototype.DamagePropertyMediatorComponent.CalcTotalBlowRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11cb7f0
};

// Class BattlePrototype.DamageResponseComponent
// Size: 0x120 (Inherited: 0xc0)
struct UDamageResponseComponent : UActorComponent {
	struct FMulticastInlineDelegate SpawnGuardEffect; // 0xc0(0x10)
	struct FMulticastInlineDelegate SpawnHitEffect; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnDamaging; // 0xe0(0x10)
	struct FMulticastInlineDelegate SpawnDamageHitEffect; // 0xf0(0x10)
	char pad_100[0x20]; // 0x100(0x20)

	int32_t OnDamageDirectAttack(bool bUseFixDamage, int32_t fixDamage, struct FHCHitResult HitResult, bool isForceCritical); // Function BattlePrototype.DamageResponseComponent.OnDamageDirectAttack // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cd0c0
	void OnDamageAfter(); // Function BattlePrototype.DamageResponseComponent.OnDamageAfter // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd0a0
	int32_t OnDamageActorHit(struct FHCHitResult HitResult, bool IsGuard, bool isForceCritical, bool IsArmor, bool isRatio, bool isAccumurateRatio, bool isFixCalcCrash); // Function BattlePrototype.DamageResponseComponent.OnDamageActorHit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ccde0
};

// Class BattlePrototype.DatabaseManager
// Size: 0x2a0 (Inherited: 0x28)
struct UDatabaseManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UItemData* ItemData; // 0x30(0x08)
	struct TArray<struct FTextDatabaseData> TextList; // 0x38(0x10)
	struct TMap<struct FString, struct UMessageData*> MessageList; // 0x48(0x50)
	struct UEnemyDropData* EnemyDropData; // 0x98(0x08)
	struct UTradeItemData* TradeItemData; // 0xa0(0x08)
	struct UQuestData* QuestData; // 0xa8(0x08)
	struct UBrainMessageData* BrainMessageData; // 0xb0(0x08)
	struct ULoadTipsData* LoadTipsData; // 0xb8(0x08)
	struct ULibraryEnemyData* LibraryEnemyData; // 0xc0(0x08)
	struct ULibraryCharaData* LibraryCharaData; // 0xc8(0x08)
	struct UHelpTutorialData* HelpTutorialData; // 0xd0(0x08)
	struct UDetailedMapData* DetailedMapData; // 0xd8(0x08)
	struct UDataTable* speakerData; // 0xe0(0x08)
	struct UShowDestinationData* ShowDestinationData; // 0xe8(0x08)
	struct UPresentData* PresentData; // 0xf0(0x08)
	struct UWorldmapBatchOpenData* WorldmapBatchOpenData; // 0xf8(0x08)
	struct TArray<struct FItemFavorabilityParamDataCell> ItemFavorabilityParam; // 0x100(0x10)
	struct UBondsLevelupData* BondsLevelupData; // 0x110(0x08)
	struct UTeamBondsLevelupData* TeamBondsLevelupData; // 0x118(0x08)
	struct TArray<struct FActionIconSupportParam> ActionIconSupportParamList; // 0x120(0x10)
	struct FBrainTalkDataBase m_BrainTalkDatabase; // 0x130(0x120)
	char pad_250[0x28]; // 0x250(0x28)
	struct TArray<enum class EPlayerID> m_CharaSortListM; // 0x278(0x10)
	struct TArray<enum class EPlayerID> m_CharaSortListF; // 0x288(0x10)
	char pad_298[0x8]; // 0x298(0x08)

	void UnloadTextAll(); // Function BattlePrototype.DatabaseManager.UnloadTextAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd8c0
	bool UnloadText(enum class ETextType TextType); // Function BattlePrototype.DatabaseManager.UnloadText // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd830
	void UnloadMessageAll(); // Function BattlePrototype.DatabaseManager.UnloadMessageAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd810
	bool UnloadMessage(struct FString TableName); // Function BattlePrototype.DatabaseManager.UnloadMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd720
	void PreLoadAllVoiceLast(struct FString TableName); // Function BattlePrototype.DatabaseManager.PreLoadAllVoiceLast // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd2b0
	bool LoadTextFromPath(enum class ETextType TextType, struct FString FilePath); // Function BattlePrototype.DatabaseManager.LoadTextFromPath // (Final|Native|Public|BlueprintCallable) // @ game+0x11cccb0
	bool LoadResidentMessageData(); // Function BattlePrototype.DatabaseManager.LoadResidentMessageData // (Final|Native|Public|BlueprintCallable) // @ game+0x11ccc80
	bool LoadMessageFromPath(struct FString TableName, struct FString FilePath); // Function BattlePrototype.DatabaseManager.LoadMessageFromPath // (Final|Native|Public|BlueprintCallable) // @ game+0x11ccb10
	bool LoadMessageFromDataTable(struct FString TableName, struct UDataTable* DataTable); // Function BattlePrototype.DatabaseManager.LoadMessageFromDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc9e0
	bool LoadMessage(struct FString TableName, struct UDataTable* DataTable); // Function BattlePrototype.DatabaseManager.LoadMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc8b0
	bool LoadAndAppendMessageFromPath(struct FString TableName, struct FString FilePath); // Function BattlePrototype.DatabaseManager.LoadAndAppendMessageFromPath // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc740
	bool IsFinishBrainTalkLoad(); // Function BattlePrototype.DatabaseManager.IsFinishBrainTalkLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc710
	void Initialize(); // Function BattlePrototype.DatabaseManager.Initialize // (Native|Event|Public|BlueprintEvent) // @ game+0x11cc6c0
	struct FString GetWhoSpeak(struct FString DisplayName); // Function BattlePrototype.DatabaseManager.GetWhoSpeak // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc570
	struct UTradeItemData* GetTradeItemData(); // Function BattlePrototype.DatabaseManager.GetTradeItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc540
	struct FString GetText(enum class ETextType TextType, struct FName ID); // Function BattlePrototype.DatabaseManager.GetText // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc3f0
	void GetSpeakerData(struct FName RowName, struct FMessageDataCell speakerData); // Function BattlePrototype.DatabaseManager.GetSpeakerData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cc2a0
	struct UShowDestinationData* GetShowDestinationData(); // Function BattlePrototype.DatabaseManager.GetShowDestinationData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc270
	struct UQuestData* GetQuestData(); // Function BattlePrototype.DatabaseManager.GetQuestData // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad260
	struct UPresentData* GetPresentData(); // Function BattlePrototype.DatabaseManager.GetPresentData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc240
	struct TArray<enum class EPlayerID> GetPlayerSortList(enum class EPlayerID mainID); // Function BattlePrototype.DatabaseManager.GetPlayerSortList // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc170
	bool GetMessageData(struct FMessageDataCell MessageDataCell, struct FString TableName, struct FString ID); // Function BattlePrototype.DatabaseManager.GetMessageData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11cbf30
	struct ULoadTipsData* GetLoadTipsData(); // Function BattlePrototype.DatabaseManager.GetLoadTipsData // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad290
	struct ULibraryEnemyData* GetLibraryEnemyData(); // Function BattlePrototype.DatabaseManager.GetLibraryEnemyData // (Final|Native|Public|BlueprintCallable) // @ game+0xae0120
	struct ULibraryCharaData* GetLibraryCharaData(); // Function BattlePrototype.DatabaseManager.GetLibraryCharaData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cbf00
	float GetItemFavorabilityParam(enum class EItemFavorability favorability, bool IsFirstTime); // Function BattlePrototype.DatabaseManager.GetItemFavorabilityParam // (Final|Native|Public|BlueprintCallable) // @ game+0x11cbe30
	struct FString GetItemDataName(struct FName ID); // Function BattlePrototype.DatabaseManager.GetItemDataName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbd50
	struct FString GetItemDataDescription(struct FName ID); // Function BattlePrototype.DatabaseManager.GetItemDataDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbd50
	struct UItemData* GetItemData(); // Function BattlePrototype.DatabaseManager.GetItemData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cbd20
	struct UHelpTutorialData* GetHelpTutorialData(); // Function BattlePrototype.DatabaseManager.GetHelpTutorialData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cbcf0
	struct UEnemyDropData* GetEnemyDropData(); // Function BattlePrototype.DatabaseManager.GetEnemyDropData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cbcc0
	struct UDetailedMapData* GetDetailedMapData(); // Function BattlePrototype.DatabaseManager.GetDetailedMapData // (Final|Native|Public|BlueprintCallable) // @ game+0x11cbc90
	struct UBrainMessageData* GetBrainMessageData(); // Function BattlePrototype.DatabaseManager.GetBrainMessageData // (Final|Native|Public|BlueprintCallable) // @ game+0x11ad2c0
	struct UMessageData* FindMessageData(struct FString TableName); // Function BattlePrototype.DatabaseManager.FindMessageData // (Final|Native|Protected|BlueprintCallable) // @ game+0x11cb9d0
	void BT_LoadCategoryDatatable(); // Function BattlePrototype.DatabaseManager.BT_LoadCategoryDatatable // (Final|Native|Public|BlueprintCallable) // @ game+0x11cb7d0
	void BT_BrainTalkLoadWork(); // Function BattlePrototype.DatabaseManager.BT_BrainTalkLoadWork // (Final|Native|Public|BlueprintCallable) // @ game+0x11cb7b0
	void BT_BrainTalkAsyncLoadStart(); // Function BattlePrototype.DatabaseManager.BT_BrainTalkAsyncLoadStart // (Final|Native|Public|BlueprintCallable) // @ game+0x11cb790
	bool BT_BrainTalkAsyncLoadExec(); // Function BattlePrototype.DatabaseManager.BT_BrainTalkAsyncLoadExec // (Final|Native|Public|BlueprintCallable) // @ game+0x11cb760
};

// Class BattlePrototype.DataTableExtends
// Size: 0xc8 (Inherited: 0xc8)
struct UDataTableExtends : UDataTable {
};

// Class BattlePrototype.DataTableTest
// Size: 0x250 (Inherited: 0x230)
struct ADataTableTest : AActor {
	struct UDataTable* _datatable; // 0x230(0x08)
	struct TArray<struct FDataTableRowTest> _dataContents; // 0x238(0x10)
	struct UDataTableExtends* _datatableExtends; // 0x248(0x08)

	void InitDataContents(); // Function BattlePrototype.DataTableTest.InitDataContents // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc6a0
};

// Class BattlePrototype.DeadStateMediatorComponent
// Size: 0xe8 (Inherited: 0xc0)
struct UDeadStateMediatorComponent : UActorComponent {
	float _deadStartTime; // 0xc0(0x04)
	float _deadKeepSec; // 0xc4(0x04)
	bool _disableAutoRevive; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct FMulticastInlineDelegate OnRevive; // 0xd0(0x10)
	char pad_E0[0x8]; // 0xe0(0x08)

	void UpdateDead(); // Function BattlePrototype.DeadStateMediatorComponent.UpdateDead // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool TryStartDead(); // Function BattlePrototype.DeadStateMediatorComponent.TryStartDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd6f0
	void StartDead(); // Function BattlePrototype.DeadStateMediatorComponent.StartDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd6d0
	void SetDisableAutoRevibeAfterDead(); // Function BattlePrototype.DeadStateMediatorComponent.SetDisableAutoRevibeAfterDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11cd5b0
	bool IsAbleDead(); // Function BattlePrototype.DeadStateMediatorComponent.IsAbleDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11cc6e0
};

// Class BattlePrototype.DebuggingGameActivityManager
// Size: 0x258 (Inherited: 0x230)
struct ADebuggingGameActivityManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct FString DisplayString; // 0x238(0x10)
	struct FLinearColor TextColor; // 0x248(0x10)

	void SetDisplayFlag(bool Flag); // Function BattlePrototype.DebuggingGameActivityManager.SetDisplayFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11d3200
	bool IsDisplayFlag(); // Function BattlePrototype.DebuggingGameActivityManager.IsDisplayFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11d1b80
};

// Class BattlePrototype.DebuggingItemEvent
// Size: 0x2e0 (Inherited: 0x2c8)
struct ADebuggingItemEvent : ADebuggingItemBase {
	struct FMulticastInlineDelegate OnEvent; // 0x2c8(0x10)
	char pad_2D8[0x8]; // 0x2d8(0x08)

	void OnKeySelectFunc(struct ADebuggingItemBase* InItem, bool IsRepeat); // Function BattlePrototype.DebuggingItemEvent.OnKeySelectFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x117f3c0
	void CallEvent(); // Function BattlePrototype.DebuggingItemEvent.CallEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
};

// Class BattlePrototype.DebuggingItemFloat
// Size: 0x300 (Inherited: 0x2c8)
struct ADebuggingItemFloat : ADebuggingItemBase {
	struct FMulticastInlineDelegate OnChanged; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnSliderSettingChanged; // 0x2d8(0x10)
	float Min; // 0x2e8(0x04)
	float Max; // 0x2ec(0x04)
	float Step; // 0x2f0(0x04)
	float Value; // 0x2f4(0x04)
	char pad_2F8[0x8]; // 0x2f8(0x08)

	void SetValue(float InValue); // Function BattlePrototype.DebuggingItemFloat.SetValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11d3710
	void SetSliderSettings(float InMin, float InMax, float InStep); // Function BattlePrototype.DebuggingItemFloat.SetSliderSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x11d3290
	void OnKeyRightFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemFloat.OnKeyRightFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d2050
	void OnKeyLeftFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemFloat.OnKeyLeftFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d1c50
	float GetValue(); // Function BattlePrototype.DebuggingItemFloat.GetValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1880
};

// Class BattlePrototype.DebuggingItemImage
// Size: 0x310 (Inherited: 0x2c8)
struct ADebuggingItemImage : ADebuggingItemBase {
	struct FMulticastInlineDelegate OnChangedImage; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnChangedIndex; // 0x2d8(0x10)
	struct UTexture* Image; // 0x2e8(0x08)
	struct TArray<struct FText> StringArray; // 0x2f0(0x10)
	int32_t Index; // 0x300(0x04)
	char pad_304[0xc]; // 0x304(0x0c)

	void SetStringIndex(int32_t InIndex); // Function BattlePrototype.DebuggingItemImage.SetStringIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x11d34a0
	void SetImage(struct UTexture* Texture); // Function BattlePrototype.DebuggingItemImage.SetImage // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
	void OnKeyRightFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemImage.OnKeyRightFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d2150
	void OnKeyLeftFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemImage.OnKeyLeftFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d1d50
	int32_t GetStringIndex(); // Function BattlePrototype.DebuggingItemImage.GetStringIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1820
};

// Class BattlePrototype.DebuggingItemLabel
// Size: 0x2f8 (Inherited: 0x2c8)
struct ADebuggingItemLabel : ADebuggingItemBase {
	struct FText DispLabel; // 0x2c8(0x18)
	struct FMulticastInlineDelegate OnChanged; // 0x2e0(0x10)
	char pad_2F0[0x8]; // 0x2f0(0x08)

	void SetText(struct FText text); // Function BattlePrototype.DebuggingItemLabel.SetText // (Final|Native|Public|BlueprintCallable) // @ game+0x11d35a0
};

// Class BattlePrototype.DebuggingItemScrResInnerChange
// Size: 0x308 (Inherited: 0x300)
struct ADebuggingItemScrResInnerChange : ADebuggingItemInt {
	char pad_300[0x8]; // 0x300(0x08)

	void OnChangeValue(struct ADebuggingItemInt* InItem); // Function BattlePrototype.DebuggingItemScrResInnerChange.OnChangeValue // (Native|Public) // @ game+0x11d1bc0
};

// Class BattlePrototype.DebuggingItemStringArray
// Size: 0x308 (Inherited: 0x2c8)
struct ADebuggingItemStringArray : ADebuggingItemBase {
	struct FMulticastInlineDelegate OnChanged; // 0x2c8(0x10)
	struct FMulticastInlineDelegate OnComboBoxSettingChanged; // 0x2d8(0x10)
	struct TArray<struct FText> StringArray; // 0x2e8(0x10)
	int32_t Index; // 0x2f8(0x04)
	char pad_2FC[0xc]; // 0x2fc(0x0c)

	void SetStringIndex(int32_t InIndex); // Function BattlePrototype.DebuggingItemStringArray.SetStringIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x11d3520
	void SetComboBoxSetting(struct TArray<struct FText> InStringArray); // Function BattlePrototype.DebuggingItemStringArray.SetComboBoxSetting // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d2940
	void OnKeyRightFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemStringArray.OnKeyRightFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d2350
	void OnKeyLeftFunc(struct ADebuggingItemBase* InItem, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingItemStringArray.OnKeyLeftFunc // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d1f50
	int32_t GetStringIndex(); // Function BattlePrototype.DebuggingItemStringArray.GetStringIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1840
	struct FText GetString(); // Function BattlePrototype.DebuggingItemStringArray.GetString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1710
	int32_t GetIndexByString(struct FText SearchString); // Function BattlePrototype.DebuggingItemStringArray.GetIndexByString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1560
};

// Class BattlePrototype.DebuggingItemScrSetting
// Size: 0x310 (Inherited: 0x308)
struct ADebuggingItemScrSetting : ADebuggingItemStringArray {
	char pad_308[0x8]; // 0x308(0x08)
};

// Class BattlePrototype.DebuggingItemScrResOutputChange
// Size: 0x310 (Inherited: 0x310)
struct ADebuggingItemScrResOutputChange : ADebuggingItemScrSetting {

	void OnChangeValue(struct ADebuggingItemStringArray* InItem); // Function BattlePrototype.DebuggingItemScrResOutputChange.OnChangeValue // (Native|Public) // @ game+0x11d1bc0
};

// Class BattlePrototype.DebuggingItemScrModeChange
// Size: 0x310 (Inherited: 0x310)
struct ADebuggingItemScrModeChange : ADebuggingItemScrSetting {

	void OnChangeValue(struct ADebuggingItemStringArray* InItem); // Function BattlePrototype.DebuggingItemScrModeChange.OnChangeValue // (Native|Public) // @ game+0x11d1bc0
};

// Class BattlePrototype.DebuggingItemScrApply
// Size: 0x2f0 (Inherited: 0x2e0)
struct ADebuggingItemScrApply : ADebuggingItemEvent {
	char pad_2E0[0x10]; // 0x2e0(0x10)

	void ApplyEvent(struct ADebuggingItemEvent* InItem); // Function BattlePrototype.DebuggingItemScrApply.ApplyEvent // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.DebuggingItemScrResGroup
// Size: 0x2d0 (Inherited: 0x2d0)
struct ADebuggingItemScrResGroup : ADebuggingItemGroup {
};

// Class BattlePrototype.DebuggingItemWidgetBase
// Size: 0x238 (Inherited: 0x230)
struct UDebuggingItemWidgetBase : UUserWidget {
	struct ADebuggingItemBase* Item; // 0x230(0x08)

	void Setup(); // Function BattlePrototype.DebuggingItemWidgetBase.Setup // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.DebuggingManager
// Size: 0x398 (Inherited: 0x230)
struct ADebuggingManager : AActor {
	char pad_230[0x20]; // 0x230(0x20)
	struct FMulticastInlineDelegate OnReadyDebugging; // 0x250(0x10)
	enum class EDebuggingPage Page; // 0x260(0x01)
	char pad_261[0x4f]; // 0x261(0x4f)
	struct UUserWidget* DebuggingWidget; // 0x2b0(0x08)
	struct TArray<struct UDebuggingWidget*> DebuggingTreeWidget; // 0x2b8(0x10)
	struct UDebuggingStartupObject* StartupObject; // 0x2c8(0x08)
	char pad_2D0[0x18]; // 0x2d0(0x18)
	struct ADebuggingItemStringArray* m_pDebugTimeSaveDataComboBox; // 0x2e8(0x08)
	bool bDebugDriveDrawCrashBonusAll; // 0x2f0(0x01)
	bool bDebugAutoInput; // 0x2f1(0x01)
	bool bDebugAutoEvent; // 0x2f2(0x01)
	bool bDebugPrintSequencerFrame; // 0x2f3(0x01)
	float DebugAutoInputDelayTime; // 0x2f4(0x04)
	bool bDebugPlayerOneBrainCrash; // 0x2f8(0x01)
	char pad_2F9[0x3]; // 0x2f9(0x03)
	int32_t TotalTownPeopleCrowdNum; // 0x2fc(0x04)
	int32_t ActiveTownPeopleCrowdNum; // 0x300(0x04)
	int32_t TotalTownPeopleNum; // 0x304(0x04)
	int32_t ActiveTownPeopleNum; // 0x308(0x04)
	struct TWeakObjectPtr<struct ADebuggingItemInGameAchievementGroup> AchievementGroup; // 0x30c(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemFlagManagerGroup> CharaLibFlagGroup; // 0x314(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemFlagManagerGroup> EnemyLibFlagGroup; // 0x31c(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemClearGetterGroup> ClearGetterGroup; // 0x324(0x08)
	struct TWeakObjectPtr<struct ATrialParamDebugGroup> TrialParamGroup; // 0x32c(0x08)
	bool bDebugEnemyInstantBadCondition; // 0x334(0x01)
	bool bDebugEnemyOneKill; // 0x335(0x01)
	bool bDebugEnemyOneBreakArmor; // 0x336(0x01)
	bool bDebugEnemyBrainCrashAccess; // 0x337(0x01)
	bool bDebugEnemyForceWait; // 0x338(0x01)
	bool bDebugEnemyNoReaction; // 0x339(0x01)
	bool bDebugEnemyDrawEyeRay; // 0x33a(0x01)
	bool bDebugEnableEnemyHpRateDamage; // 0x33b(0x01)
	float DebugEnemyHPRateDamage; // 0x33c(0x04)
	bool DebugEnemyNoAttack; // 0x340(0x01)
	bool bDebugEnemyAllowanceIgnoreOutOfScreen; // 0x341(0x01)
	bool bDebugEnemyAllowanceIgnoreRestrictAttackOther; // 0x342(0x01)
	bool bDebugEnemyRepopNoTime; // 0x343(0x01)
	bool bDebugEnemyRepopNoRange; // 0x344(0x01)
	bool bDebugStopUpdateEnemyTickEnable; // 0x345(0x01)
	bool bDebugForceEnableUpdateEnemyTickEnable; // 0x346(0x01)
	bool bDebugEnemyDispRepopSettingData; // 0x347(0x01)
	bool bDebugEnemyDispTickControlInfo; // 0x348(0x01)
	bool bIsDebugEnemyDispSettingInfo; // 0x349(0x01)
	bool bIsDebugEnemyDispGroupInfo; // 0x34a(0x01)
	bool bDebugEnemyDispNavMeshFlag; // 0x34b(0x01)
	bool bDebugDisablePlanarReflection; // 0x34c(0x01)
	bool bDebugDispRevision; // 0x34d(0x01)
	bool bDebugDamageCalcLog; // 0x34e(0x01)
	bool bDebugCrushDamageCalcLog; // 0x34f(0x01)
	bool bDebugHasBrokenAllBattlefield; // 0x350(0x01)
	bool bDisplayLogEventAssetLoad; // 0x351(0x01)
	char pad_352[0x6]; // 0x352(0x06)
	struct TArray<struct FString> DebugLoggerString; // 0x358(0x10)
	struct TArray<float> DebugLoggerTime; // 0x368(0x10)
	char pad_378[0x18]; // 0x378(0x18)
	bool bDebugNpcNoBattle; // 0x390(0x01)
	enum class EPlayerID DebugControlNonePlayerID; // 0x391(0x01)
	bool bDebugDrawNpcInputStick; // 0x392(0x01)
	char pad_393[0x5]; // 0x393(0x05)

	void UnregisterChildFromItem(enum class EDebuggingPage InPage, struct ADebuggingItemBase* InItem); // Function BattlePrototype.DebuggingManager.UnregisterChildFromItem // (Final|Native|Public|BlueprintCallable) // @ game+0x11d25b0
	void UnregisterChildFromHashName(enum class EDebuggingPage InPage, struct FText InHashName); // Function BattlePrototype.DebuggingManager.UnregisterChildFromHashName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d38e0
	void TickPageUI(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageSystem(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageSystem // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageSound(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageScene(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageScene // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageRender(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageRender // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPagePlayer(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPagePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageParty(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageParty // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageEvent(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageEnemy(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageBattle(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageBattle // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageAjito(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.TickPageAjito // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void StartWindow(); // Function BattlePrototype.DebuggingManager.StartWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void SetPage(enum class EDebuggingPage InPage); // Function BattlePrototype.DebuggingManager.SetPage // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void SetDebugNpcNoBattle(bool bEnable); // Function BattlePrototype.DebuggingManager.SetDebugNpcNoBattle // (Final|Native|Public|BlueprintCallable) // @ game+0x11d2c60
	void SetDebugHasBrokenAllBattlefield(bool AllBroken); // Function BattlePrototype.DebuggingManager.SetDebugHasBrokenAllBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x11d2be0
	void SetDebuggingSelectStrings(struct TArray<struct FName> AreaSelectLabels, struct TArray<struct FString> AreaSelectStrings, struct TArray<struct FName> ScenarioSelectLabels, struct TArray<struct FString> ScenerioSelectStrings, struct TArray<struct FName> SevedataSelectLabels, struct TArray<struct FString> SavedataSelectStrings); // Function BattlePrototype.DebuggingManager.SetDebuggingSelectStrings // (Final|Native|Public|BlueprintCallable) // @ game+0x11d2ce0
	void SetDebugDrawNpcInputStick(bool Value); // Function BattlePrototype.DebuggingManager.SetDebugDrawNpcInputStick // (Final|Native|Public|BlueprintCallable) // @ game+0x11d2b60
	void SetDebugDispRevisions(bool isDisp); // Function BattlePrototype.DebuggingManager.SetDebugDispRevisions // (Final|Native|Public|BlueprintCallable) // @ game+0x11d2ae0
	void SetDebugDisablePlanarReflection(bool isDisable); // Function BattlePrototype.DebuggingManager.SetDebugDisablePlanarReflection // (Final|Native|Public|BlueprintCallable) // @ game+0x11d2a60
	void SetDebugControlNonePlayerID(enum class EPlayerID ID); // Function BattlePrototype.DebuggingManager.SetDebugControlNonePlayerID // (Final|Native|Public|BlueprintCallable) // @ game+0x11d29e0
	struct ADebuggingItemBase* SearchItem(enum class EDebuggingPage InPage, struct FText InHashName, bool InIgnoreCase); // Function BattlePrototype.DebuggingManager.SearchItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d27e0
	void SaveDebuggingParameter(); // Function BattlePrototype.DebuggingManager.SaveDebuggingParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ResetDebuggingParameter(); // Function BattlePrototype.DebuggingManager.ResetDebuggingParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void RegisterChild(enum class EDebuggingPage InPage, struct ADebuggingItemBase* InItem); // Function BattlePrototype.DebuggingManager.RegisterChild // (Final|Native|Public|BlueprintCallable) // @ game+0x11d25b0
	void LoadDebuggingParameter(bool IsBroadcast); // Function BattlePrototype.DebuggingManager.LoadDebuggingParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	bool IsReady(); // Function BattlePrototype.DebuggingManager.IsReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11a3260
	bool IsOpenWindow(); // Function BattlePrototype.DebuggingManager.IsOpenWindow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11a3280
	bool IsEnableDebugPauseInput(); // Function BattlePrototype.DebuggingManager.IsEnableDebugPauseInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsEnableDebugLotteryParam(); // Function BattlePrototype.DebuggingManager.IsEnableDebugLotteryParam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsDisplayLogEventAssetLoad(); // Function BattlePrototype.DebuggingManager.IsDisplayLogEventAssetLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x11d1ba0
	bool IsDebugStopUpdateEnemyTickEnable(); // Function BattlePrototype.DebuggingManager.IsDebugStopUpdateEnemyTickEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1b60
	bool IsDebugNpcNoBattle(); // Function BattlePrototype.DebuggingManager.IsDebugNpcNoBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1b40
	bool IsDebugHasBrokenAllBattlefield(); // Function BattlePrototype.DebuggingManager.IsDebugHasBrokenAllBattlefield // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1b20
	bool IsDebugForceEnableUpdateEnemyTickEnable(); // Function BattlePrototype.DebuggingManager.IsDebugForceEnableUpdateEnemyTickEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1b00
	bool IsDebugEnemyWince(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyWince // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	bool IsDebugEnemyRepopNoTime(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyRepopNoTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1ae0
	bool IsDebugEnemyRepopNoRange(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyRepopNoRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1ac0
	bool IsDebugEnemyOneKill(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyOneKill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1aa0
	bool IsDebugEnemyOneBreakArmor(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyOneBreakArmor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1a80
	bool IsDebugEnemyNoReaction(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyNoReaction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1a60
	bool IsDebugEnemyNoAttack(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyNoAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1a40
	bool IsDebugEnemyKnockBack(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyKnockBack // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	bool IsDebugEnemyInstantBadCondition(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyInstantBadCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1a20
	bool IsDebugEnemyForceWait(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyForceWait // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1a00
	bool IsDebugEnemyDrawEyeRay(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyDrawEyeRay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d19e0
	bool IsDebugEnemyDispTickControlInfo(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyDispTickControlInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d19c0
	bool IsDebugEnemyDispSettingInfo(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyDispSettingInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d19a0
	bool IsDebugEnemyDispRepopSettingData(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyDispRepopSettingData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1980
	bool IsDebugEnemyDispGroupInfo(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyDispGroupInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1960
	bool IsDebugEnemyBrainCrashAccess(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyBrainCrashAccess // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1940
	bool IsDebugEnemyBlow(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyBlow // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	bool IsDebugEnemyAllowanceIgnoreRestrictAttackOther(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyAllowanceIgnoreRestrictAttackOther // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1920
	bool IsDebugEnemyAllowanceIgnoreOutOfScreen(); // Function BattlePrototype.DebuggingManager.IsDebugEnemyAllowanceIgnoreOutOfScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1900
	bool IsDebugEnableEnemyHpRateDamage(); // Function BattlePrototype.DebuggingManager.IsDebugEnableEnemyHpRateDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d18e0
	bool IsDebugDamageCalcLog(); // Function BattlePrototype.DebuggingManager.IsDebugDamageCalcLog // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d18c0
	bool IsDebugCrushDamageCalcLog(); // Function BattlePrototype.DebuggingManager.IsDebugCrushDamageCalcLog // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d18a0
	struct FString GetRevisionString(); // Function BattlePrototype.DebuggingManager.GetRevisionString // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11d1650
	int32_t GetDebugLotteryParamIndex(); // Function BattlePrototype.DebuggingManager.GetDebugLotteryParamIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c60
	struct FString GetDebuggingText(struct FString Key, bool isReferenceJp); // Function BattlePrototype.DebuggingManager.GetDebuggingText // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11d13e0
	struct ADebuggingManager* GetDebuggingManagerInstance(struct UObject* WorldContextObject); // Function BattlePrototype.DebuggingManager.GetDebuggingManagerInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11d1360
	float GetDebugEnemyHpRateDamage(); // Function BattlePrototype.DebuggingManager.GetDebugEnemyHpRateDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1340
	bool GetDebugDrawNpcInputStick(); // Function BattlePrototype.DebuggingManager.GetDebugDrawNpcInputStick // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1320
	enum class EPlayerID GetDebugControlNonePlayerID(); // Function BattlePrototype.DebuggingManager.GetDebugControlNonePlayerID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1300
	struct FString GetDamageCalcLog(); // Function BattlePrototype.DebuggingManager.GetDamageCalcLog // (Final|Native|Public|BlueprintCallable) // @ game+0x11d1240
	void FinishWindow(); // Function BattlePrototype.DebuggingManager.FinishWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ExportDebuggingItemText(); // Function BattlePrototype.DebuggingManager.ExportDebuggingItemText // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void EndPageUI(); // Function BattlePrototype.DebuggingManager.EndPageUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageSystem(); // Function BattlePrototype.DebuggingManager.EndPageSystem // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageSound(); // Function BattlePrototype.DebuggingManager.EndPageSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageScene(); // Function BattlePrototype.DebuggingManager.EndPageScene // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageRender(); // Function BattlePrototype.DebuggingManager.EndPageRender // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPagePlayer(); // Function BattlePrototype.DebuggingManager.EndPagePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageParty(); // Function BattlePrototype.DebuggingManager.EndPageParty // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageEvent(); // Function BattlePrototype.DebuggingManager.EndPageEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageEnemy(); // Function BattlePrototype.DebuggingManager.EndPageEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageBattle(); // Function BattlePrototype.DebuggingManager.EndPageBattle // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageAjito(); // Function BattlePrototype.DebuggingManager.EndPageAjito // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void Dump(); // Function BattlePrototype.DebuggingManager.Dump // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void DrawDebugLogger(float DeltaSeconds); // Function BattlePrototype.DebuggingManager.DrawDebugLogger // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void DebugUpdateDisablePlanarReflection(); // Function BattlePrototype.DebuggingManager.DebugUpdateDisablePlanarReflection // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	int32_t DebugSelectPrevCreateEnemy(int32_t subValue); // Function BattlePrototype.DebuggingManager.DebugSelectPrevCreateEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	int32_t DebugSelectNextCreateEnemy(int32_t addValue); // Function BattlePrototype.DebuggingManager.DebugSelectNextCreateEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool DebugIsDispRevisions(); // Function BattlePrototype.DebuggingManager.DebugIsDispRevisions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d11a0
	bool DebugIsDisablePlanarReflection(); // Function BattlePrototype.DebuggingManager.DebugIsDisablePlanarReflection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1180
	void DebugInputStepFrame(); // Function BattlePrototype.DebuggingManager.DebugInputStepFrame // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void DebugInputPause(); // Function BattlePrototype.DebuggingManager.DebugInputPause // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	struct FName DebugGetCreateEnemyName(); // Function BattlePrototype.DebuggingManager.DebugGetCreateEnemyName // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	void DebugEnemyDispNavMesh(); // Function BattlePrototype.DebuggingManager.DebugEnemyDispNavMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool DebugCreateEnemy(struct FVector Location); // Function BattlePrototype.DebuggingManager.DebugCreateEnemy // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1685580
	void BeginPageUI(); // Function BattlePrototype.DebuggingManager.BeginPageUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageSystem(); // Function BattlePrototype.DebuggingManager.BeginPageSystem // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageSound(); // Function BattlePrototype.DebuggingManager.BeginPageSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageScene(); // Function BattlePrototype.DebuggingManager.BeginPageScene // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageRender(); // Function BattlePrototype.DebuggingManager.BeginPageRender // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPagePlayer(); // Function BattlePrototype.DebuggingManager.BeginPagePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageParty(); // Function BattlePrototype.DebuggingManager.BeginPageParty // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageEvent(); // Function BattlePrototype.DebuggingManager.BeginPageEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageEnemy(); // Function BattlePrototype.DebuggingManager.BeginPageEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageBattle(); // Function BattlePrototype.DebuggingManager.BeginPageBattle // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageAjito(); // Function BattlePrototype.DebuggingManager.BeginPageAjito // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void AddDebugLogger(struct FString String, float DrawSeconds); // Function BattlePrototype.DebuggingManager.AddDebugLogger // (Final|Native|Public|BlueprintCallable) // @ game+0x11d10a0
};

// Class BattlePrototype.DebuggingStatsManager
// Size: 0x58 (Inherited: 0x28)
struct UDebuggingStatsManager : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class BattlePrototype.DebuggingWidget
// Size: 0x288 (Inherited: 0x230)
struct UDebuggingWidget : UUserWidget {
	char pad_230[0x58]; // 0x230(0x58)
};

// Class BattlePrototype.DebuggingStartupObject
// Size: 0x158 (Inherited: 0x28)
struct UDebuggingStartupObject : UObject {
	int32_t SaveDataNo; // 0x28(0x04)
	int32_t DebugSaveDataNo; // 0x2c(0x04)
	struct USaveLoadScreenParamManager* m_pDebugSaveLoadScreenParamManager; // 0x30(0x08)
	struct USaveLoadScreenParamManager* m_pDebugAutoSaveLoadScreenParamManager; // 0x38(0x08)
	struct USaveLoadScreenParamManager* m_pDebugSystemSaveLoadScreenParamManager; // 0x40(0x08)
	struct USaveLoadScreenParamManager* m_pDebugDebugSaveLoadScreenParamManager; // 0x48(0x08)
	char pad_50[0x108]; // 0x50(0x108)

	void OnUseMouseCursor(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnUseMouseCursor // (Final|Native|Public) // @ game+0x79d490
	void OnTitleBack(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnTitleBack // (Final|Native|Public) // @ game+0x79d490
	void OnSystemSaveGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSystemSaveGameData // (Final|Native|Public) // @ game+0x79d490
	void OnSystemLoadGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSystemLoadGameData // (Final|Native|Public) // @ game+0x79d490
	void OnSystemChangeZeroEpClearFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnSystemChangeZeroEpClearFlag // (Final|Native|Public) // @ game+0x79d490
	void OnSystemChangeClearFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnSystemChangeClearFlag // (Final|Native|Public) // @ game+0x79d490
	void OnSetSaveIndex(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnSetSaveIndex // (Final|Native|Public) // @ game+0x79d490
	void OnSetDebugSaveIndex(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnSetDebugSaveIndex // (Final|Native|Public) // @ game+0x79d490
	void OnSaveSystemData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSaveSystemData // (Final|Native|Public) // @ game+0x79d490
	void OnSaveRetryData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSaveRetryData // (Final|Native|Public) // @ game+0x79d490
	void OnSaveLoadMenuSetting(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnSaveLoadMenuSetting // (Final|Native|Public) // @ game+0x79d490
	void OnSaveGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSaveGameData // (Final|Native|Public) // @ game+0x79d490
	void OnSaveDataCapture(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSaveDataCapture // (Final|Native|Public) // @ game+0x79d490
	void OnSaveAutoData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnSaveAutoData // (Final|Native|Public) // @ game+0x79d490
	void OnReloadLevel(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnReloadLevel // (Final|Native|Public) // @ game+0x79d490
	void OnOutputUIBaseList(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnOutputUIBaseList // (Final|Native|Public) // @ game+0x79d490
	void OnOutputUIBaseAnimationList(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnOutputUIBaseAnimationList // (Final|Native|Public) // @ game+0x79d490
	void OnOutputFlagUpdateAlways(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnOutputFlagUpdateAlways // (Final|Native|Public) // @ game+0x79d490
	void OnOpenSaveMenu(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnOpenSaveMenu // (Final|Native|Public) // @ game+0x79d490
	void OnOpenLoginUI(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnOpenLoginUI // (Final|Native|Public) // @ game+0x79d490
	void OnOpenLoadMenu(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnOpenLoadMenu // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapTraceTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapTraceTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapScale(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapScale // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapRotate(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapRotate // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapMenuSetting(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapMenuSetting // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapMaterialTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapMaterialTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapIconUpdateAdjust(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapIconUpdateAdjust // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapIconTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapIconTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapIconNpcTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapIconNpcTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapIconFootTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapIconFootTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapIconEnemyTickDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapIconEnemyTickDisable // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapDisp(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapDisp // (Final|Native|Public) // @ game+0x79d490
	void OnMinimapCreateMapDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnMinimapCreateMapDisable // (Final|Native|Public) // @ game+0x79d490
	void OnLoadTrialSaveData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadTrialSaveData // (Final|Native|Public) // @ game+0x79d490
	void OnLoadSystemData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadSystemData // (Final|Native|Public) // @ game+0x79d490
	void OnLoadRetryData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadRetryData // (Final|Native|Public) // @ game+0x79d490
	void OnLoadLaunchScreen(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadLaunchScreen // (Final|Native|Public) // @ game+0x79d490
	void OnLoadGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadGameData // (Final|Native|Public) // @ game+0x79d490
	void OnLoadAutoData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadAutoData // (Final|Native|Public) // @ game+0x79d490
	void OnLoadAreaSelectLevel(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnLoadAreaSelectLevel // (Final|Native|Public) // @ game+0x79d490
	void OnKeyRightCEBankGroup(struct ADebuggingItemBase* Item, bool IsRepeat, int32_t InSpeed); // Function BattlePrototype.DebuggingStartupObject.OnKeyRightCEBankGroup // (Final|Native|Public) // @ game+0x11d5990
	void OnForceExecGarbageCollect(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnForceExecGarbageCollect // (Final|Native|Public) // @ game+0x79d490
	void OnForceCrcCheckError(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnForceCrcCheckError // (Final|Native|Public) // @ game+0x79d490
	void OnForceAutoSaveEnable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnForceAutoSaveEnable // (Final|Native|Public) // @ game+0x79d490
	void OnForceAutoSaveDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnForceAutoSaveDisable // (Final|Native|Public) // @ game+0x79d490
	void OnFlushFontCache(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnFlushFontCache // (Final|Native|Public) // @ game+0x79d490
	void OnExitGame(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExitGame // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteWorldMapNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteWorldMapNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteTutorialNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteTutorialNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteTutoGetFlag(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteTutoGetFlag // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteTradeItemNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteTradeItemNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteSubQuestNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteSubQuestNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteShopItemNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteShopItemNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteRich(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteRich // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteResetDropItemLotteryParam(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteResetDropItemLotteryParam // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteMainQuestNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteMainQuestNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteItemNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteItemNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteEnemyLibraryNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteEnemyLibraryNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteContentsClosedFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteContentsClosedFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteCollectDebugMenuStrings(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteCollectDebugMenuStrings // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteCharaLibraryNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteCharaLibraryNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTTutorialListChanged(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTTutorialListChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTTutorialDebugPlay(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTTutorialDebugPlay // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTSysSkipProgressIDCheckChanged(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTSysSkipProgressIDCheckChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTSysSkipIsOnceCheckChanged(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTSysSkipIsOnceCheckChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTSysListChanged(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTSysListChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTSysForceWataruHarukaFlagChanged(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTSysForceWataruHarukaFlagChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTSysDebugPlay(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTSysDebugPlay // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTMapGimmickListChanged(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTMapGimmickListChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTMapGimmickDebugPlay(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTMapGimmickDebugPlay // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTEnemyListChanged(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTEnemyListChanged // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBTEnemyDebugPlay(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBTEnemyDebugPlay // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBrainCrashOpendChange(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBrainCrashOpendChange // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteBondsQuestNewFlagClear(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteBondsQuestNewFlagClear // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteAllMaterials(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteAllMaterials // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteAllKeyItem(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteAllKeyItem // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteAllFoods(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteAllFoods // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteAllEquipments(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteAllEquipments // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteAllBattleItems(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteAllBattleItems // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteAllBaseItems(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecuteAllBaseItems // (Final|Native|Public) // @ game+0x79d490
	void OnExecExSystemSaveDump(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnExecExSystemSaveDump // (Final|Native|Public) // @ game+0x79d490
	void OnDrawUIBaseProperty(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDrawUIBaseProperty // (Final|Native|Public) // @ game+0x79d490
	void OnDrawShopTradeProperty(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDrawShopTradeProperty // (Final|Native|Public) // @ game+0x79d490
	void OnDrawNoticeStack(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDrawNoticeStack // (Final|Native|Public) // @ game+0x79d490
	void OnDrawFontAtlasProperty(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDrawFontAtlasProperty // (Final|Native|Public) // @ game+0x79d490
	void OnDrawActionIconProperty(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDrawActionIconProperty // (Final|Native|Public) // @ game+0x79d490
	void OnDispMouseRectangle(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDispMouseRectangle // (Final|Native|Public) // @ game+0x79d490
	void OnDeleteSystemData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnDeleteSystemData // (Final|Native|Public) // @ game+0x79d490
	void OnDeleteGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnDeleteGameData // (Final|Native|Public) // @ game+0x79d490
	void OnDeleteFileGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnDeleteFileGameData // (Final|Native|Public) // @ game+0x79d490
	void OnDebugTimeSaveGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnDebugTimeSaveGameData // (Final|Native|Public) // @ game+0x79d490
	void OnDebugSaveGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnDebugSaveGameData // (Final|Native|Public) // @ game+0x79d490
	void OnDebugLoadGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnDebugLoadGameData // (Final|Native|Public) // @ game+0x79d490
	void OnDebugKeyboard(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDebugKeyboard // (Final|Native|Public) // @ game+0x79d490
	void OnDebugDrawWidgetName(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDebugDrawWidgetName // (Final|Native|Public) // @ game+0x79d490
	void OnDebugDrawAnimationName(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnDebugDrawAnimationName // (Final|Native|Public) // @ game+0x79d490
	void OnChangeTransferObject(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeTransferObject // (Final|Native|Public) // @ game+0x79d490
	void OnChangeSelectDebugTimeSaveData(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeSelectDebugTimeSaveData // (Final|Native|Public) // @ game+0x79d490
	void OnChangeScenarioClearM(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeScenarioClearM // (Final|Native|Public) // @ game+0x79d490
	void OnChangeScenarioClearF(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeScenarioClearF // (Final|Native|Public) // @ game+0x79d490
	void OnChangeMouseCameraMove(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeMouseCameraMove // (Final|Native|Public) // @ game+0x79d490
	void OnChangeMoney(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeMoney // (Final|Native|Public) // @ game+0x79d490
	void OnChangeLoadingTipsID(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeLoadingTipsID // (Final|Native|Public) // @ game+0x79d490
	void OnChangeLastTradeShopID(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeLastTradeShopID // (Final|Native|Public) // @ game+0x79d490
	void OnChangeLastShopID(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeLastShopID // (Final|Native|Public) // @ game+0x79d490
	void OnChangeGuideDeviceType(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeGuideDeviceType // (Final|Native|Public) // @ game+0x79d490
	void OnChangeDropItemGetRule(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeDropItemGetRule // (Final|Native|Public) // @ game+0x79d490
	void OnChangeDisplayDropItemLotteryParam(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeDisplayDropItemLotteryParam // (Final|Native|Public) // @ game+0x79d490
	void OnChangeDispIndexDropItemLotteryParam(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeDispIndexDropItemLotteryParam // (Final|Native|Public) // @ game+0x79d490
	void OnChangeDispBrainTalkLogFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeDispBrainTalkLogFlag // (Final|Native|Public) // @ game+0x79d490
	void OnChangeDecideButtonType(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeDecideButtonType // (Final|Native|Public) // @ game+0x79d490
	void OnChangeDebugPauseInput(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeDebugPauseInput // (Final|Native|Public) // @ game+0x79d490
	void OnChangedDispMessageId(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangedDispMessageId // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBrainTalkBTInvalidFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBrainTalkBTInvalidFlag // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBrainTalkAllInvalidFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBrainTalkAllInvalidFlag // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolSoundSpawnDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBoolSoundSpawnDisable // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolSample(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBoolSample // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolParticleSpawnDisable(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBoolParticleSpawnDisable // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolDirectPause(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBoolDirectPause // (Final|Native|Public) // @ game+0x79d490
	void OnChangeBoolBrainCrashOpend(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeBoolBrainCrashOpend // (Final|Native|Public) // @ game+0x79d490
	void OnChangeArrangeItemGetLog(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeArrangeItemGetLog // (Final|Native|Public) // @ game+0x79d490
	void OnChangeArrangeItemForceRepopTimeFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeArrangeItemForceRepopTimeFlag // (Final|Native|Public) // @ game+0x79d490
	void OnChangeArrangeItemForceRepopTime(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeArrangeItemForceRepopTime // (Final|Native|Public) // @ game+0x79d490
	void OnChangeAnimInterLockingSuccessTest(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeAnimInterLockingSuccessTest // (Final|Native|Public) // @ game+0x79d490
	void OnChangeAnimInterLockingQuestRelease(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeAnimInterLockingQuestRelease // (Final|Native|Public) // @ game+0x79d490
	void OnChangeAnimInterLockingFailTest(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeAnimInterLockingFailTest // (Final|Native|Public) // @ game+0x79d490
	void OnChangeAnimInterLockingErrorTest(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.DebuggingStartupObject.OnChangeAnimInterLockingErrorTest // (Final|Native|Public) // @ game+0x79d490
	void OnBTResetIsOnce(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnBTResetIsOnce // (Final|Native|Public) // @ game+0x79d490
	void OnBTResetBeforePlayTime(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnBTResetBeforePlayTime // (Final|Native|Public) // @ game+0x79d490
	void OnAutoSaveGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnAutoSaveGameData // (Final|Native|Public) // @ game+0x79d490
	void OnAutoLoadGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnAutoLoadGameData // (Final|Native|Public) // @ game+0x79d490
	void OnAutoDeleteGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnAutoDeleteGameData // (Final|Native|Public) // @ game+0x79d490
	void OnAutoDeleteFileGameData(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnAutoDeleteFileGameData // (Final|Native|Public) // @ game+0x79d490
	void OnAllTutoList(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllTutoList // (Final|Native|Public) // @ game+0x79d490
	void OnAllShop(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllShop // (Final|Native|Public) // @ game+0x79d490
	void OnAllQuests(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllQuests // (Final|Native|Public) // @ game+0x79d490
	void OnAllPresentList(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllPresentList // (Final|Native|Public) // @ game+0x79d490
	void OnAllGetContents(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllGetContents // (Final|Native|Public) // @ game+0x79d490
	void OnAllEnemyLibrary(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllEnemyLibrary // (Final|Native|Public) // @ game+0x79d490
	void OnAllCharaLibraryDLC(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllCharaLibraryDLC // (Final|Native|Public) // @ game+0x79d490
	void OnAllCharaLibrary(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingStartupObject.OnAllCharaLibrary // (Final|Native|Public) // @ game+0x79d490
	void OnACTickOutputLogOn(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnACTickOutputLogOn // (Final|Native|Public) // @ game+0x79d490
	void OnACTickOutputLogOff(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnACTickOutputLogOff // (Final|Native|Public) // @ game+0x79d490
	void OnACFirstProfileCheck(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnACFirstProfileCheck // (Final|Native|Public) // @ game+0x79d490
	void OnACAccountControllerInfo(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingStartupObject.OnACAccountControllerInfo // (Final|Native|Public) // @ game+0x79d490
	int32_t GetSaveDataNo(); // Function BattlePrototype.DebuggingStartupObject.GetSaveDataNo // (Final|Native|Public) // @ game+0x11b3c60
	int32_t GetDebugSaveDataNo(); // Function BattlePrototype.DebuggingStartupObject.GetDebugSaveDataNo // (Final|Native|Public) // @ game+0x11b3c60
};

// Class BattlePrototype.DebuggingWindowInterface
// Size: 0x28 (Inherited: 0x28)
struct UDebuggingWindowInterface : UInterface {

	void OnChangePage(enum class EDebuggingPage NewPage); // Function BattlePrototype.DebuggingWindowInterface.OnChangePage // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.DebugPresetFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UDebugPresetFunctionLibrary : UBlueprintFunctionLibrary {

	void InitalizePreset(struct UObject* WorldContextObject, struct FName Name); // Function BattlePrototype.DebugPresetFunctionLibrary.InitalizePreset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11d9ef0
};

// Class BattlePrototype.DebugPrintComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UDebugPrintComponent : UActorComponent {
	char pad_C0[0x10]; // 0xc0(0x10)

	void DrawHUD(); // Function BattlePrototype.DebugPrintComponent.DrawHUD // (Final|Native|Public|BlueprintCallable) // @ game+0x11d9970
};

// Class BattlePrototype.DebugSaveDataListWindow
// Size: 0x238 (Inherited: 0x230)
struct ADebugSaveDataListWindow : AActor {
	struct USaveLoadScreenParamManager* m_pDebugDebugSaveLoadScreenParamManager; // 0x230(0x08)

	void LoadDebugSaveData(struct FString Filename); // Function BattlePrototype.DebugSaveDataListWindow.LoadDebugSaveData // (Final|Native|Public|BlueprintCallable) // @ game+0x11da090
	void DoNewGame(); // Function BattlePrototype.DebugSaveDataListWindow.DoNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x11d9850
};

// Class BattlePrototype.DebugInfoScreenBase
// Size: 0x2c8 (Inherited: 0x230)
struct ADebugInfoScreenBase : AActor {
	struct TArray<struct FDebugInfoScreenData> DataList; // 0x230(0x10)
	char pad_240[0x20]; // 0x240(0x20)
	struct UUserWidget* RenderWidget; // 0x260(0x08)
	struct TArray<struct UTextBlock*> TextWidgetList; // 0x268(0x10)
	char pad_278[0x50]; // 0x278(0x50)
};

// Class BattlePrototype.DebugInfoScreenParticle
// Size: 0x2c8 (Inherited: 0x2c8)
struct ADebugInfoScreenParticle : ADebugInfoScreenBase {
};

// Class BattlePrototype.DebugWarpPointBase
// Size: 0x230 (Inherited: 0x230)
struct ADebugWarpPointBase : AActor {

	struct FName GetWarpPointName(); // Function BattlePrototype.DebugWarpPointBase.GetWarpPointName // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
};

// Class BattlePrototype.DecoyComponent
// Size: 0xc8 (Inherited: 0xc0)
struct UDecoyComponent : UActorComponent {
	struct ARSCharacterBase* _targetClass; // 0xc0(0x08)

	bool isDecoyTarget(struct AActor* TargetActor); // Function BattlePrototype.DecoyComponent.isDecoyTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11da830
	struct UDecoyComponent* GetDecoyComponentFromActor(struct AActor* Actor); // Function BattlePrototype.DecoyComponent.GetDecoyComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11d9a10
	struct TArray<struct AActor*> Decoy_SortByDistance(struct TArray<struct AActor*> Actors, struct AActor* originActor); // Function BattlePrototype.DecoyComponent.Decoy_SortByDistance // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x11d9150
};

// Class BattlePrototype.DelegatableActor
// Size: 0x230 (Inherited: 0x230)
struct ADelegatableActor : AActor {

	void OnPostEditMove(); // Function BattlePrototype.DelegatableActor.OnPostEditMove // (Native|Event|Public|BlueprintEvent) // @ game+0x1174080
	void OnPostEditChange(); // Function BattlePrototype.DelegatableActor.OnPostEditChange // (Native|Event|Public|BlueprintEvent) // @ game+0x1174060
};

// Class BattlePrototype.DestroyConditionComponent
// Size: 0x160 (Inherited: 0x160)
struct UDestroyConditionComponent : UConditionComponent {
};

// Class BattlePrototype.DetailedMapData
// Size: 0x30 (Inherited: 0x28)
struct UDetailedMapData : UObject {
	struct UDetailedMapDBAsset* detailedMapAsset_; // 0x28(0x08)

	bool LoadDataAsset(struct FString dtPath); // Function BattlePrototype.DetailedMapData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11d9fa0
	void GetDetailedMapLocationData(struct FName LocationName, struct TMap<struct FName, struct FDetailedMapContentFloorDataArrayCell> rDetailedMapLocation); // Function BattlePrototype.DetailedMapData.GetDetailedMapLocationData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d9d20
	void GetDetailedMapDataAsset(struct TMap<struct FName, struct FDetailedMapDBDataCell> rDetailedMap); // Function BattlePrototype.DetailedMapData.GetDetailedMapDataAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d9bf0
	void GetDetailedMapAreaData(struct FName LocationName, struct FName AreaName, struct TArray<struct FDetailedMapContentFloorDataCell> rDetailedMapArea); // Function BattlePrototype.DetailedMapData.GetDetailedMapAreaData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d9a90
};

// Class BattlePrototype.DetailedMapDBAsset
// Size: 0x78 (Inherited: 0x28)
struct UDetailedMapDBAsset : UObject {
	struct TMap<struct FName, struct FDetailedMapDBDataCell> detailedMapDBMap_; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.DetailedMapDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.DriveRendererParameter
// Size: 0x80 (Inherited: 0x30)
struct UDriveRendererParameter : UDataAsset {
	struct FLinearColor BgEdgeColorInner; // 0x30(0x10)
	struct FLinearColor BgEdgeColorOuter; // 0x40(0x10)
	float BgEdgeColorShift; // 0x50(0x04)
	float BgEdgeLength; // 0x54(0x04)
	float BgEdgeLengthMin; // 0x58(0x04)
	float BgEdgeSmooth; // 0x5c(0x04)
	float BgEdgeEdgeThresholdNormal; // 0x60(0x04)
	float BgEdgeEdgeThresholdLuminance; // 0x64(0x04)
	float VignetteIntensity; // 0x68(0x04)
	float VignetteRange; // 0x6c(0x04)
	float TransitionTime; // 0x70(0x04)
	float BattleOnPPStartDelay; // 0x74(0x04)
	float BattleOffPPStartDelay; // 0x78(0x04)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class BattlePrototype.DropItem
// Size: 0x2f8 (Inherited: 0x230)
struct ADropItem : AActor {
	struct FName itemNameID_; // 0x230(0x08)
	int32_t itemNum_; // 0x238(0x04)
	bool isCoreDrop_; // 0x23c(0x01)
	char pad_23D[0x3]; // 0x23d(0x03)
	float dropSpeedBase_; // 0x240(0x04)
	float dropAddSpeed_; // 0x244(0x04)
	float AddSpeedValue_; // 0x248(0x04)
	float becomeCanGettingItemTime_; // 0x24c(0x04)
	float dropDownSpeed_; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct URSParticleSystemComponentBase* dropParticleComponent_; // 0x258(0x08)
	struct URSParticleSystemComponentBase* acquiredParticleComponent_; // 0x260(0x08)
	struct URSParticleSystemComponentBase* getParticleComponent_; // 0x268(0x08)
	float takenDistance_; // 0x270(0x04)
	float takenAndDestroyDistance_; // 0x274(0x04)
	struct USphereComponent* takenSphereComponent_; // 0x278(0x08)
	struct USphereComponent* adsorptionSphereComponent_; // 0x280(0x08)
	float adsorptionSpeed_; // 0x288(0x04)
	struct FVector adsorptionVector_; // 0x28c(0x0c)
	enum class DropItemStateName nowState_; // 0x298(0x01)
	char pad_299[0x3]; // 0x299(0x03)
	struct FVector targetPos_; // 0x29c(0x0c)
	bool isDispersionMove_; // 0x2a8(0x01)
	char pad_2A9[0x3]; // 0x2a9(0x03)
	int32_t activeTickCounter_; // 0x2ac(0x04)
	int32_t registNum_; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct USoundAtomCue* getSound_; // 0x2b8(0x08)
	struct USoundAtomCue* AddItemSeCue; // 0x2c0(0x08)
	char pad_2C8[0x30]; // 0x2c8(0x30)

	void SwitchTickAtBeforeRenderInfo(); // Function BattlePrototype.DropItem.SwitchTickAtBeforeRenderInfo // (Final|Native|Public) // @ game+0x11da810
	void SetUseParticle(enum class DropItemParticleName dpName); // Function BattlePrototype.DropItem.SetUseParticle // (Native|Public|BlueprintCallable) // @ game+0x11da790
	void SetOtherParticle(struct UParticleSystem* dropParticle, struct UParticleSystem* aquParticle, struct UParticleSystem* getParticle); // Function BattlePrototype.DropItem.SetOtherParticle // (Final|Native|Public) // @ game+0x11da690
	void SetMeshVisibleAndActive(bool IsVisible); // Function BattlePrototype.DropItem.SetMeshVisibleAndActive // (Final|Native|Protected) // @ game+0x11b6870
	void SetItemState(enum class DropItemStateName NewState); // Function BattlePrototype.DropItem.SetItemState // (Final|Native|Public|BlueprintCallable) // @ game+0x11da610
	void SetItemDataNum(int32_t Num); // Function BattlePrototype.DropItem.SetItemDataNum // (Final|Native|Public) // @ game+0x11da590
	void SetItemDataID(struct FName sId); // Function BattlePrototype.DropItem.SetItemDataID // (Final|Native|Public) // @ game+0x11da510
	void SetDropParticle(); // Function BattlePrototype.DropItem.SetDropParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x11da4f0
	void SetAutoTakenFlag(bool bAuto); // Function BattlePrototype.DropItem.SetAutoTakenFlag // (Final|Native|Public) // @ game+0x11da460
	void PlayGetSound(); // Function BattlePrototype.DropItem.PlayGetSound // (Final|Native|Protected) // @ game+0x11da190
	void PlayAddItemSound(); // Function BattlePrototype.DropItem.PlayAddItemSound // (Final|Native|Protected) // @ game+0x11da170
	void GetParticleFinished(struct UParticleSystemComponent* PSystem); // Function BattlePrototype.DropItem.GetParticleFinished // (Final|Native|Public) // @ game+0x11d9e70
	void DropDown(float dropSpeed); // Function BattlePrototype.DropItem.DropDown // (Native|Public|BlueprintCallable) // @ game+0x11d9990
	void DoAdsorption(float dTime); // Function BattlePrototype.DropItem.DoAdsorption // (Native|Public|BlueprintCallable) // @ game+0x11d97d0
	void DoActiveAcquiredParticle(); // Function BattlePrototype.DropItem.DoActiveAcquiredParticle // (Final|Native|Public) // @ game+0x11d92a0
	void DestroyThisItem(); // Function BattlePrototype.DropItem.DestroyThisItem // (Native|Public|BlueprintCallable) // @ game+0x11d9280
	float ComputeAndGetDropDownSpeed(float Time); // Function BattlePrototype.DropItem.ComputeAndGetDropDownSpeed // (Native|Public|BlueprintCallable) // @ game+0x11d8fe0
	void ComputeAdsorptionVector(struct FVector TargetLocation); // Function BattlePrototype.DropItem.ComputeAdsorptionVector // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11d8f50
	void BindGetItem(); // Function BattlePrototype.DropItem.BindGetItem // (Final|Native|Public) // @ game+0x11d8e30
};

// Class BattlePrototype.DropItemManager
// Size: 0x2d0 (Inherited: 0x230)
struct ADropItemManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct TArray<struct ADropItem*> allDataDropDatas_; // 0x238(0x10)
	struct TArray<struct ADropItem*> allCoreDropDatas_; // 0x248(0x10)
	struct TArray<int32_t> dataDropActiveData_; // 0x258(0x10)
	struct TArray<int32_t> coreDropActiveData_; // 0x268(0x10)
	char pad_278[0x50]; // 0x278(0x50)
	bool isItemGetDebugOn; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)

	void SetActiveDropVisibility(bool Visibility); // Function BattlePrototype.DropItemManager.SetActiveDropVisibility // (Final|Native|Public|BlueprintCallable) // @ game+0x11da3d0
	void RegistStockDataItemData(struct FDataItemSpawnState Data); // Function BattlePrototype.DropItemManager.RegistStockDataItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11da330
	void RegistAllDataDropDatas(struct ADropItem* itemAdress); // Function BattlePrototype.DropItemManager.RegistAllDataDropDatas // (Final|Native|Public|BlueprintCallable) // @ game+0x11da2b0
	void RegistAllCoreDropDatas(struct ADropItem* itemAdress); // Function BattlePrototype.DropItemManager.RegistAllCoreDropDatas // (Final|Native|Public|BlueprintCallable) // @ game+0x11da230
	void RedropLandingItem(int32_t ItemIndex); // Function BattlePrototype.DropItemManager.RedropLandingItem // (Final|Native|Public) // @ game+0x11da1b0
	void DoNotActiveDataDrop(struct ADropItem* itemAdress); // Function BattlePrototype.DropItemManager.DoNotActiveDataDrop // (Final|Native|Public|BlueprintCallable) // @ game+0x11d98f0
	void DoNotActiveCoreDrop(struct ADropItem* itemAdress); // Function BattlePrototype.DropItemManager.DoNotActiveCoreDrop // (Final|Native|Public|BlueprintCallable) // @ game+0x11d9870
	void DoActiveStockDataDrop(struct FVector Location); // Function BattlePrototype.DropItemManager.DoActiveStockDataDrop // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11d9740
	void DoActiveDataDrop(struct FVector Location, struct FName ItemId, int32_t itemNum, bool bAutoTaken, struct UParticleSystem* dropParticle, struct UParticleSystem* aquParticle, struct UParticleSystem* getParticle, struct FName charID); // Function BattlePrototype.DropItemManager.DoActiveDataDrop // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11d94e0
	void DoActiveCoreDrop(struct FVector Location, struct FName ItemId, int32_t itemNum, bool bAutoTaken, struct UParticleSystem* dropParticle, struct UParticleSystem* aquParticle, struct UParticleSystem* getParticle); // Function BattlePrototype.DropItemManager.DoActiveCoreDrop // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11d92c0
	void ControlDataDropActivateAtArea(struct FString nextLevelName); // Function BattlePrototype.DropItemManager.ControlDataDropActivateAtArea // (Final|Native|Public|BlueprintCallable) // @ game+0x11d9070
	void ChangeAllDropStateToDrop(float firstDelay); // Function BattlePrototype.DropItemManager.ChangeAllDropStateToDrop // (Final|Native|Public|BlueprintCallable) // @ game+0x11d8ed0
	void ChangeActiveAllDataDrops(); // Function BattlePrototype.DropItemManager.ChangeActiveAllDataDrops // (Final|Native|Public|BlueprintCallable) // @ game+0x11d8eb0
	void ChangeActiveAllCoreDrops(); // Function BattlePrototype.DropItemManager.ChangeActiveAllCoreDrops // (Final|Native|Public|BlueprintCallable) // @ game+0x11d8e90
	void CalledAtStartBrainField(); // Function BattlePrototype.DropItemManager.CalledAtStartBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x11d8e70
	void CalledAtEndBrainField(); // Function BattlePrototype.DropItemManager.CalledAtEndBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x11d8e50
};

// Class BattlePrototype.DynamicMaterialControllerComponent
// Size: 0x130 (Inherited: 0xc0)
struct UDynamicMaterialControllerComponent : UActorComponent {
	struct FMulticastInlineDelegate _dispatcherEndParameterFade; // 0xc0(0x10)
	char pad_D0[0x60]; // 0xd0(0x60)

	void StartFadeScalarParameter(struct FName ParameterName, bool bToOne, float fadeSec); // Function BattlePrototype.DynamicMaterialControllerComponent.StartFadeScalarParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0850
	void SetVectorParameterValue(struct FName ParameterName, struct FLinearColor Value); // Function BattlePrototype.DynamicMaterialControllerComponent.SetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11e06c0
	void SetupMeshMaterials(); // Function BattlePrototype.DynamicMaterialControllerComponent.SetupMeshMaterials // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0810
	void SetTextureParameterValue(struct FName ParameterName, struct UTexture* Value); // Function BattlePrototype.DynamicMaterialControllerComponent.SetTextureParameterValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0580
	void SetScalarParameterValue(struct FName ParameterName, float Value); // Function BattlePrototype.DynamicMaterialControllerComponent.SetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11e03a0
	struct FLinearColor GetVectorParameterValue(struct FName ParameterName); // Function BattlePrototype.DynamicMaterialControllerComponent.GetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ddff0
	float GetScalarParameterValue(struct FName ParameterName); // Function BattlePrototype.DynamicMaterialControllerComponent.GetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11dded0
	struct UDynamicMaterialControllerComponent* GetDynamicMaterialControllerComponent(struct AActor* Actor); // Function BattlePrototype.DynamicMaterialControllerComponent.GetDynamicMaterialControllerComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11ddaa0
};

// Class BattlePrototype.EasyNavNode
// Size: 0x238 (Inherited: 0x230)
struct AEasyNavNode : AActor {
	struct UBoxComponent* BoxComponent; // 0x230(0x08)
};

// Class BattlePrototype.RSActorBackgroundBase
// Size: 0x230 (Inherited: 0x230)
struct ARSActorBackgroundBase : AActor {
};

// Class BattlePrototype.EffectBackground
// Size: 0x288 (Inherited: 0x230)
struct AEffectBackground : ARSActorBackgroundBase {
	struct URSParticleSystemComponentBase* ParticleComponent; // 0x230(0x08)
	struct TArray<struct FString> playEventName_; // 0x238(0x10)
	struct TArray<struct FString> stopEventName_; // 0x248(0x10)
	char pad_258[0x10]; // 0x258(0x10)
	bool bUseCameraDither_; // 0x268(0x01)
	char pad_269[0x3]; // 0x269(0x03)
	float DitherDistance_; // 0x26c(0x04)
	float DitherSpeed_; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UCameraComponent* cameraComp_; // 0x278(0x08)
	char pad_280[0x8]; // 0x280(0x08)

	void StopParticleImplements(); // Function BattlePrototype.EffectBackground.StopParticleImplements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StopAndHideParticleImplements(); // Function BattlePrototype.EffectBackground.StopAndHideParticleImplements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetupUseAttachment(); // Function BattlePrototype.EffectBackground.SetupUseAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0830
	bool SetDitherValue(float Value); // Function BattlePrototype.EffectBackground.SetDitherValue // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void ProtectedDetachParticle(); // Function BattlePrototype.EffectBackground.ProtectedDetachParticle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ProtectedAttachParticle(struct AActor* Parent); // Function BattlePrototype.EffectBackground.ProtectedAttachParticle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PlayParticleImplements(); // Function BattlePrototype.EffectBackground.PlayParticleImplements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEffectAttachUse(); // Function BattlePrototype.EffectBackground.IsEffectAttachUse // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1166d80
};

// Class BattlePrototype.EffectBackgroundMother
// Size: 0x238 (Inherited: 0x230)
struct AEffectBackgroundMother : AActor {
	float mergeDistance_; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)

	bool MergeEffectBG(); // Function BattlePrototype.EffectBackgroundMother.MergeEffectBG // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x11b48c0
};

// Class BattlePrototype.EnemyAddDamageShakeComponentBase
// Size: 0x148 (Inherited: 0xc0)
struct UEnemyAddDamageShakeComponentBase : UActorComponent {
	struct ARSCharacterBase* mOwnerCharacter; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)
	int32_t mShakeMaxCount; // 0xd0(0x04)
	float mShakeScale; // 0xd4(0x04)
	struct UCurveFloat* mShakeCurveData; // 0xd8(0x08)
	float mRotateRange; // 0xe0(0x04)
	float mShakeRangeMin; // 0xe4(0x04)
	float mShakeRangeMax; // 0xe8(0x04)
	float mOneShakeTimer; // 0xec(0x04)
	float mTriggerShakeScale; // 0xf0(0x04)
	float mKnockBackShakeScale; // 0xf4(0x04)
	float mCharaTypeShakeScale; // 0xf8(0x04)
	char pad_FC[0x4c]; // 0xfc(0x4c)

	void Update_Native(float DeltaSec); // Function BattlePrototype.EnemyAddDamageShakeComponentBase.Update_Native // (Final|Native|Protected|BlueprintCallable) // @ game+0x11e0b00
	void Start_Native(bool TriggerAttack); // Function BattlePrototype.EnemyAddDamageShakeComponentBase.Start_Native // (Final|Native|Protected|BlueprintCallable) // @ game+0x11e0960
	struct FVector GetRandomVec_Native(struct FVector CurrentVec, float Range, bool IsRight); // Function BattlePrototype.EnemyAddDamageShakeComponentBase.GetRandomVec_Native // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ddd80
	void End_Native(); // Function BattlePrototype.EnemyAddDamageShakeComponentBase.End_Native // (Final|Native|Protected|BlueprintCallable) // @ game+0x11dd9d0
	float CalcShakeScale_Native(); // Function BattlePrototype.EnemyAddDamageShakeComponentBase.CalcShakeScale_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd4f0
};

// Class BattlePrototype.EnemyAiComponentBase
// Size: 0x120 (Inherited: 0xc0)
struct UEnemyAiComponentBase : UActorComponent {
	struct TWeakObjectPtr<struct ARSCharacterBase> mOwnerCharacter; // 0xc0(0x08)
	char mCurrentAction; // 0xc8(0x01)
	enum class EEnemyThinkActionType mThinkActionType; // 0xc9(0x01)
	bool mEnableAllowance; // 0xca(0x01)
	char pad_CB[0x1]; // 0xcb(0x01)
	float mAllowanceWaitSeconds; // 0xcc(0x04)
	struct FGameTimer mAllowanceWaitTimer; // 0xd0(0x0c)
	bool mCanAttackOnce; // 0xdc(0x01)
	char pad_DD[0x43]; // 0xdd(0x43)

	void SetWaitNextActionTimer(float Seconds); // Function BattlePrototype.EnemyAiComponentBase.SetWaitNextActionTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0790
	void SetThinkActionType(enum class EEnemyThinkActionType Type); // Function BattlePrototype.EnemyAiComponentBase.SetThinkActionType // (Final|Native|Protected|BlueprintCallable) // @ game+0x11e0640
	void SetReserveActionNative(char Action, float Param00, float Param01); // Function BattlePrototype.EnemyAiComponentBase.SetReserveActionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11e02a0
	void SetIdleMoveActionNative(struct TArray<char> idleMoveAction); // Function BattlePrototype.EnemyAiComponentBase.SetIdleMoveActionNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11dff40
	void SetCurrentAction(char Value); // Function BattlePrototype.EnemyAiComponentBase.SetCurrentAction // (Final|Native|Protected|BlueprintCallable) // @ game+0x11dfcc0
	void SetActionNative(char actionEnum, struct FName Action, struct ARSCharacterBase* mTargetCharacter, bool bIgnoreMove); // Function BattlePrototype.EnemyAiComponentBase.SetActionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11df970
	void SetActionFromReservedNative(); // Function BattlePrototype.EnemyAiComponentBase.SetActionFromReservedNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11df950
	void ResetReserveActionNative(); // Function BattlePrototype.EnemyAiComponentBase.ResetReserveActionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11df930
	void NotifyExecAttack(); // Function BattlePrototype.EnemyAiComponentBase.NotifyExecAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x11df840
	bool IsWaitNextActionTimer(); // Function BattlePrototype.EnemyAiComponentBase.IsWaitNextActionTimer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df810
	bool IsTimerOKNative(char actionEnym); // Function BattlePrototype.EnemyAiComponentBase.IsTimerOKNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11df780
	bool IsTimeCheckNative(float checkValue); // Function BattlePrototype.EnemyAiComponentBase.IsTimeCheckNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df6f0
	bool IsReservedActionNative(); // Function BattlePrototype.EnemyAiComponentBase.IsReservedActionNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df6c0
	bool IsRandomCheckNative(float checkValue); // Function BattlePrototype.EnemyAiComponentBase.IsRandomCheckNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df630
	bool IsPreConditionOKNative(enum class EEnemyThinkActionType ActionType, bool bNeedRay, bool IgnoreOutofScreen, bool IgnoreRestrictAttackOther, bool NotBrainField, bool bIgnoreMove, struct ARSCharacterBase* mTargetCharacter, bool IsContrlPlayer, float TargetHeight); // Function BattlePrototype.EnemyAiComponentBase.IsPreConditionOKNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11df350
	bool IsPossibleMoveNative(bool IgnoreOutofScreen, bool IgnoreRestrictAttackOther, struct ARSCharacterBase* mTargetCharacter); // Function BattlePrototype.EnemyAiComponentBase.IsPossibleMoveNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11df230
	bool IsPossibleAttackNative(bool IsControlPlayer, bool IgnoreOutofScreen, bool IgnoreRestrictAttackOther, struct ARSCharacterBase* mTargetCharacter); // Function BattlePrototype.EnemyAiComponentBase.IsPossibleAttackNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11def90
	bool IsIdleMoveNative(bool IsIdleMove); // Function BattlePrototype.EnemyAiComponentBase.IsIdleMoveNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dee10
	bool IsHpPercentDownNative(float percent, bool Error); // Function BattlePrototype.EnemyAiComponentBase.IsHpPercentDownNative // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ded30
	bool IsEventNative(); // Function BattlePrototype.EnemyAiComponentBase.IsEventNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ded00
	bool IsDamageNative(); // Function BattlePrototype.EnemyAiComponentBase.IsDamageNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11decd0
	bool IsCommonAreaOKNative(enum class EEnemyThinkActionType ActionType, float TargetHeight); // Function BattlePrototype.EnemyAiComponentBase.IsCommonAreaOKNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11de9c0
	bool IsCanAttack(); // Function BattlePrototype.EnemyAiComponentBase.IsCanAttack // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de990
	bool IsAttackingOtherEnemyNative(struct ARSCharacterBase* mTargetCharacter); // Function BattlePrototype.EnemyAiComponentBase.IsAttackingOtherEnemyNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11de8d0
	bool IsAiActionNative(char actionEnum, float Range_Work, float NoRange_Work, float Angle_Work, float NoAngle_Work, struct TArray<char> lConditions, bool bIgnoreMove, struct ARSCharacterBase* mTargetCharacter, bool IsContrlPlayer, float TargetHeight, bool IsPreCondition, bool NotProbability); // Function BattlePrototype.EnemyAiComponentBase.IsAiActionNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11de350
	void Initialize(struct UEnemyScriptComponent* EnemyScript, bool IsFlyEnemy, float AIActionHeight); // Function BattlePrototype.EnemyAiComponentBase.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x11de090
	enum class EEnemyThinkActionType GetThinkActionType(); // Function BattlePrototype.EnemyAiComponentBase.GetThinkActionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddfd0
	char GetCurrentAction(); // Function BattlePrototype.EnemyAiComponentBase.GetCurrentAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dda80
	float GetAiTimer_FromNative(char actionEnym); // Function BattlePrototype.EnemyAiComponentBase.GetAiTimer_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	float GetActionTimeNative(char curAction); // Function BattlePrototype.EnemyAiComponentBase.GetActionTimeNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd9f0
	bool CheckIsAiActionParam(bool NotProbability, float lProbability, float lHp, char actionEnum); // Function BattlePrototype.EnemyAiComponentBase.CheckIsAiActionParam // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd7f0
	bool CheckIdleMoveActionNative(char checkAction, struct TArray<char> idleMoveAction); // Function BattlePrototype.EnemyAiComponentBase.CheckIdleMoveActionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd6d0
};

// Class BattlePrototype.EnemyAiVariableComponent
// Size: 0xc0 (Inherited: 0xc0)
struct UEnemyAiVariableComponent : UActorComponent {
};

// Class BattlePrototype.EnemyAnimControllerComponent
// Size: 0x118 (Inherited: 0xe0)
struct UEnemyAnimControllerComponent : UAnimControllerComponent {
	struct FMulticastInlineDelegate DispatchMontageBlendingOut; // 0xe0(0x10)
	struct TWeakObjectPtr<struct URSEnemyAnimInstance> _animBP; // 0xf0(0x08)
	char pad_F8[0x20]; // 0xf8(0x20)

	void UpdateAnimDirectionAndSpeed(); // Function BattlePrototype.EnemyAnimControllerComponent.UpdateAnimDirectionAndSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0ae0
	bool StateIsExcite(); // Function BattlePrototype.EnemyAnimControllerComponent.StateIsExcite // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool StateIsBack(); // Function BattlePrototype.EnemyAnimControllerComponent.StateIsBack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e0ab0
	bool StateAliveIsInitLayout(); // Function BattlePrototype.EnemyAnimControllerComponent.StateAliveIsInitLayout // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e0a80
	bool StateAliveIsIdleMove(); // Function BattlePrototype.EnemyAnimControllerComponent.StateAliveIsIdleMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e0a50
	bool StateAliveIsDamage(); // Function BattlePrototype.EnemyAnimControllerComponent.StateAliveIsDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deac0
	bool StateAliveIsAttack(); // Function BattlePrototype.EnemyAnimControllerComponent.StateAliveIsAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e0a20
	bool StateAliveIsAction(); // Function BattlePrototype.EnemyAnimControllerComponent.StateAliveIsAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e09f0
	void SetSwitchAnimKind(enum class EnemySwitchAnimKind anim); // Function BattlePrototype.EnemyAnimControllerComponent.SetSwitchAnimKind // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0500
	void SetSuperArmor(bool isSuperArmor); // Function BattlePrototype.EnemyAnimControllerComponent.SetSuperArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0470
	void SetMove(enum class EnemyMoveAnimKind move); // Function BattlePrototype.EnemyAnimControllerComponent.SetMove // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0220
	void SetLanded(bool Landed); // Function BattlePrototype.EnemyAnimControllerComponent.SetLanded // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0190
	void SetInitLayout(enum class EnemyInitLayoutAnimKind layout); // Function BattlePrototype.EnemyAnimControllerComponent.SetInitLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0110
	void SetIgnoreSuperArmor(bool isIgnoreSuperArmor); // Function BattlePrototype.EnemyAnimControllerComponent.SetIgnoreSuperArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0080
	void SetIgnoreStandUpSuperArmor(bool isIgnoreStandUpSuperArmor); // Function BattlePrototype.EnemyAnimControllerComponent.SetIgnoreStandUpSuperArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfff0
	void SetEnemyKind(enum class EnemyKind kind); // Function BattlePrototype.EnemyAnimControllerComponent.SetEnemyKind // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfec0
	void SetDead(enum class EnemyDeadAnimKind dead); // Function BattlePrototype.EnemyAnimControllerComponent.SetDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfe40
	void SetDamageDown(enum class EnemyDamageDownAnimKind Damage); // Function BattlePrototype.EnemyAnimControllerComponent.SetDamageDown // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfdc0
	void SetDamage(enum class EnemyDamageAnimKind Damage); // Function BattlePrototype.EnemyAnimControllerComponent.SetDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfd40
	void SetCrashChance(enum class EnemyCrashChanceAnimKind chance); // Function BattlePrototype.EnemyAnimControllerComponent.SetCrashChance // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfc40
	void SetBrainCrash(enum class EnemyBrainCrashAnimKind Crash); // Function BattlePrototype.EnemyAnimControllerComponent.SetBrainCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfbc0
	void SetAnimRootMotionScale(float Scale); // Function BattlePrototype.EnemyAnimControllerComponent.SetAnimRootMotionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfb40
	void SetAliveAnimKind(enum class EnemyAliveAnimKind alive); // Function BattlePrototype.EnemyAnimControllerComponent.SetAliveAnimKind // (Final|Native|Public|BlueprintCallable) // @ game+0x11dfac0
	void OnMontageBlendingOut(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.EnemyAnimControllerComponent.OnMontageBlendingOut // (Final|Native|Private) // @ game+0x11df860
	void OnEndAnimDie(); // Function BattlePrototype.EnemyAnimControllerComponent.OnEndAnimDie // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool IsPressDownAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPressDownAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df600
	bool IsPossibleDamageAnimKindWince(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindWince // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df200
	bool IsPossibleDamageAnimKindSpecialDamageDown(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindSpecialDamageDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df1a0
	bool IsPossibleDamageAnimKindLaunch(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindLaunch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df1a0
	bool IsPossibleDamageAnimKindKnockBack(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindKnockBack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df1d0
	bool IsPossibleDamageAnimKindDown(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df1a0
	bool IsPossibleDamageAnimKindDamageChance(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindDamageChance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df170
	bool IsPossibleDamageAnimKindBlow(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKindBlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df140
	bool IsPossibleDamageAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.IsPossibleDamageAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11df110
	bool IsMove(enum class EnemyMoveAnimKind move); // Function BattlePrototype.EnemyAnimControllerComponent.IsMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11def00
	bool IsLanded(); // Function BattlePrototype.EnemyAnimControllerComponent.IsLanded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deed0
	bool IsIgnoreCrashChance(); // Function BattlePrototype.EnemyAnimControllerComponent.IsIgnoreCrashChance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deea0
	bool IsDie(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDie // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsDeadComplete(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDeadComplete // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsDamageAnimStateB(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimStateB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deca0
	bool IsDamageAnimLight2(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimLight2 // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dec70
	bool IsDamageAnimKindWince(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindWince // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dec40
	bool IsDamageAnimKindSpecialDamageDown(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindSpecialDamageDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dec10
	bool IsDamageAnimKindSpecialDamage(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindSpecialDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11debe0
	bool IsDamageAnimKindLaunch(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindLaunch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11debb0
	bool IsDamageAnimKindKnockBack(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindKnockBack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deb80
	bool IsDamageAnimKindDown(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindDown // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deb50
	bool IsDamageAnimKindDamageChance(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindDamageChance // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deb20
	bool IsDamageAnimKindBlow(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamageAnimKindBlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deaf0
	bool IsDamage(); // Function BattlePrototype.EnemyAnimControllerComponent.IsDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11deac0
	bool IsCrashChanceAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.IsCrashChanceAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dea90
	bool IsBrainCrashAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.IsBrainCrashAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de960
	bool IsAttackFlg(); // Function BattlePrototype.EnemyAnimControllerComponent.IsAttackFlg // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de8a0
	bool IsAttackAnimKind(struct TArray<enum class EnemyAttackAnimKind> kindArray); // Function BattlePrototype.EnemyAnimControllerComponent.IsAttackAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de7b0
	bool IsAttack(enum class EnemyAttackAnimKind Attack); // Function BattlePrototype.EnemyAnimControllerComponent.IsAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de720
	bool IsASNodePlayEnd(); // Function BattlePrototype.EnemyAnimControllerComponent.IsASNodePlayEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de1a0
	bool IsActionAnimKind(struct TArray<enum class EnemyActionAnimKind> kindArray); // Function BattlePrototype.EnemyAnimControllerComponent.IsActionAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de260
	bool IsAction(enum class EnemyActionAnimKind Action); // Function BattlePrototype.EnemyAnimControllerComponent.IsAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11de1d0
	enum class EnemySwitchAnimKind GetSwitchAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetSwitchAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddfa0
	float GetSpeed(); // Function BattlePrototype.EnemyAnimControllerComponent.GetSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddf70
	enum class EnemyMoveAnimKind GetMove(); // Function BattlePrototype.EnemyAnimControllerComponent.GetMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddd50
	enum class EnemyKind GetEnemyKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddd20
	enum class EnemyDeadAnimKind GetEnemyDeadAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyDeadAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddcf0
	enum class EnemyDamageDownAnimKind GetEnemyDamageDownAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyDamageDownAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddcc0
	enum class EnemyDamageAnimKind GetEnemyDamageAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyDamageAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddc90
	enum class EnemyCrashChanceAnimKind GetEnemyCrashChanceAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyCrashChanceAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddc60
	enum class EnemyBrainCrashAnimKind GetEnemyBrainCrashAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyBrainCrashAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddc30
	enum class EnemyAttackAnimKind GetEnemyAttackAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyAttackAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddc00
	struct UEnemyAnimControllerComponent* GetEnemyAnimControllerComponentFromActor(struct AActor* Actor); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyAnimControllerComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x11ddb80
	enum class EnemyAliveAnimKind GetEnemyAliveAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyAliveAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddb50
	enum class EnemyActionAnimKind GetEnemyActionAnimKind(); // Function BattlePrototype.EnemyAnimControllerComponent.GetEnemyActionAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ddb20
	float GetDirection(); // Function BattlePrototype.EnemyAnimControllerComponent.GetDirection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b3c30
	void EndMoveBackward(); // Function BattlePrototype.EnemyAnimControllerComponent.EndMoveBackward // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd9b0
	float DotOfHitDirAndUp(); // Function BattlePrototype.EnemyAnimControllerComponent.DotOfHitDirAndUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dd980
	float DotOfHitDirAndRight(); // Function BattlePrototype.EnemyAnimControllerComponent.DotOfHitDirAndRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dd950
	bool CheckGoToIdleMove(bool IsEndAnim); // Function BattlePrototype.EnemyAnimControllerComponent.CheckGoToIdleMove // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11dd640
	bool CheckFaintToWakeup(bool IsEndAnim); // Function BattlePrototype.EnemyAnimControllerComponent.CheckFaintToWakeup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11dd5b0
	bool CheckEndExcite(bool IsEndAnim); // Function BattlePrototype.EnemyAnimControllerComponent.CheckEndExcite // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11dd520
	void BeginMoveBackward(); // Function BattlePrototype.EnemyAnimControllerComponent.BeginMoveBackward // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd4d0
	void BeginMove(enum class EnemyMoveAnimKind move); // Function BattlePrototype.EnemyAnimControllerComponent.BeginMove // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd450
	void BeginGetUp(); // Function BattlePrototype.EnemyAnimControllerComponent.BeginGetUp // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void BeginExcite(); // Function BattlePrototype.EnemyAnimControllerComponent.BeginExcite // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void BeginDie(); // Function BattlePrototype.EnemyAnimControllerComponent.BeginDie // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void BeginAttack(enum class EnemyAttackAnimKind Attack); // Function BattlePrototype.EnemyAnimControllerComponent.BeginAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd3d0
	void BeginAction(enum class EnemyActionAnimKind Action); // Function BattlePrototype.EnemyAnimControllerComponent.BeginAction // (Final|Native|Public|BlueprintCallable) // @ game+0x11dd350
	bool AliveToDie(); // Function BattlePrototype.EnemyAnimControllerComponent.AliveToDie // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
};

// Class BattlePrototype.EnemyAroundEffectComponentBase
// Size: 0x130 (Inherited: 0xc0)
struct UEnemyAroundEffectComponentBase : UActorComponent {
	bool mbUseEffect; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float mCommonRate; // 0xc4(0x04)
	float mAttachRate; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct URSParticleSystemComponentBase* mEffectHandle; // 0xd0(0x08)
	bool mbVisible; // 0xd8(0x01)
	char pad_D9[0x3]; // 0xd9(0x03)
	struct FName mVertSurfaceParameterName; // 0xdc(0x08)
	struct FName mVertSurfaceParameterCommonRateName; // 0xe4(0x08)
	struct FName mVertSurfaceParameterAttachRateName; // 0xec(0x08)
	bool mUseMultiEmitter; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	struct TArray<struct FName> VertSurfaceParameterCommonRateNameList; // 0xf8(0x10)
	struct TArray<struct FName> EmitterNameList; // 0x108(0x10)
	struct TArray<bool> EmitterEnableList; // 0x118(0x10)
	float mFadeDeitherValue; // 0x128(0x04)
	bool mDelayFadeDeitherFlag; // 0x12c(0x01)
	char pad_12D[0x3]; // 0x12d(0x03)

	void UnregisterCameraDitherParticleHandle_FromNative(struct AActor* Owner, struct URSParticleSystemComponentBase* EffectHandle); // Function BattlePrototype.EnemyAroundEffectComponentBase.UnregisterCameraDitherParticleHandle_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartAroundWeakEffect_Native(int32_t emitterIndex); // Function BattlePrototype.EnemyAroundEffectComponentBase.StartAroundWeakEffect_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3f60
	struct URSParticleSystemComponentBase* SpawnEmitter_FromNative(struct USkeletalMeshComponent* TargetMesh); // Function BattlePrototype.EnemyAroundEffectComponentBase.SpawnEmitter_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetVisibleEffect_Native(bool Visible); // Function BattlePrototype.EnemyAroundEffectComponentBase.SetVisibleEffect_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3ed0
	void SetFadeDeitherValue(float DeitherValue); // Function BattlePrototype.EnemyAroundEffectComponentBase.SetFadeDeitherValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3dd0
	void SetEffectParameter(); // Function BattlePrototype.EnemyAroundEffectComponentBase.SetEffectParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3db0
	void SetEffectParam_Native(float newCommonRate, float newAttachRate); // Function BattlePrototype.EnemyAroundEffectComponentBase.SetEffectParam_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3cf0
	void RegisterCameraDitherParticleHandle_FromNative(struct AActor* Owner, struct URSParticleSystemComponentBase* AroundWeakEffect); // Function BattlePrototype.EnemyAroundEffectComponentBase.RegisterCameraDitherParticleHandle_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsVisibleEffect_Native(int32_t emitterIndex); // Function BattlePrototype.EnemyAroundEffectComponentBase.IsVisibleEffect_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3a60
	bool IsVisible_Native(); // Function BattlePrototype.EnemyAroundEffectComponentBase.IsVisible_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e3af0
	bool IsUseMultiEmitter(); // Function BattlePrototype.EnemyAroundEffectComponentBase.IsUseMultiEmitter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e3a30
	bool IsUseEffect_Native(); // Function BattlePrototype.EnemyAroundEffectComponentBase.IsUseEffect_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e3a00
	bool IsEnableAllEmitter(); // Function BattlePrototype.EnemyAroundEffectComponentBase.IsEnableAllEmitter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e39d0
	bool IsDisableAllEmitter(); // Function BattlePrototype.EnemyAroundEffectComponentBase.IsDisableAllEmitter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e39a0
	void Initialize(bool UseEffect, float CommonRate, float AttachRate, bool Visible); // Function BattlePrototype.EnemyAroundEffectComponentBase.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3850
	void HiddenEffect_Native(bool NewHidden); // Function BattlePrototype.EnemyAroundEffectComponentBase.HiddenEffect_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e37c0
	int32_t GetEmitterLastIndex(); // Function BattlePrototype.EnemyAroundEffectComponentBase.GetEmitterLastIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e3760
	bool EndAroundWeakEffect_Native(int32_t emitterIndex); // Function BattlePrototype.EnemyAroundEffectComponentBase.EndAroundWeakEffect_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e35b0
	void DelaySetFadeDeitherValue(); // Function BattlePrototype.EnemyAroundEffectComponentBase.DelaySetFadeDeitherValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3590
};

// Class BattlePrototype.RSAsyncTaskActorComponent
// Size: 0xd0 (Inherited: 0xc0)
struct URSAsyncTaskActorComponent : UActorComponent {
	char pad_C0[0xa]; // 0xc0(0x0a)
	bool bDebugSyncExecFlag; // 0xca(0x01)
	char pad_CB[0x5]; // 0xcb(0x05)

	void SetExecAsyncTask(bool bExec); // Function BattlePrototype.RSAsyncTaskActorComponent.SetExecAsyncTask // (Final|Native|Protected|BlueprintCallable) // @ game+0x12aff10
	bool IsIdleAsyncTask(); // Function BattlePrototype.RSAsyncTaskActorComponent.IsIdleAsyncTask // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aeb50
	bool IsDoneAsyncTask(); // Function BattlePrototype.RSAsyncTaskActorComponent.IsDoneAsyncTask // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12aeb20
};

// Class BattlePrototype.EnemyAsyncTaskComponentBase
// Size: 0xd0 (Inherited: 0xd0)
struct UEnemyAsyncTaskComponentBase : URSAsyncTaskActorComponent {
};

// Class BattlePrototype.EnemyCalcGoalComponent
// Size: 0x120 (Inherited: 0xd0)
struct UEnemyCalcGoalComponent : UEnemyAsyncTaskComponentBase {
	char pad_D0[0x50]; // 0xd0(0x50)

	void SetIntervalTime(float newIntervalTime); // Function BattlePrototype.EnemyCalcGoalComponent.SetIntervalTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3e50
	void SetCalcParam(struct FVector Start, struct FVector End, float Radius); // Function BattlePrototype.EnemyCalcGoalComponent.SetCalcParam // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11e3b40
	void ReSetIntervalTime(); // Function BattlePrototype.EnemyCalcGoalComponent.ReSetIntervalTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3b20
	struct FVector GetCalcLocation(); // Function BattlePrototype.EnemyCalcGoalComponent.GetCalcLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e3720
	void EndAsyncTask(); // Function BattlePrototype.EnemyCalcGoalComponent.EndAsyncTask // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3640
	void BeginAsyncTask(); // Function BattlePrototype.EnemyCalcGoalComponent.BeginAsyncTask // (Final|Native|Public|BlueprintCallable) // @ game+0x11e32f0
};

// Class BattlePrototype.EnemyCheckDodgeJustComponent
// Size: 0xc8 (Inherited: 0xc0)
struct UEnemyCheckDodgeJustComponent : UActorComponent {
	float mDodgeRadius; // 0xc0(0x04)
	float mDodgeRadiusRangeAttack; // 0xc4(0x04)

	bool CheckEnableDodgeJust(struct FVector Location, struct FVector UpDir, struct FVector Offset, float Height, float Radius, struct UHitCheckComponent* HitCheck, float CheckScale, float CheckRangeScale); // Function BattlePrototype.EnemyCheckDodgeJustComponent.CheckEnableDodgeJust // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11e3310
};

// Class BattlePrototype.EnemyDamageMoveComponentBase
// Size: 0x118 (Inherited: 0xc0)
struct UEnemyDamageMoveComponentBase : UActorComponent {
	struct ARSCharacterBase* mOwnerEnemy; // 0xc0(0x08)
	char pad_C8[0x50]; // 0xc8(0x50)

	void Update_Native(float DeltaSec); // Function BattlePrototype.EnemyDamageMoveComponentBase.Update_Native // (Final|Native|Protected|BlueprintCallable) // @ game+0x11e4320
	void Start_Native(struct FVector DamageDir, float Power, bool DeadMove, struct AActor* attacker); // Function BattlePrototype.EnemyDamageMoveComponentBase.Start_Native // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x11e3ff0
	void SetDamageMoveScale(float Scale); // Function BattlePrototype.EnemyDamageMoveComponentBase.SetDamageMoveScale // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3c70
	float GetLength(); // Function BattlePrototype.EnemyDamageMoveComponentBase.GetLength // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3790
};

// Class BattlePrototype.EnemyDeadMoveComponentBase
// Size: 0x110 (Inherited: 0xc0)
struct UEnemyDeadMoveComponentBase : UActorComponent {
	struct ARSCharacterBase* mOwnerEnemy; // 0xc0(0x08)
	char pad_C8[0x48]; // 0xc8(0x48)

	void Update_Native(float DeltaSeconds); // Function BattlePrototype.EnemyDeadMoveComponentBase.Update_Native // (Final|Native|Protected|BlueprintCallable) // @ game+0x11e43a0
	void Start_Native(float BlendExp, float MoveLength, enum class EEasingFunc Function, float MoveSeconds, struct FVector DamageDir); // Function BattlePrototype.EnemyDeadMoveComponentBase.Start_Native // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x11e4170
};

// Class BattlePrototype.EnemyDefineFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEnemyDefineFunctionLibrary : UBlueprintFunctionLibrary {

	bool EnemyGrade_LockOnIsGreater(enum class EEnemyGrade myPri, enum class EEnemyGrade otherPri); // Function BattlePrototype.EnemyDefineFunctionLibrary.EnemyGrade_LockOnIsGreater // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11e3660
};

// Class BattlePrototype.EnemyDropData
// Size: 0x30 (Inherited: 0x28)
struct UEnemyDropData : UObject {
	struct UDataTable* RefEnemyDropTable; // 0x28(0x08)

	bool LoadEnemyDropDataTable(struct FString EnemyDropTablePath); // Function BattlePrototype.EnemyDropData.LoadEnemyDropDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb7d0
	bool IsValidResource(); // Function BattlePrototype.EnemyDropData.IsValidResource // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb7a0
	struct FName GetIdFromIndex(int32_t Index); // Function BattlePrototype.EnemyDropData.GetIdFromIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11eb150
	bool GetEnemyDropDataFromIndex(struct FEnemyDropDataCell EnemyDropData, int32_t Index); // Function BattlePrototype.EnemyDropData.GetEnemyDropDataFromIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11eab60
	bool GetEnemyDropData(struct FEnemyDropDataCell EnemyDropData, struct FName ID); // Function BattlePrototype.EnemyDropData.GetEnemyDropData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ea9f0
};

// Class BattlePrototype.EnemyDropDataUtility
// Size: 0x28 (Inherited: 0x28)
struct UEnemyDropDataUtility : UBlueprintFunctionLibrary {

	int32_t GetDropMoney(struct FEnemyDropDataCell rCell); // Function BattlePrototype.EnemyDropDataUtility.GetDropMoney // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11ea5c0
	float GetDropItemProbability(struct FEnemyDropDataCell rCell); // Function BattlePrototype.EnemyDropDataUtility.GetDropItemProbability // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11ea4a0
	int32_t GetDropExperience(struct FEnemyDropDataCell rCell); // Function BattlePrototype.EnemyDropDataUtility.GetDropExperience // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11ea390
	struct FString GetDebugLotteryParamString(int32_t Index); // Function BattlePrototype.EnemyDropDataUtility.GetDebugLotteryParamString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xd6c220
	bool GetDataDropItemID(struct FEnemyDropDataCell rCell, bool isRare, struct FName ItemId, int32_t itemNum, struct FName EnemyID, int32_t tableNo, float Rate, float randnum); // Function BattlePrototype.EnemyDropDataUtility.GetDataDropItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x11ea080
	bool GetCoreDropItemID(struct FEnemyDropDataCell rCell, bool isRare, struct FName ItemId, int32_t itemNum, struct FName EnemyID, int32_t tableNo, float Rate, float randnum); // Function BattlePrototype.EnemyDropDataUtility.GetCoreDropItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x11e9d70
	void DebugDropItemLotteryParam(struct FName EnemyID, int32_t tableNo, float Rate, float randnum); // Function BattlePrototype.EnemyDropDataUtility.DebugDropItemLotteryParam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x11e9290
};

// Class BattlePrototype.EnemyFixParamComponentBase
// Size: 0x128 (Inherited: 0xc0)
struct UEnemyFixParamComponentBase : UActorComponent {
	float mChangeCrashHighRate; // 0xc0(0x04)
	float mCrashDamageTime; // 0xc4(0x04)
	float mLaunchLMotionScale; // 0xc8(0x04)
	float mReactionSWeakCorrectionValue; // 0xcc(0x04)
	float mReactionLWeakCorrectionValue; // 0xd0(0x04)
	float mDownWeakCorrectionValue; // 0xd4(0x04)
	float mCrashWeakCorrectionValue; // 0xd8(0x04)
	float mRouteReactionSBonus; // 0xdc(0x04)
	float mRouteReactionLBonus; // 0xe0(0x04)
	float mRouteDownBonus; // 0xe4(0x04)
	float mDownCrashBonus; // 0xe8(0x04)
	float mBCChancePlayRate; // 0xec(0x04)
	float mDetectIcon_FindSeconds; // 0xf0(0x04)
	float mSensingHeight; // 0xf4(0x04)
	float mEnableMoveHeight; // 0xf8(0x04)
	float mAIActionHeight; // 0xfc(0x04)
	float mTickPriority_RangeTop; // 0x100(0x04)
	float mTickPriority_RangeMiddle; // 0x104(0x04)
	float mTickPriority_HeightTop; // 0x108(0x04)
	float mTickPriority_IntervalTop; // 0x10c(0x04)
	float mTickPriority_LimitTop; // 0x110(0x04)
	float mTickPriority_IntervalMiddle; // 0x114(0x04)
	float mTickPriority_LimitMiddle; // 0x118(0x04)
	float mTickPriority_IntervalBottom; // 0x11c(0x04)
	float mTickPriority_LimitBottom; // 0x120(0x04)
	char pad_124[0x4]; // 0x124(0x04)
};

// Class BattlePrototype.EnemyGoalComponentBase
// Size: 0x100 (Inherited: 0xc0)
struct UEnemyGoalComponentBase : UActorComponent {
	struct UEnemyCalcGoalComponent* mCalcComponent; // 0xc0(0x08)
	struct AActor* mMoveGoalActor; // 0xc8(0x08)
	struct AActor* mMyEnemy; // 0xd0(0x08)
	struct ARSCharacterBase* mTargetCharacter; // 0xd8(0x08)
	struct FVector mTargetLocation; // 0xe0(0x0c)
	enum class EEnemyGoalType mGoalType; // 0xec(0x01)
	char pad_ED[0x3]; // 0xed(0x03)
	float mHitWallRadius; // 0xf0(0x04)
	float mHitWallHeight; // 0xf4(0x04)
	bool mbDisableUpdateCharacter; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)

	void UpdateTargetCharacter_Native(float DeltaSeconds); // Function BattlePrototype.EnemyGoalComponentBase.UpdateTargetCharacter_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11ee0e0
	void SetTargetLocation_Native(struct FVector Location); // Function BattlePrototype.EnemyGoalComponentBase.SetTargetLocation_Native // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11eda00
	void SetTargetActor_Native(struct ARSCharacterBase* Character); // Function BattlePrototype.EnemyGoalComponentBase.SetTargetActor_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11ed980
	void SetGoalIntervalTime_Native(float newIntervalTime); // Function BattlePrototype.EnemyGoalComponentBase.SetGoalIntervalTime_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11ec3f0
	void ResetGoalIntervalTime_Native(); // Function BattlePrototype.EnemyGoalComponentBase.ResetGoalIntervalTime_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11ec010
	void MainTick_Native(float DeltaSeconds); // Function BattlePrototype.EnemyGoalComponentBase.MainTick_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb930
	struct AActor* InitializeSpawnMoveGoalActor_FromNative(struct AActor* Owner); // Function BattlePrototype.EnemyGoalComponentBase.InitializeSpawnMoveGoalActor_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UEnemyCalcGoalComponent* InitializeGetEnemyCalcComponent_FromNative(struct AActor* Owner); // Function BattlePrototype.EnemyGoalComponentBase.InitializeGetEnemyCalcComponent_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float InitializeGetCapsuleRadius_FromNative(struct AActor* Owner); // Function BattlePrototype.EnemyGoalComponentBase.InitializeGetCapsuleRadius_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void Initialize_Native(); // Function BattlePrototype.EnemyGoalComponentBase.Initialize_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb520
	struct FVector GetTargetLocation_Native(); // Function BattlePrototype.EnemyGoalComponentBase.GetTargetLocation_Native // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x11eb1e0
	struct ARSCharacterBase* GetTargetActor_Native(); // Function BattlePrototype.EnemyGoalComponentBase.GetTargetActor_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbc90
	struct AActor* GetGoalActor_Native(); // Function BattlePrototype.EnemyGoalComponentBase.GetGoalActor_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbf00
	void EndPlay_Native(); // Function BattlePrototype.EnemyGoalComponentBase.EndPlay_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9590
	struct FVector CorrectionHitCollision_Native(struct FVector SrcLocation, struct FVector DstLocation, float Radius); // Function BattlePrototype.EnemyGoalComponentBase.CorrectionHitCollision_Native // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11e9130
};

// Class BattlePrototype.EnemyGroundCheckComponent
// Size: 0x178 (Inherited: 0xd0)
struct UEnemyGroundCheckComponent : UEnemyAsyncTaskComponentBase {
	char pad_D0[0xa8]; // 0xd0(0xa8)

	void SetRotationToUpVector(struct USkeletalMeshComponent* MeshComp, float interpSpeed, struct FVector UpVector); // Function BattlePrototype.EnemyGroundCheckComponent.SetRotationToUpVector // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ed500
	void SetRotation(struct USkeletalMeshComponent* MeshComp, float interpSpeed); // Function BattlePrototype.EnemyGroundCheckComponent.SetRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x11ed430
	void SetRotateMesh(struct USkeletalMeshComponent* MeshComp, float interpSpeed, float angleLimit, bool endFit); // Function BattlePrototype.EnemyGroundCheckComponent.SetRotateMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x11ed2e0
	void SetIntervalTime(float newIntervalTime); // Function BattlePrototype.EnemyGroundCheckComponent.SetIntervalTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3e50
	void SetCheckPos(struct FVector Position); // Function BattlePrototype.EnemyGroundCheckComponent.SetCheckPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ec2e0
	void InitSetting(bool multipleChecks, float checkHeight, float CapsuleRadius); // Function BattlePrototype.EnemyGroundCheckComponent.InitSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb420
	struct FVector GetUpVector(); // Function BattlePrototype.EnemyGroundCheckComponent.GetUpVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e3720
	struct FRotator GetCalcRotator(); // Function BattlePrototype.EnemyGroundCheckComponent.GetCalcRotator // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e9d30
	void EndGroundCheck(); // Function BattlePrototype.EnemyGroundCheckComponent.EndGroundCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3640
	struct FRotator CalcRotationToUpVector(float OffsetYaw, struct FVector forwardVector, struct FTransform Transform, struct FRotator baseRot, float interpSpeed, struct FVector UpVector); // Function BattlePrototype.EnemyGroundCheckComponent.CalcRotationToUpVector // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11e8cd0
	struct FRotator CalcRotation(struct FRotator baseRot, float interpSpeed); // Function BattlePrototype.EnemyGroundCheckComponent.CalcRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11e8be0
	void CalcRotateRotToMesh(struct USkeletalMeshComponent* MeshComp, float OffsetYaw, float interpSpeed, float angleLimit, bool endFit); // Function BattlePrototype.EnemyGroundCheckComponent.CalcRotateRotToMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x11e8a50
	void CalcRotateRotMesh(struct USkeletalMeshComponent* MeshComp, float OffsetYaw, float interpSpeed, float angleLimit, bool endFit); // Function BattlePrototype.EnemyGroundCheckComponent.CalcRotateRotMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x11e88c0
	void CalcRotateRot(float OffsetYaw, struct FVector forwardVector, struct FTransform Transform, struct FVector baseUpVector, struct FRotator baseRot, float interpSpeed, float angleLimit, bool endFit); // Function BattlePrototype.EnemyGroundCheckComponent.CalcRotateRot // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11e85d0
	void CalcRotateMesh(struct USkeletalMeshComponent* MeshComp, float interpSpeed, float angleLimit, bool endFit); // Function BattlePrototype.EnemyGroundCheckComponent.CalcRotateMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x11e8480
	void BeginGroundCheck(); // Function BattlePrototype.EnemyGroundCheckComponent.BeginGroundCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11e8080
};

// Class BattlePrototype.EnemyLookCheckComponent
// Size: 0x170 (Inherited: 0xd0)
struct UEnemyLookCheckComponent : UEnemyAsyncTaskComponentBase {
	char pad_D0[0xa0]; // 0xd0(0xa0)

	void SetRayPos2(struct FVector MainStart, struct FVector MainEnd, struct FVector TargetStart, struct FVector TargetEnd); // Function BattlePrototype.EnemyLookCheckComponent.SetRayPos2 // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11ec4f0
	void SetRayPos(struct FVector Start, struct FVector End); // Function BattlePrototype.EnemyLookCheckComponent.SetRayPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ec680
	bool IsLookTarget(); // Function BattlePrototype.EnemyLookCheckComponent.IsLookTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb690
	bool IsLookMain(); // Function BattlePrototype.EnemyLookCheckComponent.IsLookMain // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb660
	bool GetFailedLook(); // Function BattlePrototype.EnemyLookCheckComponent.GetFailedLook // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11eb120
	void EndLookCheck(); // Function BattlePrototype.EnemyLookCheckComponent.EndLookCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3640
	void BeginLookCheck(); // Function BattlePrototype.EnemyLookCheckComponent.BeginLookCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11e8080
};

// Class BattlePrototype.EnemyManager
// Size: 0x4d8 (Inherited: 0x230)
struct AEnemyManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct AActor* mTickEnableTargetDroneActor; // 0x238(0x08)
	struct TWeakObjectPtr<struct UMeshComponent> mTickEnableTargetDroneMesh; // 0x240(0x08)
	bool mbIsStealthSeeFlag; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct TArray<float> SelectParamDistList; // 0x250(0x10)
	struct TArray<int32_t> SelectParamDistPointList; // 0x260(0x10)
	struct TArray<float> SelectParamAngleList; // 0x270(0x10)
	struct TArray<int32_t> SelectParamAnglePointList; // 0x280(0x10)
	char pad_290[0x58]; // 0x290(0x58)
	struct FMulticastInlineDelegate OnEnemyListNative; // 0x2e8(0x10)
	struct TArray<struct ARSCharacterBase*> enemyList; // 0x2f8(0x10)
	struct TMap<struct FName, struct FEnemyListInfo> EnemyListByLevel; // 0x308(0x50)
	struct TArray<struct AActor*> EnemyBossList; // 0x358(0x10)
	struct TMap<struct FName, struct FEnemyListInfo> EnemyBossListByLevel; // 0x368(0x50)
	struct TArray<struct ARSCharacterBase*> BrainCrashCandidateList; // 0x3b8(0x10)
	uint32_t _enemyIgnoreDamageFlag; // 0x3c8(0x04)
	char pad_3CC[0x5]; // 0x3cc(0x05)
	bool RestrictSelfDead; // 0x3d1(0x01)
	char pad_3D2[0x2]; // 0x3d2(0x02)
	float RestrictSelfDeadTimer; // 0x3d4(0x04)
	struct TMap<struct FName, struct FEnemyRepopLevelInfo> EnemyRepopLevelInfoList; // 0x3d8(0x50)
	struct TMap<struct FName, bool> mUniqueBrainCrashPlayedList; // 0x428(0x50)
	uint32_t mUpdateEnemyCount; // 0x478(0x04)
	uint32_t mEnemyCountMax; // 0x47c(0x04)
	struct TArray<struct ARSCharacterBase*> mMovingList; // 0x480(0x10)
	int32_t EnemyMovingCount; // 0x490(0x04)
	char pad_494[0x4]; // 0x494(0x04)
	struct TArray<struct ARSCharacterBase*> BrainCrashTargetList; // 0x498(0x10)
	struct TArray<struct ARSCharacterBase*> CurrentTargetList; // 0x4a8(0x10)
	bool bExecBrainCrash; // 0x4b8(0x01)
	bool bLastEnableBc; // 0x4b9(0x01)
	bool bIsDisplayCursor; // 0x4ba(0x01)
	char pad_4BB[0x5]; // 0x4bb(0x05)
	struct TArray<struct ARSCharacterBase*> mNeedCheckCutList; // 0x4c0(0x10)
	bool mCanPlayCutScene; // 0x4d0(0x01)
	char pad_4D1[0x7]; // 0x4d1(0x07)

	struct ARSCharacterBase* UsableBrainCrashLockTarget_Native(struct ARSCharacterBase* Player); // Function BattlePrototype.EnemyManager.UsableBrainCrashLockTarget_Native // (Final|Native|Private|BlueprintCallable) // @ game+0x11ee160
	void UpdateRestrictSelfDead(float _DeltaSec); // Function BattlePrototype.EnemyManager.UpdateRestrictSelfDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11ee060
	void UpdateOutRangeFade(float OutRange); // Function BattlePrototype.EnemyManager.UpdateOutRangeFade // (Final|Native|Public|BlueprintCallable) // @ game+0x11edfe0
	void UpdateEnemyTickEnable(struct AActor* Enemy, struct AActor* Player, float Range, float Height, float OutRange); // Function BattlePrototype.EnemyManager.UpdateEnemyTickEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x11ede50
	void UpdateCheckCut(); // Function BattlePrototype.EnemyManager.UpdateCheckCut // (Final|Native|Public|BlueprintCallable) // @ game+0x11ede30
	void UpdateBrainCrashTarget_Native(); // Function BattlePrototype.EnemyManager.UpdateBrainCrashTarget_Native // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ede10
	void UnregisterNeedCheckCutActor(struct ARSCharacterBase* _unregisterActor); // Function BattlePrototype.EnemyManager.UnregisterNeedCheckCutActor // (Final|Native|Public|BlueprintCallable) // @ game+0x11edd90
	void SubMovingList(struct ARSCharacterBase* subCharacter); // Function BattlePrototype.EnemyManager.SubMovingList // (Final|Native|Public|BlueprintCallable) // @ game+0x11edd10
	void SubEnemyList(struct ARSCharacterBase* subEnemy); // Function BattlePrototype.EnemyManager.SubEnemyList // (Final|Native|Public|BlueprintCallable) // @ game+0x11edc90
	void SubEnemyBossList(struct AActor* subEnemy); // Function BattlePrototype.EnemyManager.SubEnemyBossList // (Final|Native|Public|BlueprintCallable) // @ game+0x11edc10
	void SubBrainCrashCandidate(struct ARSCharacterBase* subChara); // Function BattlePrototype.EnemyManager.SubBrainCrashCandidate // (Final|Native|Public|BlueprintCallable) // @ game+0x11edb90
	void StopEnemyAll_FromNative(); // Function BattlePrototype.EnemyManager.StopEnemyAll_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetTickEnableTargetDroneMesh(struct UMeshComponent* DroneMesh); // Function BattlePrototype.EnemyManager.SetTickEnableTargetDroneMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x11edb10
	void SetTickEnableTargetDroneActor(struct AActor* DroneActor); // Function BattlePrototype.EnemyManager.SetTickEnableTargetDroneActor // (Final|Native|Public|BlueprintCallable) // @ game+0x11eda90
	void SetSpawnWaitDelay(struct ARSCharacterBase* chara, float DelayTime); // Function BattlePrototype.EnemyManager.SetSpawnWaitDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x11ed8b0
	void SetSelectParameter(struct TArray<float> distList, struct TArray<int32_t> distPointList, struct TArray<float> angleList, struct TArray<int32_t> anglePointList); // Function BattlePrototype.EnemyManager.SetSelectParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x11ed620
	void SetRestrictSelfDead(bool _RestrictSelfDead, float _RestrictTime); // Function BattlePrototype.EnemyManager.SetRestrictSelfDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11ed210
	bool SetRepopExtendInList_FromNative(struct FEnemyRepopExtendInfo EnemyRepopExtendInfo, struct ARSCharacterBase* RepopTarget); // Function BattlePrototype.EnemyManager.SetRepopExtendInList_FromNative // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetRepopExtendInfoToList(struct FEnemyRepopExtendInfo EnemyRepopExtendInfo, bool IsIgnoreRestrictAttackOther, bool IsIgnoreAllowance, bool IsNoCheckCaptureArea, bool IsChangeSearchAngle, float ChangeSearchAngle, bool IsAlwayChangeSearchAngle, bool IsChangeSearchRange, float ChangeSearchRange, bool IsAlwayChangeSearchRange, bool IsChangeSensingAngle, float ChangeSensingAngle, bool IsAlwaySensingAngle, bool IsChangeCaptureArea, float ChangeCaptureArea, bool IsAlwayCaptureArea); // Function BattlePrototype.EnemyManager.SetRepopExtendInfoToList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ecd40
	void SetRepopExtendInfoToActor(struct FEnemyRepopExtendInfo EnemyRepopExtendInfo, bool IsIgnoreRestrictAttackOther, bool IsIgnoreAllowance, bool IsNoCheckCaptureArea, bool IsChangeSearchAngle, float ChangeSearchAngle, bool IsAlwayChangeSearchAngle, bool IsChangeSearchRange, float ChangeSearchRange, bool IsAlwayChangeSearchRange, bool IsChangeSensingAngle, float ChangeSensingAngle, bool IsAlwaySensingAngle, bool IsChangeCaptureArea, float ChangeCaptureArea, bool IsAlwayCaptureArea); // Function BattlePrototype.EnemyManager.SetRepopExtendInfoToActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ec760
	void SetMaxMovingCount(int32_t count); // Function BattlePrototype.EnemyManager.SetMaxMovingCount // (Final|Native|Public|BlueprintCallable) // @ game+0x11ec470
	void SetEnemyIgnoreDamageFlag(int32_t Flags); // Function BattlePrototype.EnemyManager.SetEnemyIgnoreDamageFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11ec370
	bool SetBrainCrashHUDTarget_Window(struct ARSCharacterBase* TargetChara, bool EnablePlayer); // Function BattlePrototype.EnemyManager.SetBrainCrashHUDTarget_Window // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	struct ARSCharacterBase* SelectBrainCrashTarget(struct FVector chkPos, struct FVector chkDir); // Function BattlePrototype.EnemyManager.SelectBrainCrashTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ec1e0
	struct TArray<struct ARSCharacterBase*> SelectBrainCrashMultiTarget(struct FVector chkPos, struct FVector chkDir); // Function BattlePrototype.EnemyManager.SelectBrainCrashMultiTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ec0a0
	struct ARSCharacterBase* SelectBrainCrashCharacter_Native(); // Function BattlePrototype.EnemyManager.SelectBrainCrashCharacter_Native // (Final|Native|Private|BlueprintCallable) // @ game+0x11ec070
	void ResetUpdateEnemyNative(); // Function BattlePrototype.EnemyManager.ResetUpdateEnemyNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ec050
	void ResetUniqueBrainCrashPlayedList(); // Function BattlePrototype.EnemyManager.ResetUniqueBrainCrashPlayedList // (Final|Native|Public|BlueprintCallable) // @ game+0x11ec030
	bool RepopUpdateNative(struct FName NowLocationName, bool IsInScene, float DeltaSeconds); // Function BattlePrototype.EnemyManager.RepopUpdateNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ebf00
	bool RepopSpawn_FromNative(struct FEnemyRepopInfo EnemyRepopInfo, int32_t Group, int32_t SubGroup); // Function BattlePrototype.EnemyManager.RepopSpawn_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RepopCheckInsideCameraNative(struct FVector MyPos); // Function BattlePrototype.EnemyManager.RepopCheckInsideCameraNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ebe60
	void RemoveEnemyRepopLevelInfoList(struct FName Name); // Function BattlePrototype.EnemyManager.RemoveEnemyRepopLevelInfoList // (Final|Native|Public|BlueprintCallable) // @ game+0x11ebdd0
	void RegisterNeedCheckCutActor(struct ARSCharacterBase* _registerActor); // Function BattlePrototype.EnemyManager.RegisterNeedCheckCutActor // (Final|Native|Public|BlueprintCallable) // @ game+0x11ebd50
	bool PreUpdateEnemyTickEnable(struct AActor* Enemy, struct AActor* Player, float OutRange); // Function BattlePrototype.EnemyManager.PreUpdateEnemyTickEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x11ebc40
	bool MakeUniqueBrainCrashPlayedList(struct TMap<struct FName, bool> srcList); // Function BattlePrototype.EnemyManager.MakeUniqueBrainCrashPlayedList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ebb00
	bool MakeEnemyRepopLevelInfoList(struct TMap<struct FName, struct FEnemyRepopLevelInfo> _srcList); // Function BattlePrototype.EnemyManager.MakeEnemyRepopLevelInfoList // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb9b0
	bool IsUniqueBrainCrashPlayed(struct FName Name); // Function BattlePrototype.EnemyManager.IsUniqueBrainCrashPlayed // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb710
	bool IsStealthSeeFlagNative(); // Function BattlePrototype.EnemyManager.IsStealthSeeFlagNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb6f0
	bool IsRestrictSelfDead(); // Function BattlePrototype.EnemyManager.IsRestrictSelfDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb6c0
	int32_t IsEntryBrainCrashCandidate(struct ARSCharacterBase* findChara); // Function BattlePrototype.EnemyManager.IsEntryBrainCrashCandidate // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb5d0
	bool IsEnemyIgnoreDamage(enum class ECharacterIgnoreDamage CheckFlag); // Function BattlePrototype.EnemyManager.IsEnemyIgnoreDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb540
	void IncrementUpdateEnemyNative(); // Function BattlePrototype.EnemyManager.IncrementUpdateEnemyNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb400
	struct TMap<struct FName, bool> GetUniqueBrainCrashPlayedList(); // Function BattlePrototype.EnemyManager.GetUniqueBrainCrashPlayedList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11eb290
	struct FVector GetTickEnableTargetLocation(); // Function BattlePrototype.EnemyManager.GetTickEnableTargetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11eb250
	struct AActor* GetTickEnableTargetActor(); // Function BattlePrototype.EnemyManager.GetTickEnableTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb220
	struct TMap<struct FName, struct FEnemyRepopLevelInfo> GetEnemyRepopLevelInfoList(); // Function BattlePrototype.EnemyManager.GetEnemyRepopLevelInfoList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11eafc0
	int32_t GetEnemyNumByLevelName(struct FName LevelName); // Function BattlePrototype.EnemyManager.GetEnemyNumByLevelName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11eaf30
	int32_t GetEnemyNum(); // Function BattlePrototype.EnemyManager.GetEnemyNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1820
	struct TArray<struct ARSCharacterBase*> GetEnemyListRef(); // Function BattlePrototype.EnemyManager.GetEnemyListRef // (Final|Native|Public|BlueprintCallable) // @ game+0x11eaea0
	struct TArray<struct AActor*> GetEnemyListByLevelName(struct FName LevelName); // Function BattlePrototype.EnemyManager.GetEnemyListByLevelName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11eadc0
	struct TArray<struct ARSCharacterBase*> GetEnemyList(); // Function BattlePrototype.EnemyManager.GetEnemyList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11ead00
	int32_t GetEnemyIgnoreDamageFlag(); // Function BattlePrototype.EnemyManager.GetEnemyIgnoreDamageFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eacd0
	struct UObject* GetEnemyClass(struct FString Path); // Function BattlePrototype.EnemyManager.GetEnemyClass // (Final|Native|Public|BlueprintCallable) // @ game+0x11ea900
	int32_t GetEnemyBossNumByLevelName(struct FName LevelName); // Function BattlePrototype.EnemyManager.GetEnemyBossNumByLevelName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11ea870
	struct TArray<struct AActor*> GetEnemyBossListByLevelName(struct FName LevelName); // Function BattlePrototype.EnemyManager.GetEnemyBossListByLevelName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11ea790
	struct TArray<struct AActor*> GetEnemyBossList(); // Function BattlePrototype.EnemyManager.GetEnemyBossList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11ea6d0
	bool GetCanPlayCutSceneFromNative(); // Function BattlePrototype.EnemyManager.GetCanPlayCutSceneFromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	int32_t GetBrainCrashCandidateNum(); // Function BattlePrototype.EnemyManager.GetBrainCrashCandidateNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e9d10
	struct TArray<struct ARSCharacterBase*> GetBrainCrashCandidateList(); // Function BattlePrototype.EnemyManager.GetBrainCrashCandidateList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9c50
	struct FName GetActorLevelName(struct AActor* Actor); // Function BattlePrototype.EnemyManager.GetActorLevelName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11e9bc0
	void GetActorLevelAreaID(struct AActor* Actor, int32_t LocationId, int32_t areaId); // Function BattlePrototype.EnemyManager.GetActorLevelAreaID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x11e9aa0
	bool FindEnemyRepopLevelInfoList(struct FName Name, struct FEnemyRepopLevelInfo EnemyRepopLevelInfo); // Function BattlePrototype.EnemyManager.FindEnemyRepopLevelInfoList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11e99a0
	void EntryRepopNative(float RepopTimeBase, float Range, float Probability, struct FString ClassBpPath, struct FVector InitPos, float MoveArea, struct FName LevelName, int32_t Group, int32_t SubGroup, struct FName UniqueId, struct FName Level, int32_t DropId, struct ARSCharacterBase* RepopTarget); // Function BattlePrototype.EnemyManager.EntryRepopNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11e95b0
	bool EnableUniqueBrainCrashPlayedList(struct FName Name); // Function BattlePrototype.EnemyManager.EnableUniqueBrainCrashPlayedList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9500
	void EnableEnemyIgnoreDamageAll(); // Function BattlePrototype.EnemyManager.EnableEnemyIgnoreDamageAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11e94e0
	void EnableEnemyIgnoreDamage(enum class ECharacterIgnoreDamage setFlag); // Function BattlePrototype.EnemyManager.EnableEnemyIgnoreDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9460
	void DisableEnemyIgnoreDamageAll(); // Function BattlePrototype.EnemyManager.DisableEnemyIgnoreDamageAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9440
	void DisableEnemyIgnoreDamage(enum class ECharacterIgnoreDamage setFlag); // Function BattlePrototype.EnemyManager.DisableEnemyIgnoreDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11e93c0
	void ClearEnemyRepopLevelInfoList(); // Function BattlePrototype.EnemyManager.ClearEnemyRepopLevelInfoList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9100
	bool CheckRepopCharaInListNative(struct FName CharaUniqueId, int32_t GroupID); // Function BattlePrototype.EnemyManager.CheckRepopCharaInListNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9040
	bool CanUpdateEnemyNative(); // Function BattlePrototype.EnemyManager.CanUpdateEnemyNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11e9010
	bool CanPlayCutSceneEnemy(); // Function BattlePrototype.EnemyManager.CanPlayCutSceneEnemy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e8fe0
	bool CanAddMovingList(struct ARSCharacterBase* newCharacter); // Function BattlePrototype.EnemyManager.CanAddMovingList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e8f50
	int32_t CalcRelationScore(struct FVector cameraPos, struct FVector cameraDir, struct FVector checkPos, float possibleBrainCrashRange); // Function BattlePrototype.EnemyManager.CalcRelationScore // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e82e0
	int32_t CalcBrainCrashScore(float outDist, float outAngle, struct ARSCharacterBase* chkChara, struct FVector chkPos, struct FVector chkDir, float longestDist); // Function BattlePrototype.EnemyManager.CalcBrainCrashScore // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e80a0
	void AllEnemyTickStop(); // Function BattlePrototype.EnemyManager.AllEnemyTickStop // (Final|Native|Public|BlueprintCallable) // @ game+0x11e8060
	void AddMovingList(struct ARSCharacterBase* AddCharacter); // Function BattlePrototype.EnemyManager.AddMovingList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e7fe0
	void AddEnemyRepopLevelInfoList(struct FName Name, struct FEnemyRepopLevelInfo EnemyRepopLevelInfo); // Function BattlePrototype.EnemyManager.AddEnemyRepopLevelInfoList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e7ef0
	void AddEnemyList(struct ARSCharacterBase* addEnemy); // Function BattlePrototype.EnemyManager.AddEnemyList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e7e70
	void AddEnemyBossList(struct AActor* addEnemy); // Function BattlePrototype.EnemyManager.AddEnemyBossList // (Final|Native|Public|BlueprintCallable) // @ game+0x11e7df0
	void AddBrainCrashCandidate(struct ARSCharacterBase* addChara); // Function BattlePrototype.EnemyManager.AddBrainCrashCandidate // (Final|Native|Public|BlueprintCallable) // @ game+0x11e7d70
};

// Class BattlePrototype.MaterialAccessorComponent
// Size: 0x360 (Inherited: 0xc0)
struct UMaterialAccessorComponent : UActorComponent {
	struct UMeshComponent* Mesh; // 0xc0(0x08)
	struct TArray<struct UMeshComponent*> AppendMeshes; // 0xc8(0x10)
	bool EnableRestoreOverrideParamters; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct TArray<struct FMACSlotParameter> MaterialList; // 0xe0(0x10)
	char pad_F0[0x270]; // 0xf0(0x270)

	void UpdateMateiral(); // Function BattlePrototype.MaterialAccessorComponent.UpdateMateiral // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetVisibleMaterialAllLODs(bool Show, int32_t SlotHandle); // Function BattlePrototype.MaterialAccessorComponent.SetVisibleMaterialAllLODs // (Final|Native|Protected|BlueprintCallable) // @ game+0x123f350
	void SetVectorParameterByVariable(struct FMACVariableVector Variable, enum class EMaterialAccessorSetupID SetupID); // Function BattlePrototype.MaterialAccessorComponent.SetVectorParameterByVariable // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123f230
	void SetVectorParameterByRegister(struct TArray<struct FVector> Variables, struct TArray<enum class EMaterialAccessorSetupID> SetupIDs); // Function BattlePrototype.MaterialAccessorComponent.SetVectorParameterByRegister // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123f110
	void SetVectorParameter(enum class EMaterialAccessorSetupID SetupID, struct FLinearColor Value, struct FLinearColor DefaultValue, struct FName ParameterName, int32_t SlotHandle); // Function BattlePrototype.MaterialAccessorComponent.SetVectorParameter // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x123ef60
	int32_t SetupMaterialBySlotName(struct FString SlotName); // Function BattlePrototype.MaterialAccessorComponent.SetupMaterialBySlotName // (Final|Native|Protected|BlueprintCallable) // @ game+0x123f410
	void SetTextureParameter(struct UTexture* Texture, struct FName ParameterName, int32_t SlotHandle); // Function BattlePrototype.MaterialAccessorComponent.SetTextureParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x123ee60
	void SetScalarParameterByVariable(struct FMACVariableFloat Variable, enum class EMaterialAccessorSetupID SetupID); // Function BattlePrototype.MaterialAccessorComponent.SetScalarParameterByVariable // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123ed60
	void SetScalarParameterByRegister(struct TArray<float> Variables, struct TArray<enum class EMaterialAccessorSetupID> SetupIDs); // Function BattlePrototype.MaterialAccessorComponent.SetScalarParameterByRegister // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123ec40
	void SetScalarParameter(enum class EMaterialAccessorSetupID SetupID, float Value, float DefaultValue, struct FName ParameterName, int32_t SlotHandle); // Function BattlePrototype.MaterialAccessorComponent.SetScalarParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x123eab0
	void SetExcludeRestoreOverrideParameters(struct TArray<struct FName> ParameterNames); // Function BattlePrototype.MaterialAccessorComponent.SetExcludeRestoreOverrideParameters // (Final|Native|Protected|BlueprintCallable) // @ game+0x123e9d0
	void SetAppendMesh(struct TArray<struct UMeshComponent*> InAppedMeshes); // Function BattlePrototype.MaterialAccessorComponent.SetAppendMesh // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x123e920
	void RestoreParameter(); // Function BattlePrototype.MaterialAccessorComponent.RestoreParameter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void Reset(); // Function BattlePrototype.MaterialAccessorComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x123e6c0
	void RegisterVectorParameters(struct TArray<struct FMACVariableVector> Variables); // Function BattlePrototype.MaterialAccessorComponent.RegisterVectorParameters // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123e5f0
	void RegisterScalarParameters(struct TArray<struct FMACVariableFloat> Variables); // Function BattlePrototype.MaterialAccessorComponent.RegisterScalarParameters // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123e520
	void ManualRestoreOverrideParametersBP(); // Function BattlePrototype.MaterialAccessorComponent.ManualRestoreOverrideParametersBP // (Final|Native|Public|BlueprintCallable) // @ game+0x123e3e0
	void GetDefaultVectorParameterByVariable(struct FMACVariableVector Variable); // Function BattlePrototype.MaterialAccessorComponent.GetDefaultVectorParameterByVariable // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123deb0
	void GetDefaultVectorParameterALL(struct FName ParameterName, struct FLinearColor OutParameters); // Function BattlePrototype.MaterialAccessorComponent.GetDefaultVectorParameterALL // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x123dde0
	void GetDefaultVectorParameter(struct TArray<int32_t> SearchSlots, struct FName ParameterName, struct FLinearColor OutParameters); // Function BattlePrototype.MaterialAccessorComponent.GetDefaultVectorParameter // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x123dc70
	void GetDefaultScalarParameterByVariable(struct FMACVariableFloat Variable); // Function BattlePrototype.MaterialAccessorComponent.GetDefaultScalarParameterByVariable // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123dbc0
	void GetDefaultScalarParameterALL(struct FName ParameterName, float OutParameters); // Function BattlePrototype.MaterialAccessorComponent.GetDefaultScalarParameterALL // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123dae0
	void GetDefaultScalarParameter(struct TArray<int32_t> SearchSlots, struct FName ParameterName, float OutParameters); // Function BattlePrototype.MaterialAccessorComponent.GetDefaultScalarParameter // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x123d960
	void AddColorByRate(float SumValue, struct FLinearColor BaseColor, float Rate, struct FLinearColor SourceColor, struct FLinearColor OutColor); // Function BattlePrototype.MaterialAccessorComponent.AddColorByRate // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x123d600
};

// Class BattlePrototype.EnemyMaterialAccessorComponent
// Size: 0x360 (Inherited: 0x360)
struct UEnemyMaterialAccessorComponent : UMaterialAccessorComponent {

	void SetupDefaultParameter(struct ACharacter* Enemy); // Function BattlePrototype.EnemyMaterialAccessorComponent.SetupDefaultParameter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11f92a0
	void SetEnemyMesh(struct USkeletalMeshComponent* EnemyMesh); // Function BattlePrototype.EnemyMaterialAccessorComponent.SetEnemyMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11f8400
};

// Class BattlePrototype.EnemyPathAreaCheckComponent
// Size: 0x120 (Inherited: 0xd0)
struct UEnemyPathAreaCheckComponent : UEnemyAsyncTaskComponentBase {
	char pad_D0[0x50]; // 0xd0(0x50)

	void SetIntervalTime(float newIntervalTime); // Function BattlePrototype.EnemyPathAreaCheckComponent.SetIntervalTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3e50
	void SetCheckPos(struct FVector StartPos, struct FVector EndPos, struct AActor* TargetActor); // Function BattlePrototype.EnemyPathAreaCheckComponent.SetCheckPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f7fb0
	bool IsAreaOut(); // Function BattlePrototype.EnemyPathAreaCheckComponent.IsAreaOut // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f4500
	void EndAreaCheck(); // Function BattlePrototype.EnemyPathAreaCheckComponent.EndAreaCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2c40
	void BeginAreaCheck(); // Function BattlePrototype.EnemyPathAreaCheckComponent.BeginAreaCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11f0fa0
};

// Class BattlePrototype.EnemyScriptComponent
// Size: 0x368 (Inherited: 0xc0)
struct UEnemyScriptComponent : UActorComponent {
	char pad_C0[0x94]; // 0xc0(0x94)
	float mTargetHeight; // 0x154(0x04)
	struct UAnimMontage* mReceiveMontage; // 0x158(0x08)
	bool mIgnoreUpdateMoveMaxSpeed; // 0x160(0x01)
	bool mbIsSpawnNow; // 0x161(0x01)
	bool mbUseDefaultSpawnSearchParam; // 0x162(0x01)
	bool mbIsBattleEnemy; // 0x163(0x01)
	bool mbIsWait; // 0x164(0x01)
	bool mbIsEventWait; // 0x165(0x01)
	bool mbIsBT_ForceBreak; // 0x166(0x01)
	bool mbIsWander; // 0x167(0x01)
	bool mbEnableWander; // 0x168(0x01)
	bool mbIsBattleStart; // 0x169(0x01)
	bool mbIsBoss; // 0x16a(0x01)
	bool mbCollisionHitWall; // 0x16b(0x01)
	char mESpawnState; // 0x16c(0x01)
	char pad_16D[0x3]; // 0x16d(0x03)
	struct FVector mInitGroundPos; // 0x170(0x0c)
	float mFlyModeChangeIgnoreSeconds; // 0x17c(0x04)
	struct AActor* mFlyEnemyPawn; // 0x180(0x08)
	enum class EEnemyFormType mEFormType; // 0x188(0x01)
	char pad_189[0x3]; // 0x189(0x03)
	float mOutRangeFadeValue; // 0x18c(0x04)
	int32_t mOutRangeFadeValueInt; // 0x190(0x04)
	int32_t mWeaponOutRangeFadeValueInt; // 0x194(0x04)
	struct TArray<struct UActorComponent*> mRecordTickEnabledComponentList; // 0x198(0x10)
	char pad_1A8[0x24]; // 0x1a8(0x24)
	float mTickActorSeconds; // 0x1cc(0x04)
	char pad_1D0[0x84]; // 0x1d0(0x84)
	float mUpdateFindPlayerNotRenderedTime; // 0x254(0x04)
	char pad_258[0x50]; // 0x258(0x50)
	struct TArray<bool> mbDisableWeakAroundEffect; // 0x2a8(0x10)
	int32_t mGroupID; // 0x2b8(0x04)
	float mBattlefieldFenceAppearRate; // 0x2bc(0x04)
	struct TMap<char, struct FAiParamEnemyInfo> mAiTableDataMap; // 0x2c0(0x50)
	char pad_310[0x8]; // 0x310(0x08)
	bool mbInvincible; // 0x318(0x01)
	char pad_319[0x3]; // 0x319(0x03)
	int32_t mWeakNo; // 0x31c(0x04)
	int32_t mArmorNo; // 0x320(0x04)
	enum class ECharacterDeadType mCharaDeadType; // 0x324(0x01)
	bool mIsDeadStartNotify; // 0x325(0x01)
	char pad_326[0x2]; // 0x326(0x02)
	struct TArray<struct UDamagePartCollisionComponent*> mWeakComponent; // 0x328(0x10)
	bool mbIgnorePenetrateArmor; // 0x338(0x01)
	char pad_339[0x2f]; // 0x339(0x2f)

	bool WeakMaterialHitDamage(struct TArray<struct FHCHitResult> HitResults); // Function BattlePrototype.EnemyScriptComponent.WeakMaterialHitDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11f56d0
	void UpdateWeakMaterialRate(struct TArray<struct FString> slotNameList, float rateValue, float emissivePowerValue); // Function BattlePrototype.EnemyScriptComponent.UpdateWeakMaterialRate // (Final|Native|Public|BlueprintCallable) // @ game+0x11fb790
	bool UpdateWeakAroundEffect(struct TArray<bool> StartWeakAroundEffect, bool BrainFieldSealWeakParticle, bool PreCheck); // Function BattlePrototype.EnemyScriptComponent.UpdateWeakAroundEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fb650
	void UpdateUro(struct USkinnedMeshComponent* TargetMesh, enum class EnemyAliveAnimKind AnimKind); // Function BattlePrototype.EnemyScriptComponent.UpdateUro // (Final|Native|Public|BlueprintCallable) // @ game+0x11fb590
	void UpdateTraceChildPawn(struct FVector RootLocation, bool PossibleGroundCheck, float BeforeFlyPawnZ, struct FVector ActorLocation, float FlyPawnZ); // Function BattlePrototype.EnemyScriptComponent.UpdateTraceChildPawn // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11fb3b0
	void UpdateTargetInfo(struct ARSCharacterBase* Target); // Function BattlePrototype.EnemyScriptComponent.UpdateTargetInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x11fb330
	bool UpdateSetFlying(bool DamageFloating, bool IsFlyState); // Function BattlePrototype.EnemyScriptComponent.UpdateSetFlying // (Final|Native|Public|BlueprintCallable) // @ game+0x11fb250
	void UpdateScoutingNative(float DeltaSeconds, char SpawnState, float ChangeSearchRange, float ChangeSearchAngle, float ChangeSensingArea, float ChangeCaptureArea, struct FName EyeSocketName); // Function BattlePrototype.EnemyScriptComponent.UpdateScoutingNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fb040
	void UpdateRotator(bool ChildMove, float DeltaSeconds, float NoNavMoveInterpSpeed); // Function BattlePrototype.EnemyScriptComponent.UpdateRotator // (Final|Native|Public|BlueprintCallable) // @ game+0x11faf40
	void UpdateRootMotionChildPawn(struct FVector RootLocation, bool PossibleGroundCheck, float BeforeFlyPawnZ, struct FVector ActorLocation, float FlyPawnZ, float AnyMoreDifferenceUpdate); // Function BattlePrototype.EnemyScriptComponent.UpdateRootMotionChildPawn // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11fad40
	void UpdatePreviousElapsedTime(float ElapsedTime); // Function BattlePrototype.EnemyScriptComponent.UpdatePreviousElapsedTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11facc0
	void UpdateOutRangeFade(float DeitherValue, float TargetRange, float DeltaSeconds, float FadeRange, float InRange, float OutRange, float FadeTime, float FadeRate, bool ForceDisp); // Function BattlePrototype.EnemyScriptComponent.UpdateOutRangeFade // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11faa20
	void UpdateMainPlayerInfo(); // Function BattlePrototype.EnemyScriptComponent.UpdateMainPlayerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x11faa00
	void UpdateIsSameDamageReaction(bool IsMotionReception, enum class EnemyDamageAnimKind damageKind); // Function BattlePrototype.EnemyScriptComponent.UpdateIsSameDamageReaction // (Final|Native|Public|BlueprintCallable) // @ game+0x11fa940
	float UpdateHitDamageMaterialArmor(float sec, float ArmorFlashScale, float RefArmorFlashTime); // Function BattlePrototype.EnemyScriptComponent.UpdateHitDamageMaterialArmor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fa820
	void UpdateGroundEffect(enum class EEm0800EffectType GroundEffectType); // Function BattlePrototype.EnemyScriptComponent.UpdateGroundEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fa790
	bool UpdateGroundCheckTimer(struct FGameTimer GameTimer, float GroundCheckTime); // Function BattlePrototype.EnemyScriptComponent.UpdateGroundCheckTimer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fa6a0
	bool UpdateFlyMoveSlopeRestoreSeconds(bool FlyMoveSlopeRestore, float DeltaSeconds, float RotPow); // Function BattlePrototype.EnemyScriptComponent.UpdateFlyMoveSlopeRestoreSeconds // (Final|Native|Public|BlueprintCallable) // @ game+0x11fa590
	void UpdateFlyEnemyParam(float DeltaSeconds, struct FVector OldLocation); // Function BattlePrototype.EnemyScriptComponent.UpdateFlyEnemyParam // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fa4c0
	void UpdateFloodedAnimRootMotionScale(bool IsFoodedFlg, bool IsMoveAnim); // Function BattlePrototype.EnemyScriptComponent.UpdateFloodedAnimRootMotionScale // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fa3f0
	void UpdateFindPlayerValue(float DeltaSeconds); // Function BattlePrototype.EnemyScriptComponent.UpdateFindPlayerValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11fa370
	void UpdateEnemyUro(); // Function BattlePrototype.EnemyScriptComponent.UpdateEnemyUro // (Final|Native|Public|BlueprintCallable) // @ game+0x11fa350
	bool UpdateEnableIK(bool enableRequestIk); // Function BattlePrototype.EnemyScriptComponent.UpdateEnableIK // (Final|Native|Public|BlueprintCallable) // @ game+0x11fa2c0
	void UpdateDetectTarget(struct ARSCharacterBase* Target, float searchViewRange, float searchViewAngle, float searchSensingRange, float captureRange, float searchHeight); // Function BattlePrototype.EnemyScriptComponent.UpdateDetectTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x11fa100
	void UpdateDetectPlayer(float searchViewRange, float searchViewAngle, float searchSensingRange, float captureRange, float searchHeight); // Function BattlePrototype.EnemyScriptComponent.UpdateDetectPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x11f9f60
	struct FVector UpdateCommonDecal(float DecalLerpSpeed, float DecalFollowSpeedDefault, float DecalFollowSpeedFast, float DeletaSeconds, struct FVector LastDecalLocation, struct FVector Offset, struct FName AttachSocketNameAdditionalDecal); // Function BattlePrototype.EnemyScriptComponent.UpdateCommonDecal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f9d10
	bool UpdateAreaCheck(int32_t areaOutSequence, bool IsAreaOut, struct FVector InitPos, float DeltaSeconds, float OutRange, float offsetRange, float AreaOutTimer); // Function BattlePrototype.EnemyScriptComponent.UpdateAreaCheck // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f9af0
	struct FVector UpdateAdditionalDecal(float DecalLerpSpeed, float DecalFollowSpeedDefault, float DecalFollowSpeedFast, struct FVector LastAdditionalDecalLocation, struct FVector Offset, struct FName AttachSocketNameAdditionalDecal); // Function BattlePrototype.EnemyScriptComponent.UpdateAdditionalDecal // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f98e0
	void TimerIncrementRef(float Base, float Time); // Function BattlePrototype.EnemyScriptComponent.TimerIncrementRef // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f9810
	void TimerDecrementRef(float Base, float Time, bool bLimitZero); // Function BattlePrototype.EnemyScriptComponent.TimerDecrementRef // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f9700
	float TimerDecrement(float Base, float Time); // Function BattlePrototype.EnemyScriptComponent.TimerDecrement // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f9630
	void StartDamageAnimFunc(bool ObjAttackDirect, struct FVector lDir, struct FVector ObjAttackDirection, struct FVector ObjLocation, struct FVector AttackLocation, struct FVector attackDir, struct FRotator RefRotator, struct FVector RefHit, struct FVector RefDir); // Function BattlePrototype.EnemyScriptComponent.StartDamageAnimFunc // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f9330
	void SetWeaponOutRangeFade(struct TArray<struct AEnemyWeaponBase*> WeaponArray, float DeitherValue, float FadeRate); // Function BattlePrototype.EnemyScriptComponent.SetWeaponOutRangeFade // (Final|Native|Public|BlueprintCallable) // @ game+0x11f90d0
	void SetWeakMaterialValue(float _emissivePowerMax, float _pointRateMax); // Function BattlePrototype.EnemyScriptComponent.SetWeakMaterialValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11f9010
	void SetWeakEmissiveOff_Native(struct FString WeakSlotName); // Function BattlePrototype.EnemyScriptComponent.SetWeakEmissiveOff_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8f30
	void SettingOutRangeFade(float OutRange); // Function BattlePrototype.EnemyScriptComponent.SettingOutRangeFade // (Final|Native|Public|BlueprintCallable) // @ game+0x11f9220
	void SetTickIntervalSecondsParam(float _TickPriorityIntervalMiddle, float _TickPriorityLimitMiddle, float _TickPriorityIntervalTop, float _TickPriorityLimitTop, float _TickPriorityIntervalBottom, float _TickPriorityLimitBottom); // Function BattlePrototype.EnemyScriptComponent.SetTickIntervalSecondsParam // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8d50
	void SetTargetSearchTestInfo(struct FSearchTestInfo Info); // Function BattlePrototype.EnemyScriptComponent.SetTargetSearchTestInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f8cb0
	void SetTargetSearchBasicInfo(struct FSearchBasicInfo Info); // Function BattlePrototype.EnemyScriptComponent.SetTargetSearchBasicInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f8c00
	void SetStopWeakEmissive(bool _isStop); // Function BattlePrototype.EnemyScriptComponent.SetStopWeakEmissive // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8b80
	void SetSimulatePhisics(bool bEnable); // Function BattlePrototype.EnemyScriptComponent.SetSimulatePhisics // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8af0
	void SetSaveBodyEmissiveValue(int32_t Index, float Value); // Function BattlePrototype.EnemyScriptComponent.SetSaveBodyEmissiveValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8a20
	void SetRestoreBrainFieldLocation(struct FVector restoreLocation); // Function BattlePrototype.EnemyScriptComponent.SetRestoreBrainFieldLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f89a0
	void SetQuickFind(bool bEnable); // Function BattlePrototype.EnemyScriptComponent.SetQuickFind // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8910
	void SetOutRangeFadeValue(float FadeValue); // Function BattlePrototype.EnemyScriptComponent.SetOutRangeFadeValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8890
	void SetMainPlayerSearchTestInfo(struct FSearchTestInfo Info); // Function BattlePrototype.EnemyScriptComponent.SetMainPlayerSearchTestInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f87f0
	void SetMainPlayerSearchBasicInfo(struct FSearchBasicInfo Info); // Function BattlePrototype.EnemyScriptComponent.SetMainPlayerSearchBasicInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f8740
	void SetIgnorePenetrateArmor(bool bIgnore); // Function BattlePrototype.EnemyScriptComponent.SetIgnorePenetrateArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11f86b0
	void SetIgnoreCrashChance(bool bIgnoreCrashChance); // Function BattlePrototype.EnemyScriptComponent.SetIgnoreCrashChance // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8620
	void SetIgnoreCaptureRange(bool isIgnore); // Function BattlePrototype.EnemyScriptComponent.SetIgnoreCaptureRange // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8590
	void SetFindValue(float Value); // Function BattlePrototype.EnemyScriptComponent.SetFindValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8510
	void SetFindPlayerType(enum class EEnemyFindPlayerType findType); // Function BattlePrototype.EnemyScriptComponent.SetFindPlayerType // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8490
	void SetEnableWeak(bool _isEnable); // Function BattlePrototype.EnemyScriptComponent.SetEnableWeak // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8380
	void SetDisableWeakAroundEffect(int32_t Index, bool _isEnable); // Function BattlePrototype.EnemyScriptComponent.SetDisableWeakAroundEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x11f82c0
	void SetDisableTargetBattleNative(bool _disable); // Function BattlePrototype.EnemyScriptComponent.SetDisableTargetBattleNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8240
	void SetCoolDownTimerBP(int32_t Index, float Value); // Function BattlePrototype.EnemyScriptComponent.SetCoolDownTimerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x11f8170
	void SetConsiderDownDead(bool bEnable); // Function BattlePrototype.EnemyScriptComponent.SetConsiderDownDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11f80e0
	void SetAreaOutDamageWaitTimer(float addTime, float maxTime); // Function BattlePrototype.EnemyScriptComponent.SetAreaOutDamageWaitTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7ef0
	void SetAbsolutelyNoReactionBP(bool bEnable); // Function BattlePrototype.EnemyScriptComponent.SetAbsolutelyNoReactionBP // (Final|Native|Private|BlueprintCallable) // @ game+0x11f7e60
	void SetAbsoluteDetectTarget(bool isAbsolute, struct FName ClaimantName); // Function BattlePrototype.EnemyScriptComponent.SetAbsoluteDetectTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7da0
	void SearchForceReactionType(struct TArray<enum class HCSkillExtraType> SkillExtraTypes, struct TArray<enum class HCSkillExtraType> ForceExtraTypes); // Function BattlePrototype.EnemyScriptComponent.SearchForceReactionType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f7c50
	void RestoreWeakEmissive_Native(struct FString WeakSlotName); // Function BattlePrototype.EnemyScriptComponent.RestoreWeakEmissive_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7b70
	void ResetAreaOutParam(); // Function BattlePrototype.EnemyScriptComponent.ResetAreaOutParam // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7b50
	bool RequestLaunchMotion_Damage(bool LaunchIgnorePriority); // Function BattlePrototype.EnemyScriptComponent.RequestLaunchMotion_Damage // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7ac0
	bool RequestLaunchMotion(bool LaunchIgnorePriority, bool IsMotionReception, bool IsOverWriteMotion); // Function BattlePrototype.EnemyScriptComponent.RequestLaunchMotion // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f7990
	bool RequestDownMotion(struct FHCSkillCommonInfo skillInfo, bool IsDownSasFlagIgnoreDownTriggerFlag); // Function BattlePrototype.EnemyScriptComponent.RequestDownMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7870
	bool RequestAddDamageL(struct FHCSkillCommonInfo skillInfo); // Function BattlePrototype.EnemyScriptComponent.RequestAddDamageL // (Final|Native|Public|BlueprintCallable) // @ game+0x11f77a0
	struct FHCHitResult ReplaceHitResult(struct FHCHitResult HitResult); // Function BattlePrototype.EnemyScriptComponent.ReplaceHitResult // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7640
	void RecordTickEnabledComponents(struct TArray<struct UActorComponent*> ComponentList); // Function BattlePrototype.EnemyScriptComponent.RecordTickEnabledComponents // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7560
	void PutoutInformation(bool IsSideDamage, struct FVector HitDir, struct FVector hitPosition, bool IsRight, bool IsLeft, bool isBack); // Function BattlePrototype.EnemyScriptComponent.PutoutInformation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f7340
	enum class EEnemyTickPriorityType PrioritizeTickNative(enum class EEnemyTickPriorityType InTickPriority, bool InIsBoss, bool InIsSimple, bool InIsBattling, float InRangeMiddle, float RangeTop, float HeightTop); // Function BattlePrototype.EnemyScriptComponent.PrioritizeTickNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11f7120
	void PreUpdateWeakMaterialRate(struct TArray<struct FString> slotNameList, float materialTime, float DeltaSec, bool r_isMultiWeak); // Function BattlePrototype.EnemyScriptComponent.PreUpdateWeakMaterialRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f6ee0
	bool PreUpdateWeakAroundEffect(bool isExit); // Function BattlePrototype.EnemyScriptComponent.PreUpdateWeakAroundEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f6e40
	void PreTick(float DeltaSeconds); // Function BattlePrototype.EnemyScriptComponent.PreTick // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6dc0
	bool PreAreaCheck(int32_t areaOutSequence); // Function BattlePrototype.EnemyScriptComponent.PreAreaCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6d30
	void PostTick(float DeltaSeconds); // Function BattlePrototype.EnemyScriptComponent.PostTick // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void OnDamageActorHit_IsHitWeek(struct FHCHitResult RefHitResult); // Function BattlePrototype.EnemyScriptComponent.OnDamageActorHit_IsHitWeek // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f6c40
	void OnDamageActorHit_DamageInfo(struct FHCHitResult HitResult, struct AActor* Attack, struct FVector DamageLocation, struct FVector DamageDir); // Function BattlePrototype.EnemyScriptComponent.OnDamageActorHit_DamageInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f6a40
	void OnDamageActorHit_ChangeWeakState(struct AActor* attacker, struct FHCHitResult HitResult); // Function BattlePrototype.EnemyScriptComponent.OnDamageActorHit_ChangeWeakState // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6900
	bool NotDamageMontage(bool IsRequestAddDamageMontage); // Function BattlePrototype.EnemyScriptComponent.NotDamageMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6870
	void ModifyHitResultPrimitiveWeakPoint(struct USkeletalMeshComponent* Mesh, struct FHCHitResult HitResult, bool ModifiedPrimitive); // Function BattlePrototype.EnemyScriptComponent.ModifyHitResultPrimitiveWeakPoint // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f66e0
	void ModifyElectricAccumulationBySuperArmor(float refElectric, bool isSuperArmor); // Function BattlePrototype.EnemyScriptComponent.ModifyElectricAccumulationBySuperArmor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f6600
	void MainTick(float DeltaSeconds); // Function BattlePrototype.EnemyScriptComponent.MainTick // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6580
	bool IsValidSaveBodyEmissiveValue(int32_t Index); // Function BattlePrototype.EnemyScriptComponent.IsValidSaveBodyEmissiveValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f64f0
	bool IsUpdateEnemyTickEnableNative(bool IsBoss, bool StopUpdateEnemyTickEnable, bool IsTickMove); // Function BattlePrototype.EnemyScriptComponent.IsUpdateEnemyTickEnableNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f63d0
	bool IsTrigger(struct TArray<enum class HCSkillExtraType> SkillExtraTypes); // Function BattlePrototype.EnemyScriptComponent.IsTrigger // (Final|Native|Public|BlueprintCallable) // @ game+0x11f62e0
	bool IsSuspendIKCondition(); // Function BattlePrototype.EnemyScriptComponent.IsSuspendIKCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x11f62b0
	bool IsSuspendFollowAttack(); // Function BattlePrototype.EnemyScriptComponent.IsSuspendFollowAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f6280
	bool IsStopWeakEmissive(); // Function BattlePrototype.EnemyScriptComponent.IsStopWeakEmissive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1166d80
	bool IsStealthSeeEnebleNative(bool IsValid); // Function BattlePrototype.EnemyScriptComponent.IsStealthSeeEnebleNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f61e0
	bool IsStealthEnableNative(); // Function BattlePrototype.EnemyScriptComponent.IsStealthEnableNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11f61b0
	bool IsStateStealthNative(enum class EEnemyStealthState StealthState); // Function BattlePrototype.EnemyScriptComponent.IsStateStealthNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6120
	bool IsSkillExtraType_CommonInfo(struct FHCSkillCommonInfo skillInfo, enum class HCSkillExtraType ExtraType); // Function BattlePrototype.EnemyScriptComponent.IsSkillExtraType_CommonInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x11f6000
	bool IsSkillExtraType(struct TArray<enum class HCSkillExtraType> SkillExtraTypes, enum class HCSkillExtraType ExtraType); // Function BattlePrototype.EnemyScriptComponent.IsSkillExtraType // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5ee0
	bool IsQuickFind(); // Function BattlePrototype.EnemyScriptComponent.IsQuickFind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xae0060
	bool IsPsychicObjectCombo(struct FHCHitResult HitResult); // Function BattlePrototype.EnemyScriptComponent.IsPsychicObjectCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5d50
	bool IsPsychic_Obj_MapGimmickDamage(enum class HCSkillAttackType SkillAttackType); // Function BattlePrototype.EnemyScriptComponent.IsPsychic_Obj_MapGimmickDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5e50
	bool IsPlayerOutOfBattleFieldFence(); // Function BattlePrototype.EnemyScriptComponent.IsPlayerOutOfBattleFieldFence // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f5d20
	bool IsNotTargetNative(); // Function BattlePrototype.EnemyScriptComponent.IsNotTargetNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f5cf0
	bool IsNotDamageMotion(bool NotDamageMotion); // Function BattlePrototype.EnemyScriptComponent.IsNotDamageMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5c60
	bool IsNeedResetStateMachine(float ElapsedTime, float ResetSecond); // Function BattlePrototype.EnemyScriptComponent.IsNeedResetStateMachine // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f5b90
	bool IsMoveAnim(enum class EnemyMoveAnimKind checkKind); // Function BattlePrototype.EnemyScriptComponent.IsMoveAnim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f5b00
	bool IsInvincible(bool invincibleAll, bool invincibleParts); // Function BattlePrototype.EnemyScriptComponent.IsInvincible // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f5a10
	bool IsInitLayout_Native(); // Function BattlePrototype.EnemyScriptComponent.IsInitLayout_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f59e0
	bool IsIgnorePenetrateArmor(); // Function BattlePrototype.EnemyScriptComponent.IsIgnorePenetrateArmor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f59b0
	bool IsIgnoreCaptureRange(); // Function BattlePrototype.EnemyScriptComponent.IsIgnoreCaptureRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1189c50
	bool IsHpPercentDown(float percent, bool Error); // Function BattlePrototype.EnemyScriptComponent.IsHpPercentDown // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f58d0
	bool IsHitWeak_HitResultS(struct FHCHitResult HitResults); // Function BattlePrototype.EnemyScriptComponent.IsHitWeak_HitResultS // (Final|Native|Public|BlueprintCallable) // @ game+0x11f57d0
	bool IsHitWeak_HitResult(struct TArray<struct FHCHitResult> HitResults); // Function BattlePrototype.EnemyScriptComponent.IsHitWeak_HitResult // (Final|Native|Public|BlueprintCallable) // @ game+0x11f56d0
	bool IsHitWeak(struct UPrimitiveComponent* PrimitiveComponent, struct FHCSkillCommonInfo skillInfo); // Function BattlePrototype.EnemyScriptComponent.IsHitWeak // (Final|Native|Public|BlueprintCallable) // @ game+0x11f55b0
	bool IsHitPart(struct UPrimitiveComponent* PrimitiveComponent, int32_t no); // Function BattlePrototype.EnemyScriptComponent.IsHitPart // (Final|Native|Public|BlueprintCallable) // @ game+0x11f54f0
	bool IsHitFromMainPlayer(struct AActor* attacker); // Function BattlePrototype.EnemyScriptComponent.IsHitFromMainPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5460
	bool IsFlying(); // Function BattlePrototype.EnemyScriptComponent.IsFlying // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5430
	bool IsFlyHeightAdjust(); // Function BattlePrototype.EnemyScriptComponent.IsFlyHeightAdjust // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5400
	bool IsFloodedAnimRootMotionScale(bool IsMoveAnim); // Function BattlePrototype.EnemyScriptComponent.IsFloodedAnimRootMotionScale // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f5370
	bool IsEvent(); // Function BattlePrototype.EnemyScriptComponent.IsEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f5340
	bool IsEnemyTickDisableCondition_Native(bool bDiscoverClosed); // Function BattlePrototype.EnemyScriptComponent.IsEnemyTickDisableCondition_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11f52b0
	bool IsEnemyStopAnimKind(bool IsWait, bool IsEventWait); // Function BattlePrototype.EnemyScriptComponent.IsEnemyStopAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f51d0
	bool IsEnemyDamageLaunchCPP(); // Function BattlePrototype.EnemyScriptComponent.IsEnemyDamageLaunchCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f51a0
	bool IsEnableWeak(); // Function BattlePrototype.EnemyScriptComponent.IsEnableWeak // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f5180
	bool IsEnableMoveRangeNative(float EnableMoveArea, float DistanceFromEnemyInitToPlayer, float EnableMoveHeight, float HeightFromEnemyInitToPlayer); // Function BattlePrototype.EnemyScriptComponent.IsEnableMoveRangeNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f5030
	bool IsEnableLostAction(); // Function BattlePrototype.EnemyScriptComponent.IsEnableLostAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f5000
	bool IsDuringLaunchDamage(bool IsNewLaunch, bool DamageFloating, bool NewDamageFloating); // Function BattlePrototype.EnemyScriptComponent.IsDuringLaunchDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4ee0
	bool IsDownDamageToDead(bool bEnableConsiderFlag); // Function BattlePrototype.EnemyScriptComponent.IsDownDamageToDead // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4e50
	bool IsDistanceAngleCheck(struct AActor* Target, struct FVector TargetLocation, float Range, float Angle, struct FRotator Rot, bool noHeight, struct FVector selfLocation, bool selfLocationOn); // Function BattlePrototype.EnemyScriptComponent.IsDistanceAngleCheck // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f4be0
	bool IsDisableWeakAroundEffect(int32_t Index); // Function BattlePrototype.EnemyScriptComponent.IsDisableWeakAroundEffect // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f4b50
	bool IsDisableTargetBattleNative(); // Function BattlePrototype.EnemyScriptComponent.IsDisableTargetBattleNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f4b30
	bool IsDelayDeath_Native(); // Function BattlePrototype.EnemyScriptComponent.IsDelayDeath_Native // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f4b00
	bool IsDeadAfterReaction(struct TArray<enum class HCSkillExtraType> SkillExtraTypes); // Function BattlePrototype.EnemyScriptComponent.IsDeadAfterReaction // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4a10
	bool IsDamageSuperArmor(); // Function BattlePrototype.EnemyScriptComponent.IsDamageSuperArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11f49e0
	bool IsDamageKnockBack(); // Function BattlePrototype.EnemyScriptComponent.IsDamageKnockBack // (Final|Native|Public|BlueprintCallable) // @ game+0x11f49b0
	bool IsDamageDownWait(); // Function BattlePrototype.EnemyScriptComponent.IsDamageDownWait // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4980
	bool IsDamage(); // Function BattlePrototype.EnemyScriptComponent.IsDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f4950
	bool IsCrashChanceAndIgnore(); // Function BattlePrototype.EnemyScriptComponent.IsCrashChanceAndIgnore // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f4920
	bool IsContinuityDamageMotion(enum class EnemyAliveAnimKind AliveAnimKind); // Function BattlePrototype.EnemyScriptComponent.IsContinuityDamageMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4890
	bool IsConsiderDownDead(); // Function BattlePrototype.EnemyScriptComponent.IsConsiderDownDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f4860
	bool IsCheckEnemyKind(enum class EnemyKind checkKind); // Function BattlePrototype.EnemyScriptComponent.IsCheckEnemyKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f47d0
	bool IsCheckDamageDownAnimKind(enum class EnemyDamageDownAnimKind checkKind); // Function BattlePrototype.EnemyScriptComponent.IsCheckDamageDownAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f4740
	bool IsCheckDamageAnimKind(enum class EnemyDamageAnimKind checkKind); // Function BattlePrototype.EnemyScriptComponent.IsCheckDamageAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f46b0
	bool IsCheckAliveAnimKind(enum class EnemyAliveAnimKind checkKind); // Function BattlePrototype.EnemyScriptComponent.IsCheckAliveAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f4620
	bool IsChangeOldFindType(); // Function BattlePrototype.EnemyScriptComponent.IsChangeOldFindType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f45f0
	bool IsBrainCrashDeadState(); // Function BattlePrototype.EnemyScriptComponent.IsBrainCrashDeadState // (Final|Native|Public|BlueprintCallable) // @ game+0x11f45c0
	bool IsArmor(struct UPrimitiveComponent* PrimitiveComponent); // Function BattlePrototype.EnemyScriptComponent.IsArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4530
	bool IsAbsolutelyNoReactionBP(); // Function BattlePrototype.EnemyScriptComponent.IsAbsolutelyNoReactionBP // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f44d0
	bool IsAbsoluteDetectTarget(); // Function BattlePrototype.EnemyScriptComponent.IsAbsoluteDetectTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f44a0
	void Initialize(struct UCharacterMovementComponent* CharaMoveComp, struct UCharactersParameterComponent* CharactersParameterComp, struct UEnemyLookCheckComponent* LookCheckComp, struct UEnemyAnimControllerComponent* AnimController, struct USkeletalMeshComponent* MeshComp, struct UHateTargetComponent* HateTargetComp, struct UEnemyFixParamComponentBase* FixParam, struct USearchingComponent* SearchingComponent, struct UChangeWeakStateComponentBase* ChangeWeakStateComponent, struct UEnemyAroundEffectComponentBase* AroundEffectComponentBase, bool IsIgnoreAllowance, bool IsIgnoreRestrictAttackOther, bool UseDefaultSpawnSearchParam); // Function BattlePrototype.EnemyScriptComponent.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4110
	void InitCoolDownTimerBP(int32_t Num); // Function BattlePrototype.EnemyScriptComponent.InitCoolDownTimerBP // (Final|Native|Public|BlueprintCallable) // @ game+0x11f4090
	void GetUsedWeaponAllListNative(struct TArray<struct AEnemyWeaponBase*> WeaponList, struct TArray<struct AEnemyWeaponBase*> Result); // Function BattlePrototype.EnemyScriptComponent.GetUsedWeaponAllListNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f3f40
	void GetTickIntervalSecondsParam(float OutDefaultSeconds, float OutMaxSeconds, enum class EEnemyTickPriorityType InTickPriority); // Function BattlePrototype.EnemyScriptComponent.GetTickIntervalSecondsParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f3e10
	struct FSearchTestInfo GetTargetSearchTestInfo(); // Function BattlePrototype.EnemyScriptComponent.GetTargetSearchTestInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3dd0
	struct FSearchBasicInfo GetTargetSearchBasicInfo(); // Function BattlePrototype.EnemyScriptComponent.GetTargetSearchBasicInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3d90
	float GetTargetAngle(struct FVector baseDist, struct FVector targetDist); // Function BattlePrototype.EnemyScriptComponent.GetTargetAngle // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f3ca0
	float GetSensingAreaNative(char SpawnState, float ChangeSensingArea); // Function BattlePrototype.EnemyScriptComponent.GetSensingAreaNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f3bd0
	float GetSearchRangeNative(char SpawnState, float ChangeSearchRange); // Function BattlePrototype.EnemyScriptComponent.GetSearchRangeNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f3b00
	float GetSearchAngleNative(char SpawnState, float ChangeSearchAngle); // Function BattlePrototype.EnemyScriptComponent.GetSearchAngleNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f3a30
	float GetSaveBodyEmissiveValue(int32_t Index); // Function BattlePrototype.EnemyScriptComponent.GetSaveBodyEmissiveValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f39a0
	struct FVector GetRestoreBrainFieldLocation(); // Function BattlePrototype.EnemyScriptComponent.GetRestoreBrainFieldLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x11f3970
	float GetParamTableResistance(enum class EEnemyDamageType DamageType); // Function BattlePrototype.EnemyScriptComponent.GetParamTableResistance // (Final|Native|Public|BlueprintCallable) // @ game+0x11f38e0
	float GetParamBasicAccumulation(enum class EEnemyDamageType DamageType); // Function BattlePrototype.EnemyScriptComponent.GetParamBasicAccumulation // (Final|Native|Public|BlueprintCallable) // @ game+0x11f3850
	enum class EEnemyFindPlayerType GetOldFindPlayerType(); // Function BattlePrototype.EnemyScriptComponent.GetOldFindPlayerType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3820
	float GetMoveAreaNative(); // Function BattlePrototype.EnemyScriptComponent.GetMoveAreaNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f37f0
	struct FSearchTestInfo GetMainPlayerSearchTestInfo(); // Function BattlePrototype.EnemyScriptComponent.GetMainPlayerSearchTestInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f37b0
	struct FSearchBasicInfo GetMainPlayerSearchBasicInfo(); // Function BattlePrototype.EnemyScriptComponent.GetMainPlayerSearchBasicInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3770
	bool GetIsDead_Native(); // Function BattlePrototype.EnemyScriptComponent.GetIsDead_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11f3740
	bool GetIsBattleMode_Native(); // Function BattlePrototype.EnemyScriptComponent.GetIsBattleMode_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11f3710
	void GetHitStopParam(struct FHCSkillCommonInfo skillInfo, bool IgnoreTarget, enum class HCHitStopCauseType CauseType); // Function BattlePrototype.EnemyScriptComponent.GetHitStopParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f3580
	float GetFindValue(); // Function BattlePrototype.EnemyScriptComponent.GetFindValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3550
	enum class EEnemyFindPlayerType GetFindPlayerType(); // Function BattlePrototype.EnemyScriptComponent.GetFindPlayerType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3520
	struct FVector GetEyePositionNative(struct FName EyeSocketName); // Function BattlePrototype.EnemyScriptComponent.GetEyePositionNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f3480
	struct FVector GetDamagePartDir(struct UDamagePartCollisionComponent* DamagePartCollisionComponent); // Function BattlePrototype.EnemyScriptComponent.GetDamagePartDir // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11f33e0
	float GetCoolDownTimerBP(int32_t Index); // Function BattlePrototype.EnemyScriptComponent.GetCoolDownTimerBP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3350
	float GetCaptureAreaNative(char SpawnState, float ChangeCaptureArea); // Function BattlePrototype.EnemyScriptComponent.GetCaptureAreaNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11f3280
	bool GetAndUpdateContinuousSameDamageReaction(); // Function BattlePrototype.EnemyScriptComponent.GetAndUpdateContinuousSameDamageReaction // (Final|Native|Public|BlueprintCallable) // @ game+0x11f3250
	struct FAiParamEnemyInfo GetAiTableDataNative(char actionEnum); // Function BattlePrototype.EnemyScriptComponent.GetAiTableDataNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11f3160
	void ForceSettingOutRangeFade(bool isDisp); // Function BattlePrototype.EnemyScriptComponent.ForceSettingOutRangeFade // (Final|Native|Public|BlueprintCallable) // @ game+0x11f30d0
	void FlyPawnSetActorAllTickEnabledNative(bool Enabled, struct AActor* FlyEnemyPawn, struct UActorComponent* DefaultSceneRoot, struct UActorComponent* FloatingPawnMovement, struct AActor* AIController, struct UActorComponent* PathFollowingComp); // Function BattlePrototype.EnemyScriptComponent.FlyPawnSetActorAllTickEnabledNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2f00
	void FlyHeightAdjust(float DeltaSeconds, float FlyBaseZ, bool IsFlyState, bool IsMoveAnim, bool FlyAdjust, float FlyLowerHeight, float FlyHighestHeight, float FlyAdjustSpeed, float AnyMoreDifferenceUpdate); // Function BattlePrototype.EnemyScriptComponent.FlyHeightAdjust // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2c60
	void EnableTickComponentWasRecording(); // Function BattlePrototype.EnemyScriptComponent.EnableTickComponentWasRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2c20
	void EnableLostAction(bool bEnable); // Function BattlePrototype.EnemyScriptComponent.EnableLostAction // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2b90
	bool EnableInvincible(bool Enable); // Function BattlePrototype.EnemyScriptComponent.EnableInvincible // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2b00
	void ClearSaveBodyEmissiveValue(); // Function BattlePrototype.EnemyScriptComponent.ClearSaveBodyEmissiveValue // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2ae0
	bool CheckUniqueObjState_CrashChanceCancel(bool IsBrainCrashAccess); // Function BattlePrototype.EnemyScriptComponent.CheckUniqueObjState_CrashChanceCancel // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2a50
	void CheckUniqueObjState_AddSkillExtraType(struct FHCHitResult HitResult, struct TArray<enum class HCSkillExtraType> SkillExtraType); // Function BattlePrototype.EnemyScriptComponent.CheckUniqueObjState_AddSkillExtraType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f28f0
	void CheckIgnoreSuperArmor(struct TArray<enum class HCSkillExtraType> SkillExtraTypes); // Function BattlePrototype.EnemyScriptComponent.CheckIgnoreSuperArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2810
	float CalcWeakAttackMaterialRate(float l_Value, float l_EmissivePowerValue, float WeakDamageMaterialTime, float WeakDamageMaterialScale, float WeakMaterialPointRateMax, float WeakMaterialEmissivePowerMax, struct UCurveFloat* WeakMaterialCurve, bool ChangingWeakDamageMaterial, bool IsWeakEffect, bool IsMultiWeak); // Function BattlePrototype.EnemyScriptComponent.CalcWeakAttackMaterialRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f24e0
	void CalcTickSecondsNative(float OutIntervalActorTime, bool OutExecTick, bool OutIncrementUpdateEnemy, float DeltaSec, enum class EEnemyTickPriorityType InTickPriority, bool InCanUpdateEnemy); // Function BattlePrototype.EnemyScriptComponent.CalcTickSecondsNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f2250
	bool CalcTickSeconds_Native(float DeltaSec); // Function BattlePrototype.EnemyScriptComponent.CalcTickSeconds_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2450
	void CalcTickNative(struct FVector InitPos, float EnableMoveArea, float EnableMoveHeight, bool IsHitCheck, float DistanceFromEnemyInitToPlayer, float HeightFromEnemyInitToPlayer, float DistanceFromEnemyToPlayer, float HeightFromEnemyToPlayer); // Function BattlePrototype.EnemyScriptComponent.CalcTickNative // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f1fa0
	struct ARSCharacterBase* CalcTargetInfo(float l_TargetDistance, float l_TargetHeight, float l_TargetAngle, bool InIsBattling, struct FVector InBaseLocation); // Function BattlePrototype.EnemyScriptComponent.CalcTargetInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11f1da0
	struct FSearchTestInfo CalcSearchTest(struct ARSCharacterBase* Target, struct FSearchBasicInfo basicInfo, float searchViewRange, float searchViewAngle, float searchSensingRange, float captureRange, float searchHeight); // Function BattlePrototype.EnemyScriptComponent.CalcSearchTest // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f1b50
	struct FSearchBasicInfo CalcSearchInfo(struct ARSCharacterBase* Target); // Function BattlePrototype.EnemyScriptComponent.CalcSearchInfo // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f1aa0
	void CalcNormalMaterialRate(float l_Value, float l_EmissivePowerValue, float WeakDamageMaterialTime, float NormalWeakMaterialScale, float NormalWeakMaterialRateMin, float NormalWeakMaterialRateMax, float NormalWeakMaterialEmissivePowerMin, float NormalWeakMaterialEmissivePowerMax, struct UCurveFloat* WeakMaterialCurve); // Function BattlePrototype.EnemyScriptComponent.CalcNormalMaterialRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f17d0
	float CalcFinalDamageByDefence(float BaseDamage); // Function BattlePrototype.EnemyScriptComponent.CalcFinalDamageByDefence // (Final|Native|Public|BlueprintCallable) // @ game+0x11f1740
	bool CalcAccumulationByDefence_CheckInvincible(float refWince, float refKnockback, float refDown, float refLaunch, float refFlame, float refElectric, float refFlooded, float refOil, float refConfusion, float refCrashScale); // Function BattlePrototype.EnemyScriptComponent.CalcAccumulationByDefence_CheckInvincible // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f13c0
	void CalcAccumulationByDefence(float refWince, float refKnockback, float refDown, float refCrashScale, float OutWince, float OutKnockback, float OutDown, float OutCrashScale, struct AActor* attackActor, bool IsEnemyDamageknockBack); // Function BattlePrototype.EnemyScriptComponent.CalcAccumulationByDefence // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f10a0
	void BrakeArmor(struct TArray<int32_t> ArmorPartsNo); // Function BattlePrototype.EnemyScriptComponent.BrakeArmor // (Final|Native|Public|BlueprintCallable) // @ game+0x11f0fc0
	void AddResetSecondRate(); // Function BattlePrototype.EnemyScriptComponent.AddResetSecondRate // (Final|Native|Public|BlueprintCallable) // @ game+0x11f0f80
	void AddBattleActor(bool IsNotAddedBattleManager); // Function BattlePrototype.EnemyScriptComponent.AddBattleActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11f0ef0
};

// Class BattlePrototype.EnemyScrollCheckComponent
// Size: 0x118 (Inherited: 0xd0)
struct UEnemyScrollCheckComponent : UEnemyAsyncTaskComponentBase {
	char pad_D0[0x48]; // 0xd0(0x48)

	void SetIntervalTime(float newIntervalTime); // Function BattlePrototype.EnemyScrollCheckComponent.SetIntervalTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3e50
	void SetFloorAngle(float newFloorAngle); // Function BattlePrototype.EnemyScrollCheckComponent.SetFloorAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff530
	void SetCheckPos(struct FVector StartPos, struct FVector EndPos); // Function BattlePrototype.EnemyScrollCheckComponent.SetCheckPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ec680
	bool IsHitScroll(); // Function BattlePrototype.EnemyScrollCheckComponent.IsHitScroll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ff0b0
	bool IsHitFloorOrCeiling(); // Function BattlePrototype.EnemyScrollCheckComponent.IsHitFloorOrCeiling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11feec0
	void EndScrollCheck(); // Function BattlePrototype.EnemyScrollCheckComponent.EndScrollCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11e3640
	void BeginScrollCheck(); // Function BattlePrototype.EnemyScrollCheckComponent.BeginScrollCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x11e8080
};

// Class BattlePrototype.EnemyWeaponBase
// Size: 0x338 (Inherited: 0x230)
struct AEnemyWeaponBase : AActor {
	char pad_230[0x38]; // 0x230(0x38)
	float mTotalDeltaSeconds; // 0x268(0x04)
	bool mbEnableSweep; // 0x26c(0x01)
	bool mbNotLineCheck; // 0x26d(0x01)
	char pad_26E[0x2]; // 0x26e(0x02)
	struct FVector mOldLocation; // 0x270(0x0c)
	struct FVector mTargetLocation; // 0x27c(0x0c)
	float mTargetDistance; // 0x288(0x04)
	float mTargetDistanceCheck; // 0x28c(0x04)
	enum class EEnemyWeaponMoveKind mMoveKind; // 0x290(0x01)
	char pad_291[0x3]; // 0x291(0x03)
	float mLifeTimer; // 0x294(0x04)
	struct FVector mInitLocation; // 0x298(0x0c)
	float mAdjustAngle; // 0x2a4(0x04)
	float mMaxCorrectAngleZ; // 0x2a8(0x04)
	float mAdjustFloorAngle; // 0x2ac(0x04)
	float mLimitAngleUp; // 0x2b0(0x04)
	float mLimitAngleDown; // 0x2b4(0x04)
	float mLimitAngleLR; // 0x2b8(0x04)
	float mAdjustAngleDistanceMax; // 0x2bc(0x04)
	float mAdjustAngleDistanceMin; // 0x2c0(0x04)
	float mLimitDistanceAdjustAngleUp; // 0x2c4(0x04)
	float mLimitDistanceAdjustAngleDown; // 0x2c8(0x04)
	bool mbNewCorrectDir; // 0x2cc(0x01)
	bool mWeaponActiveNative; // 0x2cd(0x01)
	bool mIsCurveTargetMove; // 0x2ce(0x01)
	char pad_2CF[0x1]; // 0x2cf(0x01)
	float mCurveTargetMoveSpeed; // 0x2d0(0x04)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct UCurveFloat* mCurveTargetMove; // 0x2d8(0x08)
	bool mIsHitCurveTargetMove; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	struct FVector mCommonMoveDir; // 0x2e4(0x0c)
	float mCommonMoveSpeed; // 0x2f0(0x04)
	float mCommonMoveGravity; // 0x2f4(0x04)
	float mProjectileGravityScale; // 0x2f8(0x04)
	bool mIsAnyHit; // 0x2fc(0x01)
	bool mbNotUseAttackCollision; // 0x2fd(0x01)
	bool mbHitPhysics; // 0x2fe(0x01)
	char pad_2FF[0x1]; // 0x2ff(0x01)
	float mPhysicsHalfHeightScale; // 0x300(0x04)
	float mPhysicsRadiusScale; // 0x304(0x04)
	struct FVector mPhysicsCollisionHitLocation; // 0x308(0x0c)
	bool mbDisableHitPhysics; // 0x314(0x01)
	char pad_315[0x3]; // 0x315(0x03)
	struct FRotator mPhysicsRotationOffset; // 0x318(0x0c)
	bool mbDisableUpdatePhysics; // 0x324(0x01)
	bool mbIsFloatObjectExist; // 0x325(0x01)
	bool mbDisablePhysicsCollision; // 0x326(0x01)
	char pad_327[0x11]; // 0x327(0x11)

	void UpdateTargetNative(bool BreakLostTarget, struct AActor* Target, struct AActor* attackOwner, float LifeTime); // Function BattlePrototype.EnemyWeaponBase.UpdateTargetNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fff60
	void UpdatePreviousLocations(); // Function BattlePrototype.EnemyWeaponBase.UpdatePreviousLocations // (Final|Native|Public|BlueprintCallable) // @ game+0x11fff40
	void UpdatePhysicsCollisionNative(float DeltaTime); // Function BattlePrototype.EnemyWeaponBase.UpdatePhysicsCollisionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffec0
	bool UpdateLifeTimeNative(bool InterceptReserve, float DeltaTime, float LifeTime); // Function BattlePrototype.EnemyWeaponBase.UpdateLifeTimeNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ffdb0
	void UpdateCurveTargetMoveNative(float DeltaTime); // Function BattlePrototype.EnemyWeaponBase.UpdateCurveTargetMoveNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffd30
	void UpdateCommonMoveNative(float DeltaTime); // Function BattlePrototype.EnemyWeaponBase.UpdateCommonMoveNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffcb0
	void UpdateAddIgnoreJustDodgeNative(float DeltaTime, float IgnoreJustDodgeTimer); // Function BattlePrototype.EnemyWeaponBase.UpdateAddIgnoreJustDodgeNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ffbd0
	void StartPhysicsCollisionNative(); // Function BattlePrototype.EnemyWeaponBase.StartPhysicsCollisionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffb00
	bool SetWeaponVisibilityNative(bool IsVisible); // Function BattlePrototype.EnemyWeaponBase.SetWeaponVisibilityNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff660
	void SetWeaponActiveNative(bool Active); // Function BattlePrototype.EnemyWeaponBase.SetWeaponActiveNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff5d0
	void SetTargetMoveEffectRotationNative(); // Function BattlePrototype.EnemyWeaponBase.SetTargetMoveEffectRotationNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff5b0
	void SetCurveTargetMoveInitNative(); // Function BattlePrototype.EnemyWeaponBase.SetCurveTargetMoveInitNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff510
	bool ProjectileHitProcessNative(bool IsHitPlayer, struct FVector HitLocation, struct FVector HitNormal); // Function BattlePrototype.EnemyWeaponBase.ProjectileHitProcessNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11ff3b0
	bool ProjectileHitProcess_FromNative(bool IsHitPlayer, struct FVector HitLocation, struct FVector HitNormal); // Function BattlePrototype.EnemyWeaponBase.ProjectileHitProcess_FromNative // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsWeaponActiveNative(); // Function BattlePrototype.EnemyWeaponBase.IsWeaponActiveNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ff210
	void IsHitLineCheckNative(struct FVector StartLocation, struct FVector EndLocation, bool IsAnyHit, struct FHitResult HitResult); // Function BattlePrototype.EnemyWeaponBase.IsHitLineCheckNative // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x11feef0
	bool IsHitFloorNative(struct FVector Normal); // Function BattlePrototype.EnemyWeaponBase.IsHitFloorNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fee20
	void InitPreviousLocations(struct FVector InitLocation); // Function BattlePrototype.EnemyWeaponBase.InitPreviousLocations // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11feb40
	void InitializePhysicsCollisionNative(); // Function BattlePrototype.EnemyWeaponBase.InitializePhysicsCollisionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fee00
	void InitializeNative(struct UProjectileMovementComponent* ProjectileMovement, struct UHitCheckComponent* HitCheck, struct USphereComponent* AttackCollision, struct UCapsuleComponent* AttackCollisionCapsule, struct URSParticleSystemComponentBase* RSParticleSystem, struct USkeletalMeshComponent* BulletMesh, struct UCapsuleComponent* PhysicsCollision); // Function BattlePrototype.EnemyWeaponBase.InitializeNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fec00
	void InitCommonMovewithGravityNative(struct FVector InitPos, struct FVector MoveDir, float MoveSpeed, float Gravity, bool noTargetMove); // Function BattlePrototype.EnemyWeaponBase.InitCommonMovewithGravityNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fe9a0
	void InitCommonMoveNative(struct FVector InitPos, struct FVector MoveDir, float MoveSpeed, bool noTargetMove); // Function BattlePrototype.EnemyWeaponBase.InitCommonMoveNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fe810
	void HitPhysicsCollisionNative(struct FVector HitLocation); // Function BattlePrototype.EnemyWeaponBase.HitPhysicsCollisionNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fe780
	void HitCurveMoveTargetNative(struct FVector HitLocation, struct FVector HitNormal); // Function BattlePrototype.EnemyWeaponBase.HitCurveMoveTargetNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fe6a0
	bool HitAfterCurveMoveTarget_FromNative(struct FVector HitLocation, struct FVector HitNormal); // Function BattlePrototype.EnemyWeaponBase.HitAfterCurveMoveTarget_FromNative // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float GetTargetDistanceNative(); // Function BattlePrototype.EnemyWeaponBase.GetTargetDistanceNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11fe670
	struct FVector GetLocationTwoFrameAgo(); // Function BattlePrototype.EnemyWeaponBase.GetLocationTwoFrameAgo // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fe630
	struct UHitCheckComponent* GetHitCheckComponent_FromNative(); // Function BattlePrototype.EnemyWeaponBase.GetHitCheckComponent_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct AActor* GetAttackOwnerTargetCharaNative(); // Function BattlePrototype.EnemyWeaponBase.GetAttackOwnerTargetCharaNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UPrimitiveComponent* GetAttackCollisionPrimitiveNative(bool IsSphere); // Function BattlePrototype.EnemyWeaponBase.GetAttackCollisionPrimitiveNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fe500
	void EndPhysicsCollisionNative(); // Function BattlePrototype.EnemyWeaponBase.EndPhysicsCollisionNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fe4c0
	void EndHomingNative(); // Function BattlePrototype.EnemyWeaponBase.EndHomingNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fe4a0
	void EndCurveTargetMove_FromNative(float sec); // Function BattlePrototype.EnemyWeaponBase.EndCurveTargetMove_FromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector CorrectBulletDirectionNative(struct FVector FireLocation, struct FVector TargetLocation, struct FVector FireForwardVector, float AbsoluteAngleZ, float MaxAngleZ, float Speed); // Function BattlePrototype.EnemyWeaponBase.CorrectBulletDirectionNative // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x11fe290
	void AttackCollisionEndNative(bool IsVisible); // Function BattlePrototype.EnemyWeaponBase.AttackCollisionEndNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fdd70
	void AddIgnoreJustDodgeNative(); // Function BattlePrototype.EnemyWeaponBase.AddIgnoreJustDodgeNative // (Final|Native|Public|BlueprintCallable) // @ game+0x11fdd50
};

// Class BattlePrototype.EventAsset
// Size: 0x60 (Inherited: 0x28)
struct UEventAsset : UObject {
	int32_t ID; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct FSoftObjectPath FilePath; // 0x30(0x18)
	struct UObject* Asset; // 0x48(0x08)
	char pad_50[0x10]; // 0x50(0x10)

	void Release(); // Function BattlePrototype.EventAsset.Release // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff4f0
	void OnFinishLoad(); // Function BattlePrototype.EventAsset.OnFinishLoad // (Final|Native|Public) // @ game+0x11ff390
	bool IsLoaded(); // Function BattlePrototype.EventAsset.IsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ff0e0
	struct UObject* GetAsset(); // Function BattlePrototype.EventAsset.GetAsset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11fe4e0
};

// Class BattlePrototype.EventAssetPoolComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UEventAssetPoolComponent : UActorComponent {
	struct TArray<struct UEventAsset*> Assets; // 0xc0(0x10)
	char pad_D0[0x8]; // 0xd0(0x08)

	bool UnloadAsset(int32_t HandleId); // Function BattlePrototype.EventAssetPoolComponent.UnloadAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffb40
	void UnloadAll(); // Function BattlePrototype.EventAssetPoolComponent.UnloadAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffb20
	struct UEventAsset* LoadAsset(struct FString Path, bool Async); // Function BattlePrototype.EventAssetPoolComponent.LoadAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff230
	bool IsLoadedAll(); // Function BattlePrototype.EventAssetPoolComponent.IsLoadedAll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ff1e0
	bool IsLoaded(int32_t HandleId); // Function BattlePrototype.EventAssetPoolComponent.IsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ff150
	struct UEventAsset* GetHandle(int32_t HandleId); // Function BattlePrototype.EventAssetPoolComponent.GetHandle // (Final|Native|Public|BlueprintCallable) // @ game+0x11fe5a0
};

// Class BattlePrototype.EventCableMeshOptionBase
// Size: 0x238 (Inherited: 0x230)
struct AEventCableMeshOptionBase : AActor {
	struct USkeletalMeshComponent* parentSkeletalMesh_; // 0x230(0x08)

	bool SetAnimation(); // Function BattlePrototype.EventCableMeshOptionBase.SetAnimation // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool Initialize(); // Function BattlePrototype.EventCableMeshOptionBase.Initialize // (Final|Native|Protected|BlueprintCallable) // @ game+0x11febd0
	bool GetParent(); // Function BattlePrototype.EventCableMeshOptionBase.GetParent // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CalcSASCodeSocketWorldTransforms(struct TArray<struct FName> SocketNames, struct TMap<struct FName, struct FTransform> outSocketLocations); // Function BattlePrototype.EventCableMeshOptionBase.CalcSASCodeSocketWorldTransforms // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x11fdec0
	struct FTransform CalcSASCodeSocketWorldTransform(struct FName SocketName); // Function BattlePrototype.EventCableMeshOptionBase.CalcSASCodeSocketWorldTransform // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x11fde00
	bool AttachToPlayerSocket(); // Function BattlePrototype.EventCableMeshOptionBase.AttachToPlayerSocket // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.EventCaptureActorBase
// Size: 0x238 (Inherited: 0x230)
struct AEventCaptureActorBase : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)

	void StoreSequencerInGameTransform(struct ULevelSequence* Sequnece, float SequencePosition); // Function BattlePrototype.EventCaptureActorBase.StoreSequencerInGameTransform // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetupHighResDOF(struct URSSceneCaptureComponent2D* SceneCapture, float ScaleX); // Function BattlePrototype.EventCaptureActorBase.SetupHighResDOF // (Final|Native|Public|BlueprintCallable) // @ game+0x11ffa30
	void SetupAlphaSortNative2(struct ACharacter* ChildStaticPl, struct URSParticleSystemComponentBase* CurrentFrameParticle, struct URSParticleSystemComponentBase* CurrentFrameTelepathyParticle, struct URSParticleSystemComponentBase* CurrentFrameOverTelepathyParticle); // Function BattlePrototype.EventCaptureActorBase.SetupAlphaSortNative2 // (Final|Native|Public|BlueprintCallable) // @ game+0x11ff6f0
	void SetupAlphaSortNative(int32_t Priority, struct TArray<struct UPrimitiveComponent*> BackTargetPrimitiveComps, struct TArray<struct UPrimitiveComponent*> TargetPrimitiveComps, struct TArray<struct UPrimitiveComponent*> FrontTargetPrimitiveComps, struct USkeletalMeshComponent* ChildMesh); // Function BattlePrototype.EventCaptureActorBase.SetupAlphaSortNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11ff840
	void SetEffectScale(float Scale); // Function BattlePrototype.EventCaptureActorBase.SetEffectScale // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEffectMove(struct FVector2D Offset); // Function BattlePrototype.EventCaptureActorBase.SetEffectMove // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEffectAlpha(float Alpha); // Function BattlePrototype.EventCaptureActorBase.SetEffectAlpha // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SequenceScale(float Time, float Start, float End, struct UCurveFloat* Curve, bool Loop); // Function BattlePrototype.EventCaptureActorBase.SequenceScale // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SequenceMove(float Time, struct FVector2D Start, struct FVector2D End, struct UCurveFloat* Curve, bool Loop); // Function BattlePrototype.EventCaptureActorBase.SequenceMove // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SequenceAlpha(float Time, float Start, float End, struct UCurveFloat* Curve, bool Loop); // Function BattlePrototype.EventCaptureActorBase.SequenceAlpha // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CheckPlMaterialType(struct ACharacter* ChildStaticPl, enum class EEventPlMaterialType Type, bool Change); // Function BattlePrototype.EventCaptureActorBase.CheckPlMaterialType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11fe170
	void ChangePlMaterial(struct ACharacter* ChildStaticPl, struct UMaterialInterface* Source, enum class EEventPlMaterialType Type); // Function BattlePrototype.EventCaptureActorBase.ChangePlMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x11fe070
};

// Class BattlePrototype.EventCelLookLightBase
// Size: 0x230 (Inherited: 0x230)
struct AEventCelLookLightBase : AActor {

	bool IsEditorTimelineSetup(); // Function BattlePrototype.EventCelLookLightBase.IsEditorTimelineSetup // (Final|Native|Public|BlueprintCallable) // @ game+0x11b48c0
};

// Class BattlePrototype.EventFacialCaptureRenderFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UEventFacialCaptureRenderFunctionLibrary : UBlueprintFunctionLibrary {

	void ConvertEventFacialCaptureRenderSettingsToMaterialParameters(struct FEventFacialCaptureRenderSettings Setting, struct TArray<struct FName> ParameterNames, struct TArray<float> ParameterValues); // Function BattlePrototype.EventFacialCaptureRenderFunctionLibrary.ConvertEventFacialCaptureRenderSettingsToMaterialParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1203fb0
	struct FEventFacialCaptureRenderSettings AddEventFacialCaptureRenderSettings(struct FEventFacialCaptureRenderSettings BaseSetting, struct FEventFacialCaptureRenderSettings OverrideSetting); // Function BattlePrototype.EventFacialCaptureRenderFunctionLibrary.AddEventFacialCaptureRenderSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1203730
};

// Class BattlePrototype.EventInterface
// Size: 0x28 (Inherited: 0x28)
struct UEventInterface : UInterface {

	bool TalkEventStart(); // Function BattlePrototype.EventInterface.TalkEventStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool TalkEventEnd(bool isRestoreTransform); // Function BattlePrototype.EventInterface.TalkEventEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StopEventAnimMontage(struct UAnimMontage* AnimMontage); // Function BattlePrototype.EventInterface.StopEventAnimMontage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StaticEventStart(); // Function BattlePrototype.EventInterface.StaticEventStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StaticEventEnd(bool isRestoreTransform); // Function BattlePrototype.EventInterface.StaticEventEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetShadowOffsetTexture(struct UTexture2D* Texture); // Function BattlePrototype.EventInterface.SetShadowOffsetTexture // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetShadowOffsetMapID(enum class EMaterialShadowOffsetID ShadowOffsetID); // Function BattlePrototype.EventInterface.SetShadowOffsetMapID // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetHoodVisible(bool Visible); // Function BattlePrototype.EventInterface.SetHoodVisible // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEventVisible(bool Visible); // Function BattlePrototype.EventInterface.SetEventVisible // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetShadowOffset(); // Function BattlePrototype.EventInterface.ResetShadowOffset // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlayEventAnimMontage(struct UAnimMontage* AnimMontage, struct FName Section, float InPlayRate); // Function BattlePrototype.EventInterface.PlayEventAnimMontage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEndEventAnimMontage(struct UAnimMontage* AnimMontage); // Function BattlePrototype.EventInterface.IsEndEventAnimMontage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EventStart(); // Function BattlePrototype.EventInterface.EventStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EventPhysicsIdling(float IdlingSec, float IdleRestoreDelay); // Function BattlePrototype.EventInterface.EventPhysicsIdling // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EventEnd(); // Function BattlePrototype.EventInterface.EventEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DynamicEventStart(); // Function BattlePrototype.EventInterface.DynamicEventStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DynamicEventEnd(bool isRestoreTransform); // Function BattlePrototype.EventInterface.DynamicEventEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DynamicEventBeforeBindCharacter(); // Function BattlePrototype.EventInterface.DynamicEventBeforeBindCharacter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool BattleSequencerStart(bool isSetEnemyEvent, bool bDriveSequence); // Function BattlePrototype.EventInterface.BattleSequencerStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool BattleSequencerEnd(bool isRestoreTransform, bool isSetEnemyEvent, bool bDriveSequence); // Function BattlePrototype.EventInterface.BattleSequencerEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.StaticCameraControlDataParam
// Size: 0x40 (Inherited: 0x30)
struct UStaticCameraControlDataParam : UDataAsset {
	float CameraInterpSpeed; // 0x30(0x04)
	bool IsEnableEaseInOut; // 0x34(0x01)
	char pad_35[0x3]; // 0x35(0x03)
	float EaseInOutExp; // 0x38(0x04)
	float MaxRotate; // 0x3c(0x04)
};

// Class BattlePrototype.EventManager
// Size: 0x330 (Inherited: 0x230)
struct AEventManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	int32_t ProgressId; // 0x238(0x04)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FName StoreOwnerShipExternalActorTag; // 0x240(0x08)
	bool IsInvalidFade; // 0x248(0x01)
	bool IsSkipEvent; // 0x249(0x01)
	bool IsCutSceneCalledSkipEvent; // 0x24a(0x01)
	bool IsCurrentSkipFadeOut; // 0x24b(0x01)
	bool IsCurrentTalkEvent; // 0x24c(0x01)
	bool IsForceBrainTalkMode; // 0x24d(0x01)
	char pad_24E[0x2]; // 0x24e(0x02)
	float StaticEventSoundPressure; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct TArray<struct ARSCharaAnimationAccessor*> CharaAnimationAccessorArray; // 0x258(0x10)
	int32_t m_StoreUnControlMgrFlags; // 0x268(0x04)
	bool IsDisableDynamicResInStaticCutScene; // 0x26c(0x01)
	bool IsStoreSequencerInGameTransformEvent; // 0x26d(0x01)
	char pad_26E[0x2]; // 0x26e(0x02)
	struct FMulticastInlineDelegate OnStartCutSceneNative; // 0x270(0x10)
	struct FMulticastInlineDelegate OnEndCutSceneNative; // 0x280(0x10)
	struct FMulticastInlineDelegate OnBeforeChangeProgressIDNative; // 0x290(0x10)
	struct FMulticastInlineDelegate OnAfterChangeProgressIDNative; // 0x2a0(0x10)
	struct URSParticleSystemComponentBase* StaticCutsceneBG; // 0x2b0(0x08)
	struct ARSLevelSequenceActor* Sequencer; // 0x2b8(0x08)
	struct FString m_messageTableName; // 0x2c0(0x10)
	struct TArray<struct AActor*> MakeEventActorArray; // 0x2d0(0x10)
	char pad_2E0[0x10]; // 0x2e0(0x10)
	struct TArray<struct FArrayOfMID> CapturePPMStatic; // 0x2f0(0x10)
	struct TArray<struct FArrayOfMID> CapturePPMDynamic; // 0x300(0x10)
	struct TArray<struct UMaterialInterface*> m_PreLoadPPMList; // 0x310(0x10)
	char pad_320[0x10]; // 0x320(0x10)

	void WaitSequencerSetting(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.EventManager.WaitSequencerSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x12055c0
	void UpdateFacialNormalNative(struct TArray<struct AActor*> TargetSkelMeshActors, bool bUseCache); // Function BattlePrototype.EventManager.UpdateFacialNormalNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12054c0
	void UnloadPPMNative(enum class EEventPostProcessID EventPostProcessID); // Function BattlePrototype.EventManager.UnloadPPMNative // (Final|Native|Public|BlueprintCallable) // @ game+0x1205440
	void SubMakeEventActorArray(struct AActor* Actor); // Function BattlePrototype.EventManager.SubMakeEventActorArray // (Final|Native|Public|BlueprintCallable) // @ game+0x12052f0
	void StartTalkEvent(); // Function BattlePrototype.EventManager.StartTalkEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartEventFinishWaitMode_AfterCounter(); // Function BattlePrototype.EventManager.StartEventFinishWaitMode_AfterCounter // (Final|Native|Public|BlueprintCallable) // @ game+0x12052d0
	void StartDynamicCutsceneFromAsset(struct ULevelSequence* Sequence, bool IsSeamlessInGame); // Function BattlePrototype.EventManager.StartDynamicCutsceneFromAsset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1205200
	void StartDynamicCutscene(struct FString CutsceneName); // Function BattlePrototype.EventManager.StartDynamicCutscene // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1205160
	struct AActor* SpawnActorNative(struct UObject* ActorAsset, struct FText BindingName); // Function BattlePrototype.EventManager.SpawnActorNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1205040
	struct AActor* SpawnActorFromBP(struct UBlueprint* ActorAsset, struct FText BindingName); // Function BattlePrototype.EventManager.SpawnActorFromBP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1204f20
	struct AActor* SpawnActorEvent(struct UObject* ActorAsset, bool IsPersistant); // Function BattlePrototype.EventManager.SpawnActorEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1204e50
	void SetupPrestreamTextures(struct AActor* MakeEventActor, struct TArray<struct UTexture2D*> OutSetupTextures); // Function BattlePrototype.EventManager.SetupPrestreamTextures // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1204d60
	void SetSequenceEnd(); // Function BattlePrototype.EventManager.SetSequenceEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetProgressIDNative(int32_t ProgressId); // Function BattlePrototype.EventManager.SetProgressIDNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetPPMAsset(enum class EEventPostProcessID EventPostProcessID, struct TArray<struct TSoftObjectPtr<UMaterialInterface>> Assets, struct FName ResetParamName, float ResetParamValue); // Function BattlePrototype.EventManager.SetPPMAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1204bc0
	void setMessageTableName(struct FString TableName); // Function BattlePrototype.EventManager.setMessageTableName // (Final|Native|Public|BlueprintCallable) // @ game+0x12056e0
	void ResetPrestreamTextures(struct TArray<struct UTexture2D*> SetupTextures); // Function BattlePrototype.EventManager.ResetPrestreamTextures // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1204b10
	void PreLoadPPMResident(struct TArray<enum class EEventPostProcessID> EventPostProcessIDList); // Function BattlePrototype.EventManager.PreLoadPPMResident // (Final|Native|Public|BlueprintCallable) // @ game+0x1204a30
	void PreLoadPPM(enum class EEventPostProcessID EventPostProcessID, struct TArray<struct UMaterialInterface*> outPPMList); // Function BattlePrototype.EventManager.PreLoadPPM // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1204940
	bool OnWaitInputFinishEvent(); // Function BattlePrototype.EventManager.OnWaitInputFinishEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnSkipInput(); // Function BattlePrototype.EventManager.OnSkipInput // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnChangeSoundPressure(float soundPressure); // Function BattlePrototype.EventManager.OnChangeSoundPressure // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void IsWorldMapShowDestinationForAreaName2Native(int32_t LocationId, int32_t areaId, int32_t PortalID, char ShowType, struct UDatabaseManager* DatabaseManager, bool IsProgressBondsEpisode, struct UUserParamManager* UserParamManager, bool IsShow, int32_t VisibleWeight); // Function BattlePrototype.EventManager.IsWorldMapShowDestinationForAreaName2Native // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12046a0
	bool IsWaitSequencerCaptureBG(); // Function BattlePrototype.EventManager.IsWaitSequencerCaptureBG // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsVisibleCharaNameForProgressID(enum class EPlayerID playerId); // Function BattlePrototype.EventManager.IsVisibleCharaNameForProgressID // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void IsValidEventCommandTypeFromNative(enum class EEventTriggerCheckType EventCommandType, bool CheckBrainTalkEvent, bool IsValid); // Function BattlePrototype.EventManager.IsValidEventCommandTypeFromNative // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	bool IsTalkEvent(); // Function BattlePrototype.EventManager.IsTalkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1204680
	bool IsPlayingNewStaticPhaseAnimation(); // Function BattlePrototype.EventManager.IsPlayingNewStaticPhaseAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsPlayingNewStaticBaseAnimation(); // Function BattlePrototype.EventManager.IsPlayingNewStaticBaseAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsPlayBeforeBoardAnimation(); // Function BattlePrototype.EventManager.IsPlayBeforeBoardAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsNowSettingSeqCaptureBrainMes(); // Function BattlePrototype.EventManager.IsNowSettingSeqCaptureBrainMes // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsLoadingMakeEventAsset(); // Function BattlePrototype.EventManager.IsLoadingMakeEventAsset // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsFadeAnimation(); // Function BattlePrototype.EventManager.IsFadeAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isEndPostProcessSequencer(); // Function BattlePrototype.EventManager.isEndPostProcessSequencer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118ac80
	bool isEndDynamicCutscene(); // Function BattlePrototype.EventManager.isEndDynamicCutscene // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118a6d0
	bool IsEmptySeqCaptureFuncList(); // Function BattlePrototype.EventManager.IsEmptySeqCaptureFuncList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCutSceneEventNative(); // Function BattlePrototype.EventManager.IsCutSceneEventNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCurrentZeroEP(); // Function BattlePrototype.EventManager.IsCurrentZeroEP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCurrentEventOffSkipEndFade(); // Function BattlePrototype.EventManager.IsCurrentEventOffSkipEndFade // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCurrentCreditEvent(); // Function BattlePrototype.EventManager.IsCurrentCreditEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FArrayOfMID GetOrLoadPPMStatic(enum class EEventPostProcessID EventPostProcessID, bool Load); // Function BattlePrototype.EventManager.GetOrLoadPPMStatic // (Final|Native|Public|BlueprintCallable) // @ game+0x12045b0
	struct FArrayOfMID GetOrLoadPPMDynamic(enum class EEventPostProcessID EventPostProcessID, bool Load); // Function BattlePrototype.EventManager.GetOrLoadPPMDynamic // (Final|Native|Public|BlueprintCallable) // @ game+0x12044e0
	struct FString getMessageTableName(); // Function BattlePrototype.EventManager.getMessageTableName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12056b0
	int32_t GetMakeEventActorArrayNum(); // Function BattlePrototype.EventManager.GetMakeEventActorArrayNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1164800
	struct TArray<struct AActor*> GetMakeEventActorArray(); // Function BattlePrototype.EventManager.GetMakeEventActorArray // (Final|Native|Public|BlueprintCallable) // @ game+0x1204420
	struct TArray<struct FString> GetLoadedAndLoadingMakeEventPathList(); // Function BattlePrototype.EventManager.GetLoadedAndLoadingMakeEventPathList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t GetCurrentChapterID(); // Function BattlePrototype.EventManager.GetCurrentChapterID // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12043f0
	struct AEventCaptureActorBase* GetCaptureActorBase(int32_t Index); // Function BattlePrototype.EventManager.GetCaptureActorBase // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UEventAssetPoolComponent* GetAssetPool(); // Function BattlePrototype.EventManager.GetAssetPool // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void FinishSequencer(); // Function BattlePrototype.EventManager.FinishSequencer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EventAllManagerStart(bool TickEnable, bool Visibility); // Function BattlePrototype.EventManager.EventAllManagerStart // (Final|Native|Public|BlueprintCallable) // @ game+0x1204320
	void EventAllManagerEnd(bool RestoreTickEnable, bool RestoreVisibility); // Function BattlePrototype.EventManager.EventAllManagerEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1204250
	void EndWork(); // Function BattlePrototype.EventManager.EndWork // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndTalkEvent(); // Function BattlePrototype.EventManager.EndTalkEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EnableEventUnControlMgrFlag(enum class EEventUnControlManagerType UnControlMgrType); // Function BattlePrototype.EventManager.EnableEventUnControlMgrFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12041c0
	void ClearSequencerInCharacter(); // Function BattlePrototype.EventManager.ClearSequencerInCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1203f90
	void ClearFacialNormalCache(); // Function BattlePrototype.EventManager.ClearFacialNormalCache // (Final|Native|Public|BlueprintCallable) // @ game+0x1203f70
	bool CheckScenarioFlagListC(struct TArray<struct FShowDestinationFlgCheck> FlgCheckList); // Function BattlePrototype.EventManager.CheckScenarioFlagListC // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1203eb0
	bool CheckProgressID(int32_t MinProgressID, int32_t MaxProgressID); // Function BattlePrototype.EventManager.CheckProgressID // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1203de0
	void CheckAndSetTalkEventPlayerRipSync(struct FString messageLabel, struct URSAtomComponentBase* pAtomComponent); // Function BattlePrototype.EventManager.CheckAndSetTalkEventPlayerRipSync // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ChangeSpeakerToVoice(struct URSAtomComponentBase* Voice); // Function BattlePrototype.EventManager.ChangeSpeakerToVoice // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CallStartCutSceneNative(); // Function BattlePrototype.EventManager.CallStartCutSceneNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x1203dc0
	void CallEndCutSceneNative(); // Function BattlePrototype.EventManager.CallEndCutSceneNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x1203da0
	void CallBeforeChangeProgressIDNative(); // Function BattlePrototype.EventManager.CallBeforeChangeProgressIDNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x1203d80
	void CallAfterChangeProgressIDNative(); // Function BattlePrototype.EventManager.CallAfterChangeProgressIDNative // (Final|Native|Protected|BlueprintCallable) // @ game+0x1203d60
	void BindingActorNative(struct FName ActorTag, struct FText BindingName); // Function BattlePrototype.EventManager.BindingActorNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1203c30
	void BeforeChangeProgressID(); // Function BattlePrototype.EventManager.BeforeChangeProgressID // (Final|Native|Public|BlueprintCallable) // @ game+0x1203c10
	void AfterChangeProgressID(); // Function BattlePrototype.EventManager.AfterChangeProgressID // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void AddMessageVoiceRipSyncInfoList(struct URSAtomComponentBase* AtomComp, struct FName RipSyncBoardJointID); // Function BattlePrototype.EventManager.AddMessageVoiceRipSyncInfoList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void AddMakeEventActorArray(struct AActor* Actor); // Function BattlePrototype.EventManager.AddMakeEventActorArray // (Final|Native|Public|BlueprintCallable) // @ game+0x1203b50
};

// Class BattlePrototype.EventManagerInterface
// Size: 0x28 (Inherited: 0x28)
struct UEventManagerInterface : UInterface {

	bool EventManagerStart(bool EnableTick, bool Visibility); // Function BattlePrototype.EventManagerInterface.EventManagerStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EventManagerEnd(bool RestoreEnableTick, bool RestoreVisibility); // Function BattlePrototype.EventManagerInterface.EventManagerEnd // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.EventSkeletalMeshSoft
// Size: 0x2b8 (Inherited: 0x2b8)
struct AEventSkeletalMeshSoft : ASkeletalMeshActor {

	void SetDummyMesh(struct USkeletalMesh* InMesh); // Function BattlePrototype.EventSkeletalMeshSoft.SetDummyMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
};

// Class BattlePrototype.EventSplineMovePoint
// Size: 0x238 (Inherited: 0x230)
struct AEventSplineMovePoint : AActor {
	struct USplineComponent* SplineComponent; // 0x230(0x08)
};

// Class BattlePrototype.EventSwitchPlayer
// Size: 0x2c8 (Inherited: 0x2b8)
struct AEventSwitchPlayer : ASkeletalMeshActor {
	struct TArray<struct TSoftObjectPtr<USkeletalMesh>> Meshes; // 0x2b8(0x10)

	void SetDummyMesh(struct USkeletalMesh* InMesh); // Function BattlePrototype.EventSwitchPlayer.SetDummyMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
	void ResetMesh(); // Function BattlePrototype.EventSwitchPlayer.ResetMesh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.ExporterBase
// Size: 0x240 (Inherited: 0x230)
struct AExporterBase : AActor {
	enum class EExporterType exporterType; // 0x230(0x01)
	char pad_231[0xf]; // 0x231(0x0f)

	void StartExportShowDestination(); // Function BattlePrototype.ExporterBase.StartExportShowDestination // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x11d9280
	void StartExportInternal(); // Function BattlePrototype.ExporterBase.StartExportInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x120a230
	void LoopExportShowDestination(int32_t LocationId, int32_t areaId); // Function BattlePrototype.ExporterBase.LoopExportShowDestination // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x12097e0
	void ExecExportInternal(int32_t LocationId, int32_t areaId); // Function BattlePrototype.ExporterBase.ExecExportInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x12089d0
	void EndExportShowDestination(); // Function BattlePrototype.ExporterBase.EndExportShowDestination // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1174080
	void EndExportInternal(); // Function BattlePrototype.ExporterBase.EndExportInternal // (Final|Native|Public|BlueprintCallable) // @ game+0x12089b0
};

// Class BattlePrototype.ExporterArg
// Size: 0x28 (Inherited: 0x28)
struct UExporterArg : UObject {

	void SetStartAutoExporter(bool isStartAuto); // Function BattlePrototype.ExporterArg.SetStartAutoExporter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x118f0a0
	bool IsStartAutoExporter(); // Function BattlePrototype.ExporterArg.IsStartAutoExporter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7b7230
};

// Class BattlePrototype.ExtendableArrowComponent
// Size: 0x420 (Inherited: 0x420)
struct UExtendableArrowComponent : UArrowComponent {
};

// Class BattlePrototype.FaintConditionComponent
// Size: 0x190 (Inherited: 0x160)
struct UFaintConditionComponent : UConditionComponent {
	float _faintSec; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct UParticleSystem* _pFaintEffect; // 0x168(0x08)
	struct UParticleSystemComponent* _pEffectComp; // 0x170(0x08)
	char pad_178[0x18]; // 0x178(0x18)
};

// Class BattlePrototype.FallFloorAnimInstance
// Size: 0x290 (Inherited: 0x270)
struct UFallFloorAnimInstance : UAnimInstance {
	char pad_270[0x8]; // 0x270(0x08)
	bool IsBreakAll; // 0x278(0x01)
	bool IsRemovedAnyBlock; // 0x279(0x01)
	char pad_27A[0x6]; // 0x27a(0x06)
	struct TArray<struct FVector> BoneScales; // 0x280(0x10)
};

// Class BattlePrototype.FallFloorAnimInstanceInterface
// Size: 0x28 (Inherited: 0x28)
struct UFallFloorAnimInstanceInterface : UInterface {

	bool SetLaserDamage(); // Function BattlePrototype.FallFloorAnimInstanceInterface.SetLaserDamage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184400
	bool RemoveBlock(int32_t BlockNo); // Function BattlePrototype.FallFloorAnimInstanceInterface.RemoveBlock // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1209bc0
	bool AppearBlock(int32_t BlockNo); // Function BattlePrototype.FallFloorAnimInstanceInterface.AppearBlock // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1208580
};

// Class BattlePrototype.FinishMoveActor
// Size: 0x2c0 (Inherited: 0x230)
struct AFinishMoveActor : AActor {
	enum class RSPartyPlayerKind targetPartyType_; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
	struct FString targetSocketName_; // 0x238(0x10)
	float zoomParam_; // 0x248(0x04)
	float targetLocationInterpolation_; // 0x24c(0x04)
	float targetFOVInterpolation_; // 0x250(0x04)
	float cameraLocationInterpolation_; // 0x254(0x04)
	struct ACameraActor* finishMoveCamera_; // 0x258(0x08)
	float sequenceRate_; // 0x260(0x04)
	char pad_264[0x4]; // 0x264(0x04)
	struct UCameraComponent* gameCameraComponet_; // 0x268(0x08)
	struct ACameraActor* gameCameraActor_; // 0x270(0x08)
	bool isLookingForEnemy_; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	struct FVector enemyLocation_; // 0x27c(0x0c)
	char pad_288[0x24]; // 0x288(0x24)
	struct FRotator cameraRotatBeforeSwitch_; // 0x2ac(0x0c)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void SlowSpeedEventEnd(); // Function BattlePrototype.FinishMoveActor.SlowSpeedEventEnd // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174080
	void SlowSpeedEvent(); // Function BattlePrototype.FinishMoveActor.SlowSpeedEvent // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174060
	void SetCameraTick(bool bActivate); // Function BattlePrototype.FinishMoveActor.SetCameraTick // (Final|Native|Public|BlueprintCallable) // @ game+0x1209d00
	struct FVector GetBeforeLocation(); // Function BattlePrototype.FinishMoveActor.GetBeforeLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1208c10
	void FinishMoveUpdate(); // Function BattlePrototype.FinishMoveActor.FinishMoveUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1208bd0
	void FinishMoveBegin(bool isChangeBeforeData, struct FVector beforePos, float beforeFOV); // Function BattlePrototype.FinishMoveActor.FinishMoveBegin // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1208a90
};

// Class BattlePrototype.FinishMoveActorManager
// Size: 0x280 (Inherited: 0x230)
struct AFinishMoveActorManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct AActor* fmActor_; // 0x238(0x08)
	bool isCallingEffectFinish_; // 0x240(0x01)
	char pad_241[0xf]; // 0x241(0x0f)
	struct ARSLevelSequenceActor* rsLevelSequencer_; // 0x250(0x08)
	char pad_258[0x18]; // 0x258(0x18)
	struct FString sequencePath_; // 0x270(0x10)

	void SpawnAndSwapFinishMoveActor(); // Function BattlePrototype.FinishMoveActorManager.SpawnAndSwapFinishMoveActor // (Final|Native|Public|BlueprintCallable) // @ game+0x120a210
	void SetSequencePlayRate(float NewRate); // Function BattlePrototype.FinishMoveActorManager.SetSequencePlayRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1209ff0
	void RotateCameraYawAfterEvent(float rotYaw); // Function BattlePrototype.FinishMoveActorManager.RotateCameraYawAfterEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1209c80
	void RestartFinishMoveSequence(); // Function BattlePrototype.FinishMoveActorManager.RestartFinishMoveSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1209c60
	bool RestartFinishMove(); // Function BattlePrototype.FinishMoveActorManager.RestartFinishMove // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PauseFinishMoveSequence(); // Function BattlePrototype.FinishMoveActorManager.PauseFinishMoveSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1209ba0
	bool PauseFinishMove(); // Function BattlePrototype.FinishMoveActorManager.PauseFinishMove // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float GetSequenceRate(); // Function BattlePrototype.FinishMoveActorManager.GetSequenceRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1208c40
	void FinishMoveUpdate(); // Function BattlePrototype.FinishMoveActorManager.FinishMoveUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x1208bf0
	void FinishMoveEnd(); // Function BattlePrototype.FinishMoveActorManager.FinishMoveEnd // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174080
	void FinishMoveBegin(); // Function BattlePrototype.FinishMoveActorManager.FinishMoveBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x1208bb0
};

// Class BattlePrototype.FixPoseActorComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UFixPoseActorComponent : UActorComponent {
	struct UShapeComponent* TargetShape; // 0xc0(0x08)
	struct FRotator Rotate; // 0xc8(0x0c)
	bool IsFixVelocity; // 0xd4(0x01)
	bool IsFixRot; // 0xd5(0x01)
	char pad_D6[0x2]; // 0xd6(0x02)
};

// Class BattlePrototype.FlagManager
// Size: 0x188 (Inherited: 0x28)
struct UFlagManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct FMulticastInlineDelegate DispatchContentsOpend; // 0x38(0x10)
	struct FMulticastInlineDelegate DispatchContentsRestricted; // 0x48(0x10)
	struct FFlag ItemNewFlag; // 0x58(0x10)
	struct FFlag ShopItemNewFlag; // 0x68(0x10)
	struct FFlag TradeItemNewFlag; // 0x78(0x10)
	struct FFlag WorldMapNewFlag; // 0x88(0x10)
	struct FFlag TutorialNewFlag; // 0x98(0x10)
	struct FFlag HelpNewDataFlag; // 0xa8(0x10)
	struct FFlag HelpGetDataFlag; // 0xb8(0x10)
	struct FFlag HelpDisplayFlag; // 0xc8(0x10)
	struct FFlag MainQuestNewFlag; // 0xd8(0x10)
	struct FFlag SubQuestNewFlag; // 0xe8(0x10)
	struct FFlag BondsQuestNewFlag; // 0xf8(0x10)
	struct FFlag CharaLibraryNewFlag; // 0x108(0x10)
	struct FFlag EnemyLibraryNewFlag; // 0x118(0x10)
	struct FFlag PresentNewFlag; // 0x128(0x10)
	struct FFlag ContentsOpenedFlag; // 0x138(0x10)
	struct FFlag OperationRestrictionFlag; // 0x148(0x10)
	struct FFlag BrainmapOpenInfoFlag; // 0x158(0x10)
	struct FFlag AddContentsNewFlag; // 0x168(0x10)
	struct FFlag SystemSaveDataCommonFlag; // 0x178(0x10)

	void WorldMapNewFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.WorldMapNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x120aac0
	void WorldMapNewFlagClear(); // Function BattlePrototype.FlagManager.WorldMapNewFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x120aa80
	bool WorldMapNewFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.WorldMapNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x120a9d0
	void TutorialNewFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.TutorialNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x120a920
	void TutorialNewFlagClear(); // Function BattlePrototype.FlagManager.TutorialNewFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x120a8e0
	bool TutorialNewFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.TutorialNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x120a830
	void TradeItemNewFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.TradeItemNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x120a780
	void TradeItemNewFlagClear(); // Function BattlePrototype.FlagManager.TradeItemNewFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x120a740
	bool TradeItemNewFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.TradeItemNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x120a690
	void SystemSaveDataCommonFlagOn(enum class ESystemSaveDataCommonFlag Type); // Function BattlePrototype.FlagManager.SystemSaveDataCommonFlagOn // (Final|Native|Public|BlueprintCallable) // @ game+0x120a540
	void SystemSaveDataCommonFlagOff(enum class ESystemSaveDataCommonFlag Type); // Function BattlePrototype.FlagManager.SystemSaveDataCommonFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x120a3f0
	void SystemSaveDataCommonFlagClear(); // Function BattlePrototype.FlagManager.SystemSaveDataCommonFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x120a3b0
	bool SystemSaveDataCommonFlagCheck(enum class ESystemSaveDataCommonFlag Type); // Function BattlePrototype.FlagManager.SystemSaveDataCommonFlagCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x120a250
	void ShopItemNewFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.ShopItemNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x120a160
	void ShopItemNewFlagClear(); // Function BattlePrototype.FlagManager.ShopItemNewFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x120a120
	bool ShopItemNewFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.ShopItemNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x120a070
	void SetContentsOpened(enum class EContentsOpening Type); // Function BattlePrototype.FlagManager.SetContentsOpened // (Final|Native|Public|BlueprintCallable) // @ game+0x1209ec0
	void SetContentsClosed(enum class EContentsOpening Type); // Function BattlePrototype.FlagManager.SetContentsClosed // (Final|Native|Public|BlueprintCallable) // @ game+0x1209d90
	void SetAllContentsOpened(); // Function BattlePrototype.FlagManager.SetAllContentsOpened // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void OperationRestrictionFlagOn(enum class EOperationRestriction Type); // Function BattlePrototype.FlagManager.OperationRestrictionFlagOn // (Final|Native|Public|BlueprintCallable) // @ game+0x1209a70
	void OperationRestrictionFlagOff(enum class EOperationRestriction Type); // Function BattlePrototype.FlagManager.OperationRestrictionFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x1209940
	bool OperationRestrictionFlagCheck(enum class EOperationRestriction Type); // Function BattlePrototype.FlagManager.OperationRestrictionFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12098a0
	void ItemNewFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.ItemNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x1209730
	void ItemNewFlagClear(); // Function BattlePrototype.FlagManager.ItemNewFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x12096f0
	bool ItemNewFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.ItemNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1209640
	bool IsContentsOpened(enum class EContentsOpening Type); // Function BattlePrototype.FlagManager.IsContentsOpened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12094e0
	void InitializeFlag(); // Function BattlePrototype.FlagManager.InitializeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1209450
	void HelpNewFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.HelpNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x12093a0
	void HelpNewFlagClear(); // Function BattlePrototype.FlagManager.HelpNewFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x1209360
	bool HelpNewFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.HelpNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12092b0
	int32_t HelpGetFlagSize(); // Function BattlePrototype.FlagManager.HelpGetFlagSize // (Final|Native|Public|BlueprintCallable) // @ game+0x1209290
	void HelpGetFlagOn(int32_t Index); // Function BattlePrototype.FlagManager.HelpGetFlagOn // (Final|Native|Public|BlueprintCallable) // @ game+0x1209160
	void HelpGetFlagOff(int32_t Index); // Function BattlePrototype.FlagManager.HelpGetFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x1209000
	void HelpGetFlagClear(); // Function BattlePrototype.FlagManager.HelpGetFlagClear // (Final|Native|Public|BlueprintCallable) // @ game+0x1208fc0
	bool HelpGetFlagCheck(int32_t Index); // Function BattlePrototype.FlagManager.HelpGetFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1208e50
	void HelpDisplayFlagOn(enum class EHelpTutorial helpID); // Function BattlePrototype.FlagManager.HelpDisplayFlagOn // (Final|Native|Public|BlueprintCallable) // @ game+0x1208db0
	void HelpDisplayFlagOff(enum class EHelpTutorial helpID); // Function BattlePrototype.FlagManager.HelpDisplayFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x1208d10
	bool HelpDisplayFlagCheck(enum class EHelpTutorial helpID); // Function BattlePrototype.FlagManager.HelpDisplayFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1208c70
	void BrainmapOpenInfoFlagOn(int32_t flagIdx); // Function BattlePrototype.FlagManager.BrainmapOpenInfoFlagOn // (Final|Native|Public|BlueprintCallable) // @ game+0x1208790
	void BrainmapOpenInfoFlagOff(int32_t flagIdx); // Function BattlePrototype.FlagManager.BrainmapOpenInfoFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x12086e0
	bool BrainmapOpenInfoFlagCheck(int32_t flagIdx); // Function BattlePrototype.FlagManager.BrainmapOpenInfoFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1208620
	void AddContentsNewFlagOn(int32_t flagIdx); // Function BattlePrototype.FlagManager.AddContentsNewFlagOn // (Final|Native|Public|BlueprintCallable) // @ game+0x12084d0
	void AddContentsNewFlagOff(int32_t flagIdx); // Function BattlePrototype.FlagManager.AddContentsNewFlagOff // (Final|Native|Public|BlueprintCallable) // @ game+0x1208420
	bool AddContentsNewFlagCheck(int32_t flagIdx); // Function BattlePrototype.FlagManager.AddContentsNewFlagCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1208360
};

// Class BattlePrototype.FlagManagerUtility
// Size: 0x28 (Inherited: 0x28)
struct UFlagManagerUtility : UBlueprintFunctionLibrary {

	void SystemSaveDataCommonFlagOn(struct UObject* WorldContextObject, enum class ESystemSaveDataCommonFlag Type); // Function BattlePrototype.FlagManagerUtility.SystemSaveDataCommonFlagOn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x120a5e0
	void SystemSaveDataCommonFlagOff(struct UObject* WorldContextObject, enum class ESystemSaveDataCommonFlag Type); // Function BattlePrototype.FlagManagerUtility.SystemSaveDataCommonFlagOff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x120a490
	bool SystemSaveDataCommonFlagCheck(struct UObject* WorldContextObject, enum class ESystemSaveDataCommonFlag Type); // Function BattlePrototype.FlagManagerUtility.SystemSaveDataCommonFlagCheck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x120a2f0
	void SetContentsOpened(struct UObject* WorldContextObject, enum class EContentsOpening Type); // Function BattlePrototype.FlagManagerUtility.SetContentsOpened // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1209f40
	void SetContentsClosed(struct UObject* WorldContextObject, enum class EContentsOpening Type); // Function BattlePrototype.FlagManagerUtility.SetContentsClosed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1209e10
	void SetAllContentsOpened(struct UObject* WorldContextObject); // Function BattlePrototype.FlagManagerUtility.SetAllContentsOpened // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xae5190
	void OperationRestrictionFlagOn(struct UObject* WorldContextObject, enum class EOperationRestriction Type); // Function BattlePrototype.FlagManagerUtility.OperationRestrictionFlagOn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1209af0
	void OperationRestrictionFlagOff(struct UObject* WorldContextObject, enum class EOperationRestriction Type); // Function BattlePrototype.FlagManagerUtility.OperationRestrictionFlagOff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12099c0
	bool IsContentsOpened(struct UObject* WorldContextObject, enum class EContentsOpening Type); // Function BattlePrototype.FlagManagerUtility.IsContentsOpened // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1209580
	void InitializeFlagManager(struct UObject* WorldContextObject); // Function BattlePrototype.FlagManagerUtility.InitializeFlagManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1209470
	void HelpGetFlagOn(struct UObject* WorldContextObject, enum class EHelpTutorial Type); // Function BattlePrototype.FlagManagerUtility.HelpGetFlagOn // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12091e0
	void HelpGetFlagOff(struct UObject* WorldContextObject, enum class EHelpTutorial Type); // Function BattlePrototype.FlagManagerUtility.HelpGetFlagOff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12090b0
	bool HelpGetFlagCheck(struct UObject* WorldContextObject, enum class EHelpTutorial Type); // Function BattlePrototype.FlagManagerUtility.HelpGetFlagCheck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1208f00
	bool CheckOperationRestrictionFlag(struct UObject* WorldContextObject, enum class EOperationRestriction Type); // Function BattlePrototype.FlagManagerUtility.CheckOperationRestrictionFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12088f0
	void CharaLibraryNewFlagOff(struct UObject* WorldContextObject, enum class ELibraryFlagType Index); // Function BattlePrototype.FlagManagerUtility.CharaLibraryNewFlagOff // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1208840
};

// Class BattlePrototype.DebuggingItemFlagManagerGroup
// Size: 0x300 (Inherited: 0x2d0)
struct ADebuggingItemFlagManagerGroup : ADebuggingItemGroup {
	char pad_2D0[0x20]; // 0x2d0(0x20)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemBool2>> FlagBool; // 0x2f0(0x10)

	void OnPageOpened(); // Function BattlePrototype.DebuggingItemFlagManagerGroup.OnPageOpened // (Final|Native|Public) // @ game+0x8518d0
	void OnChangeFlagBool(struct ADebuggingItemBool* Item); // Function BattlePrototype.DebuggingItemFlagManagerGroup.OnChangeFlagBool // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.FlamesConditionComponent
// Size: 0x180 (Inherited: 0x160)
struct UFlamesConditionComponent : UConditionComponent {
	float _intervalDamagePercent; // 0x160(0x04)
	char pad_164[0x4]; // 0x164(0x04)
	struct UParticleSystem* _pFlameEffect; // 0x168(0x08)
	struct USceneComponent* _pAttackedComp; // 0x170(0x08)
	struct UParticleSystemComponent* _pEffectComp; // 0x178(0x08)
};

// Class BattlePrototype.CharacterPhysicalSurfaceActionEffectResource
// Size: 0x40 (Inherited: 0x28)
struct UCharacterPhysicalSurfaceActionEffectResource : UObject {
	struct TArray<struct FCharacterPhysicalSurfaceActionEffectResourceArray> ResourceList; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)

	bool UnloadAsset(); // Function BattlePrototype.CharacterPhysicalSurfaceActionEffectResource.UnloadAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x120ea40
	bool LoadAsset(struct FCharacterPhysicalSurfaceActionEffect ActionEffect); // Function BattlePrototype.CharacterPhysicalSurfaceActionEffectResource.LoadAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x120dd90
	bool IsLoaded(); // Function BattlePrototype.CharacterPhysicalSurfaceActionEffectResource.IsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0xae4f00
	struct UParticleSystem* GetResource(enum class EGamePhysicalSurfaceType SurfaceType, enum class ECharacterPhysicalActionType ActionType); // Function BattlePrototype.CharacterPhysicalSurfaceActionEffectResource.GetResource // (Final|Native|Public|BlueprintCallable) // @ game+0x120dc60
};

// Class BattlePrototype.CharacterPhysicalSurfaceActionSoundResource
// Size: 0x40 (Inherited: 0x28)
struct UCharacterPhysicalSurfaceActionSoundResource : UObject {
	struct TArray<struct FCharacterPhysicalSurfaceActionSoundResourceArrray> ResourceList; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)

	bool UnloadAsset(); // Function BattlePrototype.CharacterPhysicalSurfaceActionSoundResource.UnloadAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x120ea40
	bool LoadAsset(struct FCharacterPhysicalSurfaceActionSound ActionSound); // Function BattlePrototype.CharacterPhysicalSurfaceActionSoundResource.LoadAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x120ded0
	bool IsLoaded(); // Function BattlePrototype.CharacterPhysicalSurfaceActionSoundResource.IsLoaded // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0xae4f00
	struct USoundAtomCue* GetResource(enum class EGamePhysicalSurfaceType SurfaceType, enum class ECharacterPhysicalActionType ActionType); // Function BattlePrototype.CharacterPhysicalSurfaceActionSoundResource.GetResource // (Final|Native|Public|BlueprintCallable) // @ game+0x120dc60
};

// Class BattlePrototype.FootStepInterface
// Size: 0x28 (Inherited: 0x28)
struct UFootStepInterface : UInterface {

	bool FootStepPlaySound(enum class EGamePhysicalSurfaceType PhysicsType, struct FName ActionType, struct FTransform Transform, struct AActor* Creator); // Function BattlePrototype.FootStepInterface.FootStepPlaySound // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x120da80
	bool FootStepPlayEffect(enum class EGamePhysicalSurfaceType PhysicsType, struct FName ActionType, struct FTransform Transform, struct AActor* Creator); // Function BattlePrototype.FootStepInterface.FootStepPlayEffect // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x120d8d0
	bool FootStepPlay(enum class EGamePhysicalSurfaceType PhysicsType, enum class ECharacterPhysicalActionType ActionType, struct FTransform Transform, struct AActor* Creator, bool isPlayEffect, bool isPlaySound); // Function BattlePrototype.FootStepInterface.FootStepPlay // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x120d6b0
};

// Class BattlePrototype.FootStepComponent
// Size: 0xe8 (Inherited: 0xc0)
struct UFootStepComponent : UActorComponent {
	struct FName EffectTableId; // 0xc0(0x08)
	struct FName SoundTableId; // 0xc8(0x08)
	struct UCharacterPhysicalSurfaceActionEffectResource* EffectActionResCache; // 0xd0(0x08)
	struct UCharacterPhysicalSurfaceActionSoundResource* SoundActionResCache; // 0xd8(0x08)
	bool IsBeginPlayLoadAsset; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)

	void PlaySoundByName(enum class EGamePhysicalSurfaceType PhysicsType, struct FName ActionType, struct FVector Location, struct FRotator Rotation, struct AActor* Creator); // Function BattlePrototype.FootStepComponent.PlaySoundByName // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x120e550
	void PlaySound(enum class EGamePhysicalSurfaceType PhysicsType, enum class ECharacterPhysicalActionType ActionType, struct FVector Location, struct FRotator Rotation, struct AActor* Creator); // Function BattlePrototype.FootStepComponent.PlaySound // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x120e390
	void PlayEffectByName(enum class EGamePhysicalSurfaceType PhysicsType, struct FName ActionType, struct FTransform Transform, struct AActor* Creator); // Function BattlePrototype.FootStepComponent.PlayEffectByName // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x120e1e0
	void PlayEffect(enum class EGamePhysicalSurfaceType PhysicsType, enum class ECharacterPhysicalActionType ActionType, struct FTransform Transform, struct AActor* Creator); // Function BattlePrototype.FootStepComponent.PlayEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x120e040
};

// Class BattlePrototype.FootStepUtility
// Size: 0x28 (Inherited: 0x28)
struct UFootStepUtility : UBlueprintFunctionLibrary {

	enum class EGamePhysicalSurfaceType ConvertPhysicalSurfaceToGamePhysicalSurface(enum class EPhysicalSurface SurfaceType); // Function BattlePrototype.FootStepUtility.ConvertPhysicalSurfaceToGamePhysicalSurface // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x120d570
};

// Class BattlePrototype.FreeCameraController
// Size: 0x5c0 (Inherited: 0x598)
struct AFreeCameraController : APlayerController {
	struct APlayerController* OriginalControllerRef; // 0x598(0x08)
	struct UPlayer* OriginalPlayer; // 0x5a0(0x08)
	struct APlayerController* OriginalViewTargetPCRef; // 0x5a8(0x08)
	struct AActor* OriginalViewTargetRef; // 0x5b0(0x08)
	char pad_5B8[0x8]; // 0x5b8(0x08)
};

// Class BattlePrototype.FreeCameraSpectatorPawn
// Size: 0x2d8 (Inherited: 0x2b8)
struct AFreeCameraSpectatorPawn : ASpectatorPawn {
	struct UCameraComponent* CameraComponent; // 0x2b8(0x08)
	float SpeedScale; // 0x2c0(0x04)
	float InitialMaxSpeed; // 0x2c4(0x04)
	float InitialAccel; // 0x2c8(0x04)
	float InitialDecel; // 0x2cc(0x04)
	char pad_2D0[0x8]; // 0x2d0(0x08)
};

// Class BattlePrototype.GameBaseLevelActor
// Size: 0x240 (Inherited: 0x238)
struct AGameBaseLevelActor : ALevelScriptActor {
	char pad_238[0x8]; // 0x238(0x08)
};

// Class BattlePrototype.GameDifficultyDefine
// Size: 0xd0 (Inherited: 0xc0)
struct UGameDifficultyDefine : UActorComponent {
	float m_addMag; // 0xc0(0x04)
	float m_difficultyMag; // 0xc4(0x04)
	float m_defaultMag; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)

	void SetDefaultMag(float _defaultMag); // Function BattlePrototype.GameDifficultyDefine.SetDefaultMag // (Final|Native|Public|BlueprintCallable) // @ game+0x120e7c0
	void SetAddMag(float _addMag); // Function BattlePrototype.GameDifficultyDefine.SetAddMag // (Final|Native|Public|BlueprintCallable) // @ game+0x120e740
	float GetDifficultyMag(); // Function BattlePrototype.GameDifficultyDefine.GetDifficultyMag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1173860
	float GetDefaultMag(); // Function BattlePrototype.GameDifficultyDefine.GetDefaultMag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x120dc30
	bool DifficultyMagCalc(); // Function BattlePrototype.GameDifficultyDefine.DifficultyMagCalc // (Final|Native|Public|BlueprintCallable) // @ game+0x120d680
};

// Class BattlePrototype.GameMainManager
// Size: 0x2d0 (Inherited: 0x230)
struct AGameMainManager : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	struct UTexture2D* m_pSaveDataCapturePicture; // 0x240(0x08)
	struct USaveLoadScreenParamManager* m_pAutoSaveLoadScreenParamManager; // 0x248(0x08)
	float m_AutoSaveIntervalTime; // 0x250(0x04)
	struct FVector m_AutoSavePlayerLocation; // 0x254(0x0c)
	bool m_isAutoSaveEnable; // 0x260(0x01)
	bool m_isAsyncAutoSaveRequest; // 0x261(0x01)
	char pad_262[0x6]; // 0x262(0x06)
	struct URSSaveGame* m_AsyncAutoSaveClass; // 0x268(0x08)
	char pad_270[0x58]; // 0x270(0x58)
	bool m_isForceAutoSaveEnable; // 0x2c8(0x01)
	bool m_isForceAutoSaveDisable; // 0x2c9(0x01)
	char pad_2CA[0x6]; // 0x2ca(0x06)

	void StartGameoverFlow(enum class EGameOverResult resultType); // Function BattlePrototype.GameMainManager.StartGameoverFlow // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetSaveDataCapturePicture(struct UTexture2D* pCapturePic); // Function BattlePrototype.GameMainManager.SetSaveDataCapturePicture // (Final|Native|Public|BlueprintCallable) // @ game+0x120e9c0
	void SetIsForceAutoSaveEnable(bool Flag); // Function BattlePrototype.GameMainManager.SetIsForceAutoSaveEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x120e940
	void SetIsForceAutoSaveDisable(bool Flag); // Function BattlePrototype.GameMainManager.SetIsForceAutoSaveDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x120e8c0
	void SetIsAutoSaveEnable(bool Flag); // Function BattlePrototype.GameMainManager.SetIsAutoSaveEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x120e840
	bool SaveRetryDataExec(); // Function BattlePrototype.GameMainManager.SaveRetryDataExec // (Final|Native|Public|BlueprintCallable) // @ game+0x120e710
	bool LoadRetryDataExec(); // Function BattlePrototype.GameMainManager.LoadRetryDataExec // (Final|Native|Public|BlueprintCallable) // @ game+0x120e010
	bool IsForceAutoSaveEnable(); // Function BattlePrototype.GameMainManager.IsForceAutoSaveEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x11647e0
	bool IsForceAutoSaveDisable(); // Function BattlePrototype.GameMainManager.IsForceAutoSaveDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x120dd70
	bool IsAutoSaveEnable(); // Function BattlePrototype.GameMainManager.IsAutoSaveEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x120dd50
	struct UTexture2D* GetSaveDataCapturePicture(); // Function BattlePrototype.GameMainManager.GetSaveDataCapturePicture // (Final|Native|Public|BlueprintCallable) // @ game+0x120dd30
	struct UTextureRenderTarget2D* GetSaveDataCapture(); // Function BattlePrototype.GameMainManager.GetSaveDataCapture // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool DoSaveDataCapture(); // Function BattlePrototype.GameMainManager.DoSaveDataCapture // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UTexture2D* ConvertTextureRenderTarget2DtoTexture2D(struct UTextureRenderTarget2D* pSrcRenderTex); // Function BattlePrototype.GameMainManager.ConvertTextureRenderTarget2DtoTexture2D // (Final|Native|Public|BlueprintCallable) // @ game+0x120d5f0
	bool AutoSaveExec(); // Function BattlePrototype.GameMainManager.AutoSaveExec // (Final|Native|Public|BlueprintCallable) // @ game+0x120d540
	bool AsyncAutoSaveExec(); // Function BattlePrototype.GameMainManager.AsyncAutoSaveExec // (Final|Native|Public|BlueprintCallable) // @ game+0x120d510
};

// Class BattlePrototype.GameSingleton
// Size: 0x188 (Inherited: 0x28)
struct UGameSingleton : UObject {
	char pad_28[0x130]; // 0x28(0x130)
	struct FIntPoint m_CurrentResolution; // 0x158(0x08)
	float m_MinimizeTimer; // 0x160(0x04)
	float m_ResolutionChangeTimer; // 0x164(0x04)
	float m_DefaultResolutionTimer; // 0x168(0x04)
	bool m_IsFocus; // 0x16c(0x01)
	char pad_16D[0x1b]; // 0x16d(0x1b)

	struct UGameSingleton* GetForBP(); // Function BattlePrototype.GameSingleton.GetForBP // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12117c0
};

// Class BattlePrototype.GameTimerFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UGameTimerFunctionLibrary : UBlueprintFunctionLibrary {

	void UpdateTimerByWorld(struct FGameTimer GameTimer, struct AActor* Actor); // Function BattlePrototype.GameTimerFunctionLibrary.UpdateTimerByWorld // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1213060
	void UpdateTimerByActor(struct FGameTimer GameTimer, struct AActor* Actor); // Function BattlePrototype.GameTimerFunctionLibrary.UpdateTimerByActor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1212f70
	void UpdateTimer(struct FGameTimer GameTimer, float Delta); // Function BattlePrototype.GameTimerFunctionLibrary.UpdateTimer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1212e80
	void SetTimer(struct FGameTimer GameTimer, float Time); // Function BattlePrototype.GameTimerFunctionLibrary.SetTimer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12129e0
	void SetPause(struct FGameTimer GameTimer, bool bPause); // Function BattlePrototype.GameTimerFunctionLibrary.SetPause // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12127b0
	bool IsPause(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.IsPause // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211ea0
	bool IsOver(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.IsOver // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211df0
	bool IsEnable(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.IsEnable // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211c80
	float GetRemainingTime(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.GetRemainingTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211940
	float GetRate(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.GetRate // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211890
	float GetEndTime(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.GetEndTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211710
	float GetElapsedTime(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.GetElapsedTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1211660
	void EndTimer(struct FGameTimer GameTimer); // Function BattlePrototype.GameTimerFunctionLibrary.EndTimer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1211500
	float AddElapsedTime(struct FGameTimer GameTimer, float addTime); // Function BattlePrototype.GameTimerFunctionLibrary.AddElapsedTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1210d50
};

// Class BattlePrototype.GimmickActionBase
// Size: 0x2b0 (Inherited: 0x230)
struct AGimmickActionBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	bool IsActionEnableWhileOpen; // 0x238(0x01)
	bool IsActionEnableWhileClose; // 0x239(0x01)
	char pad_23A[0x6]; // 0x23a(0x06)
	struct AActionIcon* ActionIcon; // 0x240(0x08)
	char pad_248[0x8]; // 0x248(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x250(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x258(0x08)
	struct UChildActorComponent* ChildActionIcon; // 0x260(0x08)
	struct AMakeEventActor* OnActionMakeEventActorClass; // 0x268(0x08)
	struct AMakeEventActor* OnActionMakeEventActor; // 0x270(0x08)
	struct AMakeEventActor* OnExitMakeEventActorClass; // 0x278(0x08)
	struct AMakeEventActor* OnExitMakeEventActor; // 0x280(0x08)
	char pad_288[0x4]; // 0x288(0x04)
	struct FVector ActionIconWorldPositionOffset; // 0x28c(0x0c)
	enum class EActionIconType actionIconType; // 0x298(0x01)
	enum class EActionIconSubQuestState ActionIconSubQuestState; // 0x299(0x01)
	bool IsOnAction; // 0x29a(0x01)
	bool IsOnExit; // 0x29b(0x01)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct AGimmickObjectBase* TargetGimmickObject; // 0x2a0(0x08)
	bool IsUseActionIcon; // 0x2a8(0x01)
	char pad_2A9[0x7]; // 0x2a9(0x07)

	void UpdateActionEnable(enum class EGimmickObjectStatus Status); // Function BattlePrototype.GimmickActionBase.UpdateActionEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1212c80
	void SetActionIconVisible(bool Visible); // Function BattlePrototype.GimmickActionBase.SetActionIconVisible // (Final|Native|Protected|BlueprintCallable) // @ game+0x1212450
	bool IsActionEnable(); // Function BattlePrototype.GimmickActionBase.IsActionEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1211c50
	void DisableAction(); // Function BattlePrototype.GimmickActionBase.DisableAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1211170
	bool CallOpenEventToGimmickObject(); // Function BattlePrototype.GimmickActionBase.CallOpenEventToGimmickObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1211100
	bool CallCloseEventToGimmickObject(); // Function BattlePrototype.GimmickActionBase.CallCloseEventToGimmickObject // (Final|Native|Public|BlueprintCallable) // @ game+0x12110d0
};

// Class BattlePrototype.GimmickAttackAreaVolume
// Size: 0x270 (Inherited: 0x268)
struct AGimmickAttackAreaVolume : AVolume {
	char pad_268[0x8]; // 0x268(0x08)

	void OnActorEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.GimmickAttackAreaVolume.OnActorEndOverlapFunc // (Final|Native|Public) // @ game+0x12120d0
	void OnActorBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.GimmickAttackAreaVolume.OnActorBeginOverlapFunc // (Final|Native|Public) // @ game+0x1211f50
	bool IsEnemyInArea(); // Function BattlePrototype.GimmickAttackAreaVolume.IsEnemyInArea // (Final|Native|Public) // @ game+0x1211d30
};

// Class BattlePrototype.GimmickBase
// Size: 0x238 (Inherited: 0x230)
struct AGimmickBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
};

// Class BattlePrototype.GimmickHorrorBase
// Size: 0x240 (Inherited: 0x230)
struct AGimmickHorrorBase : ARSActorBackgroundBase {
	enum class EGimmickHorrorType Type; // 0x230(0x01)
	char pad_231[0x3]; // 0x231(0x03)
	float TriggerRadius; // 0x234(0x04)
	bool HasActioned; // 0x238(0x01)
	bool IsDrawDebug; // 0x239(0x01)
	char pad_23A[0x6]; // 0x23a(0x06)
};

// Class BattlePrototype.GimmickTriggerVolume
// Size: 0x290 (Inherited: 0x268)
struct AGimmickTriggerVolume : AVolume {
	struct AMapGimmickObject* TargetMapGimmick; // 0x268(0x08)
	struct AMapGimmickManager* MapGimmickManager; // 0x270(0x08)
	enum class EMapGimmickPlayerPlace PositionToGimmick; // 0x278(0x01)
	bool IsOverlapAllPlayer; // 0x279(0x01)
	bool IsOverlapPartner; // 0x27a(0x01)
	enum class EMapGimmickFinishDir FinishAnimationDir; // 0x27b(0x01)
	bool UpdateIconOnly; // 0x27c(0x01)
	bool IsUseLimitIcon; // 0x27d(0x01)
	char pad_27E[0x2]; // 0x27e(0x02)
	struct FTimerHandle _TimerHandle; // 0x280(0x08)
	char pad_288[0x8]; // 0x288(0x08)

	void OnActorHitFunc(struct AActor* SelfActor, struct AActor* OtherActor, struct FVector NormalImpulse, struct FHitResult Hit); // Function BattlePrototype.GimmickTriggerVolume.OnActorHitFunc // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x11a8bd0
	void OnActorEndOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.GimmickTriggerVolume.OnActorEndOverlapFunc // (Final|Native|Public) // @ game+0x1212190
	void OnActorBeginOverlapFunc(struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.GimmickTriggerVolume.OnActorBeginOverlapFunc // (Final|Native|Public) // @ game+0x1212010
	bool IsInPlayer(); // Function BattlePrototype.GimmickTriggerVolume.IsInPlayer // (Final|Native|Private|Const) // @ game+0x1211d60
	void DelayCollisionOn(); // Function BattlePrototype.GimmickTriggerVolume.DelayCollisionOn // (Final|Native|Public) // @ game+0x1211150
};

// Class BattlePrototype.GimmickLimitTriggerVolume
// Size: 0x290 (Inherited: 0x290)
struct AGimmickLimitTriggerVolume : AGimmickTriggerVolume {
};

// Class BattlePrototype.GimmickManager
// Size: 0x48 (Inherited: 0x28)
struct UGimmickManager : UObject {
	struct TArray<struct AGimmickObjectBase*> Gimmicks; // 0x28(0x10)
	struct TArray<struct AGimmickActionBase*> GimmickActions; // 0x38(0x10)

	void UnregisterGimmickAll(); // Function BattlePrototype.GimmickManager.UnregisterGimmickAll // (Native|Public|BlueprintCallable) // @ game+0x117b150
	void UnregisterGimmickActionAll(); // Function BattlePrototype.GimmickManager.UnregisterGimmickActionAll // (Native|Public|BlueprintCallable) // @ game+0x1212c60
	void UnregisterGimmickAction(struct AGimmickActionBase* GimmickAction); // Function BattlePrototype.GimmickManager.UnregisterGimmickAction // (Native|Public|BlueprintCallable) // @ game+0x1212bd0
	void UnregisterGimmick(struct AGimmickObjectBase* gimmick); // Function BattlePrototype.GimmickManager.UnregisterGimmick // (Native|Public|BlueprintCallable) // @ game+0x117b0c0
	void RegisterGimmickAction(struct AGimmickActionBase* GimmickAction); // Function BattlePrototype.GimmickManager.RegisterGimmickAction // (Native|Public|BlueprintCallable) // @ game+0x1212320
	void RegisterGimmick(struct AGimmickObjectBase* gimmick); // Function BattlePrototype.GimmickManager.RegisterGimmick // (Native|Public|BlueprintCallable) // @ game+0x117a930
	void OnBattleModeChange(struct URSGameInstance* GameInstance, bool bBattle); // Function BattlePrototype.GimmickManager.OnBattleModeChange // (Final|Native|Public|BlueprintCallable) // @ game+0x1212250
	void Initialize(struct UObject* WorldContextObject); // Function BattlePrototype.GimmickManager.Initialize // (Native|Public|BlueprintCallable) // @ game+0x117a1f0
};

// Class BattlePrototype.GimmickObjectBase
// Size: 0x270 (Inherited: 0x230)
struct AGimmickObjectBase : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	struct UBoxComponent* Blocker; // 0x240(0x08)
	float OpenValue; // 0x248(0x04)
	float OpenThreshold; // 0x24c(0x04)
	float OpenCloseTime; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct FMulticastInlineDelegate OnChangeStatus; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)

	void UpdateOpenValueInOpening(float DelataSeconds); // Function BattlePrototype.GimmickObjectBase.UpdateOpenValueInOpening // (Final|Native|Public|BlueprintCallable) // @ game+0x1212d80
	void UpdateOpenValueInClosing(float DelataSeconds); // Function BattlePrototype.GimmickObjectBase.UpdateOpenValueInClosing // (Final|Native|Public|BlueprintCallable) // @ game+0x1212d00
	void SetGimmickStatus(enum class EGimmickObjectStatus Status); // Function BattlePrototype.GimmickObjectBase.SetGimmickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x12125f0
	void SetBlockerCollision(bool Enable); // Function BattlePrototype.GimmickObjectBase.SetBlockerCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x12124e0
	enum class EGimmickObjectStatus GetGimmickStatus(); // Function BattlePrototype.GimmickObjectBase.GetGimmickStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x12117f0
};

// Class BattlePrototype.GimmickObjectInterface
// Size: 0x28 (Inherited: 0x28)
struct UGimmickObjectInterface : UInterface {

	void GimmickOpenForce(); // Function BattlePrototype.GimmickObjectInterface.GimmickOpenForce // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211ab0
	void GimmickOpen(); // Function BattlePrototype.GimmickObjectInterface.GimmickOpen // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211a90
	void GimmickCloseForce(); // Function BattlePrototype.GimmickObjectInterface.GimmickCloseForce // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211a70
	void GimmickClose(); // Function BattlePrototype.GimmickObjectInterface.GimmickClose // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211a50
};

// Class BattlePrototype.HateTargetComponent
// Size: 0x1e0 (Inherited: 0xc0)
struct UHateTargetComponent : UActorComponent {
	struct TWeakObjectPtr<struct ARSCharacterBase> mTargetLock; // 0xc0(0x08)
	int32_t mTargetLockNo; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct UCharactersParameterComponent* mTargetLockParam; // 0xd0(0x08)
	struct TWeakObjectPtr<struct ARSCharacterBase> mTargetLockOnce; // 0xd8(0x08)
	int32_t mTargetLockOnceNo; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct UCharactersParameterComponent* mTargetLockOnceParam; // 0xe8(0x08)
	struct TWeakObjectPtr<struct ARSCharacterBase> mTargetLockConfusion; // 0xf0(0x08)
	struct UCharactersParameterComponent* mOwnerParam; // 0xf8(0x08)
	float mTargetLockTime; // 0x100(0x04)
	float mTargetLockUpdateTime; // 0x104(0x04)
	float mTargetLockNearUpdateTime; // 0x108(0x04)
	bool mIsTargetLockNear; // 0x10c(0x01)
	bool mIsTargetLockPlayer; // 0x10d(0x01)
	bool mIsTargetLockNPC; // 0x10e(0x01)
	bool mBeforeIsTargetLockPlayer; // 0x10f(0x01)
	bool mBeforeIsTargetLockNPC; // 0x110(0x01)
	char pad_111[0x3]; // 0x111(0x03)
	float mRange; // 0x114(0x04)
	struct TArray<struct FHateTargetParam> mHateTargetParam; // 0x118(0x10)
	struct FHateParam mHateParam; // 0x128(0x80)
	float mBerserkOnHateRate; // 0x1a8(0x04)
	bool mIsLookTargetRange; // 0x1ac(0x01)
	char pad_1AD[0x3]; // 0x1ad(0x03)
	float mTargetNearRange; // 0x1b0(0x04)
	float mTargetFarRange; // 0x1b4(0x04)
	bool mIsTargetRangeIgnoreHate; // 0x1b8(0x01)
	char pad_1B9[0x3]; // 0x1b9(0x03)
	struct TWeakObjectPtr<struct ARSCharacterBase> mDirectTargetLock; // 0x1bc(0x08)
	bool mIsLookTargetRangeHate; // 0x1c4(0x01)
	char pad_1C5[0x3]; // 0x1c5(0x03)
	float mTargetNearRangeHate; // 0x1c8(0x04)
	float mTargetFarRangeHate; // 0x1cc(0x04)
	char pad_1D0[0x10]; // 0x1d0(0x10)

	void UpdateTarget(float DeltaTime); // Function BattlePrototype.HateTargetComponent.UpdateTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1212e00
	void SubHate(struct ARSCharacterBase* Target, float hateValue, float techScale); // Function BattlePrototype.HateTargetComponent.SubHate // (Final|Native|Public|BlueprintCallable) // @ game+0x1212ad0
	void SetTargetLockConfusion(struct ARSCharacterBase* Target); // Function BattlePrototype.HateTargetComponent.SetTargetLockConfusion // (Final|Native|Public|BlueprintCallable) // @ game+0x1212960
	void SetTargetLock(struct ARSCharacterBase* Target, int32_t no); // Function BattlePrototype.HateTargetComponent.SetTargetLock // (Final|Native|Public|BlueprintCallable) // @ game+0x12128a0
	void SetNoAttackCount(float NoAttackSecond); // Function BattlePrototype.HateTargetComponent.SetNoAttackCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1212730
	void SetHateParam(struct FHateParam Param); // Function BattlePrototype.HateTargetComponent.SetHateParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1212670
	void SetDirectTargetLock(struct ARSCharacterBase* Target); // Function BattlePrototype.HateTargetComponent.SetDirectTargetLock // (Final|Native|Public|BlueprintCallable) // @ game+0x1212570
	void ResetHate(struct ARSCharacterBase* Target); // Function BattlePrototype.HateTargetComponent.ResetHate // (Final|Native|Public|BlueprintCallable) // @ game+0x12123d0
	void ResetDirectTargetLock(); // Function BattlePrototype.HateTargetComponent.ResetDirectTargetLock // (Final|Native|Public|BlueprintCallable) // @ game+0x12123b0
	void ResetAllHate(); // Function BattlePrototype.HateTargetComponent.ResetAllHate // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool IsLockTargetPlayer(); // Function BattlePrototype.HateTargetComponent.IsLockTargetPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1211dc0
	bool IsLockTargetNPC(); // Function BattlePrototype.HateTargetComponent.IsLockTargetNPC // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1211d90
	void HateTargetParamSubHate(struct ARSCharacterBase* Target, enum class EHATETYPE Num); // Function BattlePrototype.HateTargetComponent.HateTargetParamSubHate // (Final|Native|Public|BlueprintCallable) // @ game+0x1211b90
	void HateTargetParamAddHate(struct ARSCharacterBase* Target, enum class EHATETYPE Num); // Function BattlePrototype.HateTargetComponent.HateTargetParamAddHate // (Final|Native|Public|BlueprintCallable) // @ game+0x1211ad0
	struct ARSCharacterBase* GetTargetLockConfusion(); // Function BattlePrototype.HateTargetComponent.GetTargetLockConfusion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1211a20
	struct ARSCharacterBase* GetTargetLock(); // Function BattlePrototype.HateTargetComponent.GetTargetLock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12119f0
	struct TArray<struct FHateTargetParam> GetHateTargetParam(); // Function BattlePrototype.HateTargetComponent.GetHateTargetParam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1211810
	float GetBasisHate(struct ARSCharacterBase* mainPlayer, struct ARSCharacterBase* Target); // Function BattlePrototype.HateTargetComponent.GetBasisHate // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12115a0
	void EnableLockTargetRangeHate(bool bEnable, float RangeNear, float RangeFar); // Function BattlePrototype.HateTargetComponent.EnableLockTargetRangeHate // (Final|Native|Public|BlueprintCallable) // @ game+0x1211400
	void EnableLockTargetRange(bool bEnable, float RangeNear, float RangeFar, bool bIgnoreHate); // Function BattlePrototype.HateTargetComponent.EnableLockTargetRange // (Final|Native|Public|BlueprintCallable) // @ game+0x12112b0
	void EnableLockTargetPlayer(bool bEnable); // Function BattlePrototype.HateTargetComponent.EnableLockTargetPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1211220
	void EnableLockTargetNPC(bool bEnable); // Function BattlePrototype.HateTargetComponent.EnableLockTargetNPC // (Final|Native|Public|BlueprintCallable) // @ game+0x1211190
	void ClearHateTargetParam(); // Function BattlePrototype.HateTargetComponent.ClearHateTargetParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1211130
	void AddHateTargetParam(struct ARSCharacterBase* Target, enum class EHATETYPE Num, enum class EHATETYPE Down); // Function BattlePrototype.HateTargetComponent.AddHateTargetParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1210fd0
	void AddHate(struct ARSCharacterBase* Target, float hateValue, float techScale, bool bAccumulation, bool bDirect); // Function BattlePrototype.HateTargetComponent.AddHate // (Final|Native|Public|BlueprintCallable) // @ game+0x1210e40
};

// Class BattlePrototype.HelpTutorialData
// Size: 0x40 (Inherited: 0x28)
struct UHelpTutorialData : UObject {
	struct UHelpTutorialDBAsset* helptutorialDataAsset_; // 0x28(0x08)
	struct TArray<struct FHelpListSortParam> helpSortList_; // 0x30(0x10)

	bool LoadDataAsset(struct FString dtPath); // Function BattlePrototype.HelpTutorialData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1217120
	bool GetTutorialDataIndexFromAsset(struct FName TutorialID, int32_t DataIndex); // Function BattlePrototype.HelpTutorialData.GetTutorialDataIndexFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216a70
	bool GetTutorialDataCellFromAsset(struct FName TutorialID, struct FTutorialDBDataCell returnCell); // Function BattlePrototype.HelpTutorialData.GetTutorialDataCellFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216960
	void GetTutorialDataAsset(struct TMap<struct FName, struct FTutorialDBDataCell> returnTutorialMap); // Function BattlePrototype.HelpTutorialData.GetTutorialDataAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216850
	bool GetMiniHelpDataIndexFromAsset(enum class EHelpTutorial helpID, int32_t DataIndex); // Function BattlePrototype.HelpTutorialData.GetMiniHelpDataIndexFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216780
	bool GetMiniHelpDataCellFromAsset(enum class EHelpTutorial helpID, struct FMiniHelpRowDataCell returnCell); // Function BattlePrototype.HelpTutorialData.GetMiniHelpDataCellFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216660
	void GetMiniHelpDataAsset(struct TMap<enum class EHelpTutorial, struct FMiniHelpRowDataCell> returnMiniHelpMap); // Function BattlePrototype.HelpTutorialData.GetMiniHelpDataAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216550
	struct UHelpTutorialDBAsset* GetHelpTutorialDataAsset(); // Function BattlePrototype.HelpTutorialData.GetHelpTutorialDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1196380
	bool GetHelpDataIndexFromAsset(enum class EHelpTutorial helpID, int32_t DataIndex); // Function BattlePrototype.HelpTutorialData.GetHelpDataIndexFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216400
	bool GetHelpDataCellFromAsset(enum class EHelpTutorial helpID, struct FHelpDBDataCell returnCell); // Function BattlePrototype.HelpTutorialData.GetHelpDataCellFromAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216300
	void GetHelpDataAsset(struct TMap<enum class EHelpTutorial, struct FHelpDBDataCell> returnHelpMap); // Function BattlePrototype.HelpTutorialData.GetHelpDataAsset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12161f0
};

// Class BattlePrototype.HelpTutorialDBAsset
// Size: 0x118 (Inherited: 0x28)
struct UHelpTutorialDBAsset : UObject {
	struct TMap<enum class EHelpTutorial, struct FHelpDBDataCell> helpDBMap_; // 0x28(0x50)
	struct TMap<enum class EHelpTutorial, struct FMiniHelpRowDataCell> miniHelpDBMap_; // 0x78(0x50)
	struct TMap<struct FName, struct FTutorialDBDataCell> tutorialDBMap_; // 0xc8(0x50)

	void Convert(); // Function BattlePrototype.HelpTutorialDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.HitBitComponent
// Size: 0xe0 (Inherited: 0xc0)
struct UHitBitComponent : UActorComponent {
	bool _bAutoInitHitBit; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	struct TArray<enum class HitBitKind> _initHitBitKinds; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)

	bool IsHit(int32_t HitBit); // Function BattlePrototype.HitBitComponent.IsHit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1216ed0
	int32_t CalcDamageHitBit(struct AActor* Actor); // Function BattlePrototype.HitBitComponent.CalcDamageHitBit // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1215a40
	int32_t CalcAttackHitBit(struct FHCCollisionCommonInfo commonInfo); // Function BattlePrototype.HitBitComponent.CalcAttackHitBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1215910
};

// Class BattlePrototype.HitCheckComponent
// Size: 0x110 (Inherited: 0xc0)
struct UHitCheckComponent : UActorComponent {
	bool IsCallCheckHitInTick; // 0xc0(0x01)
	char pad_C1[0x4f]; // 0xc1(0x4f)

	void RemoveFixedCollision(struct USceneComponent* SceneComp); // Function BattlePrototype.HitCheckComponent.RemoveFixedCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x1217310
	void RemoveAttackCollision(struct UObject* Notify, struct AActor* Owner, struct UAnimSequenceBase* Animation); // Function BattlePrototype.HitCheckComponent.RemoveAttackCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x1217210
	bool IsNoDamagePartFromHCHitResult(struct FHCHitResult HitResult); // Function BattlePrototype.HitCheckComponent.IsNoDamagePartFromHCHitResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1216f60
	bool IsFixedCollisionInterceptAble(int32_t Index); // Function BattlePrototype.HitCheckComponent.IsFixedCollisionInterceptAble // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1216e40
	void InterceptFixedCollisionDataEnemy(struct USceneComponent* SceneComp, struct AActor* NewAttackOwner, struct FHCCollisionCommonInfo refInterceptCommon, struct FHCSkillCommonInfo refInterceptSkill); // Function BattlePrototype.HitCheckComponent.InterceptFixedCollisionDataEnemy // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1216c00
	void InterceptFixedCollisionData(struct USceneComponent* SceneComp, struct AActor* NewAttackOwner); // Function BattlePrototype.HitCheckComponent.InterceptFixedCollisionData // (Final|Native|Public|BlueprintCallable) // @ game+0x1216b40
	struct UHitCheckComponent* GetHitCheckComponentFromActor(struct AActor* Actor); // Function BattlePrototype.HitCheckComponent.GetHitCheckComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12164d0
	int32_t GetFixedCollisionNum(); // Function BattlePrototype.HitCheckComponent.GetFixedCollisionNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12161c0
	bool GetFixedCollisionCapsule(int32_t Index, struct FVector outStartLocation, struct FVector outEndLocation, float OutRadius); // Function BattlePrototype.HitCheckComponent.GetFixedCollisionCapsule // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1216030
	struct AActor* GetFixedCollisionAttackSource(int32_t Index); // Function BattlePrototype.HitCheckComponent.GetFixedCollisionAttackSource // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1215f10
	struct AActor* GetFixedCollisionAttacker(int32_t Index); // Function BattlePrototype.HitCheckComponent.GetFixedCollisionAttacker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1215fa0
	int32_t GetAttackCollisionNum(); // Function BattlePrototype.HitCheckComponent.GetAttackCollisionNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1215ee0
	bool GetAttackCollisionCapsule(int32_t Index, struct FVector outStartLocation, struct FVector outEndLocation, float OutRadius); // Function BattlePrototype.HitCheckComponent.GetAttackCollisionCapsule // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1215d50
	struct AActor* GetAttackCollisionAttacker(int32_t Index); // Function BattlePrototype.HitCheckComponent.GetAttackCollisionAttacker // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1215cc0
	void CheckHit(float DeltaSeconds); // Function BattlePrototype.HitCheckComponent.CheckHit // (Final|Native|Public|BlueprintCallable) // @ game+0x1215c40
	bool CheckFixedCollisionSkillExtraType(int32_t Index, enum class HCSkillExtraType CheckExtraType); // Function BattlePrototype.HitCheckComponent.CheckFixedCollisionSkillExtraType // (Final|Native|Public|BlueprintCallable) // @ game+0x1215b80
	bool CheckAttackCollisionSkillExtraType(int32_t Index, enum class HCSkillExtraType CheckExtraType); // Function BattlePrototype.HitCheckComponent.CheckAttackCollisionSkillExtraType // (Final|Native|Public|BlueprintCallable) // @ game+0x1215ac0
	void AddIgnoreJustDodgeFixedCollisionData(struct USceneComponent* SceneComp); // Function BattlePrototype.HitCheckComponent.AddIgnoreJustDodgeFixedCollisionData // (Final|Native|Public|BlueprintCallable) // @ game+0x1215890
	void AddFixedCollisionBySceneCompSkill(struct AActor* Owner, struct USceneComponent* SceneComp, float Radius, float HalfHeight, struct FHCCollisionCommonInfo commonInfo, struct FHCSkillCommonInfo skill, struct FHCHitEffectInfo effectInfo, struct AActor* attackOwner, float limitHeight); // Function BattlePrototype.HitCheckComponent.AddFixedCollisionBySceneCompSkill // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12154f0
	void AddFixedCollisionByPrimitiveSkill(struct AActor* Owner, struct UPrimitiveComponent* Primitive, struct FHCCollisionCommonInfo commonInfo, struct FHCSkillCommonInfo skill, struct FHCHitEffectInfo effectInfo, struct AActor* attackOwner, float limitHeight); // Function BattlePrototype.HitCheckComponent.AddFixedCollisionByPrimitiveSkill // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12151d0
	void AddAttackCollision(struct UObject* Notify, struct AActor* Owner, struct UAnimSequenceBase* Animation, struct FHCAttackCollisionInfo AttackCollisionInfo, struct UMeshComponent* OtherMesh); // Function BattlePrototype.HitCheckComponent.AddAttackCollision // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1214ef0
};

// Class BattlePrototype.HitCheckInterface
// Size: 0x28 (Inherited: 0x28)
struct UHitCheckInterface : UInterface {

	bool IsOnGround(bool bIncludeObject); // Function BattlePrototype.HitCheckInterface.IsOnGround // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsObstacleHitCheckToActor(struct AActor* pTarget); // Function BattlePrototype.HitCheckInterface.IsObstacleHitCheckToActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsObstacleHitCheck(struct UPrimitiveComponent* pPrimitive, struct AActor* pAttacker, struct FVector EndPosition); // Function BattlePrototype.HitCheckInterface.IsObstacleHitCheck // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1685580
	bool IsIgnoreHitCheck(struct UPrimitiveComponent* pPrimitive, struct FVector hitPosition); // Function BattlePrototype.HitCheckInterface.IsIgnoreHitCheck // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1685580
	bool IsIgnoreAccelerator(enum class HCSkillExtraType Type); // Function BattlePrototype.HitCheckInterface.IsIgnoreAccelerator // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsDisableDamageHit(); // Function BattlePrototype.HitCheckInterface.IsDisableDamageHit // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsCheckFriendlyFire(struct AActor* HitActor); // Function BattlePrototype.HitCheckInterface.IsCheckFriendlyFire // (Event|Public|BlueprintEvent) // @ game+0x1685580
	struct AActor* GetHitCheckIgnoredActor(); // Function BattlePrototype.HitCheckInterface.GetHitCheckIgnoredActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.HitCheckReceiverComponent
// Size: 0xf0 (Inherited: 0xc0)
struct UHitCheckReceiverComponent : UActorComponent {
	struct FMulticastInlineDelegate DispatchHitAttack; // 0xc0(0x10)
	struct FMulticastInlineDelegate DispatchHitDirectAttack; // 0xd0(0x10)
	struct FMulticastInlineDelegate DispatchHitDamage; // 0xe0(0x10)

	struct UHitCheckReceiverComponent* GetHitCheckReceiverComponentFromActor(struct AActor* Actor); // Function BattlePrototype.HitCheckReceiverComponent.GetHitCheckReceiverComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1218cb0
};

// Class BattlePrototype.HitCheckUtility
// Size: 0x28 (Inherited: 0x28)
struct UHitCheckUtility : UBlueprintFunctionLibrary {

	float GetElementValueFromCommonInfo(struct FHCCollisionCommonInfo commonInfo, enum class HCElementKind kind); // Function BattlePrototype.HitCheckUtility.GetElementValueFromCommonInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121bc60
	float GetConditionValueFromCommonInfo(struct FHCCollisionCommonInfo commonInfo, enum class ConditionKind kind); // Function BattlePrototype.HitCheckUtility.GetConditionValueFromCommonInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121baf0
	float GetCollisionValueFromCommonInfo(struct FHCCollisionCommonInfo commonInfo, enum class HCCollisionValueKind kind); // Function BattlePrototype.HitCheckUtility.GetCollisionValueFromCommonInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121b980
};

// Class BattlePrototype.HitEffectInterface
// Size: 0x28 (Inherited: 0x28)
struct UHitEffectInterface : UInterface {

	enum class FHitEffectPriority GetHitEffectPriorityInterface(); // Function BattlePrototype.HitEffectInterface.GetHitEffectPriorityInterface // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184400
};

// Class BattlePrototype.HitStopComponent
// Size: 0x108 (Inherited: 0xc0)
struct UHitStopComponent : UActorComponent {
	float HitStopTime_Short; // 0xc0(0x04)
	float HitStopTime_Middle; // 0xc4(0x04)
	float HitStopTime_Large; // 0xc8(0x04)
	float HitStopTime_XLarge; // 0xcc(0x04)
	float HitStopTime_XXLarge; // 0xd0(0x04)
	float HitStopRate_Short; // 0xd4(0x04)
	float HitStopRate_Middle; // 0xd8(0x04)
	float HitStopRate_Large; // 0xdc(0x04)
	float HitStopRate_XLarge; // 0xe0(0x04)
	float HitStopRate_XXLarge; // 0xe4(0x04)
	float HitStopDelay; // 0xe8(0x04)
	char pad_EC[0x1c]; // 0xec(0x1c)

	void StartHitStopByType(enum class HCRestictedHitStopType HitStopType, bool bCritical); // Function BattlePrototype.HitStopComponent.StartHitStopByType // (Final|Native|Public|BlueprintCallable) // @ game+0x121c6a0
	void StartHitStop(float HitStopSec, float actionSpeedRate); // Function BattlePrototype.HitStopComponent.StartHitStop // (Final|Native|Public|BlueprintCallable) // @ game+0x121c5e0
	void SetActiveHitStop(bool activeHitStop); // Function BattlePrototype.HitStopComponent.SetActiveHitStop // (Final|Native|Public|BlueprintCallable) // @ game+0x121c310
	struct UHitStopComponent* GetHitStopComponent(struct AActor* Actor); // Function BattlePrototype.HitStopComponent.GetHitStopComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x121be00
	void EndHitStop(); // Function BattlePrototype.HitStopComponent.EndHitStop // (Final|Native|Public|BlueprintCallable) // @ game+0x121b8e0
};

// Class BattlePrototype.HoveringComponent
// Size: 0xf8 (Inherited: 0xc0)
struct UHoveringComponent : UActorComponent {
	float _minFlightAltitude; // 0xc0(0x04)
	float _maxFlightAltitude; // 0xc4(0x04)
	bool _isHoveringCharacter; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct TArray<struct FName> _disableClaimantNames; // 0xd0(0x10)
	struct FName _claimantName; // 0xe0(0x08)
	char pad_E8[0x10]; // 0xe8(0x10)

	void SetDisableHovering(struct FName ClaimantName); // Function BattlePrototype.HoveringComponent.SetDisableHovering // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x121c3a0
	struct UHoveringComponent* GetHoveringComponent(struct AActor* Actor); // Function BattlePrototype.HoveringComponent.GetHoveringComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x121be80
	float GetFlightAltitudeAverage(); // Function BattlePrototype.HoveringComponent.GetFlightAltitudeAverage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x121bdd0
	void ClearDisableHovering(struct FName ClaimantName); // Function BattlePrototype.HoveringComponent.ClearDisableHovering // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x121b6d0
};

// Class BattlePrototype.HPEventComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UHPEventComponent : UActorComponent {
	struct TArray<struct FCharacterHPEventInfo> HpEventInfos; // 0xc0(0x10)

	void CheckHpEvent(struct AActor* Actor, float preHpRate, float postHpRate); // Function BattlePrototype.HPEventComponent.CheckHpEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x121b5d0
};

// Class BattlePrototype.IceConditionComponent
// Size: 0x190 (Inherited: 0x160)
struct UIceConditionComponent : UConditionComponent {
	float _iceActionSpeedRate; // 0x160(0x04)
	float _iceDamageRate; // 0x164(0x04)
	struct USoundBase* _pIceBeginSound; // 0x168(0x08)
	struct USoundBase* _pIceEndSound; // 0x170(0x08)
	struct AIceConditionEffectActor* _pEffectActor; // 0x178(0x08)
	char pad_180[0x10]; // 0x180(0x10)
};

// Class BattlePrototype.IceConditionEffectActor
// Size: 0x250 (Inherited: 0x230)
struct AIceConditionEffectActor : AActor {
	struct UParticleSystem* _pBeginEffect; // 0x230(0x08)
	struct UParticleSystem* _pEndEffect; // 0x238(0x08)
	struct UParticleSystemComponent* _pEffectComp; // 0x240(0x08)
	struct USceneComponent* _pRootSceneComp; // 0x248(0x08)

	void FinishEffect(); // Function BattlePrototype.IceConditionEffectActor.FinishEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x121b960
};

// Class BattlePrototype.IntroTutorialManager
// Size: 0x280 (Inherited: 0x230)
struct AIntroTutorialManager : AActor {
	struct FMulticastInlineDelegate OnSuccessInput; // 0x230(0x10)
	char pad_240[0x20]; // 0x240(0x20)
	struct TArray<struct USoundAtomCue*> SEArray; // 0x260(0x10)
	char pad_270[0x10]; // 0x270(0x10)

	void StopDispMiniTipsAll(); // Function BattlePrototype.IntroTutorialManager.StopDispMiniTipsAll // (Final|Native|Public|BlueprintCallable) // @ game+0x121c800
	bool StartTutorial(enum class EIntroTutorialType Type); // Function BattlePrototype.IntroTutorialManager.StartTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x121c770
	void StartDispMiniTips(enum class EHelpTutorial TutorialID, struct FName guideID, float minDispTime); // Function BattlePrototype.IntroTutorialManager.StartDispMiniTips // (Final|Native|Public|BlueprintCallable) // @ game+0x121c4d0
	bool SetTutrialPKGaugeRecovery(bool IsOn); // Function BattlePrototype.IntroTutorialManager.SetTutrialPKGaugeRecovery // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121c430
	bool RestrictPlayerSpecialAttack(bool IsOn); // Function BattlePrototype.IntroTutorialManager.RestrictPlayerSpecialAttack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121c270
	bool RestrictPlayerPsychic(bool IsOn); // Function BattlePrototype.IntroTutorialManager.RestrictPlayerPsychic // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121c1d0
	bool RestrictPlayerLaunchAttack(bool IsOn); // Function BattlePrototype.IntroTutorialManager.RestrictPlayerLaunchAttack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121c130
	bool RestrictPlayerAttack(bool IsOn); // Function BattlePrototype.IntroTutorialManager.RestrictPlayerAttack // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11741f0
	bool RemoveEnemysNoDead(int32_t GroupID, int32_t SubGroupID); // Function BattlePrototype.IntroTutorialManager.RemoveEnemysNoDead // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121c060
	void OnTutorialSuccess_StepInAttack(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_StepInAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x121c040
	void OnTutorialSuccess_SpecialAttack(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_SpecialAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x121c020
	void OnTutorialSuccess_PsychicCombo(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_PsychicCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x121c000
	void OnTutorialSuccess_Psychic(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_Psychic // (Final|Native|Public|BlueprintCallable) // @ game+0x121bfe0
	void OnTutorialSuccess_Lockon(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_Lockon // (Final|Native|Public|BlueprintCallable) // @ game+0x121bfc0
	void OnTutorialSuccess_LaunchAttack(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_LaunchAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x121bfa0
	void OnTutorialSuccess_Jump(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_Jump // (Final|Native|Public|BlueprintCallable) // @ game+0x121bf80
	void OnTutorialSuccess_Dodge(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_Dodge // (Final|Native|Public|BlueprintCallable) // @ game+0x121bf60
	void OnTutorialSuccess_Dash(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_Dash // (Final|Native|Public|BlueprintCallable) // @ game+0x121bf40
	void OnTutorialSuccess_ChangeLockon(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_ChangeLockon // (Final|Native|Public|BlueprintCallable) // @ game+0x121bf20
	void OnTutorialSuccess_Attack(); // Function BattlePrototype.IntroTutorialManager.OnTutorialSuccess_Attack // (Final|Native|Public|BlueprintCallable) // @ game+0x121bf00
	bool EndTutorial(); // Function BattlePrototype.IntroTutorialManager.EndTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x121b930
	bool EndIntroTutorial(); // Function BattlePrototype.IntroTutorialManager.EndIntroTutorial // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121b900
	void EndDispMiniTips(enum class EHelpTutorial TutorialID, bool forceStop); // Function BattlePrototype.IntroTutorialManager.EndDispMiniTips // (Final|Native|Public|BlueprintCallable) // @ game+0x121b810
	void EndDispCurrentMiniTips(bool forceStop); // Function BattlePrototype.IntroTutorialManager.EndDispCurrentMiniTips // (Final|Native|Public|BlueprintCallable) // @ game+0x121b780
	void DisplaySuccess(); // Function BattlePrototype.IntroTutorialManager.DisplaySuccess // (Final|Native|Public|BlueprintCallable) // @ game+0x121b760
	bool BeginIntroTutorial(); // Function BattlePrototype.IntroTutorialManager.BeginIntroTutorial // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x121b5a0
};

// Class BattlePrototype.ItemCaptureParamExporter
// Size: 0x28 (Inherited: 0x28)
struct UItemCaptureParamExporter : UBlueprintFunctionLibrary {

	void ExportItemDataTableType(struct FItemDataTableRaw ItemDataTableRaw, struct FString outputJsonPath); // Function BattlePrototype.ItemCaptureParamExporter.ExportItemDataTableType // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // @ game+0x121e7c0
};

// Class BattlePrototype.ItemCaptureStaticMeshBase
// Size: 0x248 (Inherited: 0x230)
struct AItemCaptureStaticMeshBase : AActor {
	struct AItemCaptureStaticMeshBase* bpClass; // 0x230(0x08)
	struct UStaticMeshComponent* m_rootComp; // 0x238(0x08)
	struct UStaticMesh* m_staticMesh; // 0x240(0x08)

	bool GenerateStaticMesh(struct UObject* WorldContextObject, struct AItemCaptureStaticMeshBase* bpClassType, struct FString meshPath); // Function BattlePrototype.ItemCaptureStaticMeshBase.GenerateStaticMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x121e900
};

// Class BattlePrototype.ItemData
// Size: 0xf8 (Inherited: 0x28)
struct UItemData : UObject {
	struct UDataTable* RefItemTable; // 0x28(0x08)
	struct UDataTable* RefArrangeItemTable; // 0x30(0x08)
	struct TArray<struct FName> ItemIDs; // 0x38(0x10)
	struct TMap<enum class EPlayerID, struct FItemIDArray> PresentItemDataM; // 0x48(0x50)
	struct TMap<enum class EPlayerID, struct FItemIDArray> PresentItemDataF; // 0x98(0x50)
	struct TArray<struct FName> BattleItemIDs; // 0xe8(0x10)

	bool LoadItemDataTable(struct FString ItemTablePath, struct FString ArrangeItemDataTablePath); // Function BattlePrototype.ItemData.LoadItemDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x12200d0
	int32_t GetTradeNumberOfTimes(struct FName ID); // Function BattlePrototype.ItemData.GetTradeNumberOfTimes // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x121fe30
	struct FString GetName(struct FName ID); // Function BattlePrototype.ItemData.GetName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x121efc0
	int32_t GetItemIndex(struct FName ID); // Function BattlePrototype.ItemData.GetItemIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x121f9d0
	struct TArray<struct FName> GetItemIDs(); // Function BattlePrototype.ItemData.GetItemIDs // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x121f8c0
	enum class EItemFavorability GetFavorability(struct FName ID, enum class EPlayerID charID); // Function BattlePrototype.ItemData.GetFavorability // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x121f0a0
	struct FString GetDescription(struct FName ID); // Function BattlePrototype.ItemData.GetDescription // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x121efc0
	bool GetDataByItemID(struct FItemDataCell ItemData, int32_t ItemId); // Function BattlePrototype.ItemData.GetDataByItemID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121ee60
	bool GetData(struct FItemDataCell ItemData, struct FName ID); // Function BattlePrototype.ItemData.GetData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121ed00
	bool GetArrangeData(struct FArrangeItemDataCell ArrangeItemData, struct FName ID); // Function BattlePrototype.ItemData.GetArrangeData // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121ea50
};

// Class BattlePrototype.ItemDataUtility
// Size: 0x28 (Inherited: 0x28)
struct UItemDataUtility : UBlueprintFunctionLibrary {

	int32_t MakeItemID(enum class EItemCategory Category, int32_t ID); // Function BattlePrototype.ItemDataUtility.MakeItemID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12203a0
	struct FName MakeItemDataName(int32_t ItemId); // Function BattlePrototype.ItemDataUtility.MakeItemDataName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1220310
	bool IsValidItemId(int32_t ItemId); // Function BattlePrototype.ItemDataUtility.IsValidItemId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1220050
	bool IsInvalidSell(struct FItemDataCell ItemDataCell); // Function BattlePrototype.ItemDataUtility.IsInvalidSell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121ff40
	bool IsCategoryAttachment(enum class EItemCategory Category); // Function BattlePrototype.ItemDataUtility.IsCategoryAttachment // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x121fec0
	int32_t getNumOfEquipment(struct UObject* WorldContextObject, struct FName ItemId); // Function BattlePrototype.ItemDataUtility.getNumOfEquipment // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1220460
	bool GetLotteryResultItemID(struct UObject* WorldContextObject, bool isRare, struct FArrangeItemDataCell ArrangeItemDataCell, struct FName ItemId, int32_t itemNum); // Function BattlePrototype.ItemDataUtility.GetLotteryResultItemID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x121fc30
	enum class EItemRarity GetItemRarity(struct FItemDataCell ItemDataCell); // Function BattlePrototype.ItemDataUtility.GetItemRarity // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121fb20
	int32_t GetItemIndex(struct UObject* WorldContextObject, struct FName ID); // Function BattlePrototype.ItemDataUtility.GetItemIndex // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x121fa60
	void GetItemIDs(struct UObject* WorldContextObject, struct TArray<struct FName> ItemIDs); // Function BattlePrototype.ItemDataUtility.GetItemIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121f8f0
	struct FText GetItemDataName(struct UObject* WorldContextObject, struct FItemDataCell ItemDataCell); // Function BattlePrototype.ItemDataUtility.GetItemDataName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121f720
	struct FText GetItemDataDescription(struct UObject* WorldContextObject, struct FItemDataCell ItemDataCell); // Function BattlePrototype.ItemDataUtility.GetItemDataDescription // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121f580
	bool GetItemDataCellByItemId(struct UObject* WorldContextObject, struct FItemDataCell ItemData, int32_t ItemId); // Function BattlePrototype.ItemDataUtility.GetItemDataCellByItemId // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x121f3f0
	bool GetItemDataCell(struct UObject* WorldContextObject, struct FItemDataCell ItemData, struct FName ID); // Function BattlePrototype.ItemDataUtility.GetItemDataCell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121f260
	int32_t GetItemCategoryID(int32_t ItemId); // Function BattlePrototype.ItemDataUtility.GetItemCategoryID // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x121f1e0
	enum class EItemCategory GetItemCategory(int32_t ItemId); // Function BattlePrototype.ItemDataUtility.GetItemCategory // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x121f160
	bool GetArrangeItemDataCell(struct UObject* WorldContextObject, struct FArrangeItemDataCell ItemData, struct FName ID); // Function BattlePrototype.ItemDataUtility.GetArrangeItemDataCell // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x121eb90
};

// Class BattlePrototype.ArrangeItemStageManager
// Size: 0x48 (Inherited: 0x28)
struct UArrangeItemStageManager : UObject {
	struct TArray<struct TWeakObjectPtr<struct AArrangeItemBase>> ArrangeItems; // 0x28(0x10)
	struct TArray<struct TWeakObjectPtr<struct AArrangeItemBase>> UnvisivleArrangeItemsInEvent; // 0x38(0x10)

	void UnregisterArrangeItemAll(); // Function BattlePrototype.ArrangeItemStageManager.UnregisterArrangeItemAll // (Native|Public|BlueprintCallable) // @ game+0x117b150
	void UnregisterArrangeItem(struct AArrangeItemBase* ArrangeItem); // Function BattlePrototype.ArrangeItemStageManager.UnregisterArrangeItem // (Native|Public|BlueprintCallable) // @ game+0x117b0c0
	void SetVisible(bool IsVisible, int32_t LevelID, int32_t GroupID); // Function BattlePrototype.ArrangeItemStageManager.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x12247a0
	void RegisterArrangeItem(struct AArrangeItemBase* ArrangeItem); // Function BattlePrototype.ArrangeItemStageManager.RegisterArrangeItem // (Native|Public|BlueprintCallable) // @ game+0x117a930
	void Initialize(struct UObject* WorldContextObject); // Function BattlePrototype.ArrangeItemStageManager.Initialize // (Native|Public|BlueprintCallable) // @ game+0x117a1f0
	struct AArrangeItemBase* GetArrangeItem(struct FString ID); // Function BattlePrototype.ArrangeItemStageManager.GetArrangeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x12239c0
	void ChangeVisibleActorInEvent(bool IsVisible); // Function BattlePrototype.ArrangeItemStageManager.ChangeVisibleActorInEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1223110
};

// Class BattlePrototype.JumpAreaBase
// Size: 0x278 (Inherited: 0x238)
struct AJumpAreaBase : ATriggerBox {
	int32_t LocationNo; // 0x238(0x04)
	int32_t AreaNo; // 0x23c(0x04)
	int32_t PortalNo; // 0x240(0x04)
	bool UseSelectNextAreaFunction; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)
	int32_t LocationNoJumpTo; // 0x248(0x04)
	int32_t AreaNoJumpTo; // 0x24c(0x04)
	int32_t PortalNoJumpTo; // 0x250(0x04)
	struct FName StartPortalNameJumpTo; // 0x254(0x08)
	bool IsOpenWorldMap; // 0x25c(0x01)
	char pad_25D[0x3]; // 0x25d(0x03)
	struct FName ToDetailSubAreaName; // 0x260(0x08)
	struct TArray<struct FAreaInfoTweakCondition> Conditions; // 0x268(0x10)

	bool IsAcceptableJumpArea(); // Function BattlePrototype.JumpAreaBase.IsAcceptableJumpArea // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
};

// Class BattlePrototype.JumpComponent
// Size: 0xe0 (Inherited: 0xc0)
struct UJumpComponent : UActorComponent {
	struct FMulticastInlineDelegate OnStartJump; // 0xc0(0x10)
	char pad_D0[0x10]; // 0xd0(0x10)

	void ReceiveOnGround(); // Function BattlePrototype.JumpComponent.ReceiveOnGround // (Final|Native|Public|BlueprintCallable) // @ game+0x1224660
	void InputJump(); // Function BattlePrototype.JumpComponent.InputJump // (Final|Native|Public|BlueprintCallable) // @ game+0x1224180
};

// Class BattlePrototype.LC21MapGimmickManager
// Size: 0x268 (Inherited: 0x230)
struct ALC21MapGimmickManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct AActor* BossFloorActorClass; // 0x238(0x08)
	struct TArray<struct AMapGimmickObject*> Objects; // 0x240(0x10)
	struct TArray<struct FBossFloorInfo> ObjectInfoList; // 0x250(0x10)
	int32_t CurrentGimmickNo; // 0x260(0x04)
	int32_t MostLeftFloorNo; // 0x264(0x04)

	bool StartEventLaserSetWall(); // Function BattlePrototype.LC21MapGimmickManager.StartEventLaserSetWall // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	bool StartEventLaserFar(); // Function BattlePrototype.LC21MapGimmickManager.StartEventLaserFar // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	bool StartEventLaserCenter(); // Function BattlePrototype.LC21MapGimmickManager.StartEventLaserCenter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	bool StartEventLaser(); // Function BattlePrototype.LC21MapGimmickManager.StartEventLaser // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	bool RemoveAllPart(); // Function BattlePrototype.LC21MapGimmickManager.RemoveAllPart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	int32_t GetMostRightSideFloorNo(float Offset, int32_t StartId, int32_t EndId, bool CheckIsFall); // Function BattlePrototype.LC21MapGimmickManager.GetMostRightSideFloorNo // (Final|Native|Public|BlueprintCallable) // @ game+0x1223e20
	void GetAllFloorObjectsAndSort(); // Function BattlePrototype.LC21MapGimmickManager.GetAllFloorObjectsAndSort // (Final|Native|Public|BlueprintCallable) // @ game+0x1223780
	bool FindAllObjectsAndInitialize(); // Function BattlePrototype.LC21MapGimmickManager.FindAllObjectsAndInitialize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	bool FallLeftFloor(float OffsetY); // Function BattlePrototype.LC21MapGimmickManager.FallLeftFloor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1223710
	void ClearObjectInfoList(); // Function BattlePrototype.LC21MapGimmickManager.ClearObjectInfoList // (Final|Native|Public|BlueprintCallable) // @ game+0x1223670
	bool ChangePhase(int32_t PhaseNo); // Function BattlePrototype.LC21MapGimmickManager.ChangePhase // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1223090
};

// Class BattlePrototype.LevelManager
// Size: 0x250 (Inherited: 0x230)
struct ALevelManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct FMulticastInlineDelegate OnCompleteUnloadLevelAll; // 0x238(0x10)
	char pad_248[0x8]; // 0x248(0x08)

	void SyncUnloadStreamLevels(); // Function BattlePrototype.LevelManager.SyncUnloadStreamLevels // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t StreamingTextureLoadAllBlock(); // Function BattlePrototype.LevelManager.StreamingTextureLoadAllBlock // (Final|Native|Public|BlueprintCallable) // @ game+0x1224970
	int32_t StreamingTextureBlockTillAllRequestsFinished(float timeLimit, bool bLogResults); // Function BattlePrototype.LevelManager.StreamingTextureBlockTillAllRequestsFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x12248a0
	void SetStreamingSettings(struct FRSStreamingSettings Settings); // Function BattlePrototype.LevelManager.SetStreamingSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x1224680
	int32_t GetStreamingTextureNum(); // Function BattlePrototype.LevelManager.GetStreamingTextureNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1224040
	struct FName GetShortAreaName(int32_t LocationId, int32_t areaId); // Function BattlePrototype.LevelManager.GetShortAreaName // (Final|Native|Public|BlueprintCallable) // @ game+0x1223f70
	struct FRSStreamingSettings GetCurrentStreamingSettings(); // Function BattlePrototype.LevelManager.GetCurrentStreamingSettings // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1223b80
	struct FName GetAreaName(int32_t LocationId, int32_t areaId, int32_t VariationID); // Function BattlePrototype.LevelManager.GetAreaName // (Final|Native|Public|BlueprintCallable) // @ game+0x12238b0
	bool GetAreaInfoFromNative(struct FName AreName, struct TArray<struct FName> outLevenName); // Function BattlePrototype.LevelManager.GetAreaInfoFromNative // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FName GetAreaBGName(int32_t LocationId, int32_t areaId, int32_t VariationID); // Function BattlePrototype.LevelManager.GetAreaBGName // (Final|Native|Public|BlueprintCallable) // @ game+0x12237a0
	bool CheckTweakConditionFunc(struct FAreaInfoTweakCondition TweakCondition); // Function BattlePrototype.LevelManager.CheckTweakConditionFunc // (Final|Native|Public|BlueprintCallable) // @ game+0x12235d0
	bool CallAreaSelectVariationFunction(int32_t LocationId, int32_t areaId, int32_t VariationID, int32_t PortaflID, bool NoChange, int32_t OutLocationID, int32_t OutAreaID, int32_t OutVariationID); // Function BattlePrototype.LevelManager.CallAreaSelectVariationFunction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1222e20
	bool CallAreaPostLoadFunction(int32_t LocationId, int32_t areaId, int32_t VariationID, bool IsFirstTry, bool Initialized); // Function BattlePrototype.LevelManager.CallAreaPostLoadFunction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1222c70
};

// Class BattlePrototype.BondsLevelupData
// Size: 0x60 (Inherited: 0x28)
struct UBondsLevelupData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct FBondsLevelupExpData> expListM; // 0x30(0x10)
	struct TArray<struct FBondsLevelupExpData> expListF; // 0x40(0x10)
	struct FBondsLevelupExpData dummyList; // 0x50(0x10)

	void LoadDataTable(); // Function BattlePrototype.BondsLevelupData.LoadDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x12243c0
	bool IsValidResource(); // Function BattlePrototype.BondsLevelupData.IsValidResource // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12241a0
	struct TArray<int32_t> GetBondsLevelupTable(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.BondsLevelupData.GetBondsLevelupTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1223ab0
};

// Class BattlePrototype.TeamBondsLevelupData
// Size: 0x40 (Inherited: 0x28)
struct UTeamBondsLevelupData : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UDataTable* dataTableM; // 0x30(0x08)
	struct UDataTable* dataTableF; // 0x38(0x08)

	void LoadDataTable(); // Function BattlePrototype.TeamBondsLevelupData.LoadDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x12243e0
	bool IsValidResource(); // Function BattlePrototype.TeamBondsLevelupData.IsValidResource // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12241a0
	struct UDataTable* GetTeamBondsLevelupTable(enum class EPlayerID playerId); // Function BattlePrototype.TeamBondsLevelupData.GetTeamBondsLevelupTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1224070
};

// Class BattlePrototype.LibraryCharaData
// Size: 0x40 (Inherited: 0x28)
struct ULibraryCharaData : UObject {
	struct ULibraryCharaDBAsset* Asset; // 0x28(0x08)
	struct UDataTable* openDataM; // 0x30(0x08)
	struct UDataTable* openDataF; // 0x38(0x08)

	bool LoadDataAsset(struct FString Path, struct FString openDataPathM, struct FString openDataPathF); // Function BattlePrototype.LibraryCharaData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x12241c0
};

// Class BattlePrototype.LibraryCharacterParam
// Size: 0x58 (Inherited: 0x28)
struct ULibraryCharacterParam : UObject {
	struct FFlag libFlags; // 0x28(0x10)
	struct TArray<struct FName> openLibList; // 0x38(0x10)
	struct ULibraryCharaData* DataTable; // 0x48(0x08)
	struct URSGameInstance* GameInstance; // 0x50(0x08)

	void OpenCharLib(struct FName libName); // Function BattlePrototype.LibraryCharacterParam.OpenCharLib // (Final|Native|Public|BlueprintCallable) // @ game+0x1224520
	void OnFlag(enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryCharacterParam.OnFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1224490
	void OffFlag(enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryCharacterParam.OffFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1224400
	void InitData(struct URSGameInstance* GameInstance); // Function BattlePrototype.LibraryCharacterParam.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x1224100
	bool GetLibraryData(struct FLibraryCharaDataCell Data, struct FName CharaID, bool isDebugOpen); // Function BattlePrototype.LibraryCharacterParam.GetLibraryData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1223ca0
	int32_t GetDBKeys(struct TArray<struct FName> dst); // Function BattlePrototype.LibraryCharacterParam.GetDBKeys // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1223be0
	void CloseCharLib(struct FName libName); // Function BattlePrototype.LibraryCharacterParam.CloseCharLib // (Final|Native|Public|BlueprintCallable) // @ game+0x1223690
	int32_t CheckLibraryOpenByProgresNo(int32_t ProgressNo); // Function BattlePrototype.LibraryCharacterParam.CheckLibraryOpenByProgresNo // (Final|Native|Public|BlueprintCallable) // @ game+0x1223480
	bool CheckFlag(enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryCharacterParam.CheckFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12233e0
};

// Class BattlePrototype.LibraryCharacterParamUtility
// Size: 0x28 (Inherited: 0x28)
struct ULibraryCharacterParamUtility : UBlueprintFunctionLibrary {

	bool OpenCharacterLibray(struct UObject* WorldContextObject, struct FName libName); // Function BattlePrototype.LibraryCharacterParamUtility.OpenCharacterLibray // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12245a0
	int32_t CheckLibraryOpenByProgresNo(struct UObject* WorldContextObject, int32_t ProgressNo); // Function BattlePrototype.LibraryCharacterParamUtility.CheckLibraryOpenByProgresNo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1223510
	bool CharaLibraryOnFlag(struct UObject* WorldContextObject, enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryCharacterParamUtility.CharaLibraryOnFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1223320
	bool CharaLibraryOffFlag(struct UObject* WorldContextObject, enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryCharacterParamUtility.CharaLibraryOffFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1223260
	bool CharaLibraryCheckFlag(struct UObject* WorldContextObject, enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryCharacterParamUtility.CharaLibraryCheckFlag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12231a0
};

// Class BattlePrototype.LibraryCharaDBAsset
// Size: 0x78 (Inherited: 0x28)
struct ULibraryCharaDBAsset : UObject {
	struct TMap<struct FName, struct FLibraryCharaDBCell> DBMap; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.LibraryCharaDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.LibraryEnemyDBAsset
// Size: 0x78 (Inherited: 0x28)
struct ULibraryEnemyDBAsset : UObject {
	struct TMap<struct FName, struct FLibraryEnemyDBCell> DBMap; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.LibraryEnemyDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.LibraryEnemyData
// Size: 0x30 (Inherited: 0x28)
struct ULibraryEnemyData : UObject {
	struct ULibraryEnemyDBAsset* Asset; // 0x28(0x08)

	bool LoadDataAsset(struct FString assetPath); // Function BattlePrototype.LibraryEnemyData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x12281b0
};

// Class BattlePrototype.LibraryEnemyParam
// Size: 0x110 (Inherited: 0x28)
struct ULibraryEnemyParam : UObject {
	struct TMap<struct FName, struct FLibraryEnemyParamData> paramMapM; // 0x28(0x50)
	struct TMap<struct FName, struct FLibraryEnemyParamData> paramMapF; // 0x78(0x50)
	struct FFlag libFlagsM; // 0xc8(0x10)
	struct FFlag libFlagsF; // 0xd8(0x10)
	struct URSGameInstance* gameInst; // 0xe8(0x08)
	struct ULibraryEnemyData* DataTable; // 0xf0(0x08)
	char pad_F8[0x18]; // 0xf8(0x18)

	void ResetAll(); // Function BattlePrototype.LibraryEnemyParam.ResetAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1228360
	bool IsInitialized(); // Function BattlePrototype.LibraryEnemyParam.IsInitialized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1228190
	void InitData(struct URSGameInstance* GameInstance); // Function BattlePrototype.LibraryEnemyParam.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x1228110
	bool GetLibraryDataFromLibraryID(struct FLibraryEnemyDataCell Data, struct FName libraryID, bool isPlayerM, int32_t ProgressNo, bool isDebugOpen); // Function BattlePrototype.LibraryEnemyParam.GetLibraryDataFromLibraryID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1227db0
	bool GetLibraryData(struct FLibraryEnemyDataCell Data, struct FName EnemyID, bool isPlayerM, int32_t ProgressNo, bool isDebugOpen); // Function BattlePrototype.LibraryEnemyParam.GetLibraryData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1227a50
};

// Class BattlePrototype.LibraryEnemyParamUtility
// Size: 0x28 (Inherited: 0x28)
struct ULibraryEnemyParamUtility : UBlueprintFunctionLibrary {

	bool OpenEnemyLibray(struct UObject* WorldContextObject, struct FName EnemyID); // Function BattlePrototype.LibraryEnemyParamUtility.OpenEnemyLibray // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12282a0
	bool GetLibraryDataFromLibraryID(struct UObject* WorldContextObject, struct FLibraryEnemyDataCell Data, struct FName libraryID, bool isDebugOpen); // Function BattlePrototype.LibraryEnemyParamUtility.GetLibraryDataFromLibraryID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1227f90
	bool GetLibraryData(struct UObject* WorldContextObject, struct FLibraryEnemyDataCell Data, struct FName EnemyID, bool isDebugOpen); // Function BattlePrototype.LibraryEnemyParamUtility.GetLibraryData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1227c30
	void GetItemDroppingEnemyList(struct UObject* WorldContextObject, struct FName ItemId, struct TArray<struct FName> outEnemyList); // Function BattlePrototype.LibraryEnemyParamUtility.GetItemDroppingEnemyList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1227930
	int32_t GetImageVariationNum(struct UObject* WorldContextObject, struct FName EnemyID, bool isDebugOpen); // Function BattlePrototype.LibraryEnemyParamUtility.GetImageVariationNum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1227840
	void EnemyLibraryUpdateIncKillNum(struct UObject* WorldContextObject, struct FName EnemyID); // Function BattlePrototype.LibraryEnemyParamUtility.EnemyLibraryUpdateIncKillNum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1227790
	void EnemyLibraryUpdateGetDropItem(struct UObject* WorldContextObject, struct FName EnemyID, struct FName ItemId); // Function BattlePrototype.LibraryEnemyParamUtility.EnemyLibraryUpdateGetDropItem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12276a0
	bool EnemyLibraryOnFlag(struct UObject* WorldContextObject, enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryEnemyParamUtility.EnemyLibraryOnFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12275e0
	bool EnemyLibraryOffFlag(struct UObject* WorldContextObject, enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryEnemyParamUtility.EnemyLibraryOffFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1227520
	bool EnemyLibraryIsOpenLibrary(struct UObject* WorldContextObject, struct FName EnemyID); // Function BattlePrototype.LibraryEnemyParamUtility.EnemyLibraryIsOpenLibrary // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1227460
	bool EnemyLibraryCheckFlag(struct UObject* WorldContextObject, enum class ELibraryFlagType flagNo); // Function BattlePrototype.LibraryEnemyParamUtility.EnemyLibraryCheckFlag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12273a0
};

// Class BattlePrototype.LoadTipsData
// Size: 0x38 (Inherited: 0x28)
struct ULoadTipsData : UObject {
	struct UDataTable* LoadingTipsDataTable; // 0x28(0x08)
	struct UDataTable* RetryLoadingTipsDataTable; // 0x30(0x08)
};

// Class BattlePrototype.LoadTipsParamManager
// Size: 0xf0 (Inherited: 0x28)
struct ULoadTipsParamManager : UObject {
	struct TArray<struct FLoadTipsParam> loadTipsParams_; // 0x28(0x10)
	struct TArray<struct FLoadTipsBlockParam> loadTipsBlockDataParamsM_; // 0x38(0x10)
	struct TArray<struct FLoadTipsBlockParam> loadTipsBlockDataParamsF_; // 0x48(0x10)
	struct TArray<struct FLoadTipsBlockParam> loadTipsBlockDataParamsCommon_; // 0x58(0x10)
	int32_t beforeSelectTipsID_; // 0x68(0x04)
	char pad_6C[0xc]; // 0x6c(0x0c)
	struct URSGameInstance* gameInst_; // 0x78(0x08)
	struct ULoadTipsData* loadTipsData_; // 0x80(0x08)
	struct TMap<struct FName, int32_t> displayCount_; // 0x88(0x50)
	char pad_D8[0x18]; // 0xd8(0x18)

	void InitData(struct URSGameInstance* gameInst); // Function BattlePrototype.LoadTipsParamManager.InitData // (Final|Native|Public) // @ game+0x122ef10
	int32_t GetNextTips(); // Function BattlePrototype.LoadTipsParamManager.GetNextTips // (Final|Native|Public|BlueprintCallable) // @ game+0x122ee20
	int32_t GetBeginningTips(enum class EPlayerID playerId, int32_t ProgressNo, int32_t nextLocation); // Function BattlePrototype.LoadTipsParamManager.GetBeginningTips // (Final|Native|Public|BlueprintCallable) // @ game+0x122e420
};

// Class BattlePrototype.MainEventLatentActor
// Size: 0x238 (Inherited: 0x230)
struct AMainEventLatentActor : AActor {
	char pad_230[0x8]; // 0x230(0x08)

	void FinishWait(); // Function BattlePrototype.MainEventLatentActor.FinishWait // (Final|Native|Public|BlueprintCallable) // @ game+0x122e400
};

// Class BattlePrototype.LoadingInterludeLatentActor
// Size: 0x230 (Inherited: 0x230)
struct ALoadingInterludeLatentActor : AActor {

	void FinishWait(); // Function BattlePrototype.LoadingInterludeLatentActor.FinishWait // (Final|Native|Public|BlueprintCallable) // @ game+0x122e3e0
};

// Class BattlePrototype.MakeEventActor
// Size: 0x408 (Inherited: 0x230)
struct AMakeEventActor : AActor {
	struct FDelegate OnEvent; // 0x230(0x10)
	struct TArray<struct FName> CharaPresetNameList; // 0x240(0x10)
	struct TArray<struct FName> TextureRowNameList; // 0x250(0x10)
	struct TArray<struct FName> MovieTextureRowNameList; // 0x260(0x10)
	struct TArray<struct FName> AnimAssetPathList; // 0x270(0x10)
	struct TArray<struct FName> AnimBPPathList; // 0x280(0x10)
	struct TArray<enum class EEventPostProcessID> EventPostProcessIDList; // 0x290(0x10)
	bool IsSkip; // 0x2a0(0x01)
	bool IsActiveBPEvent; // 0x2a1(0x01)
	bool bStaticToInGame; // 0x2a2(0x01)
	bool bStoreSequencerInGameTransform; // 0x2a3(0x01)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct AActor* OwnerActor; // 0x2a8(0x08)
	struct FString SkipUnableSpaceString; // 0x2b0(0x10)
	int32_t m_InterludeID; // 0x2c0(0x04)
	char pad_2C4[0x4]; // 0x2c4(0x04)
	struct USoundAtomCue* SkipMessageSE; // 0x2c8(0x08)
	bool m_isWait; // 0x2d0(0x01)
	enum class EEventWaitMode m_waitMode; // 0x2d1(0x01)
	char pad_2D2[0x2]; // 0x2d2(0x02)
	float m_waitSecond; // 0x2d4(0x04)
	char pad_2D8[0x8]; // 0x2d8(0x08)
	struct APlayerController* m_PlayerController; // 0x2e0(0x08)
	bool m_IsEndMotion; // 0x2e8(0x01)
	char pad_2E9[0x7]; // 0x2e9(0x07)
	struct UObject* m_AnimationActor; // 0x2f0(0x08)
	bool m_isStartDynamicCutscene; // 0x2f8(0x01)
	bool m_isCallSkipMessage; // 0x2f9(0x01)
	char pad_2FA[0x6]; // 0x2fa(0x06)
	struct AActor* m_pWaitAnimMontageActor; // 0x300(0x08)
	struct UAnimMontage* m_pWaitAnimMontageMontage; // 0x308(0x08)
	struct UEventAsset* m_pWaitLoadAsset; // 0x310(0x08)
	enum class EStoreSeqCapStatus m_StoreSeqCapStatus; // 0x318(0x01)
	enum class ESequenceSkipPhase m_SequenceSkipPhase; // 0x319(0x01)
	bool m_IsStopBoadMotion; // 0x31a(0x01)
	bool m_IsSkipLatentNode; // 0x31b(0x01)
	bool m_bInputOnSkipLatentNode; // 0x31c(0x01)
	char pad_31D[0x3]; // 0x31d(0x03)
	struct AMainEventLatentActor* m_Latenter; // 0x320(0x08)
	bool IsKeyDown; // 0x328(0x01)
	char pad_329[0x3]; // 0x329(0x03)
	float KeyDownTime; // 0x32c(0x04)
	bool m_IsOrWaitInput; // 0x330(0x01)
	bool IsCurrentStaticEvent; // 0x331(0x01)
	char pad_332[0x6]; // 0x332(0x06)
	struct TMap<struct FName, struct UAnimationAsset*> m_PreLoadAnimationMap; // 0x338(0x50)
	struct TMap<struct FName, struct UObject*> m_PreLoadAnimationBPMap; // 0x388(0x50)
	struct UCurveFloat* m_PreLoadCurveFloat[0x3]; // 0x3d8(0x18)
	struct TArray<struct UMaterialInterface*> m_PreLoadPPMList; // 0x3f0(0x10)
	char pad_400[0x8]; // 0x400(0x08)

	void WaitTutoTips(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitTutoTips // (Final|Native|Public|BlueprintCallable) // @ game+0x1234db0
	void WaitSubQuestReward(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitSubQuestReward // (Final|Native|Public|BlueprintCallable) // @ game+0x1234cc0
	void WaitShop(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitShop // (Final|Native|Public|BlueprintCallable) // @ game+0x1234bd0
	void WaitSaveLoad(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitSaveLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x1234ae0
	void WaitSasWindow(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitSasWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x12349f0
	void WaitSASCutinExtra(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitSASCutinExtra // (Final|Native|Public|BlueprintCallable) // @ game+0x1234900
	void WaitSASCutinCh0500_0700(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitSASCutinCh0500_0700 // (Final|Native|Public|BlueprintCallable) // @ game+0x1234810
	void WaitSASCutinCh0400_0600(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitSASCutinCh0400_0600 // (Final|Native|Public|BlueprintCallable) // @ game+0x1234720
	void WaitPostProcessSequencer(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitPostProcessSequencer // (Final|Native|Public|BlueprintCallable) // @ game+0x1234630
	void WaitPhaseAnimation(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, bool IsOrWaitInput, bool OnSkipLatentNodeFlag); // Function BattlePrototype.MakeEventActor.WaitPhaseAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12344c0
	void WaitNewStaticInGeneralAnimation(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitNewStaticInGeneralAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12343d0
	void WaitMipLoadReadyMesh(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, struct FName MeshName, float TimeLimitSeconds); // Function BattlePrototype.MakeEventActor.WaitMipLoadReadyMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1234270
	void WaitMipLoadReady(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, float TimeLimitSeconds); // Function BattlePrototype.MakeEventActor.WaitMipLoadReady // (Final|Native|Public|BlueprintCallable) // @ game+0x1234140
	void WaitMessage(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1234050
	void WaitMainEvent(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, struct FDelegate onEventDispatcher); // Function BattlePrototype.MakeEventActor.WaitMainEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1233f10
	void WaitLogMessage(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitLogMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1233e20
	void WaitLoadMakeEventAsset(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitLoadMakeEventAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1233bc0
	void WaitLoadingInterlude(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, struct FDelegate onEventDispatcher, int32_t ID); // Function BattlePrototype.MakeEventActor.WaitLoadingInterlude // (Final|Native|Public|BlueprintCallable) // @ game+0x1233cb0
	void WaitLoadChangeScene(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitLoadChangeScene // (Final|Native|Public|BlueprintCallable) // @ game+0x1233ad0
	void WaitLoadAssetAll(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitLoadAssetAll // (Final|Native|Public|BlueprintCallable) // @ game+0x12339e0
	void WaitInput(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitInput // (Final|Native|Public|BlueprintCallable) // @ game+0x12338f0
	void WaitGeneralChoice(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitGeneralChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x1233800
	void WaitFade(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitFade // (Final|Native|Public|BlueprintCallable) // @ game+0x1233710
	void WaitEventTips(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEventTips // (Final|Native|Public|BlueprintCallable) // @ game+0x1233620
	void WaitEventBrainFieldTuto(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEventBrainFieldTuto // (Final|Native|Public|BlueprintCallable) // @ game+0x1233530
	void WaitEndSubMenu(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEndSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1233440
	void WaitEndKeyword(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEndKeyword // (Final|Native|Public|BlueprintCallable) // @ game+0x1233350
	void WaitEndCreditEvent(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEndCreditEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1233260
	void WaitEndCode(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEndCode // (Final|Native|Public|BlueprintCallable) // @ game+0x1233170
	void WaitEndBrainTalk(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitEndBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x1233080
	void WaitDynamicCutscene(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitDynamicCutscene // (Final|Native|Public|BlueprintCallable) // @ game+0x1232f90
	void WaitDelayOrInput(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, float Duration, bool OnSkipLatentNodeFlag); // Function BattlePrototype.MakeEventActor.WaitDelayOrInput // (Final|Native|Public|BlueprintCallable) // @ game+0x1232e30
	void WaitCloseSystemMessage(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitCloseSystemMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1232d40
	void WaitCharacterEventMoveEnd(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitCharacterEventMoveEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1232c50
	void WaitBrainFieldDangerLV(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, enum class EPlayerBrainFieldDanger DangerLvType); // Function BattlePrototype.MakeEventActor.WaitBrainFieldDangerLV // (Final|Native|Public|BlueprintCallable) // @ game+0x1232b20
	void WaitBrainFieldButton(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitBrainFieldButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1232a30
	void WaitBrainField(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1232940
	void WaitBoardBGAnimation(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.WaitBoardBGAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1232850
	void WaitBoardAnimation(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, int32_t CaptureActorIndex); // Function BattlePrototype.MakeEventActor.WaitBoardAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1232720
	void UpdateTownPeopleSubQuestState(); // Function BattlePrototype.MakeEventActor.UpdateTownPeopleSubQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x1232700
	void UpdateBondsLevelAllMembers(enum class EPlayerID playerId, struct TArray<enum class EPlayerID> levelupMembers, bool isSingleLvUp); // Function BattlePrototype.MakeEventActor.UpdateBondsLevelAllMembers // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12325d0
	bool UpdateBondsLevel(enum class EPlayerID playerId, enum class EPlayerID TargetID, bool isSingleLvUp); // Function BattlePrototype.MakeEventActor.UpdateBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x12324c0
	void UnLockInputSubMenu(); // Function BattlePrototype.MakeEventActor.UnLockInputSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1232480
	void UnloadMessage(); // Function BattlePrototype.MakeEventActor.UnloadMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x12324a0
	void StoreSequencerInGameTransform(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, struct ULevelSequence* Sequnece, float SequencePosition); // Function BattlePrototype.MakeEventActor.StoreSequencerInGameTransform // (Final|Native|Public|BlueprintCallable) // @ game+0x1232320
	void StaticEventStart(); // Function BattlePrototype.MakeEventActor.StaticEventStart // (Final|Native|Public|BlueprintCallable) // @ game+0x1232300
	void StaticEventEnd(bool isRestoreTransform); // Function BattlePrototype.MakeEventActor.StaticEventEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1232270
	void StartupCutscene(bool IsPartyPlayerBattleReady, bool IsENPCBattleReady, bool PreLoad); // Function BattlePrototype.MakeEventActor.StartupCutscene // (Final|Native|Public|BlueprintCallable) // @ game+0x1232150
	void StartUITutoTipsByID(enum class EHelpTutorial helpTutoID, bool notPauseControll, bool notCloseOfPause); // Function BattlePrototype.MakeEventActor.StartUITutoTipsByID // (Final|Native|Public|BlueprintCallable) // @ game+0x1232040
	void StartUITutoTips(struct FName helpTutoID); // Function BattlePrototype.MakeEventActor.StartUITutoTips // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
	void StartUITutoOperation(struct FName helpTutoID); // Function BattlePrototype.MakeEventActor.StartUITutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x1231fc0
	void StartUIRewardSubQuest(struct FName SubQuestID); // Function BattlePrototype.MakeEventActor.StartUIRewardSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1231f40
	void StartUIEffectSubQuest(struct FName SubQuestID); // Function BattlePrototype.MakeEventActor.StartUIEffectSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1231ec0
	void StartUIEffectBondsQuest(struct FName bondsQuestId); // Function BattlePrototype.MakeEventActor.StartUIEffectBondsQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1231e40
	void StartTalkEvent(bool IsAutoInput); // Function BattlePrototype.MakeEventActor.StartTalkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1231db0
	void StartSubQuestById(struct FName SubQuestID, bool NoCheck, bool UiEffectFlag); // Function BattlePrototype.MakeEventActor.StartSubQuestById // (Final|Native|Public|BlueprintCallable) // @ game+0x1231ca0
	void StartSubQuest(bool NoCheck, bool UiEffectFlag); // Function BattlePrototype.MakeEventActor.StartSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1231bd0
	void StartKeyword(); // Function BattlePrototype.MakeEventActor.StartKeyword // (Final|Native|Public|BlueprintCallable) // @ game+0x1231bb0
	void StartHighSpeedMode(); // Function BattlePrototype.MakeEventActor.StartHighSpeedMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartFadeOut(float FadeSeconds, float ColorR, float ColorG, float ColorB, float ColorA, bool isUnderCaption); // Function BattlePrototype.MakeEventActor.StartFadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x1231810
	void StartFadeIn(float FadeSeconds, float ColorR, float ColorG, float ColorB, float ColorA, bool isUnderCaption); // Function BattlePrototype.MakeEventActor.StartFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x12319e0
	void StartFade(float FadeSeconds, float ColorR, float ColorG, float ColorB, float ColorA, bool isUnderCaption); // Function BattlePrototype.MakeEventActor.StartFade // (Final|Native|Public|BlueprintCallable) // @ game+0x1231810
	bool StartEventBattlefield(int32_t GroupID, int32_t SubGroupID); // Function BattlePrototype.MakeEventActor.StartEventBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x1231750
	void StartEvent(); // Function BattlePrototype.MakeEventActor.StartEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x1174080
	void StartDynamicCutscene(struct ULevelSequence* Sequence, bool IsSeamlessInGame, struct FName OwnerShipExternalActorTag); // Function BattlePrototype.MakeEventActor.StartDynamicCutscene // (Final|Native|Public|BlueprintCallable) // @ game+0x1231650
	void StartCode(); // Function BattlePrototype.MakeEventActor.StartCode // (Final|Native|Public|BlueprintCallable) // @ game+0x1231630
	void StartBondsQuestById(struct FName bondsQuestId, bool NoCheck, bool UiEffectFlag); // Function BattlePrototype.MakeEventActor.StartBondsQuestById // (Final|Native|Public|BlueprintCallable) // @ game+0x1231520
	bool StartBattlefield(enum class EBattlefieldEventType Type, int32_t GroupID, int32_t SubGroupID, struct TArray<struct FBattlefieldTutorialInfo> AdditionalTutorialInfo, struct AMakeEventActor* MakeEventActorClass, int32_t TutorialGroupID, int32_t TutorialSubGroupID, float FenceBattleRate, struct FString SeedString, bool IsOnceBattle); // Function BattlePrototype.MakeEventActor.StartBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x12311a0
	void StartAutoBoardAnimation(int32_t CaptureActorIndex, struct FString BoardAnimNamePath, struct UAnimMontage* AddAnimMontage, enum class EStaticPlType StaticPlType, struct TSoftObjectPtr<UCurveFloat> PlayRateCurveData); // Function BattlePrototype.MakeEventActor.StartAutoBoardAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1230f70
	void SpawnEnemiesBySubGroup(int32_t GroupID, int32_t SubGroupID); // Function BattlePrototype.MakeEventActor.SpawnEnemiesBySubGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x1230eb0
	void SpawnEnemiesByGroup(int32_t GroupID); // Function BattlePrototype.MakeEventActor.SpawnEnemiesByGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void SkipMessage(bool NoPlaySE); // Function BattlePrototype.MakeEventActor.SkipMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1230e20
	void SkipEvent(); // Function BattlePrototype.MakeEventActor.SkipEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1230e00
	void Shop(enum class EEventShopType ShopType, int32_t ShopParam, int32_t TradeShopParam); // Function BattlePrototype.MakeEventActor.Shop // (Final|Native|Public|BlueprintCallable) // @ game+0x1230d00
	void SetTransformCaptureBGCamera(struct FTransform Transform); // Function BattlePrototype.MakeEventActor.SetTransformCaptureBGCamera // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1230650
	void SetTransformCaptureBG(struct FTransform Transform); // Function BattlePrototype.MakeEventActor.SetTransformCaptureBG // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1230560
	void SettingCapture(int32_t CaptureActorIndex, int32_t BoardMeshIndex, struct FName CapturePresetName, struct FName CharaBodyAnimationSectionName, struct FName CharaFaceAnimationSectionName, int32_t NpcMeshTableID, int32_t NpcMaterialTableID, struct FName LightPresetName, struct ULevelSequence* CaptureSequnece, float CaptureSequnecePositon, struct FName TextureRowName, enum class EStaticPlType StaticPlType, struct FName MovieTextureRowName, bool IsUseSaveTexture, bool IsSeamlessInGameCapture, bool IsHiddenPlFrameEffect, struct FName CharaEyePresetName, float EyeXAxisThreshold, float EyeYAxisThreshold, struct FString CharaPartsMontagePath); // Function BattlePrototype.MakeEventActor.SettingCapture // (Final|Native|Public|BlueprintCallable) // @ game+0x1230740
	void SetSubQuestState(struct FName SubQuestID, enum class QuestProgressState SetState); // Function BattlePrototype.MakeEventActor.SetSubQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x12304a0
	void SetStopBoadMotionFlag(bool IsStop); // Function BattlePrototype.MakeEventActor.SetStopBoadMotionFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1230420
	void SetPlayerController(struct APlayerController* PlayerController); // Function BattlePrototype.MakeEventActor.SetPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x12303a0
	void SetPlayBattleUI(bool IsVisible); // Function BattlePrototype.MakeEventActor.SetPlayBattleUI // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetIsWaitFlag(bool IsWait); // Function BattlePrototype.MakeEventActor.SetIsWaitFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3a60
	void SetIsEndMotion(bool IsEndMotion); // Function BattlePrototype.MakeEventActor.SetIsEndMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x1230320
	void SetEventPause(bool IsPause); // Function BattlePrototype.MakeEventActor.SetEventPause // (Final|Native|Public|BlueprintCallable) // @ game+0x1230290
	void SetEventMovieTextureAndPrepare(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, struct UManaTexture* movieTexture); // Function BattlePrototype.MakeEventActor.SetEventMovieTextureAndPrepare // (Final|Native|Public|BlueprintCallable) // @ game+0x1230160
	void SetDirectionalLight(struct FName LightPresetName); // Function BattlePrototype.MakeEventActor.SetDirectionalLight // (Final|Native|Public|BlueprintCallable) // @ game+0x12300e0
	void SetBondsQuestState(struct FName bondsQuestId, enum class QuestProgressState SetState); // Function BattlePrototype.MakeEventActor.SetBondsQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x1230020
	void SetBondsProgress(enum class EPlayerID heroID, enum class EPlayerID partnerId, int32_t SetValue, bool notUpdateBrainMes); // Function BattlePrototype.MakeEventActor.SetBondsProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x122fed0
	void SetAnimationActor(struct UObject* Object); // Function BattlePrototype.MakeEventActor.SetAnimationActor // (Final|Native|Public|BlueprintCallable) // @ game+0x122fe50
	void SetActiveSubQuest(struct FName SubQuestID); // Function BattlePrototype.MakeEventActor.SetActiveSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x122fdd0
	void SetActionIconType(bool NeedKizunaIcon); // Function BattlePrototype.MakeEventActor.SetActionIconType // (Final|Native|Public|BlueprintCallable) // @ game+0x122fd40
	void SaveLoad(enum class EEventSaveLoadType SaveType, enum class EEventSaveLoadExType Mode); // Function BattlePrototype.MakeEventActor.SaveLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x122fc80
	void RestartUpdatingBrainMessage(); // Function BattlePrototype.MakeEventActor.RestartUpdatingBrainMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x122fc60
	void RequestChangeScene(int32_t LocationId, int32_t areaId, int32_t PortalID, struct FName StartPortalName, bool NoFade, enum class ELoadingScreenType LoadingScreenType, int32_t LoadingScreenParam, bool IsAutoSaveEnable); // Function BattlePrototype.MakeEventActor.RequestChangeScene // (Final|Native|Public|BlueprintCallable) // @ game+0x122fa20
	void PreLoadAllVoice(); // Function BattlePrototype.MakeEventActor.PreLoadAllVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x122fa00
	void PlayGeneralBoardAnimation(int32_t CaptureActorIndex, struct FString boardAnimationName, int32_t AttachCaptureActorIndex, struct UAnimMontage* AddAnimMontage, struct TSoftObjectPtr<UCurveFloat> PlayRateCurveData); // Function BattlePrototype.MakeEventActor.PlayGeneralBoardAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x122f7d0
	void PlayBoardBGAnimation(struct FString BoardAnimNamePath, bool IsLoop); // Function BattlePrototype.MakeEventActor.PlayBoardBGAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x122f6a0
	void PlayBoardAnimation(int32_t CaptureActorIndex, struct FString BoardAnimNamePath, bool IsLoop, struct FName SocketName, struct TSoftObjectPtr<UCurveFloat> PlayRateCurveData); // Function BattlePrototype.MakeEventActor.PlayBoardAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x122f470
	void OpenScarletLogo(); // Function BattlePrototype.MakeEventActor.OpenScarletLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x122f450
	void OpenEventBrainFieldTuto(); // Function BattlePrototype.MakeEventActor.OpenEventBrainFieldTuto // (Final|Native|Public|BlueprintCallable) // @ game+0x122f430
	void OnStartGameEventNative(); // Function BattlePrototype.MakeEventActor.OnStartGameEventNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnStartEvent(); // Function BattlePrototype.MakeEventActor.OnStartEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x122f410
	void OnSkipUnableFlag(); // Function BattlePrototype.MakeEventActor.OnSkipUnableFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x122f3f0
	void OnFinishEvent(); // Function BattlePrototype.MakeEventActor.OnFinishEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x122f3d0
	void OffSkipUnableFlag(); // Function BattlePrototype.MakeEventActor.OffSkipUnableFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x122f3b0
	void OffSkipLatentNodeFlag(); // Function BattlePrototype.MakeEventActor.OffSkipLatentNodeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x122f390
	void NPCTurnToPlayer(float Speed); // Function BattlePrototype.MakeEventActor.NPCTurnToPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x122f310
	void NPCPlayAnimation(enum class ENpcAnimationKind AnimKind); // Function BattlePrototype.MakeEventActor.NPCPlayAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x122f290
	void NPCLookAtPlayer(bool IsLookAt); // Function BattlePrototype.MakeEventActor.NPCLookAtPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x122f200
	void LockInputSubMenu(); // Function BattlePrototype.MakeEventActor.LockInputSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x122f1e0
	void LoadMessage(struct FString messageDataPath, bool PreLoad); // Function BattlePrototype.MakeEventActor.LoadMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x122f0b0
	int32_t LC21ChangePhase(int32_t PhaseNo); // Function BattlePrototype.MakeEventActor.LC21ChangePhase // (Final|Native|Public|BlueprintCallable) // @ game+0x122f020
	bool IsWaitEndSASCutinCh0500_0700(); // Function BattlePrototype.MakeEventActor.IsWaitEndSASCutinCh0500_0700 // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsWaitEndSASCutinCh0400_0600(); // Function BattlePrototype.MakeEventActor.IsWaitEndSASCutinCh0400_0600 // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsStartBattlefield(int32_t GroupID); // Function BattlePrototype.MakeEventActor.IsStartBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x122ef90
	bool IsSeamlessStart(); // Function BattlePrototype.MakeEventActor.IsSeamlessStart // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isSavedSaveLoadMenuError(); // Function BattlePrototype.MakeEventActor.isSavedSaveLoadMenuError // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1234ff0
	bool isSavedSaveLoadMenu(); // Function BattlePrototype.MakeEventActor.isSavedSaveLoadMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1234fc0
	bool isCancelKeyword(); // Function BattlePrototype.MakeEventActor.isCancelKeyword // (Final|Native|Public|BlueprintCallable) // @ game+0x1234f60
	bool isCanceledCode(); // Function BattlePrototype.MakeEventActor.isCanceledCode // (Final|Native|Public|BlueprintCallable) // @ game+0x1234f90
	enum class QuestProgressState GetSubQuestProgressById(struct FName SubQuestID); // Function BattlePrototype.MakeEventActor.GetSubQuestProgressById // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x122ee80
	enum class QuestProgressState GetSubQuestProgress(); // Function BattlePrototype.MakeEventActor.GetSubQuestProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x122ee50
	struct FString getResultKeyword(); // Function BattlePrototype.MakeEventActor.getResultKeyword // (Final|Native|Public|BlueprintCallable) // @ game+0x1234ee0
	struct FName getResultCode(); // Function BattlePrototype.MakeEventActor.getResultCode // (Final|Native|Public|BlueprintCallable) // @ game+0x1234ea0
	struct FString GetMessageForMessageLabel(struct FString messageLabel); // Function BattlePrototype.MakeEventActor.GetMessageForMessageLabel // (Final|Native|Public|BlueprintCallable) // @ game+0x122ecf0
	int32_t GetLastChoiceResult(); // Function BattlePrototype.MakeEventActor.GetLastChoiceResult // (Final|Native|Public|BlueprintCallable) // @ game+0x122ecc0
	int32_t GetGeneralChoiceResult(); // Function BattlePrototype.MakeEventActor.GetGeneralChoiceResult // (Final|Native|Public|BlueprintCallable) // @ game+0x122ec90
	int32_t GetEnemyNumInSubGroup(int32_t GroupID, int32_t SubGroupID); // Function BattlePrototype.MakeEventActor.GetEnemyNumInSubGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x122ebd0
	int32_t GetEnemyNumInGroup(int32_t GroupID); // Function BattlePrototype.MakeEventActor.GetEnemyNumInGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x122eb40
	struct FBattlefieldInfo GetCurrentBattlefieldInfo(); // Function BattlePrototype.MakeEventActor.GetCurrentBattlefieldInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x122e980
	int32_t GetChoiceResult(int32_t MessageIndex); // Function BattlePrototype.MakeEventActor.GetChoiceResult // (Final|Native|Public|BlueprintCallable) // @ game+0x122e8f0
	int32_t GetBondsValue(enum class EPlayerID heroID, enum class EPlayerID partnerId); // Function BattlePrototype.MakeEventActor.GetBondsValue // (Final|Native|Public|BlueprintCallable) // @ game+0x122e820
	enum class QuestProgressState GetBondsQuestProgressById(struct FName bondsQuestId); // Function BattlePrototype.MakeEventActor.GetBondsQuestProgressById // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x122e790
	int32_t GetBondsProgress(enum class EPlayerID heroID, enum class EPlayerID partnerId); // Function BattlePrototype.MakeEventActor.GetBondsProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x122e6c0
	int32_t GetBondsLevel(enum class EPlayerID heroID, enum class EPlayerID partnerId); // Function BattlePrototype.MakeEventActor.GetBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x122e5f0
	float GetBondsFValue(enum class EPlayerID heroID, enum class EPlayerID partnerId); // Function BattlePrototype.MakeEventActor.GetBondsFValue // (Final|Native|Public|BlueprintCallable) // @ game+0x122e520
	void FinishUIEffectSubQuest(struct FName SubQuestID); // Function BattlePrototype.MakeEventActor.FinishUIEffectSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x122e360
	void FinishUIEffectBondsQuest(struct FName bondsQuestId); // Function BattlePrototype.MakeEventActor.FinishUIEffectBondsQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x122e2e0
	void FinishSubQuestById(struct FName SubQuestID, bool NoCheck, bool UiEffectFlag); // Function BattlePrototype.MakeEventActor.FinishSubQuestById // (Final|Native|Public|BlueprintCallable) // @ game+0x122e1d0
	void FinishSubQuest(bool NoCheck, bool UiEffectFlag); // Function BattlePrototype.MakeEventActor.FinishSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x122e100
	void EventAllManagerStart(bool TickEnable, bool Visibility); // Function BattlePrototype.MakeEventActor.EventAllManagerStart // (Final|Native|Public|BlueprintCallable) // @ game+0x122e030
	void EventAllManagerEnd(bool RestoreTickEnable, bool RestoreVisibility); // Function BattlePrototype.MakeEventActor.EventAllManagerEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x122df60
	void EndTalkEvent(bool isRestoreTransform); // Function BattlePrototype.MakeEventActor.EndTalkEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x122ded0
	void EndHighSpeedMode(); // Function BattlePrototype.MakeEventActor.EndHighSpeedMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EndFade(float FadeSeconds, bool isUnderCaption); // Function BattlePrototype.MakeEventActor.EndFade // (Final|Native|Public|BlueprintCallable) // @ game+0x122de00
	bool EndEventBattlefield(int32_t GroupID, bool ForceCloseFence); // Function BattlePrototype.MakeEventActor.EndEventBattlefield // (Final|Native|Public|BlueprintCallable) // @ game+0x122dd40
	void EndCutScene(bool isEndEvent, float PlayerCameraBlendTime, enum class EViewTargetBlendFunction PlayerCameraBlendFunc, float PlayerCameraBlendExp, struct FName SkipENPCCamRowName); // Function BattlePrototype.MakeEventActor.EndCutScene // (Final|Native|Public|BlueprintCallable) // @ game+0x122dbb0
	void EndBattlefieldForce(int32_t GroupID); // Function BattlePrototype.MakeEventActor.EndBattlefieldForce // (Final|Native|Public|BlueprintCallable) // @ game+0x122db30
	bool EnableEventBattlefieldFence(int32_t FenceGroupID); // Function BattlePrototype.MakeEventActor.EnableEventBattlefieldFence // (Final|Native|Public|BlueprintCallable) // @ game+0x122daa0
	void EffectBokeh(int32_t CaptureActorIndex, struct UCurveFloat* Curve, bool CurveReverse); // Function BattlePrototype.MakeEventActor.EffectBokeh // (Final|Native|Public|BlueprintCallable) // @ game+0x122d9a0
	void DrawMessage(int32_t windowType, struct FString messageLabel, struct FName RipSyncBoardJointID, bool skipable, float DrawSecond, bool isSkipVoiceEnd, bool IsVoiceOnlyMessage); // Function BattlePrototype.MakeEventActor.DrawMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x122d730
	void DrawGeneralChoice4(enum class ETextType TextType, struct FName TextMain, int32_t DefaultCursor, struct FName Choice1, struct FName Choice2, struct FName Choice3, struct FName Choice4, bool isCancelable); // Function BattlePrototype.MakeEventActor.DrawGeneralChoice4 // (Final|Native|Public|BlueprintCallable) // @ game+0x122d4f0
	void DrawGeneralChoice3(enum class ETextType TextType, struct FName TextMain, int32_t DefaultCursor, struct FName Choice1, struct FName Choice2, struct FName Choice3, bool isCancelable); // Function BattlePrototype.MakeEventActor.DrawGeneralChoice3 // (Final|Native|Public|BlueprintCallable) // @ game+0x122d2f0
	void DrawGeneralChoice2(enum class ETextType TextType, struct FName TextMain, int32_t DefaultCursor, struct FName Choice1, struct FName Choice2, bool isCancelable); // Function BattlePrototype.MakeEventActor.DrawGeneralChoice2 // (Final|Native|Public|BlueprintCallable) // @ game+0x122d130
	void DrawGeneralChoice1(enum class ETextType TextType, struct FName TextMain, struct FName Choice1, bool isCancelable); // Function BattlePrototype.MakeEventActor.DrawGeneralChoice1 // (Final|Native|Public|BlueprintCallable) // @ game+0x122cfe0
	int32_t DrawChoiceMessage(struct FString Choice1, struct FString Choice2, struct FString Choice3, struct FString Choice4, struct FString Choice5, int32_t DefaultCursor, float DrawSecond); // Function BattlePrototype.MakeEventActor.DrawChoiceMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x122cc50
	bool DisableEventBattlefieldFence(int32_t FenceGroupID); // Function BattlePrototype.MakeEventActor.DisableEventBattlefieldFence // (Final|Native|Public|BlueprintCallable) // @ game+0x122cbc0
	void CloseUITutoTips(); // Function BattlePrototype.MakeEventActor.CloseUITutoTips // (Final|Native|Public|BlueprintCallable) // @ game+0x122cba0
	void CloseUITutoOperation(struct FName ClosehelpTutoID); // Function BattlePrototype.MakeEventActor.CloseUITutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
	void CloseScarletLogo(); // Function BattlePrototype.MakeEventActor.CloseScarletLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x122cb80
	void CloseForceUITutoOperation(); // Function BattlePrototype.MakeEventActor.CloseForceUITutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x122cb60
	int32_t CheckSubQuestRewardResult(); // Function BattlePrototype.MakeEventActor.CheckSubQuestRewardResult // (Final|Native|Public|BlueprintCallable) // @ game+0x122cb30
	bool CheckBondsLevelUp(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.MakeEventActor.CheckBondsLevelUp // (Final|Native|Public|BlueprintCallable) // @ game+0x122ca60
	void ChangePresetCamera(struct FCameraTriggerInfo triggerInfo, bool bLerp); // Function BattlePrototype.MakeEventActor.ChangePresetCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x122c950
	void ChangePlayerFromClass(enum class RSPartyPlayerKind PartyPlayerType, struct TSoftClassPtr<UObject> CharacterClass); // Function BattlePrototype.MakeEventActor.ChangePlayerFromClass // (Final|Native|Public|BlueprintCallable) // @ game+0x122c840
	void ChangeMainPlayer(); // Function BattlePrototype.MakeEventActor.ChangeMainPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x122c820
	void CaptureSceneBGForLevelSequencerAndDelay(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_, struct ULevelSequence* CaptureSequence, float CaptureSequencePosition); // Function BattlePrototype.MakeEventActor.CaptureSceneBGForLevelSequencerAndDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x122c6c0
	void CaptureSceneBG(struct UObject* worldContextObject_, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MakeEventActor.CaptureSceneBG // (Final|Native|Public|BlueprintCallable) // @ game+0x122c5d0
	void CaptureScene(int32_t CaptureActorIndex); // Function BattlePrototype.MakeEventActor.CaptureScene // (Final|Native|Public|BlueprintCallable) // @ game+0x122c550
	void BoardEffectAnimationAlpha(int32_t CaptureActorIndex, float Time, float Start, float End, struct UCurveFloat* Curve, bool Loop); // Function BattlePrototype.MakeEventActor.BoardEffectAnimationAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x122c390
	void BGEffectScanline(struct UCurveFloat* Curve, bool IsLoop); // Function BattlePrototype.MakeEventActor.BGEffectScanline // (Final|Native|Public|BlueprintCallable) // @ game+0x122c2c0
	void BGEffectNoise(struct UCurveFloat* Curve, bool IsLoop); // Function BattlePrototype.MakeEventActor.BGEffectNoise // (Final|Native|Public|BlueprintCallable) // @ game+0x122c1f0
	void BGEffectGlitch(struct UCurveFloat* Curve, bool IsLoop); // Function BattlePrototype.MakeEventActor.BGEffectGlitch // (Final|Native|Public|BlueprintCallable) // @ game+0x122c120
	void BGEffectFringe(struct UCurveFloat* Curve, bool IsLoop); // Function BattlePrototype.MakeEventActor.BGEffectFringe // (Final|Native|Public|BlueprintCallable) // @ game+0x122c050
	void AddBondsValue(enum class EPlayerID heroID, enum class EPlayerID partnerId, float addNum); // Function BattlePrototype.MakeEventActor.AddBondsValue // (Final|Native|Public|BlueprintCallable) // @ game+0x122bf50
	void AddBondsLevel(enum class EPlayerID heroID, enum class EPlayerID partnerId, int32_t addNum); // Function BattlePrototype.MakeEventActor.AddBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x122be50
	void AddBoardBGAnimation(struct FString BoardAnimNamePath, bool IsLoop); // Function BattlePrototype.MakeEventActor.AddBoardBGAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x122bd20
	void AddBoardAnimation(int32_t CaptureActorIndex, struct FString BoardAnimNamePath, bool IsLoop); // Function BattlePrototype.MakeEventActor.AddBoardAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x122bbb0
};

// Class BattlePrototype.ManagerInterface
// Size: 0x28 (Inherited: 0x28)
struct UManagerInterface : UInterface {

	bool IsNeedFrameWait(); // Function BattlePrototype.ManagerInterface.IsNeedFrameWait // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11845b0
	bool InitializeManager(enum class EManagerProcTiming Timing); // Function BattlePrototype.ManagerInterface.InitializeManager // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239500
	bool FinalizeManager(enum class EManagerProcTiming Timing); // Function BattlePrototype.ManagerInterface.FinalizeManager // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1238af0
	void DelayBeginPlay(); // Function BattlePrototype.ManagerInterface.DelayBeginPlay // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211a90
};

// Class BattlePrototype.MapGimmickAnimInstance
// Size: 0x280 (Inherited: 0x270)
struct UMapGimmickAnimInstance : UAnimInstance {
	bool IsOpen; // 0x270(0x01)
	char pad_271[0xf]; // 0x271(0x0f)
};

// Class BattlePrototype.MapGimmickManager
// Size: 0x338 (Inherited: 0x230)
struct AMapGimmickManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct FMulticastInlineDelegate OnBeginOverlapMapGimmickAreaEvent; // 0x238(0x10)
	struct FMulticastInlineDelegate OnEndOverlapMapGimmickAreaEvent; // 0x248(0x10)
	struct FMulticastInlineDelegate OnExecMapGimmickEvent; // 0x258(0x10)
	struct FMulticastInlineDelegate OnChangeFinishedMapGimmickEvent; // 0x268(0x10)
	struct FMulticastInlineDelegate OnChangeReuseStartMapGimmickEvent; // 0x278(0x10)
	struct TArray<struct FString> FinishedGimmickNames; // 0x288(0x10)
	struct TArray<struct AActor*> AllMapGimmicks; // 0x298(0x10)
	struct TArray<struct AGimmickTriggerVolume*> AllTriggerVolumes; // 0x2a8(0x10)
	struct TArray<struct AMapGimmickObject*> ActivatedMapGimmicks; // 0x2b8(0x10)
	struct TArray<struct FMovingRoadActor> MovingActors; // 0x2c8(0x10)
	struct TArray<char> LiftFloorList; // 0x2d8(0x10)
	struct TMap<enum class EMapGimmickType, int32_t> GimmickUseTimeMap; // 0x2e8(0x50)

	void SetLiftFloor(enum class ELiftFloorInfoId ID, int32_t floor); // Function BattlePrototype.MapGimmickManager.SetLiftFloor // (Final|Native|Public|BlueprintCallable) // @ game+0x123abf0
	bool RequestToMapGimmick(enum class EMapGimmickStateRequest Request, struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.RequestToMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x123a3c0
	void RegisterMapGimmick(struct AActor* Actor); // Function BattlePrototype.MapGimmickManager.RegisterMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x123a2b0
	void OnEndOverlapMovingRoad(struct AActor* Actor, struct AActor* RoadActor); // Function BattlePrototype.MapGimmickManager.OnEndOverlapMovingRoad // (Final|Native|Public|BlueprintCallable) // @ game+0x1239a50
	void OnBeginOverlapMovingRoad(struct AActor* Actor, struct AActor* RoadActor); // Function BattlePrototype.MapGimmickManager.OnBeginOverlapMovingRoad // (Final|Native|Public|BlueprintCallable) // @ game+0x1239770
	bool IsActivatedMapGimmick(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.IsActivatedMapGimmick // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1239590
	void InitializeAtAreaStart(); // Function BattlePrototype.MapGimmickManager.InitializeAtAreaStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174080
	void InitializeAreaData(); // Function BattlePrototype.MapGimmickManager.InitializeAreaData // (Final|Native|Public|BlueprintCallable) // @ game+0x12394c0
	int32_t GetMapGimmickUseTime(enum class EMapGimmickType Type); // Function BattlePrototype.MapGimmickManager.GetMapGimmickUseTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1238e60
	int32_t GetLiftFloor(enum class ELiftFloorInfoId ID); // Function BattlePrototype.MapGimmickManager.GetLiftFloor // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1238d60
	bool DeactivateMapGimmick(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.DeactivateMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x1238a60
	bool CanChargeMapGimmick(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.CanChargeMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x1238790
	bool CallOnExecMapGimmickEvent(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.CallOnExecMapGimmickEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1238350
	bool CallOnEndOverlapMapGimmickAreaEvent(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.CallOnEndOverlapMapGimmickAreaEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12382c0
	bool CallOnChangeReuseStartMapGimmickEvent(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.CallOnChangeReuseStartMapGimmickEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1238230
	bool CallOnChangeFinishedMapGimmickEvent(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.CallOnChangeFinishedMapGimmickEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12381a0
	bool CallOnBeginOverlapMapGimmickAreaEvent(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.CallOnBeginOverlapMapGimmickAreaEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1238110
	bool AddMapGimmickUseTime(struct AMapGimmickObject* gimmick); // Function BattlePrototype.MapGimmickManager.AddMapGimmickUseTime // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1237f60
	bool ActivateMapGimmick(struct AMapGimmickObject* map_gimmick); // Function BattlePrototype.MapGimmickManager.ActivateMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x1237ed0
};

// Class BattlePrototype.MapGimmickObject
// Size: 0x620 (Inherited: 0x230)
struct AMapGimmickObject : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	struct AMapGimmickManager* MapGimmickManager; // 0x240(0x08)
	enum class EMapGimmickType MapGimmickType; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct UDataTable* StateDefineTable; // 0x250(0x08)
	struct FName InitialStateName; // 0x258(0x08)
	bool UseWeightGauge; // 0x260(0x01)
	bool UseBossGauge; // 0x261(0x01)
	bool IsOverlapBroadcastToPlayer; // 0x262(0x01)
	bool CanUseGimmickFlag; // 0x263(0x01)
	char pad_264[0x4]; // 0x264(0x04)
	struct USceneComponent* ModelRootComponent; // 0x268(0x08)
	struct FName CurrentStateName; // 0x270(0x08)
	int32_t CurrentStateStep; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct FMapGimmickState CurrentState; // 0x280(0x48)
	float TimeInState; // 0x2c8(0x04)
	float ChargeTimeToActivate; // 0x2cc(0x04)
	float ChargeCancelingTime; // 0x2d0(0x04)
	float PsychicCost; // 0x2d4(0x04)
	float CurrentChargeTime; // 0x2d8(0x04)
	float InitialChargeTime; // 0x2dc(0x04)
	bool IsAdjustPlaceInCharge; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	float LengthPlaceInCharge; // 0x2e4(0x04)
	bool IsAdjustPlaceInFinish; // 0x2e8(0x01)
	char pad_2E9[0x3]; // 0x2e9(0x03)
	float LengthPlaceInFinish; // 0x2ec(0x04)
	bool UsePlayerTick; // 0x2f0(0x01)
	char pad_2F1[0x7]; // 0x2f1(0x07)
	struct UDataTable* PlayerCaptureAnimationInfoDataTable; // 0x2f8(0x08)
	struct UDataTable* PlayerCaptureLeftAnimationInfoDataTable; // 0x300(0x08)
	struct UDataTable* PlayerFinishAnimationInfoDataTable; // 0x308(0x08)
	struct UDataTable* PlayerKasaneCaptureRightAnimationInfoDataTable; // 0x310(0x08)
	struct UDataTable* PlayerKasaneCaptureLeftAnimationInfoDataTable; // 0x318(0x08)
	struct UDataTable* PlayerKasaneFinishAnimationInfoDataTable; // 0x320(0x08)
	struct FHCCollisionCommonInfo CollisionInfo; // 0x328(0x70)
	struct FHCSkillCommonInfo CollisionSkillInfo; // 0x398(0xe8)
	struct TArray<struct FMapGimmickState> States; // 0x480(0x10)
	struct TMap<struct FName, struct FMapGimmickStateLevelSequence> StateLevelSequences; // 0x490(0x50)
	struct TMap<struct FName, struct ARSLevelSequenceActor*> LevelSequenceActors; // 0x4e0(0x50)
	bool IsSearchable; // 0x530(0x01)
	bool IsSearchUnique; // 0x531(0x01)
	bool IsSearchMapGimmick; // 0x532(0x01)
	bool IsInForceIconArea; // 0x533(0x01)
	bool IsInLimitIconArea; // 0x534(0x01)
	bool IsCanceling; // 0x535(0x01)
	bool bIsActive; // 0x536(0x01)
	bool IsSetupSequencePlay; // 0x537(0x01)
	char pad_538[0x8]; // 0x538(0x08)
	struct FTransform PlayerTransBeforeSequence; // 0x540(0x30)
	struct FTransform CameraTransBeforeSequence; // 0x570(0x30)
	struct FTransform CameraTransAfterSequence; // 0x5a0(0x30)
	float ActivateCameraBeginInterpSec; // 0x5d0(0x04)
	char pad_5D4[0x4]; // 0x5d4(0x04)
	struct UCurveFloat* ActivateCameraBeginInterpCurve; // 0x5d8(0x08)
	bool IsEndPlaybackcameraSequence; // 0x5e0(0x01)
	char pad_5E1[0x3]; // 0x5e1(0x03)
	float ActivateCameraEndInterpSec; // 0x5e4(0x04)
	struct UCurveFloat* ActivateCameraEndInterpCurve; // 0x5e8(0x08)
	bool IsNeedTick; // 0x5f0(0x01)
	bool IsCharging; // 0x5f1(0x01)
	bool IsUsing; // 0x5f2(0x01)
	bool ExplodeNeedTick; // 0x5f3(0x01)
	bool IsPlayerInVolume; // 0x5f4(0x01)
	bool IsFinished; // 0x5f5(0x01)
	bool CanReuse; // 0x5f6(0x01)
	char pad_5F7[0x1]; // 0x5f7(0x01)
	struct TArray<struct AGimmickTriggerVolume*> HitVolumes; // 0x5f8(0x10)
	struct TWeakObjectPtr<struct AGimmickTriggerVolume> LastHitVolume; // 0x608(0x08)
	enum class EMapGimmickFinishDir LastHitVolumeDir; // 0x610(0x01)
	bool _CanActivate; // 0x611(0x01)
	bool StateNeedTick; // 0x612(0x01)
	bool AlreadyExplode; // 0x613(0x01)
	bool IsDelayUpdateIconVisible; // 0x614(0x01)
	bool ToBeIconVisible; // 0x615(0x01)
	char pad_616[0xa]; // 0x616(0x0a)

	bool UpdateWidgetGauge(); // Function BattlePrototype.MapGimmickObject.UpdateWidgetGauge // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123af80
	void SetUsing(bool Using); // Function BattlePrototype.MapGimmickObject.SetUsing // (Final|Native|Public|BlueprintCallable) // @ game+0x123aef0
	void SetStateNeedTick(bool Need); // Function BattlePrototype.MapGimmickObject.SetStateNeedTick // (Final|Native|Public|BlueprintCallable) // @ game+0x123ae60
	bool SetNeedTick(bool Need); // Function BattlePrototype.MapGimmickObject.SetNeedTick // (Final|Native|Public|BlueprintCallable) // @ game+0x123add0
	bool SetLimitIconVisible(bool Visible, bool limit, bool IsSuccess); // Function BattlePrototype.MapGimmickObject.SetLimitIconVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123acb0
	void SetIsFinished(bool Finished); // Function BattlePrototype.MapGimmickObject.SetIsFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x123ab60
	bool SetIconVisible(bool Visible, bool IsSuccess, bool IsCancel); // Function BattlePrototype.MapGimmickObject.SetIconVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123aa40
	bool SetIconGaugeEnableProxy(bool Enable); // Function BattlePrototype.MapGimmickObject.SetIconGaugeEnableProxy // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123a9a0
	void SetExplosionNeedTick(bool Need); // Function BattlePrototype.MapGimmickObject.SetExplosionNeedTick // (Final|Native|Public|BlueprintCallable) // @ game+0x123a910
	void SetEnablePhysicsPerBone(struct USkeletalMeshComponent* SkeletalMesh, struct FName BoneName, bool Enable); // Function BattlePrototype.MapGimmickObject.SetEnablePhysicsPerBone // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123a810
	void SetEnablePhysics(bool Enable); // Function BattlePrototype.MapGimmickObject.SetEnablePhysics // (Native|Event|Public|BlueprintEvent) // @ game+0x123a780
	void SetEnableAttackCollision(bool Enable); // Function BattlePrototype.MapGimmickObject.SetEnableAttackCollision // (Native|Event|Public|BlueprintEvent) // @ game+0x123a6f0
	void SetCanActivate(bool CanActivate); // Function BattlePrototype.MapGimmickObject.SetCanActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x123a660
	bool SetAttackCollisionActive(bool Active); // Function BattlePrototype.MapGimmickObject.SetAttackCollisionActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123a5c0
	void SetAlreadyExplode(bool Explode); // Function BattlePrototype.MapGimmickObject.SetAlreadyExplode // (Final|Native|Public|BlueprintCallable) // @ game+0x123a530
	bool SetActive(bool Active); // Function BattlePrototype.MapGimmickObject.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x123a4a0
	void ResetChargeTime(); // Function BattlePrototype.MapGimmickObject.ResetChargeTime // (Final|Native|Public|BlueprintCallable) // @ game+0x123a480
	bool RequestChangeState(enum class EMapGimmickStateRequest Type); // Function BattlePrototype.MapGimmickObject.RequestChangeState // (Final|Native|Public|BlueprintCallable) // @ game+0x123a330
	bool PartnerOnEndTriggerVolumeOverlap(enum class RSPartyPlayerKind playerId, struct AGimmickTriggerVolume* Volume); // Function BattlePrototype.MapGimmickObject.PartnerOnEndTriggerVolumeOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x123a1e0
	void PartnerOnEndOverlapCallback(struct AGimmickTriggerVolume* Volume, struct AActor* OverlappedActor, struct AActor* OtherActor, enum class RSPartyPlayerKind playerId); // Function BattlePrototype.MapGimmickObject.PartnerOnEndOverlapCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x123a090
	bool PartnerOnBeginTriggerVolumeOverlap(enum class RSPartyPlayerKind playerId, struct AGimmickTriggerVolume* Volume); // Function BattlePrototype.MapGimmickObject.PartnerOnBeginTriggerVolumeOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239fc0
	void PartnerOnBeginOverlapCallback(struct AGimmickTriggerVolume* Volume, struct AActor* OverlappedActor, struct AActor* OtherActor, enum class RSPartyPlayerKind playerId); // Function BattlePrototype.MapGimmickObject.PartnerOnBeginOverlapCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x1239e70
	void OnStateEndFunction(struct FName StateName); // Function BattlePrototype.MapGimmickObject.OnStateEndFunction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239de0
	void OnStateBeginFunction(struct FName StateName); // Function BattlePrototype.MapGimmickObject.OnStateBeginFunction // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239d50
	bool OnMapGimmickChargeStart(struct AMapGimmickObject* GimmickActor); // Function BattlePrototype.MapGimmickObject.OnMapGimmickChargeStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1239cb0
	bool OnMapGimmickChargeEnd(struct AMapGimmickObject* GimmickActor); // Function BattlePrototype.MapGimmickObject.OnMapGimmickChargeEnd // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1239c10
	bool OnMapGimmickChargeCancel(struct AMapGimmickObject* GimmickActor); // Function BattlePrototype.MapGimmickObject.OnMapGimmickChargeCancel // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1239b70
	bool OnEndUseLimitIconVisibleOverlap(); // Function BattlePrototype.MapGimmickObject.OnEndUseLimitIconVisibleOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239b40
	bool OnEndTriggerVolumeOverlap(); // Function BattlePrototype.MapGimmickObject.OnEndTriggerVolumeOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239b10
	void OnEndOverlapCallback(struct AGimmickTriggerVolume* Volume, struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.MapGimmickObject.OnEndOverlapCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x1239950
	bool OnEndForceIconVisibleOverlap(); // Function BattlePrototype.MapGimmickObject.OnEndForceIconVisibleOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239920
	void OnChangeGimmickState(struct FName StateName); // Function BattlePrototype.MapGimmickObject.OnChangeGimmickState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239890
	bool OnBeginUseLimitIconVisibleOverlap(); // Function BattlePrototype.MapGimmickObject.OnBeginUseLimitIconVisibleOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239860
	bool OnBeginTriggerVolumeOverlap(); // Function BattlePrototype.MapGimmickObject.OnBeginTriggerVolumeOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239830
	void OnBeginOverlapCallback(struct AGimmickTriggerVolume* Volume, struct AActor* OverlappedActor, struct AActor* OtherActor); // Function BattlePrototype.MapGimmickObject.OnBeginOverlapCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x1239670
	bool OnBeginForceIconVisibleOverlap(); // Function BattlePrototype.MapGimmickObject.OnBeginForceIconVisibleOverlap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1239640
	bool IsActive(); // Function BattlePrototype.MapGimmickObject.IsActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1239620
	void InitializeGimmickStatus(); // Function BattlePrototype.MapGimmickObject.InitializeGimmickStatus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12394e0
	struct FMapGimmickState GetStateByName(struct FName StateName); // Function BattlePrototype.MapGimmickObject.GetStateByName // (Final|Native|Public|BlueprintCallable) // @ game+0x12393d0
	float GetPsychicCost(); // Function BattlePrototype.MapGimmickObject.GetPsychicCost // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12393b0
	struct UPrimitiveComponent* GetPrimitive(); // Function BattlePrototype.MapGimmickObject.GetPrimitive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1239380
	struct UAnimMontage* GetPlayerStartAnimation(enum class EPlayerCaptureAnimPattern Pattern, enum class EPlayerID Player); // Function BattlePrototype.MapGimmickObject.GetPlayerStartAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12392b0
	struct UAnimMontage* GetPlayerLoopAnimation(enum class EPlayerCaptureAnimPattern Pattern, enum class EPlayerID Player); // Function BattlePrototype.MapGimmickObject.GetPlayerLoopAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12391e0
	struct FVector GetPlayerLookAtPosition(); // Function BattlePrototype.MapGimmickObject.GetPlayerLookAtPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12391a0
	struct USceneComponent* GetPlayerLookAtComponent(); // Function BattlePrototype.MapGimmickObject.GetPlayerLookAtComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1239170
	struct UAnimMontage* GetPlayerEndAnimation(enum class EPlayerCaptureAnimPattern Pattern, enum class EPlayerID Player); // Function BattlePrototype.MapGimmickObject.GetPlayerEndAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12390a0
	float GetPlayerDeltaSecond(); // Function BattlePrototype.MapGimmickObject.GetPlayerDeltaSecond // (Final|Native|Public|BlueprintCallable) // @ game+0x1239070
	float GetPlayerCustomDilation(); // Function BattlePrototype.MapGimmickObject.GetPlayerCustomDilation // (Final|Native|Public|BlueprintCallable) // @ game+0x1239040
	struct UAnimMontage* GetPlayerCancelAnimation(enum class EPlayerCaptureAnimPattern Pattern, enum class EPlayerID Player); // Function BattlePrototype.MapGimmickObject.GetPlayerCancelAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1238f70
	struct FName GetNextStateName(); // Function BattlePrototype.MapGimmickObject.GetNextStateName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1238f30
	struct FName GetNextCancelStateName(); // Function BattlePrototype.MapGimmickObject.GetNextCancelStateName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1238ef0
	struct FVector GetLookAtPosition(); // Function BattlePrototype.MapGimmickObject.GetLookAtPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1238e20
	struct USceneComponent* GetLookAtComponent(); // Function BattlePrototype.MapGimmickObject.GetLookAtComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1238df0
	bool GetIsFinished(); // Function BattlePrototype.MapGimmickObject.GetIsFinished // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1238d40
	struct FVector GetIconPosition(); // Function BattlePrototype.MapGimmickObject.GetIconPosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1238d00
	struct USceneComponent* GetIconComponent(); // Function BattlePrototype.MapGimmickObject.GetIconComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1238cd0
	float GetFinishMovementScale(enum class EPlayerID Player); // Function BattlePrototype.MapGimmickObject.GetFinishMovementScale // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1238c40
	float GetCaptureMovementScale(enum class EPlayerID Player); // Function BattlePrototype.MapGimmickObject.GetCaptureMovementScale // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1238bb0
	struct UPrimitiveComponent* GetAttackCollisionPrimitive(); // Function BattlePrototype.MapGimmickObject.GetAttackCollisionPrimitive // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1238b80
	void CustomDelay(struct UObject* worldContextObject_, float Duration, struct FLatentActionInfo latentInfo_); // Function BattlePrototype.MapGimmickObject.CustomDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x1238930
	struct FName ChangeToNextState(); // Function BattlePrototype.MapGimmickObject.ChangeToNextState // (Final|Native|Public|BlueprintCallable) // @ game+0x12388f0
	struct FName ChangeToNextInCancelState(); // Function BattlePrototype.MapGimmickObject.ChangeToNextInCancelState // (Final|Native|Public|BlueprintCallable) // @ game+0x12388b0
	struct FName ChangeState(struct FName StateName); // Function BattlePrototype.MapGimmickObject.ChangeState // (Final|Native|Public|BlueprintCallable) // @ game+0x1238820
	bool CanCharge(); // Function BattlePrototype.MapGimmickObject.CanCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x1238760
	bool CanAddDriveGauge(); // Function BattlePrototype.MapGimmickObject.CanAddDriveGauge // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1238730
	bool CanActivate(); // Function BattlePrototype.MapGimmickObject.CanActivate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1238700
	bool CallStateTickFunction(float DeltaTime, struct FName StateName); // Function BattlePrototype.MapGimmickObject.CallStateTickFunction // (Final|Native|Public|BlueprintCallable) // @ game+0x1238590
	bool CallStateEndFunction(struct FName StateName); // Function BattlePrototype.MapGimmickObject.CallStateEndFunction // (Final|Native|Public|BlueprintCallable) // @ game+0x1238500
	bool CallStateCancelFunction(struct FName StateName); // Function BattlePrototype.MapGimmickObject.CallStateCancelFunction // (Final|Native|Public|BlueprintCallable) // @ game+0x1238470
	bool CallStateBeginFunction(struct FName StateName); // Function BattlePrototype.MapGimmickObject.CallStateBeginFunction // (Final|Native|Public|BlueprintCallable) // @ game+0x12383e0
	bool CallFunctionByName(struct FName StateName, float DeltaTime, enum class EMapGimmickStatusFunc Func); // Function BattlePrototype.MapGimmickObject.CallFunctionByName // (Final|Native|Public|BlueprintCallable) // @ game+0x1238000
	bool CallbackUseThisGimmick(struct AMapGimmickObject* gimmick); // Function BattlePrototype.MapGimmickObject.CallbackUseThisGimmick // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1238660
};

// Class BattlePrototype.MapIconData
// Size: 0x28 (Inherited: 0x28)
struct UMapIconData : UObject {
};

// Class BattlePrototype.MapIconExporter
// Size: 0x2f0 (Inherited: 0x230)
struct AMapIconExporter : AActor {
	char pad_230[0xc0]; // 0x230(0xc0)

	void StartupMapIconAtCurrentBegin(); // Function BattlePrototype.MapIconExporter.StartupMapIconAtCurrentBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void StartupArrangeItemAtCurrentBegin(); // Function BattlePrototype.MapIconExporter.StartupArrangeItemAtCurrentBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x123fa90
	void ExportMapIconJson(); // Function BattlePrototype.MapIconExporter.ExportMapIconJson // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ExportArrangeIconJson(); // Function BattlePrototype.MapIconExporter.ExportArrangeIconJson // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CurrentMapIcon(int32_t LocationId, int32_t areaId); // Function BattlePrototype.MapIconExporter.CurrentMapIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x1230eb0
	void CurrentArrangeIcon(); // Function BattlePrototype.MapIconExporter.CurrentArrangeIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
};

// Class BattlePrototype.MaterialAccessorCompLibrary
// Size: 0x28 (Inherited: 0x28)
struct UMaterialAccessorCompLibrary : UBlueprintFunctionLibrary {

	void SetupMeshMACParametersNative(struct UObject* WorldContextObject, struct UMeshComponent* MeshComp, struct TArray<struct FMACVariableFloat> MACScalars, struct TArray<enum class EMaterialAccessorSetupID> MACScalarSetupIDs, struct TArray<struct FMACVariableVector> MACVectors, struct TArray<enum class EMaterialAccessorSetupID> MACVectorSetupIDs); // Function BattlePrototype.MaterialAccessorCompLibrary.SetupMeshMACParametersNative // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123f800
	void SetupMeshListMACParametersNative(struct UObject* WorldContextObject, struct TArray<struct UMeshComponent*> MeshComps, struct TArray<struct FMACVariableFloat> MACScalars, struct TArray<enum class EMaterialAccessorSetupID> MACScalarSetupIDs, struct TArray<struct FMACVariableVector> MACVectors, struct TArray<enum class EMaterialAccessorSetupID> MACVectorSetupIDs); // Function BattlePrototype.MaterialAccessorCompLibrary.SetupMeshListMACParametersNative // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123f500
};

// Class BattlePrototype.MaterialStealthParam
// Size: 0x40 (Inherited: 0x30)
struct UMaterialStealthParam : UDataAsset {
	int32_t SampleFrame; // 0x30(0x04)
	float interpSpeed; // 0x34(0x04)
	float delaySec; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class BattlePrototype.RSMaterialSwitchLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSMaterialSwitchLibrary : UBlueprintFunctionLibrary {

	void SwitchMaterialExcludeLayerID(struct FMaterialSwitchCache MaterialCache, int32_t LayerID, struct UPrimitiveComponent* Primitive, struct TArray<struct FName> ExcludeMaterialSlots, struct UMaterialInterface* NewMaterial); // Function BattlePrototype.RSMaterialSwitchLibrary.SwitchMaterialExcludeLayerID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123fdf0
	void SwitchMaterialExclude(struct FMaterialSwitchCache MaterialCache, struct UPrimitiveComponent* Primitive, struct TArray<struct FName> ExcludeMaterialSlots, struct UMaterialInterface* NewMaterial, int32_t LayerID); // Function BattlePrototype.RSMaterialSwitchLibrary.SwitchMaterialExclude // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123fc20
	void SwitchMaterial(struct FMaterialSwitchCache MaterialCache, struct UPrimitiveComponent* Primitive, struct UMaterialInterface* NewMaterial, int32_t LayerID); // Function BattlePrototype.RSMaterialSwitchLibrary.SwitchMaterial // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123fab0
	void RestoreSwitchMaterialLayerIDs(struct FMaterialSwitchCache MaterialCache, struct TArray<int32_t> LayerIDs, bool ClearCache); // Function BattlePrototype.RSMaterialSwitchLibrary.RestoreSwitchMaterialLayerIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123e7d0
	bool RestoreSwitchMaterial(struct FMaterialSwitchCache MaterialCache, int32_t RestoreNum); // Function BattlePrototype.RSMaterialSwitchLibrary.RestoreSwitchMaterial // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123e6e0
	void ClearSwitchMaterialLayerIDs(struct FMaterialSwitchCache MaterialCache, struct TArray<int32_t> LayerIDs); // Function BattlePrototype.RSMaterialSwitchLibrary.ClearSwitchMaterialLayerIDs // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123d860
	void ClearMaterialSwitchCache(struct FMaterialSwitchCache MaterialCache); // Function BattlePrototype.RSMaterialSwitchLibrary.ClearMaterialSwitchCache // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x123d7d0
};

// Class BattlePrototype.MessageData
// Size: 0x88 (Inherited: 0x28)
struct UMessageData : UObject {
	struct TArray<struct UDataTable*> RefDataTableList; // 0x28(0x10)
	struct TMap<struct FString, struct UObject*> m_PreLoadVoiceMap; // 0x38(0x50)

	void RegisterDataTable(struct UDataTable* _datatable, struct FString _path); // Function BattlePrototype.MessageData.RegisterDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x123e400
	bool LoadDataTable(struct FString _path); // Function BattlePrototype.MessageData.LoadDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x123e250
	bool GetMessageFromIndex(struct FMessageDataCell MessageDataCell, int32_t _index); // Function BattlePrototype.MessageData.GetMessageFromIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x123e0f0
	bool GetMessage(struct FMessageDataCell MessageDataCell, struct FName ID); // Function BattlePrototype.MessageData.GetMessage // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x123df80
};

// Class BattlePrototype.MessageHudManager
// Size: 0x270 (Inherited: 0x230)
struct AMessageHudManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct TArray<struct FString> m_swapTagArray; // 0x238(0x10)
	enum class ETextGender m_textGender; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct TArray<int32_t> m_pluralTagArray; // 0x250(0x10)
	struct TArray<int32_t> m_ordinalTagArray; // 0x260(0x10)

	void SkipMessage(); // Function BattlePrototype.MessageHudManager.SkipMessage // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x12439b0
	void setSwapTagArray(struct TArray<struct FString> StringArray); // Function BattlePrototype.MessageHudManager.setSwapTagArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1244120
	void setSwapTag(int32_t Index, struct FString String); // Function BattlePrototype.MessageHudManager.setSwapTag // (Final|Native|Public|BlueprintCallable) // @ game+0x1243ff0
	void setPluralTagArray(struct TArray<int32_t> valueArray); // Function BattlePrototype.MessageHudManager.setPluralTagArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1243f40
	void setPluralTag(int32_t Index, int32_t Value); // Function BattlePrototype.MessageHudManager.setPluralTag // (Final|Native|Public|BlueprintCallable) // @ game+0x1243e80
	void setOrdinalTagArray(struct TArray<int32_t> valueArray); // Function BattlePrototype.MessageHudManager.setOrdinalTagArray // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1243dd0
	void setOrdinalTag(int32_t Index, int32_t Value); // Function BattlePrototype.MessageHudManager.setOrdinalTag // (Final|Native|Public|BlueprintCallable) // @ game+0x1243d10
	bool setMessageTableName(struct FString messageTableName, struct UObject* Object); // Function BattlePrototype.MessageHudManager.setMessageTableName // (Final|Native|Public|BlueprintCallable) // @ game+0x1243840
	void setGenderTag(enum class ETextGender textGender); // Function BattlePrototype.MessageHudManager.setGenderTag // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1243c80
	void PreLoadAllVoice(struct FString messageTableName); // Function BattlePrototype.MessageHudManager.PreLoadAllVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x12437a0
	enum class ETextGender getTextGender(); // Function BattlePrototype.MessageHudManager.getTextGender // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb6f0
	struct TArray<struct FString> getSwapTagArray(); // Function BattlePrototype.MessageHudManager.getSwapTagArray // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1243c50
	struct TArray<int32_t> getPluralTagArray(); // Function BattlePrototype.MessageHudManager.getPluralTagArray // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1243c20
	struct TArray<int32_t> getOrdinalTagArray(); // Function BattlePrototype.MessageHudManager.getOrdinalTagArray // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1243bf0
	bool getMessageTableName(struct FString messageTableName, struct UObject* Object); // Function BattlePrototype.MessageHudManager.getMessageTableName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1242e90
	void GetMessageFromLabel(struct FString Message, struct FString messageLabel, struct FString messageTable); // Function BattlePrototype.MessageHudManager.GetMessageFromLabel // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1242d30
	void GetMessageDataCellFromLabel(struct FMessageDataCell MessageDataCell, struct FString messageLabel, struct FString messageTable); // Function BattlePrototype.MessageHudManager.GetMessageDataCellFromLabel // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1242b70
	int32_t GetLastChoiceResult(); // Function BattlePrototype.MessageHudManager.GetLastChoiceResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1242b40
	int32_t GetChoiceResult(int32_t MessageIndex); // Function BattlePrototype.MessageHudManager.GetChoiceResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1242800
	int32_t DrawMessage(int32_t windowType, struct FString messageTableName, struct FString messageLabel, struct FName RipSyncBoardJointID, bool skipable, float DrawSecond, bool isSkipVoiceEnd, bool IsVoiceOnlyMessage); // Function BattlePrototype.MessageHudManager.DrawMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1242200
	void clearAllTag(); // Function BattlePrototype.MessageHudManager.clearAllTag // (Final|Native|Public|BlueprintCallable) // @ game+0x1243af0
	bool CheckEndMessage(int32_t MessageIndex); // Function BattlePrototype.MessageHudManager.CheckEndMessage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241a40
	bool CheckEndAllMessage(); // Function BattlePrototype.MessageHudManager.CheckEndAllMessage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1241a10
};

// Class BattlePrototype.MessageViewerBase
// Size: 0x2a0 (Inherited: 0x230)
struct AMessageViewerBase : AActor {
	struct TWeakObjectPtr<struct UDataTable> SettingDataTable; // 0x230(0x08)
	enum class ETextLanguage CurrentLanguage; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	struct FName CurrentCategory; // 0x23c(0x08)
	char pad_244[0x4]; // 0x244(0x04)
	struct FString CurrentFileName; // 0x248(0x10)
	struct FName CurrentLabel; // 0x258(0x08)
	struct TArray<enum class ETextLanguage> LanguageList; // 0x260(0x10)
	struct TArray<struct FMsgViewerData> DataFileList; // 0x270(0x10)
	struct TArray<struct FName> MessageLabelList; // 0x280(0x10)
	struct FMsgViewerLoadedData LoadedData; // 0x290(0x0c)
	char pad_29C[0x4]; // 0x29c(0x04)

	void CreateLabelList(struct FString dispName); // Function BattlePrototype.MessageViewerBase.CreateLabelList // (Final|Native|Public|BlueprintCallable) // @ game+0x1241e80
	void CreateFileListBySetting(enum class ETextLanguage Language, struct FName Setting); // Function BattlePrototype.MessageViewerBase.CreateFileListBySetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1241dc0
};

// Class BattlePrototype.ModelViewerBase
// Size: 0x2c0 (Inherited: 0x230)
struct AModelViewerBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct ACameraActor* _modelViewerCamera; // 0x238(0x08)
	struct ARSCharacterBase* _modelViewerPlayer; // 0x240(0x08)
	struct ANpcBase* _modelViewerPlayerNpc; // 0x248(0x08)
	struct ANpcSkeletalMeshActor* _modelViewerSkeletalNpc; // 0x250(0x08)
	struct TArray<struct ARSCharacterBase*> characterList; // 0x258(0x10)
	int32_t selectIndex; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct UObject* _PlayingMotionAsset; // 0x270(0x08)
	float _PlayingMotionAssetLength; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct TArray<struct FActorReferenceInfo> ActorReferenceInfoList; // 0x280(0x10)
	struct TArray<struct FString> CharacterNametList; // 0x290(0x10)
	struct TArray<struct FAssetData> AnimationAssetList; // 0x2a0(0x10)
	struct TArray<struct FString> FaceNameList; // 0x2b0(0x10)

	void SpawnCharacter(int32_t CharacterIndex); // Function BattlePrototype.ModelViewerBase.SpawnCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1243a70
	void SortAssetDatalist(struct TArray<struct FAssetData> AssetDataList); // Function BattlePrototype.ModelViewerBase.SortAssetDatalist // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12439d0
	void SetModelViewerCamera(struct ACameraActor* CameraActor); // Function BattlePrototype.ModelViewerBase.SetModelViewerCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1243930
	void SetFaceComboBox(); // Function BattlePrototype.ModelViewerBase.SetFaceComboBox // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetCharacterComboBox(); // Function BattlePrototype.ModelViewerBase.SetCharacterComboBox // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetAnimationComboBox(); // Function BattlePrototype.ModelViewerBase.SetAnimationComboBox // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool PlayAnimation(struct UObject* MotionAsset, bool isReplay, float InTimeToStartMontageAt); // Function BattlePrototype.ModelViewerBase.PlayAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1243690
	bool PauseAnimation(); // Function BattlePrototype.ModelViewerBase.PauseAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1243660
	void OnChangeSelectCharacter(int32_t Index); // Function BattlePrototype.ModelViewerBase.OnChangeSelectCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x12435e0
	bool ModelViewerSave(struct USaveGame* SaveGameObject, struct FString SlotName, int32_t UserIndex); // Function BattlePrototype.ModelViewerBase.ModelViewerSave // (Final|Native|Public|BlueprintCallable) // @ game+0x12434d0
	struct USaveGame* ModelViewerLoad(struct FString SlotName, int32_t UserIndex); // Function BattlePrototype.ModelViewerBase.ModelViewerLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x12433e0
	void LoadCharacterRequest(bool isReload); // Function BattlePrototype.ModelViewerBase.LoadCharacterRequest // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void LoadCharacter(int32_t Index); // Function BattlePrototype.ModelViewerBase.LoadCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	bool IsPlayAnimationMontage(); // Function BattlePrototype.ModelViewerBase.IsPlayAnimationMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x12433b0
	void InitializePlayerInfo(); // Function BattlePrototype.ModelViewerBase.InitializePlayerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1243390
	int32_t GetSelectFaceComboboxIndex(); // Function BattlePrototype.ModelViewerBase.GetSelectFaceComboboxIndex // (Event|Public|BlueprintEvent) // @ game+0x1685580
	int32_t GetSelectCharacterComboboxIndex(); // Function BattlePrototype.ModelViewerBase.GetSelectCharacterComboboxIndex // (Event|Public|BlueprintEvent) // @ game+0x1685580
	struct ARSCharacterBase* GetSelectCharacter(); // Function BattlePrototype.ModelViewerBase.GetSelectCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1243350
	int32_t GetSelectAnimationComboboxIndex(); // Function BattlePrototype.ModelViewerBase.GetSelectAnimationComboboxIndex // (Event|Public|BlueprintEvent) // @ game+0x1685580
	struct TSoftClassPtr<UObject> GetRSCharacterBase(struct FString assetPath); // Function BattlePrototype.ModelViewerBase.GetRSCharacterBase // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1243230
	struct TSoftClassPtr<UObject> GetNpcSkeletalMeshActor(struct FString assetPath); // Function BattlePrototype.ModelViewerBase.GetNpcSkeletalMeshActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1243110
	struct TSoftClassPtr<UObject> GetNpcBase(struct FString assetPath); // Function BattlePrototype.ModelViewerBase.GetNpcBase // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1242ff0
	struct ANpcSkeletalMeshActor* GetModelViewerSkeletalNpc(); // Function BattlePrototype.ModelViewerBase.GetModelViewerSkeletalNpc // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1242fd0
	struct ANpcBase* GetModelViewerPlayerNpc(); // Function BattlePrototype.ModelViewerBase.GetModelViewerPlayerNpc // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1242fb0
	struct ARSCharacterBase* GetModelViewerPlayer(); // Function BattlePrototype.ModelViewerBase.GetModelViewerPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x120dd30
	struct ACameraActor* GetModelViewerCamera(); // Function BattlePrototype.ModelViewerBase.GetModelViewerCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1242f90
	float GetMaxAnimationTime(); // Function BattlePrototype.ModelViewerBase.GetMaxAnimationTime // (Final|Native|Public|BlueprintCallable) // @ game+0x11b4380
	void GetFolderNameListByPath(struct TArray<struct FString> FolderNameList, struct FString SearchFolderPathFromContents); // Function BattlePrototype.ModelViewerBase.GetFolderNameListByPath // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12429d0
	struct FString GetDebugDrawMotionInfo(); // Function BattlePrototype.ModelViewerBase.GetDebugDrawMotionInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1242950
	float GetCurrentAnimationTime(); // Function BattlePrototype.ModelViewerBase.GetCurrentAnimationTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1242920
	float GetCurrentAnimationFrame(int32_t digit); // Function BattlePrototype.ModelViewerBase.GetCurrentAnimationFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x1242890
	struct FString GetActorReferenceToString(struct TSoftClassPtr<UObject> charaActor); // Function BattlePrototype.ModelViewerBase.GetActorReferenceToString // (Final|Native|Public|BlueprintCallable) // @ game+0x12426d0
	struct FString GetActorReferencePackageName(struct TSoftClassPtr<UObject> charaActor); // Function BattlePrototype.ModelViewerBase.GetActorReferencePackageName // (Final|Native|Public|BlueprintCallable) // @ game+0x12425a0
	struct FString GetActorReferenceAssetName(struct TSoftClassPtr<UObject> charaActor); // Function BattlePrototype.ModelViewerBase.GetActorReferenceAssetName // (Final|Native|Public|BlueprintCallable) // @ game+0x1242470
	void Debug_CreateModelViewerSkeletalNpc(struct ANpcSkeletalMeshActor* characterBP, struct FString playerStartName); // Function BattlePrototype.ModelViewerBase.Debug_CreateModelViewerSkeletalNpc // (Final|Native|Public|BlueprintCallable) // @ game+0x1242120
	void Debug_CreateModelViewerCharacterNpc(struct ANpcBase* characterBP, struct FString playerStartName); // Function BattlePrototype.ModelViewerBase.Debug_CreateModelViewerCharacterNpc // (Final|Native|Public|BlueprintCallable) // @ game+0x1242040
	void Debug_CreateModelViewerCharacter(struct ARSCharacterBase* characterBP, struct FString playerStartName); // Function BattlePrototype.ModelViewerBase.Debug_CreateModelViewerCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1241f60
	void CreateWidget(); // Function BattlePrototype.ModelViewerBase.CreateWidget // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void CreateFaceNameList(struct FName CharacterName); // Function BattlePrototype.ModelViewerBase.CreateFaceNameList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CreateCharacterFileList(); // Function BattlePrototype.ModelViewerBase.CreateCharacterFileList // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CreateAnimationFileList(struct FName CharacterIdentifier, struct FName CharacterName); // Function BattlePrototype.ModelViewerBase.CreateAnimationFileList // (Final|Native|Public|BlueprintCallable) // @ game+0x1241d00
	int32_t CompareFName(struct FName Param1, struct FName Param2); // Function BattlePrototype.ModelViewerBase.CompareFName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1241c40
	bool CompareAssetPath(struct FString ModelBPDisplayName, struct FString AnimationPath); // Function BattlePrototype.ModelViewerBase.CompareAssetPath // (Final|Native|Public|BlueprintCallable) // @ game+0x1241ad0
	void ChangePrevIndex(); // Function BattlePrototype.ModelViewerBase.ChangePrevIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x12419f0
	void ChangeNextIndex(); // Function BattlePrototype.ModelViewerBase.ChangeNextIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x12419d0
	void AddCharacter(struct TArray<struct ARSCharacterBase*> list); // Function BattlePrototype.ModelViewerBase.AddCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x12418f0
	void AddActorReferenceInfo(struct TSoftClassPtr<UObject> charaActor); // Function BattlePrototype.ModelViewerBase.AddActorReferenceInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1241810
};

// Class BattlePrototype.MoveImpulseComponent
// Size: 0x100 (Inherited: 0xc0)
struct UMoveImpulseComponent : UActorComponent {
	bool _isDebugDraw; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	float _decSpeed; // 0xc4(0x04)
	struct FName _claimantName; // 0xc8(0x08)
	struct FVector _nowVelocity; // 0xd0(0x0c)
	struct FVector _oldLocation; // 0xdc(0x0c)
	char pad_E8[0x18]; // 0xe8(0x18)

	void UpdateFunction(float DeltaTime); // Function BattlePrototype.MoveImpulseComponent.UpdateFunction // (Final|Native|Private) // @ game+0x1247f40
	void UpdateFlying(); // Function BattlePrototype.MoveImpulseComponent.UpdateFlying // (Final|Native|Public|BlueprintCallable) // @ game+0x1247f20
	void SetImpulse(struct FVector Velocity); // Function BattlePrototype.MoveImpulseComponent.SetImpulse // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1247560
	struct FVector GetVelocity(); // Function BattlePrototype.MoveImpulseComponent.GetVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1247020
	struct UMoveImpulseComponent* GetMoveImpulseComponent(struct AActor* Actor); // Function BattlePrototype.MoveImpulseComponent.GetMoveImpulseComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1246cd0
};

// Class BattlePrototype.MoveInputComponent
// Size: 0x128 (Inherited: 0xc0)
struct UMoveInputComponent : UActorComponent {
	char pad_C0[0x68]; // 0xc0(0x68)

	void UpdateMoveInputVector(float axisValueX, float axisValueY); // Function BattlePrototype.MoveInputComponent.UpdateMoveInputVector // (Final|Native|Public|BlueprintCallable) // @ game+0x1247fc0
	void SetFixCamera(bool bFix); // Function BattlePrototype.MoveInputComponent.SetFixCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1247440
	bool IsInputOverLimit(float limitRate); // Function BattlePrototype.MoveInputComponent.IsInputOverLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1247130
	bool IsFixCamera(); // Function BattlePrototype.MoveInputComponent.IsFixCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1247110
	struct FVector GetMoveInputVector(); // Function BattlePrototype.MoveInputComponent.GetMoveInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246da0
	float GetMoveInputLengthTriggerLimit(); // Function BattlePrototype.MoveInputComponent.GetMoveInputLengthTriggerLimit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246d80
	struct FVector GetMoveInputDir(); // Function BattlePrototype.MoveInputComponent.GetMoveInputDir // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246d50
	struct FVector GetLatestEnableInputWorldVector(); // Function BattlePrototype.MoveInputComponent.GetLatestEnableInputWorldVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246c90
	struct FVector GetLatestEnableInputVector(); // Function BattlePrototype.MoveInputComponent.GetLatestEnableInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246c50
	struct FVector GetLatestEnableInputDir(); // Function BattlePrototype.MoveInputComponent.GetLatestEnableInputDir // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246c10
	void ClearInputVector(); // Function BattlePrototype.MoveInputComponent.ClearInputVector // (Final|Native|Public|BlueprintCallable) // @ game+0x12467f0
	struct FVector CalcWorldVector(struct FVector Dir); // Function BattlePrototype.MoveInputComponent.CalcWorldVector // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246550
	struct FVector CalcInputWorldVector(); // Function BattlePrototype.MoveInputComponent.CalcInputWorldVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x11eb1e0
};

// Class BattlePrototype.MovementPropertyInterface
// Size: 0x28 (Inherited: 0x28)
struct UMovementPropertyInterface : UInterface {

	bool SetFlyingInterface(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyInterface.SetFlyingInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ClearFlyingInterface(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyInterface.ClearFlyingInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ClearFlyingForceInterface(); // Function BattlePrototype.MovementPropertyInterface.ClearFlyingForceInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.MovementPropertyMediator
// Size: 0x340 (Inherited: 0xc0)
struct UMovementPropertyMediator : UActorComponent {
	float ActionSpeedRateMin; // 0xc0(0x04)
	float DefaultMaxWalkSpeed; // 0xc4(0x04)
	float DefaultMaxFlySpeed; // 0xc8(0x04)
	float MaxWalkSpeedRateMin; // 0xcc(0x04)
	float MaxWalkSpeedRateMax; // 0xd0(0x04)
	float _defaultStepStartSpeed; // 0xd4(0x04)
	float _defaultStepDeclaration; // 0xd8(0x04)
	float _stepSpeedRateMin; // 0xdc(0x04)
	float _stepSpeedRateMax; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct ACharacter* OwnerCharacter; // 0xe8(0x08)
	struct UCharacterMovementComponent* OwnerMovement; // 0xf0(0x08)
	char pad_F8[0x248]; // 0xf8(0x248)

	void SetStepSpeedRate(struct FName ClaimantName, float Rate); // Function BattlePrototype.MovementPropertyMediator.SetStepSpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1247cb0
	void SetMovementCollisionIgnorePawn(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.SetMovementCollisionIgnorePawn // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1247a50
	void SetMaxWalkSpeedRate(struct FName ClaimantName, float Rate); // Function BattlePrototype.MovementPropertyMediator.SetMaxWalkSpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1247980
	void SetMaxWalkSpeed(struct FName ClaimantName, float Speed); // Function BattlePrototype.MovementPropertyMediator.SetMaxWalkSpeed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12478b0
	void SetMaxFlySpeedRate(struct FName ClaimantName, float Rate); // Function BattlePrototype.MovementPropertyMediator.SetMaxFlySpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12477e0
	void SetMaxFlySpeed(struct FName ClaimantName, float Speed); // Function BattlePrototype.MovementPropertyMediator.SetMaxFlySpeed // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1247710
	void SetFlying(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.SetFlying // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12474d0
	void SetActionSpeedRate(struct FName ClaimantName, float SpeedRate); // Function BattlePrototype.MovementPropertyMediator.SetActionSpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12472f0
	struct UMovementPropertyMediator* GetMovementPropertyMediatorComponentFromActor(struct AActor* Actor); // Function BattlePrototype.MovementPropertyMediator.GetMovementPropertyMediatorComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1246dd0
	void EnableMovement(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.EnableMovement // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1246ae0
	void DisableMovement(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.DisableMovement // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1246a50
	void ClearStepSpeedRate(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.ClearStepSpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12469c0
	void ClearMovementCollisionIgnorePawn(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.ClearMovementCollisionIgnorePawn // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1246930
	void ClearMaxWalkSpeedRate(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.ClearMaxWalkSpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12468a0
	void ClearMaxFlySpeedRate(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.ClearMaxFlySpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1246810
	void ClearFlyingForce(); // Function BattlePrototype.MovementPropertyMediator.ClearFlyingForce // (Final|Native|Public|BlueprintCallable) // @ game+0x12467d0
	void ClearFlying(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.ClearFlying // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1246740
	void ClearActionSpeedRate(struct FName ClaimantName); // Function BattlePrototype.MovementPropertyMediator.ClearActionSpeedRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12466b0
	bool CheckTouchGround(); // Function BattlePrototype.MovementPropertyMediator.CheckTouchGround // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246680
	float CalcDistanceToGround(); // Function BattlePrototype.MovementPropertyMediator.CalcDistanceToGround // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1246520
};

// Class BattlePrototype.MovementUtilityFunctions
// Size: 0x28 (Inherited: 0x28)
struct UMovementUtilityFunctions : UBlueprintFunctionLibrary {

	void MoveAndSlideUpdatedComponent(struct UMovementComponent* Target, struct FVector DesiredMovementThisFrame); // Function BattlePrototype.MovementUtilityFunctions.MoveAndSlideUpdatedComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12471f0
};

// Class BattlePrototype.MovingRoadInterface
// Size: 0x28 (Inherited: 0x28)
struct UMovingRoadInterface : UInterface {

	struct FTransform GetMovingRoadTransform(struct AActor* TargetActor); // Function BattlePrototype.MovingRoadInterface.GetMovingRoadTransform // (Native|Event|Public|HasDefaults|BlueprintEvent) // @ game+0x1246e50
};

// Class BattlePrototype.MultiLanguageTextData
// Size: 0x78 (Inherited: 0x28)
struct UMultiLanguageTextData : UObject {
	struct TMap<enum class ETextLanguage, struct UTextData*> textDataMap; // 0x28(0x50)

	bool LoadTexts(); // Function BattlePrototype.MultiLanguageTextData.LoadTexts // (Final|Native|Public|BlueprintCallable) // @ game+0x12471c0
	struct FString GetText(enum class ETextLanguage languageID, struct FName messageID); // Function BattlePrototype.MultiLanguageTextData.GetText // (Final|Native|Public|BlueprintCallable) // @ game+0x1246f10
};

// Class BattlePrototype.NormalCaptureComponent
// Size: 0xf8 (Inherited: 0xc0)
struct UNormalCaptureComponent : UActorComponent {
	bool bInitialize; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	struct UTexture2D* TargetTexture; // 0xc8(0x08)
	char pad_D0[0x28]; // 0xd0(0x28)

	void WriteBoneDataFromAnim(int32_t StartPixelX, int32_t CharacterIndex, struct USkeletalMeshComponent* SkeletalMeshComponent, struct UAnimSequence* AnimSequence, float AnimTime); // Function BattlePrototype.NormalCaptureComponent.WriteBoneDataFromAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x1248180
	void WriteBoneData(int32_t StartPixelX, int32_t CharacterIndex, struct USkeletalMeshComponent* SkeletalMeshComponent); // Function BattlePrototype.NormalCaptureComponent.WriteBoneData // (Final|Native|Public|BlueprintCallable) // @ game+0x1248080
	void InitializeTexture(int32_t TextureSizeW, int32_t TextureSizeH); // Function BattlePrototype.NormalCaptureComponent.InitializeTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x1247050
	struct UTexture2D* GetTexture(); // Function BattlePrototype.NormalCaptureComponent.GetTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11cbf00
	void FinalizeTexture(); // Function BattlePrototype.NormalCaptureComponent.FinalizeTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x1246b70
};

// Class BattlePrototype.NpcSkeletalMeshActor
// Size: 0x2f0 (Inherited: 0x230)
struct ANpcSkeletalMeshActor : AActor {
	struct UCapsuleComponent* CharacterCapsuleComponent; // 0x230(0x08)
	int32_t NpcMeshDataTableID; // 0x238(0x04)
	int32_t NpcMaterialDataTableID; // 0x23c(0x04)
	bool BPOverrideMaterialID; // 0x240(0x01)
	char pad_241[0x3]; // 0x241(0x03)
	float HideOverlapInterpolateSeconds; // 0x244(0x04)
	int32_t ForcedLOD; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
	struct UNpcSkeletalMeshComponent* SkeletalMesh; // 0x250(0x08)
	struct USkeletalMeshComponent* SkeletalBody; // 0x258(0x08)
	struct USkeletalMeshComponent* SkeletalBodyLower; // 0x260(0x08)
	struct USkeletalMeshComponent* SkeletalFace; // 0x268(0x08)
	struct USkeletalMeshComponent* SkeletalHair; // 0x270(0x08)
	struct TArray<struct USkeletalMeshComponent*> SkeletalParts; // 0x278(0x10)
	char pad_288[0x8]; // 0x288(0x08)
	struct FTransform m_storeSkeletalMeshTransform; // 0x290(0x30)
	struct FTransform m_storeSkeletalBodyTransform; // 0x2c0(0x30)

	void SetVectorParameterValue(struct FName ParameterName, struct FVector ParameterValue); // Function BattlePrototype.NpcSkeletalMeshActor.SetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1247e10
	void SetVector4ParameterValue(struct FName ParameterName, struct FLinearColor ParameterValue); // Function BattlePrototype.NpcSkeletalMeshActor.SetVector4ParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x124bc30
	void SetVector4ArrayParameterValue(struct TArray<struct FName> ParameterNames, struct TArray<struct FLinearColor> ParameterValues); // Function BattlePrototype.NpcSkeletalMeshActor.SetVector4ArrayParameterValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124b9f0
	void SetUseShaderBoneID(bool bUse); // Function BattlePrototype.NpcSkeletalMeshActor.SetUseShaderBoneID // (Final|Native|Public|BlueprintCallable) // @ game+0x124b960
	void SetScalarParameterValue(struct FName ParameterName, float ParameterValue); // Function BattlePrototype.NpcSkeletalMeshActor.SetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1247b60
	void SetScalarArrayParameterValue(struct TArray<struct FName> ParameterNames, struct TArray<float> ParameterValues); // Function BattlePrototype.NpcSkeletalMeshActor.SetScalarArrayParameterValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124b5c0
	void SetRenderLayer(char NewRenderLayer); // Function BattlePrototype.NpcSkeletalMeshActor.SetRenderLayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1247ae0
	void SetNpcTickInterval(float Value); // Function BattlePrototype.NpcSkeletalMeshActor.SetNpcTickInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x124b540
	void SetNpcTickEnabled(bool Enabled); // Function BattlePrototype.NpcSkeletalMeshActor.SetNpcTickEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x124b4b0
	void SetLightChannnel(bool Channel0, bool Channel1, bool Channel2); // Function BattlePrototype.NpcSkeletalMeshActor.SetLightChannnel // (Final|Native|Public|BlueprintCallable) // @ game+0x12475f0
	void SetInfiniteBounds(bool Enable); // Function BattlePrototype.NpcSkeletalMeshActor.SetInfiniteBounds // (Final|Native|Public|BlueprintCallable) // @ game+0x124b320
	void SetHideOverlap(bool bHide, bool bOneFrame); // Function BattlePrototype.NpcSkeletalMeshActor.SetHideOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x124b180
	void SetForcedLOD(int32_t Level); // Function BattlePrototype.NpcSkeletalMeshActor.SetForcedLOD // (Final|Native|Public|BlueprintCallable) // @ game+0x124b100
	void ResetMeshes(int32_t MeshDataTableID, int32_t MaterialDataTableID); // Function BattlePrototype.NpcSkeletalMeshActor.ResetMeshes // (Final|Native|Public|BlueprintCallable) // @ game+0x124b040
	void RefreshMesh(); // Function BattlePrototype.NpcSkeletalMeshActor.RefreshMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x124ade0
	void PresentEventStart(); // Function BattlePrototype.NpcSkeletalMeshActor.PresentEventStart // (Final|Native|Public|BlueprintCallable) // @ game+0x124adc0
	void PresentEventEnd(); // Function BattlePrototype.NpcSkeletalMeshActor.PresentEventEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x124ada0
	void GetValidSkeletalMeshComponents(struct TArray<struct USkeletalMeshComponent*> MeshComps); // Function BattlePrototype.NpcSkeletalMeshActor.GetValidSkeletalMeshComponents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124ac40
	struct UNpcSkeletalMeshComponent* GetSkeletalMesh(); // Function BattlePrototype.NpcSkeletalMeshActor.GetSkeletalMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1242fd0
	struct USkeletalMeshComponent* GetSkeletalFace(); // Function BattlePrototype.NpcSkeletalMeshActor.GetSkeletalFace // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x124ab10
	struct USkeletalMeshComponent* GetSkeletalBody(); // Function BattlePrototype.NpcSkeletalMeshActor.GetSkeletalBody // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x124aaf0
};

// Class BattlePrototype.NpcTownPeopleBase
// Size: 0x3a0 (Inherited: 0x2f0)
struct ANpcTownPeopleBase : ANpcSkeletalMeshActor {
	char pad_2F0[0x8]; // 0x2f0(0x08)
	struct UAnimInstance* AnimClass; // 0x2f8(0x08)
	enum class ENpcAnimationKind FirstAnimationKind; // 0x300(0x01)
	bool IsLookAtPlayer; // 0x301(0x01)
	char pad_302[0x6]; // 0x302(0x06)
	struct UDataTable* IconOffsetDataTable; // 0x308(0x08)
	struct TArray<struct FNpcIconOffsetInfo> IconOffsetDataInfos; // 0x310(0x10)
	bool IsCullingMode; // 0x320(0x01)
	bool IsUseTick; // 0x321(0x01)
	char pad_322[0x42]; // 0x322(0x42)
	struct TWeakObjectPtr<struct URSNpcAnimInstance> AnimationBP; // 0x364(0x08)
	char pad_36C[0x34]; // 0x36c(0x34)

	void SetupGround(); // Function BattlePrototype.NpcTownPeopleBase.SetupGround // (Final|Native|Public|BlueprintCallable) // @ game+0x1250180
	void SetLookAtPlayer(bool IsLookAt); // Function BattlePrototype.NpcTownPeopleBase.SetLookAtPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x124ff60
	void SetCulling(bool Culling); // Function BattlePrototype.NpcTownPeopleBase.SetCulling // (Final|Native|Public|BlueprintCallable) // @ game+0x124fe10
	struct UActorComponent* GetLookAtComponent(); // Function BattlePrototype.NpcTownPeopleBase.GetLookAtComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x124f720
	float GetHeadHeight(); // Function BattlePrototype.NpcTownPeopleBase.GetHeadHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x124f6f0
	bool CheckCulling(); // Function BattlePrototype.NpcTownPeopleBase.CheckCulling // (Final|Native|Public|BlueprintCallable) // @ game+0x124f4a0
};

// Class BattlePrototype.NpcTownPeople
// Size: 0x460 (Inherited: 0x3a0)
struct ANpcTownPeople : ANpcTownPeopleBase {
	char pad_3A0[0x8]; // 0x3a0(0x08)
	struct FMulticastInlineDelegate DispatchTick; // 0x3a8(0x10)
	struct FName CurrentSubQuestId; // 0x3b8(0x08)
	struct TArray<struct FName> SubQuestIdList; // 0x3c0(0x10)
	bool VisibleStartInSubQuest; // 0x3d0(0x01)
	bool VisibleAfterSubQuestCompleted; // 0x3d1(0x01)
	enum class QuestProgressState SubQuestStatus; // 0x3d2(0x01)
	char pad_3D3[0x1]; // 0x3d3(0x01)
	bool IsTalk; // 0x3d4(0x01)
	char pad_3D5[0x3]; // 0x3d5(0x03)
	struct URSNpcAnimInstance* NpcABPNative; // 0x3d8(0x08)
	struct UAnimMontage* RipSyncAnimMontageNative; // 0x3e0(0x08)
	struct UAnimMontage* BaseFacialAnimMontageNative; // 0x3e8(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x3f0(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x3f8(0x08)
	struct AMakeEventActor* MakeEventActorClass; // 0x400(0x08)
	struct FString MakeEventActorBPPath; // 0x408(0x10)
	struct AMakeEventActor* MakeEventActor; // 0x418(0x08)
	char pad_420[0x8]; // 0x420(0x08)
	struct UChildActorComponent* ChildActionIcon; // 0x428(0x08)
	struct FVector ActionIconWorldPositionOffset; // 0x430(0x0c)
	enum class EActionIconType actionIconType; // 0x43c(0x01)
	enum class EActionIconSubQuestState ActionIconSubQuestState; // 0x43d(0x01)
	char pad_43E[0x22]; // 0x43e(0x22)

	void UpdateSubQuestStatus(); // Function BattlePrototype.NpcTownPeople.UpdateSubQuestStatus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11d9280
	void UpdateSubQuestId(); // Function BattlePrototype.NpcTownPeople.UpdateSubQuestId // (Final|Native|Public|BlueprintCallable) // @ game+0x12502c0
	void UpdateSubQuestActionIcon(); // Function BattlePrototype.NpcTownPeople.UpdateSubQuestActionIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x12502a0
	void UpdateRipSyncNative(); // Function BattlePrototype.NpcTownPeople.UpdateRipSyncNative // (Final|Native|Public|BlueprintCallable) // @ game+0x1250280
	void UnregisterTownPeopleAction(); // Function BattlePrototype.NpcTownPeople.UnregisterTownPeopleAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1250260
	void TurnToPlayer(float Speed); // Function BattlePrototype.NpcTownPeople.TurnToPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x12501e0
	void StopRipSyncMontageNative(); // Function BattlePrototype.NpcTownPeople.StopRipSyncMontageNative // (Final|Native|Public|BlueprintCallable) // @ game+0x12501c0
	void StartRipSyncMontageNative(); // Function BattlePrototype.NpcTownPeople.StartRipSyncMontageNative // (Final|Native|Public|BlueprintCallable) // @ game+0x12501a0
	void OnStartEventActor(); // Function BattlePrototype.NpcTownPeople.OnStartEventActor // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void OnEndEventActor(struct AActor* DestroyedMakeEventActor); // Function BattlePrototype.NpcTownPeople.OnEndEventActor // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsTalkEnablePlayer(); // Function BattlePrototype.NpcTownPeople.IsTalkEnablePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsDefaultRipSyncType(); // Function BattlePrototype.NpcTownPeople.IsDefaultRipSyncType // (Event|Public|BlueprintEvent) // @ game+0x1685580
	enum class QuestProgressState GetSubQuestProgress(int32_t subQuestNumber); // Function BattlePrototype.NpcTownPeople.GetSubQuestProgress // (Final|Native|Protected|BlueprintCallable) // @ game+0x124f750
	void AdjustIconOffsetByHeadHeight(); // Function BattlePrototype.NpcTownPeople.AdjustIconOffsetByHeadHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x124f270
};

// Class BattlePrototype.NpcAjitoPeople
// Size: 0x460 (Inherited: 0x460)
struct ANpcAjitoPeople : ANpcTownPeople {
	int32_t PlaceID; // 0x458(0x04)
};

// Class BattlePrototype.NpcBase
// Size: 0x290 (Inherited: 0x230)
struct ANpcBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	int32_t NpcMeshDataTableID; // 0x238(0x04)
	int32_t NpcMaterialDataTableID; // 0x23c(0x04)
	char pad_240[0x8]; // 0x240(0x08)
	struct UCapsuleComponent* CharacterCapsuleComponent; // 0x248(0x08)
	struct UNpcSkeletalMeshComponent* SkeletalMeshComponent; // 0x250(0x08)
	struct USkeletalMeshComponent* SkeletalBody; // 0x258(0x08)
	struct USkeletalMeshComponent* SkeletalBodyLower; // 0x260(0x08)
	struct USkeletalMeshComponent* SkeletalFace; // 0x268(0x08)
	struct USkeletalMeshComponent* SkeletalHair; // 0x270(0x08)
	struct TArray<struct USkeletalMeshComponent*> SkeletalParts; // 0x278(0x10)
	struct UBoxComponent* EventBoxComponent; // 0x288(0x08)

	void SetVectorParameterValue(struct FName ParameterName, struct FVector ParameterValue); // Function BattlePrototype.NpcBase.SetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1247e10
	void SetScalarParameterValue(struct FName ParameterName, float ParameterValue); // Function BattlePrototype.NpcBase.SetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1247b60
	void SetRenderLayer(char NewRenderLayer); // Function BattlePrototype.NpcBase.SetRenderLayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1247ae0
	void SetLightChannnel(bool Channel0, bool Channel1, bool Channel2); // Function BattlePrototype.NpcBase.SetLightChannnel // (Final|Native|Public|BlueprintCallable) // @ game+0x12475f0
	void RefreshMesh(); // Function BattlePrototype.NpcBase.RefreshMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12472b0
};

// Class BattlePrototype.NpcCommonInterface
// Size: 0x28 (Inherited: 0x28)
struct UNpcCommonInterface : UInterface {

	bool SetDrawMessageFacial(struct FString messageLabel); // Function BattlePrototype.NpcCommonInterface.SetDrawMessageFacial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class ETextGender GetNpcMeshGenderType(); // Function BattlePrototype.NpcCommonInterface.GetNpcMeshGenderType // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ChangeAnimation(enum class ENpcAnimationKind AnimKind); // Function BattlePrototype.NpcCommonInterface.ChangeAnimation // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1246600
};

// Class BattlePrototype.NpcHomingMoveComponent
// Size: 0x2c0 (Inherited: 0x200)
struct UNpcHomingMoveComponent : USceneComponent {
	struct USplineComponent* SplinePath; // 0x200(0x08)
	struct UShapeComponent* TargetShape; // 0x208(0x08)
	struct FVector TargetPosition; // 0x210(0x0c)
	struct FRotator RotOnTargetSpline; // 0x21c(0x0c)
	struct FVector TargetEndPosition; // 0x228(0x0c)
	struct FRotator CurRot; // 0x234(0x0c)
	struct FRotator PrevRot; // 0x240(0x0c)
	float CurMoveSpeed; // 0x24c(0x04)
	float CurRotSpeed; // 0x250(0x04)
	float TargetMoveSpeed; // 0x254(0x04)
	struct FRotator TargetRot; // 0x258(0x0c)
	struct FVector TargetMoveVec; // 0x264(0x0c)
	float LocalDistance; // 0x270(0x04)
	float PathTotalDistance; // 0x274(0x04)
	bool IsMoving; // 0x278(0x01)
	bool IsTargetMoving; // 0x279(0x01)
	char pad_27A[0x2]; // 0x27a(0x02)
	float GroundOffsetZ; // 0x27c(0x04)
	float GroundTestDiff; // 0x280(0x04)
	float UpTestDiff; // 0x284(0x04)
	float UpTestForwardDistance; // 0x288(0x04)
	float DownTestForwardDistance; // 0x28c(0x04)
	float TargetStopDistance; // 0x290(0x04)
	bool IsDebug; // 0x294(0x01)
	bool IsOnSplineMove; // 0x295(0x01)
	char pad_296[0x2]; // 0x296(0x02)
	float SplineMoveForwardDistance; // 0x298(0x04)
	float SplineMoveUpDownSpeedMax; // 0x29c(0x04)
	float elapsedSeconds; // 0x2a0(0x04)
	bool IsFadingAsMovemet; // 0x2a4(0x01)
	char pad_2A5[0x3]; // 0x2a5(0x03)
	float TracingSpeherRadius; // 0x2a8(0x04)
	float SlopeCheckDistFront; // 0x2ac(0x04)
	float SlopeCheckDistRear; // 0x2b0(0x04)
	float FadingInterpolateSeconds; // 0x2b4(0x04)
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void StopMove(); // Function BattlePrototype.NpcHomingMoveComponent.StopMove // (Final|Native|Public|BlueprintCallable) // @ game+0x1247f00
	void StartMove(); // Function BattlePrototype.NpcHomingMoveComponent.StartMove // (Final|Native|Public|BlueprintCallable) // @ game+0x1247ee0
	void SetTargetPosition(struct FVector Target); // Function BattlePrototype.NpcHomingMoveComponent.SetTargetPosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1247d80
	void SetSpline(struct USplineComponent* Spline); // Function BattlePrototype.NpcHomingMoveComponent.SetSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x1247c30
	void SetElapsedTime(float Time); // Function BattlePrototype.NpcHomingMoveComponent.SetElapsedTime // (Final|Native|Public|BlueprintCallable) // @ game+0x12473c0
	void ResetNpcTransform(); // Function BattlePrototype.NpcHomingMoveComponent.ResetNpcTransform // (Final|Native|Public|BlueprintCallable) // @ game+0x12472d0
	void ForceMove(float DistanceRate); // Function BattlePrototype.NpcHomingMoveComponent.ForceMove // (Final|Native|Public|BlueprintCallable) // @ game+0x1246b90
};

// Class BattlePrototype.NpcManager
// Size: 0x70 (Inherited: 0x28)
struct UNpcManager : UObject {
	struct TArray<struct ANpcBase*> Npcs; // 0x28(0x10)
	struct TArray<struct ANpcTownPeopleBase*> NpcTowns; // 0x38(0x10)
	struct TArray<struct ASavePointBase*> SavePoints; // 0x48(0x10)
	struct TArray<struct ANpcShopBase*> ShopNpcs; // 0x58(0x10)
	struct ATownPeopleManager* TownPeopleTickManager; // 0x68(0x08)

	void UnregisterShopNpcAll(); // Function BattlePrototype.NpcManager.UnregisterShopNpcAll // (Native|Public|BlueprintCallable) // @ game+0x124c310
	void UnregisterShopNpc(struct ANpcShopBase* ShopNpc); // Function BattlePrototype.NpcManager.UnregisterShopNpc // (Native|Public|BlueprintCallable) // @ game+0x124c280
	void UnregisterSavePointAll(); // Function BattlePrototype.NpcManager.UnregisterSavePointAll // (Native|Public|BlueprintCallable) // @ game+0x124c260
	void UnregisterSavePoint(struct ASavePointBase* SavePoint); // Function BattlePrototype.NpcManager.UnregisterSavePoint // (Native|Public|BlueprintCallable) // @ game+0x124c1d0
	void UnregisterNpcTownAll(); // Function BattlePrototype.NpcManager.UnregisterNpcTownAll // (Native|Public|BlueprintCallable) // @ game+0x1212c60
	void UnregisterNpcTown(struct ANpcTownPeopleBase* NPC); // Function BattlePrototype.NpcManager.UnregisterNpcTown // (Native|Public|BlueprintCallable) // @ game+0x1212bd0
	void UnregisterNpcAll(); // Function BattlePrototype.NpcManager.UnregisterNpcAll // (Native|Public|BlueprintCallable) // @ game+0x117b150
	void UnregisterNpc(struct ANpcBase* NPC); // Function BattlePrototype.NpcManager.UnregisterNpc // (Native|Public|BlueprintCallable) // @ game+0x117b0c0
	void SetVisibleAndTickNpcTopwnAll(bool bVisible); // Function BattlePrototype.NpcManager.SetVisibleAndTickNpcTopwnAll // (Native|Public|BlueprintCallable) // @ game+0x124bea0
	void RegisterShopNpc(struct ANpcShopBase* ShopNpc); // Function BattlePrototype.NpcManager.RegisterShopNpc // (Native|Public|BlueprintCallable) // @ game+0x124aeb0
	void RegisterSavePoint(struct ASavePointBase* SavePoint); // Function BattlePrototype.NpcManager.RegisterSavePoint // (Native|Public|BlueprintCallable) // @ game+0x124ae20
	void RegisterNpcTown(struct ANpcTownPeopleBase* NPC); // Function BattlePrototype.NpcManager.RegisterNpcTown // (Native|Public|BlueprintCallable) // @ game+0x1212320
	void RegisterNpc(struct ANpcBase* NPC); // Function BattlePrototype.NpcManager.RegisterNpc // (Native|Public|BlueprintCallable) // @ game+0x117a930
	void OnBattleModeChange(struct URSGameInstance* GameInstance, bool bBattle); // Function BattlePrototype.NpcManager.OnBattleModeChange // (Final|Native|Public|BlueprintCallable) // @ game+0x117f3c0
	void Initialize(struct UObject* WorldContextObject); // Function BattlePrototype.NpcManager.Initialize // (Native|Public|BlueprintCallable) // @ game+0x117a1f0
};

// Class BattlePrototype.NpcSequencerActor
// Size: 0x320 (Inherited: 0x2f0)
struct ANpcSequencerActor : ANpcSkeletalMeshActor {
	struct UBoxComponent* BoundBoxComponent; // 0x2f0(0x08)
	struct USphereComponent* BoundCollisionHead; // 0x2f8(0x08)
	struct USphereComponent* BoundCollisionHandLeft; // 0x300(0x08)
	struct USphereComponent* BoundCollisionHandRight; // 0x308(0x08)
	struct USphereComponent* BoundCollisionFootLeft; // 0x310(0x08)
	struct USphereComponent* BoundCollisionFootRight; // 0x318(0x08)
};

// Class BattlePrototype.NpcShopBase
// Size: 0x2c8 (Inherited: 0x230)
struct ANpcShopBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct UStaticMeshComponent* StaticMeshComponent; // 0x238(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x240(0x08)
	struct UCapsuleComponent* CollisionCapsuleComponent; // 0x248(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x250(0x08)
	struct AMakeEventActor* MakeEventActorClass; // 0x258(0x08)
	struct AMakeEventActor* MakeEventActor; // 0x260(0x08)
	struct UChildActorComponent* ChildActionIcon; // 0x268(0x08)
	struct FVector ActionIconWorldPositionOffset; // 0x270(0x0c)
	enum class EActionIconType actionIconType; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	struct FUIMapIconAdjust MapIconAdjust; // 0x280(0x24)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct ASavePointBase* PairActor; // 0x2a8(0x08)
	int32_t ShopParam; // 0x2b0(0x04)
	int32_t TradeParam; // 0x2b4(0x04)
	bool IsFitGround; // 0x2b8(0x01)
	char pad_2B9[0xf]; // 0x2b9(0x0f)

	void RegisterPairActor(); // Function BattlePrototype.NpcShopBase.RegisterPairActor // (Final|Native|Public|BlueprintCallable) // @ game+0x124ae00
	struct UChildActorComponent* GetChildActionIcon(); // Function BattlePrototype.NpcShopBase.GetChildActionIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x124aa90
};

// Class BattlePrototype.NpcSkeletalMeshComponent
// Size: 0x280 (Inherited: 0x200)
struct UNpcSkeletalMeshComponent : USceneComponent {
	bool bBeginPlaySetup; // 0x200(0x01)
	char pad_201[0x3]; // 0x201(0x03)
	int32_t NpcMeshDataTableID; // 0x204(0x04)
	int32_t NpcMaterialDataTableID; // 0x208(0x04)
	bool bOptimizeMergeMesh; // 0x20c(0x01)
	char pad_20D[0x3]; // 0x20d(0x03)
	struct USkeletalMeshComponent* Body; // 0x210(0x08)
	struct USkeletalMeshComponent* BodyLower; // 0x218(0x08)
	struct USkeletalMeshComponent* Face; // 0x220(0x08)
	struct USkeletalMeshComponent* Hair; // 0x228(0x08)
	struct TArray<struct USkeletalMeshComponent*> Parts; // 0x230(0x10)
	struct UDataTable* MeshDataTable; // 0x240(0x08)
	struct UDataTable* MaterialDataTable; // 0x248(0x08)
	struct UDataTable* MaterialSkeletonDataTable; // 0x250(0x08)
	enum class ENpcMeshSkeletonType SkeletonType; // 0x258(0x01)
	char pad_259[0x27]; // 0x259(0x27)

	void SetVectorParameterValue(struct FName ParameterName, struct FVector ParameterValue); // Function BattlePrototype.NpcSkeletalMeshComponent.SetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x124bdd0
	void SetVector4ParameterValue(struct FName ParameterName, struct FLinearColor ParameterValue); // Function BattlePrototype.NpcSkeletalMeshComponent.SetVector4ParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x124bd00
	void SetVector4ArrayParameterValue(struct TArray<struct FName> ParameterNames, struct TArray<struct FLinearColor> ParameterValues); // Function BattlePrototype.NpcSkeletalMeshComponent.SetVector4ArrayParameterValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124bb10
	void SetUseAttachParentBounds(bool IsUse); // Function BattlePrototype.NpcSkeletalMeshComponent.SetUseAttachParentBounds // (Final|Native|Public|BlueprintCallable) // @ game+0x124b8d0
	void SetupLanding(float Height); // Function BattlePrototype.NpcSkeletalMeshComponent.SetupLanding // (Final|Native|Public|BlueprintCallable) // @ game+0x124c150
	void Setup(struct AActor* Owner, int32_t InNpcMeshDataTableID, struct USkeletalMeshComponent* InBody, struct USkeletalMeshComponent* InBodyLower, struct USkeletalMeshComponent* InFace, struct USkeletalMeshComponent* InHair, struct TArray<struct USkeletalMeshComponent*> InParts); // Function BattlePrototype.NpcSkeletalMeshComponent.Setup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124bf30
	void SetScalarParameterValue(struct FName ParameterName, float ParameterValue); // Function BattlePrototype.NpcSkeletalMeshComponent.SetScalarParameterValue // (Final|Native|Public|BlueprintCallable) // @ game+0x124b800
	void SetScalarArrayParameterValue(struct TArray<struct FName> ParameterNames, struct TArray<float> ParameterValues); // Function BattlePrototype.NpcSkeletalMeshComponent.SetScalarArrayParameterValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124b6e0
	void SetMaterialBaseToAmbSkin(float Value); // Function BattlePrototype.NpcSkeletalMeshComponent.SetMaterialBaseToAmbSkin // (Final|Native|Public|BlueprintCallable) // @ game+0x124b430
	void SetMaterialAmbToBaseSkin(float Value); // Function BattlePrototype.NpcSkeletalMeshComponent.SetMaterialAmbToBaseSkin // (Final|Native|Public|BlueprintCallable) // @ game+0x124b3b0
	void SetHideOverlap(bool bHide, bool bOneFrame); // Function BattlePrototype.NpcSkeletalMeshComponent.SetHideOverlap // (Final|Native|Public|BlueprintCallable) // @ game+0x124b250
	void ResetMesh(int32_t InNpcMeshDataTableID); // Function BattlePrototype.NpcSkeletalMeshComponent.ResetMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x124afc0
	void ResetMaterial(int32_t InNpcMaterialDataTableID); // Function BattlePrototype.NpcSkeletalMeshComponent.ResetMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x124af40
	void GetValidSkeletalMeshComponents(struct TArray<struct USkeletalMeshComponent*> MeshComps); // Function BattlePrototype.NpcSkeletalMeshComponent.GetValidSkeletalMeshComponents // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124acf0
	enum class ENpcMeshSkeletonType GetSkeletonType(); // Function BattlePrototype.NpcSkeletalMeshComponent.GetSkeletonType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124ac10
	struct FString GetSkeletonName(); // Function BattlePrototype.NpcSkeletalMeshComponent.GetSkeletonName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124ab90
	struct USkeletalMeshComponent* GetRootComponent(); // Function BattlePrototype.NpcSkeletalMeshComponent.GetRootComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x124aa60
	int32_t GetPartsMaxNum(); // Function BattlePrototype.NpcSkeletalMeshComponent.GetPartsMaxNum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x124aac0
	struct USkeletalMeshComponent* GetAnimationComponent(); // Function BattlePrototype.NpcSkeletalMeshComponent.GetAnimationComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x124aa60
	void BeginPlaySetup(); // Function BattlePrototype.NpcSkeletalMeshComponent.BeginPlaySetup // (Final|Native|Public|BlueprintCallable) // @ game+0x124aa40
};

// Class BattlePrototype.NpcTalker
// Size: 0x2e8 (Inherited: 0x290)
struct ANpcTalker : ANpcBase {
	char pad_290[0x8]; // 0x290(0x08)
	struct FString m_messageTableName; // 0x298(0x10)
	struct UBoxComponent* ShowBoxComponent; // 0x2a8(0x08)
	struct UREDLuaScriptComponent* m_pLuaScriptComponent; // 0x2b0(0x08)
	struct AMakeEventActor* m_MakeEventActorClass; // 0x2b8(0x08)
	struct AMakeEventActor* m_makeEventActor; // 0x2c0(0x08)
	char pad_2C8[0x8]; // 0x2c8(0x08)
	struct UChildActorComponent* m_pChildActionIcon; // 0x2d0(0x08)
	struct FVector m_actionIconWorldPositionOffset; // 0x2d8(0x0c)
	enum class EActionIconType m_actionIconType; // 0x2e4(0x01)
	enum class EActionIconSubQuestState m_actionIconSubQuestState; // 0x2e5(0x01)
	char pad_2E6[0x2]; // 0x2e6(0x02)

	void setMessageTableName(struct FString TableName); // Function BattlePrototype.NpcTalker.setMessageTableName // (Final|Native|Public|BlueprintCallable) // @ game+0x1250310
	struct FString getMessageTableName(); // Function BattlePrototype.NpcTalker.getMessageTableName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12502e0
};

// Class BattlePrototype.NpcDataParam
// Size: 0x40 (Inherited: 0x30)
struct UNpcDataParam : UDataAsset {
	float HeadLookAtClamp; // 0x30(0x04)
	float HeadLookAtFollowSpeed; // 0x34(0x04)
	float NotTurnAngle; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
};

// Class BattlePrototype.NpcTownPeopleCrowd
// Size: 0x400 (Inherited: 0x3a0)
struct ANpcTownPeopleCrowd : ANpcTownPeopleBase {
	struct UFixPoseActorComponent* FixPoseActorComponent; // 0x3a0(0x08)
	struct UNpcHomingMoveComponent* NpcHomingMoveComponent; // 0x3a8(0x08)
	struct USplineComponent* SplineMovePath; // 0x3b0(0x08)
	struct FVector CurMoveVec; // 0x3b8(0x0c)
	float MoveSpeed; // 0x3c4(0x04)
	struct FRotator CurMoveRot; // 0x3c8(0x0c)
	float RotSpeed; // 0x3d4(0x04)
	float LowAnimationDistance; // 0x3d8(0x04)
	bool IsCollisionOffByDistance; // 0x3dc(0x01)
	char pad_3DD[0x3]; // 0x3dd(0x03)
	float NoCollisionDistance; // 0x3e0(0x04)
	float LowAnimationTickValue; // 0x3e4(0x04)
	float CameraNearDistance; // 0x3e8(0x04)
	bool NeedTransparent; // 0x3ec(0x01)
	char pad_3ED[0x3]; // 0x3ed(0x03)
	float TransparentRate; // 0x3f0(0x04)
	float TransparentSpeed; // 0x3f4(0x04)
	float PlayerNearDistance; // 0x3f8(0x04)
	bool IsFadingAsMovement; // 0x3fc(0x01)
	char pad_3FD[0x3]; // 0x3fd(0x03)

	void SetSpline(struct USplineComponent* Spline); // Function BattlePrototype.NpcTownPeopleCrowd.SetSpline // (Final|Native|Public|BlueprintCallable) // @ game+0x1250070
};

// Class BattlePrototype.NpcTownPeopleMob
// Size: 0x3a0 (Inherited: 0x3a0)
struct ANpcTownPeopleMob : ANpcTownPeopleBase {
};

// Class BattlePrototype.OnlineTestCreateSession
// Size: 0xa8 (Inherited: 0x30)
struct UOnlineTestCreateSession : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x58]; // 0x50(0x58)

	struct UOnlineTestCreateSession* OnlineTestCreateSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, int32_t PubblicConections, bool UseLAN, struct FString LevelName); // Function BattlePrototype.OnlineTestCreateSession.OnlineTestCreateSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x124f820
};

// Class BattlePrototype.OnlineTestDestroySession
// Size: 0x78 (Inherited: 0x30)
struct UOnlineTestDestroySession : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x28]; // 0x50(0x28)

	struct UOnlineTestDestroySession* OnlineTestDestroySession(struct UObject* WorldContextObject, struct APlayerController* PlayerController); // Function BattlePrototype.OnlineTestDestroySession.OnlineTestDestroySession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x124f9f0
};

// Class BattlePrototype.OnlineTestFindSessions
// Size: 0x90 (Inherited: 0x30)
struct UOnlineTestFindSessions : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x40]; // 0x50(0x40)

	struct UOnlineTestFindSessions* OnlineTestFindSessions(struct UObject* WorldContextObject, struct APlayerController* PlayerController, int32_t MaxResults, bool bIsLAN); // Function BattlePrototype.OnlineTestFindSessions.OnlineTestFindSessions // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x124fab0
};

// Class BattlePrototype.OnlineTestGameSession
// Size: 0x358 (Inherited: 0x248)
struct AOnlineTestGameSession : AGameSession {
	char pad_248[0x110]; // 0x248(0x110)
};

// Class BattlePrototype.OnlineTestJoinSession
// Size: 0x180 (Inherited: 0x30)
struct UOnlineTestJoinSession : UBlueprintAsyncActionBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x130]; // 0x50(0x130)

	struct UOnlineTestJoinSession* OnlineTestJoinSession(struct UObject* WorldContextObject, struct APlayerController* PlayerController, struct FBlueprintSessionResult SearchResult); // Function BattlePrototype.OnlineTestJoinSession.OnlineTestJoinSession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x124fbe0
};

// Class BattlePrototype.OnlineTestPlayerState
// Size: 0x338 (Inherited: 0x330)
struct AOnlineTestPlayerState : APlayerState {
	struct FOnlineTestData TestData; // 0x330(0x08)

	void SetData(struct FOnlineTestData Value); // Function BattlePrototype.OnlineTestPlayerState.SetData // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x124fea0
	void OnRep_SetTestData(); // Function BattlePrototype.OnlineTestPlayerState.OnRep_SetTestData // (Final|Native|Private) // @ game+0x124f800
};

// Class BattlePrototype.OptimizeSwitchMaterialComponent
// Size: 0x290 (Inherited: 0xc0)
struct UOptimizeSwitchMaterialComponent : UActorComponent {
	char pad_C0[0x98]; // 0xc0(0x98)
	struct TArray<struct FOptimizeMaterialSettingMesh> MeshBaseSettings; // 0x158(0x10)
	char pad_168[0x110]; // 0x168(0x110)
	struct TArray<struct FOptimizeMaterialSetting> Settings; // 0x278(0x10)
	bool bIsRuntime; // 0x288(0x01)
	char pad_289[0x7]; // 0x289(0x07)

	void SetSwitchActivate(bool Active); // Function BattlePrototype.OptimizeSwitchMaterialComponent.SetSwitchActivate // (Final|Native|Public|BlueprintCallable) // @ game+0x12500f0
	void SetMesh(struct UMeshComponent* InTargetMesh); // Function BattlePrototype.OptimizeSwitchMaterialComponent.SetMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x124fff0
	void RevertBaseMaterial(); // Function BattlePrototype.OptimizeSwitchMaterialComponent.RevertBaseMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x124fdf0
	void Reset(); // Function BattlePrototype.OptimizeSwitchMaterialComponent.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x124fdd0
	bool IsSwitchActivate(); // Function BattlePrototype.OptimizeSwitchMaterialComponent.IsSwitchActivate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x124f7e0
	int32_t CheckScalarParameter(struct FName ParameterName, float ParameterValue); // Function BattlePrototype.OptimizeSwitchMaterialComponent.CheckScalarParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x124f620
	int32_t CheckScalarArrayParameter(struct TArray<struct FName> ParameterName, struct TArray<float> ParameterValue); // Function BattlePrototype.OptimizeSwitchMaterialComponent.CheckScalarArrayParameter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124f500
	int32_t CheckNowParameters(); // Function BattlePrototype.OptimizeSwitchMaterialComponent.CheckNowParameters // (Final|Native|Public|BlueprintCallable) // @ game+0x124f4d0
	void ChangeMeshLayer(struct UMeshComponent* InTargetMesh, int32_t MeshLayerID); // Function BattlePrototype.OptimizeSwitchMaterialComponent.ChangeMeshLayer // (Final|Native|Public|BlueprintCallable) // @ game+0x124f3e0
	int32_t AddSwitchSetting2(struct TArray<struct FOptimizeMaterialMultiCondition> MultiConditions, struct TMap<struct FString, struct FOptimizeMaterialOverrideSetting> SlotMaterials, struct FOptimizeMaterialOverrideSetting OtherSlotMaterial); // Function BattlePrototype.OptimizeSwitchMaterialComponent.AddSwitchSetting2 // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x124f020
	int32_t AddMesh(struct UMeshComponent* InTargetMesh); // Function BattlePrototype.OptimizeSwitchMaterialComponent.AddMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x124ef90
};

// Class BattlePrototype.OptimizeSwitchMaterialLibrary
// Size: 0x28 (Inherited: 0x28)
struct UOptimizeSwitchMaterialLibrary : UBlueprintFunctionLibrary {

	enum class EOptimizeMaterialCheckResultType CanUseOptimizeSwitchMaterialPlayerComp(struct USkeletalMeshComponent* TargetComponent); // Function BattlePrototype.OptimizeSwitchMaterialLibrary.CanUseOptimizeSwitchMaterialPlayerComp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x124f360
	enum class EOptimizeMaterialCheckResultType CanUseOptimizeSwitchMaterialPlayerActor(struct AActor* TargetActor, struct USkeletalMeshComponent* TargetMeshComp); // Function BattlePrototype.OptimizeSwitchMaterialLibrary.CanUseOptimizeSwitchMaterialPlayerActor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x124f290
};

// Class BattlePrototype.OptionParam
// Size: 0x110 (Inherited: 0x28)
struct UOptionParam : UObject {
	char pad_28[0xe8]; // 0x28(0xe8)

	void SetWindowModeImmediate(enum class EWindowMode windowMode, bool isApply); // Function BattlePrototype.OptionParam.SetWindowModeImmediate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1254400
	void SetWindowMode(enum class EWindowMode windowMode); // Function BattlePrototype.OptionParam.SetWindowMode // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1254360
	void SetVoiceVolume(char Volume); // Function BattlePrototype.OptionParam.SetVoiceVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x12542e0
	void SetVoiceLanguage(enum class ETextLanguage Type); // Function BattlePrototype.OptionParam.SetVoiceLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x1254260
	void SetUseVerticalSyncImmediate(bool useVert, bool isApply); // Function BattlePrototype.OptionParam.SetUseVerticalSyncImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1254190
	void SetUseVerticalSync(bool useVert); // Function BattlePrototype.OptionParam.SetUseVerticalSync // (Final|Native|Public|BlueprintCallable) // @ game+0x1254100
	void SetUseBrainCrash(bool SetValue); // Function BattlePrototype.OptionParam.SetUseBrainCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x1254070
	void SetTextureQualityImmediate(enum class EGradualQuality textureAuality, bool isApply); // Function BattlePrototype.OptionParam.SetTextureQualityImmediate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1253fa0
	void SetTextureQuality(enum class EGradualQuality textureQuality); // Function BattlePrototype.OptionParam.SetTextureQuality // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1253f10
	void SetTargetCameraTraceImmediate(enum class ETargetCameraTrace Type); // Function BattlePrototype.OptionParam.SetTargetCameraTraceImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1253e90
	void SetTargetCameraTrace(enum class ETargetCameraTrace Type); // Function BattlePrototype.OptionParam.SetTargetCameraTrace // (Final|Native|Public|BlueprintCallable) // @ game+0x1253e10
	void SetTargetAutoChangeImmediate(enum class ETargetAutoChange Type); // Function BattlePrototype.OptionParam.SetTargetAutoChangeImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1253d90
	void SetTargetAutoChange(enum class ETargetAutoChange Type); // Function BattlePrototype.OptionParam.SetTargetAutoChange // (Final|Native|Public|BlueprintCallable) // @ game+0x1253d10
	void SetSoundOutput(enum class EOptionSoundOutput Type); // Function BattlePrototype.OptionParam.SetSoundOutput // (Final|Native|Public|BlueprintCallable) // @ game+0x1253c90
	void SetShadowQualityImmediate(enum class EGradualQuality shadowQuality, bool isApply); // Function BattlePrototype.OptionParam.SetShadowQualityImmediate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1253bc0
	void SetShadowQuality(enum class EGradualQuality shadowQuality); // Function BattlePrototype.OptionParam.SetShadowQuality // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1253b30
	void SetSeVolume(char Volume); // Function BattlePrototype.OptionParam.SetSeVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1253ab0
	void SetScreenResolutionImmediate(struct FScreenResolutionSetting ScreenResolution, bool isApply); // Function BattlePrototype.OptionParam.SetScreenResolutionImmediate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12539c0
	void SetScreenResolutionFromUserSettings(); // Function BattlePrototype.OptionParam.SetScreenResolutionFromUserSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x12539a0
	void SetScreenResolution(struct FScreenResolutionSetting ScreenResolution); // Function BattlePrototype.OptionParam.SetScreenResolution // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12538f0
	void SetScreenBrightness(float Param); // Function BattlePrototype.OptionParam.SetScreenBrightness // (Final|Native|Public|BlueprintCallable) // @ game+0x1253870
	void SetPostQualityImmediate(enum class EGradualQuality postQuality, bool isApply); // Function BattlePrototype.OptionParam.SetPostQualityImmediate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12537a0
	void SetPostQuality(enum class EGradualQuality postQuality); // Function BattlePrototype.OptionParam.SetPostQuality // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1253710
	void SetOldScreenResolution(struct FScreenResolutionSetting ScreenResolution); // Function BattlePrototype.OptionParam.SetOldScreenResolution // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1253660
	void SetMinimapScaling(enum class EOptionMinimapScaling Type); // Function BattlePrototype.OptionParam.SetMinimapScaling // (Final|Native|Public|BlueprintCallable) // @ game+0x12535e0
	void SetMinimapRotation(enum class EOptionMinimapRotation Type); // Function BattlePrototype.OptionParam.SetMinimapRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x1253560
	void SetMinimapDisplay(enum class EOptionMinimapDisplay Type); // Function BattlePrototype.OptionParam.SetMinimapDisplay // (Final|Native|Public|BlueprintCallable) // @ game+0x12534e0
	void SetLockonActionTypeImmediate(enum class ELockonActionType Type); // Function BattlePrototype.OptionParam.SetLockonActionTypeImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1253460
	void SetLockonActionType(enum class ELockonActionType Type); // Function BattlePrototype.OptionParam.SetLockonActionType // (Final|Native|Public|BlueprintCallable) // @ game+0x12533e0
	void SetFPSTypeImmediate(enum class EFPSType fpsType); // Function BattlePrototype.OptionParam.SetFPSTypeImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1253360
	void SetFPSType(enum class EFPSType fpsType); // Function BattlePrototype.OptionParam.SetFPSType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12532d0
	void SetEventMessageAutoPlayImmediate(enum class EEventMessageAutoPlay Type); // Function BattlePrototype.OptionParam.SetEventMessageAutoPlayImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1253250
	void SetEventMessageAutoPlay(enum class EEventMessageAutoPlay Type); // Function BattlePrototype.OptionParam.SetEventMessageAutoPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x12531d0
	void SetDisplayLanguageImmediate(enum class ETextLanguage Type); // Function BattlePrototype.OptionParam.SetDisplayLanguageImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void SetDisplayLanguage(enum class ETextLanguage Type); // Function BattlePrototype.OptionParam.SetDisplayLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void SetDisplayEnemyDamage(enum class EOptionDisplayEnemyDamage Type); // Function BattlePrototype.OptionParam.SetDisplayEnemyDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x1253150
	void SetDifficulty(enum class HCGameDifficulty Type); // Function BattlePrototype.OptionParam.SetDifficulty // (Final|Native|Public|BlueprintCallable) // @ game+0x12530d0
	void SetDefaultAllGraphic(bool isConstruct, bool setUeDefault); // Function BattlePrototype.OptionParam.SetDefaultAllGraphic // (Final|Native|Public|BlueprintCallable) // @ game+0x1253000
	void SetDefaultAllController(); // Function BattlePrototype.OptionParam.SetDefaultAllController // (Final|Native|Public|BlueprintCallable) // @ game+0x1252fe0
	void SetDefaultAllConfig(); // Function BattlePrototype.OptionParam.SetDefaultAllConfig // (Final|Native|Public|BlueprintCallable) // @ game+0x1252fc0
	void SetDefaultAll(bool isConstruct, bool setUeDefault); // Function BattlePrototype.OptionParam.SetDefaultAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1252ef0
	void SetControllerVibration(enum class EOptionControllerVibration Type); // Function BattlePrototype.OptionParam.SetControllerVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x1252e70
	void SetControllerParamValue(enum class EChangeableControllerKey targetKey, enum class ERSGamepadInputName newKey); // Function BattlePrototype.OptionParam.SetControllerParamValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1252db0
	void SetCameraYaw(enum class EOptionCameraYaw Type); // Function BattlePrototype.OptionParam.SetCameraYaw // (Final|Native|Public|BlueprintCallable) // @ game+0x1252d30
	void SetCameraSpeed(char speedType); // Function BattlePrototype.OptionParam.SetCameraSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1252cb0
	void SetCameraPitch(enum class EOptionCameraPitch Type); // Function BattlePrototype.OptionParam.SetCameraPitch // (Final|Native|Public|BlueprintCallable) // @ game+0x1252c30
	void SetCameraAfterMoveTypeImmediate(enum class ECameraAfterMoveType Type); // Function BattlePrototype.OptionParam.SetCameraAfterMoveTypeImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1252bb0
	void SetCameraAfterMoveType(enum class ECameraAfterMoveType Type); // Function BattlePrototype.OptionParam.SetCameraAfterMoveType // (Final|Native|Public|BlueprintCallable) // @ game+0x1252b30
	void SetBGMVolume(char Volume); // Function BattlePrototype.OptionParam.SetBGMVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1252ab0
	void SetAttackAutoLockOnImmediate(enum class EAttackAutoLockOn Type); // Function BattlePrototype.OptionParam.SetAttackAutoLockOnImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x1252a30
	void SetAttackAutoLockOn(enum class EAttackAutoLockOn Type); // Function BattlePrototype.OptionParam.SetAttackAutoLockOn // (Final|Native|Public|BlueprintCallable) // @ game+0x12529b0
	void SetAntiAliasingQualityImmediate(enum class EOptionAAQuality antiAliasingQuality); // Function BattlePrototype.OptionParam.SetAntiAliasingQualityImmediate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1252920
	void SetAntiAliasingQuality(enum class EOptionAAQuality antiAliasingQuality); // Function BattlePrototype.OptionParam.SetAntiAliasingQuality // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1252890
	void ReflectParamImmediate(); // Function BattlePrototype.OptionParam.ReflectParamImmediate // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ReflectParamAllGraphic(); // Function BattlePrototype.OptionParam.ReflectParamAllGraphic // (Final|Native|Public|BlueprintCallable) // @ game+0x1252870
	void ReflectParamAllConfig(); // Function BattlePrototype.OptionParam.ReflectParamAllConfig // (Final|Native|Public|BlueprintCallable) // @ game+0x1252850
	void ReflectParamAll(); // Function BattlePrototype.OptionParam.ReflectParamAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1252830
	bool ReflectControllerParam(); // Function BattlePrototype.OptionParam.ReflectControllerParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1252800
	void InitData(struct URSGameInstance* gameInst); // Function BattlePrototype.OptionParam.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x1252780
	enum class EWindowMode GetWindowMode(); // Function BattlePrototype.OptionParam.GetWindowMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252760
	char GetVoiceVolume(); // Function BattlePrototype.OptionParam.GetVoiceVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252740
	enum class ETextLanguage GetVoiceLanguage(); // Function BattlePrototype.OptionParam.GetVoiceLanguage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252720
	bool GetUseVerticalSync(); // Function BattlePrototype.OptionParam.GetUseVerticalSync // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252700
	enum class EGradualQuality GetTextureQuality(); // Function BattlePrototype.OptionParam.GetTextureQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12526e0
	enum class ETargetAutoChange GetTargetAutoChange(); // Function BattlePrototype.OptionParam.GetTargetAutoChange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12526c0
	enum class EOptionSoundOutput GetSoundOutput(); // Function BattlePrototype.OptionParam.GetSoundOutput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12526a0
	enum class EGradualQuality GetShadowQuality(); // Function BattlePrototype.OptionParam.GetShadowQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252680
	char GetSeVolume(); // Function BattlePrototype.OptionParam.GetSeVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252640
	enum class ETargetCameraTrace GetSetTargetCameraTrace(); // Function BattlePrototype.OptionParam.GetSetTargetCameraTrace // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252660
	struct FScreenResolutionSetting GetScreenResolution(); // Function BattlePrototype.OptionParam.GetScreenResolution // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252610
	float GetScreenBrightness(); // Function BattlePrototype.OptionParam.GetScreenBrightness // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6b8f00
	enum class EGradualQuality GetPostQuality(); // Function BattlePrototype.OptionParam.GetPostQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12525f0
	struct FScreenResolutionSetting GetOldScreenResolution(); // Function BattlePrototype.OptionParam.GetOldScreenResolution // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12525c0
	enum class EOptionMinimapScaling GetMinimapScaling(); // Function BattlePrototype.OptionParam.GetMinimapScaling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12525a0
	enum class EOptionMinimapRotation GetMinimapRotation(); // Function BattlePrototype.OptionParam.GetMinimapRotation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252580
	enum class EOptionMinimapDisplay GetMinimapDisplay(); // Function BattlePrototype.OptionParam.GetMinimapDisplay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252560
	enum class ELockonActionType GetLockonActionType(); // Function BattlePrototype.OptionParam.GetLockonActionType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252540
	enum class EFPSType GetFPSType(); // Function BattlePrototype.OptionParam.GetFPSType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b0800
	enum class EEventMessageAutoPlay GetEventMessageAutoPlay(); // Function BattlePrototype.OptionParam.GetEventMessageAutoPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad420
	enum class ETextLanguage GetDisplayLanguage(); // Function BattlePrototype.OptionParam.GetDisplayLanguage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252520
	enum class EOptionDisplayEnemyDamage GetDisplayEnemyDamage(); // Function BattlePrototype.OptionParam.GetDisplayEnemyDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad3c0
	enum class HCGameDifficulty GetDifficulty(); // Function BattlePrototype.OptionParam.GetDifficulty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12241a0
	enum class EOptionControllerVibration GetControllerVibration(); // Function BattlePrototype.OptionParam.GetControllerVibration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11ad400
	enum class ERSGamepadInputName GetControllerParamValue(enum class EChangeableControllerKey targetKey); // Function BattlePrototype.OptionParam.GetControllerParamValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252490
	enum class ERSGamepadInputName GetControllerDefaultKey(enum class EChangeableControllerKey targetKey); // Function BattlePrototype.OptionParam.GetControllerDefaultKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252400
	enum class EOptionCameraYaw GetCameraYaw(); // Function BattlePrototype.OptionParam.GetCameraYaw // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12523e0
	char GetCameraSpeed(); // Function BattlePrototype.OptionParam.GetCameraSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12523c0
	enum class EOptionCameraPitch GetCameraPitch(); // Function BattlePrototype.OptionParam.GetCameraPitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12523a0
	enum class ECameraAfterMoveType GetCameraAfterMoveType(); // Function BattlePrototype.OptionParam.GetCameraAfterMoveType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252380
	char GetBgmVolume(); // Function BattlePrototype.OptionParam.GetBgmVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252360
	enum class EAttackAutoLockOn GetAttackAutoLockOn(); // Function BattlePrototype.OptionParam.GetAttackAutoLockOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252340
	enum class EOptionAAQuality GetAntiAliasingQuality(); // Function BattlePrototype.OptionParam.GetAntiAliasingQuality // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252320
};

// Class BattlePrototype.OutgameDebuggingManager
// Size: 0x2f8 (Inherited: 0x230)
struct AOutgameDebuggingManager : AActor {
	char pad_230[0x20]; // 0x230(0x20)
	struct FMulticastInlineDelegate OnReadyDebugging; // 0x250(0x10)
	enum class EOutgameDebuggingPage Page; // 0x260(0x01)
	char pad_261[0x4f]; // 0x261(0x4f)
	struct UUserWidget* DebuggingWidget; // 0x2b0(0x08)
	struct TArray<struct UDebuggingWidget*> DebuggingTreeWidget; // 0x2b8(0x10)
	struct UOutgameDebuggingStartupObject* StartupObject; // 0x2c8(0x08)
	char pad_2D0[0x4]; // 0x2d0(0x04)
	float DebugAutoInputDelayTime; // 0x2d4(0x04)
	bool bDebugDispRevision; // 0x2d8(0x01)
	char pad_2D9[0x1f]; // 0x2d9(0x1f)

	void UnregisterChildFromItem(enum class EOutgameDebuggingPage InPage, struct ADebuggingItemBase* InItem); // Function BattlePrototype.OutgameDebuggingManager.UnregisterChildFromItem // (Final|Native|Public|BlueprintCallable) // @ game+0x11d25b0
	void UnregisterChildFromHashName(enum class EOutgameDebuggingPage InPage, struct FText InHashName); // Function BattlePrototype.OutgameDebuggingManager.UnregisterChildFromHashName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d38e0
	void TickPageUI(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageSystem(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageSystem // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageSound(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageScene(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageScene // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageRender(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageRender // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPagePlayer(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPagePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageParty(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageParty // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageEvent(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageEnemy(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageBattle(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageBattle // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void TickPageAjito(float DeltaSeconds); // Function BattlePrototype.OutgameDebuggingManager.TickPageAjito // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void StartWindow(); // Function BattlePrototype.OutgameDebuggingManager.StartWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x12570f0
	void SetPage(enum class EOutgameDebuggingPage InPage); // Function BattlePrototype.OutgameDebuggingManager.SetPage // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void SetDebugDispRevisions(bool isDisp); // Function BattlePrototype.OutgameDebuggingManager.SetDebugDispRevisions // (Final|Native|Public|BlueprintCallable) // @ game+0x1256c50
	struct ADebuggingItemBase* SearchItem(enum class EOutgameDebuggingPage InPage, struct FText InHashName, bool InIgnoreCase); // Function BattlePrototype.OutgameDebuggingManager.SearchItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x11d27e0
	void SaveDebuggingParameter(); // Function BattlePrototype.OutgameDebuggingManager.SaveDebuggingParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ResetDebuggingParameter(); // Function BattlePrototype.OutgameDebuggingManager.ResetDebuggingParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1256c30
	void RegisterChild(enum class EOutgameDebuggingPage InPage, struct ADebuggingItemBase* InItem); // Function BattlePrototype.OutgameDebuggingManager.RegisterChild // (Final|Native|Public|BlueprintCallable) // @ game+0x11d25b0
	void LoadDebuggingParameter(bool IsBroadcast); // Function BattlePrototype.OutgameDebuggingManager.LoadDebuggingParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	bool IsReady(); // Function BattlePrototype.OutgameDebuggingManager.IsReady // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11a3260
	struct FString GetRevisionString(); // Function BattlePrototype.OutgameDebuggingManager.GetRevisionString // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11d1650
	struct FString GetDebuggingText(struct FString Key); // Function BattlePrototype.OutgameDebuggingManager.GetDebuggingText // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12566d0
	struct AOutgameDebuggingManager* GetDebuggingManagerInstance(struct UObject* WorldContextObject); // Function BattlePrototype.OutgameDebuggingManager.GetDebuggingManagerInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1256650
	void FinishWindow(); // Function BattlePrototype.OutgameDebuggingManager.FinishWindow // (Final|Native|Public|BlueprintCallable) // @ game+0x1256630
	void ExportDebuggingItemText(); // Function BattlePrototype.OutgameDebuggingManager.ExportDebuggingItemText // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void EndPageUI(); // Function BattlePrototype.OutgameDebuggingManager.EndPageUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageSystem(); // Function BattlePrototype.OutgameDebuggingManager.EndPageSystem // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageSound(); // Function BattlePrototype.OutgameDebuggingManager.EndPageSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageScene(); // Function BattlePrototype.OutgameDebuggingManager.EndPageScene // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageRender(); // Function BattlePrototype.OutgameDebuggingManager.EndPageRender // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPagePlayer(); // Function BattlePrototype.OutgameDebuggingManager.EndPagePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageParty(); // Function BattlePrototype.OutgameDebuggingManager.EndPageParty // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageEvent(); // Function BattlePrototype.OutgameDebuggingManager.EndPageEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageEnemy(); // Function BattlePrototype.OutgameDebuggingManager.EndPageEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageBattle(); // Function BattlePrototype.OutgameDebuggingManager.EndPageBattle // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void EndPageAjito(); // Function BattlePrototype.OutgameDebuggingManager.EndPageAjito // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void Dump(); // Function BattlePrototype.OutgameDebuggingManager.Dump // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool DebugIsDispRevisions(); // Function BattlePrototype.OutgameDebuggingManager.DebugIsDispRevisions // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1860
	void BeginPageUI(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageSystem(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageSystem // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageSound(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageScene(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageScene // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageRender(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageRender // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPagePlayer(); // Function BattlePrototype.OutgameDebuggingManager.BeginPagePlayer // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageParty(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageParty // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageEvent(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageEnemy(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageEnemy // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageBattle(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageBattle // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void BeginPageAjito(); // Function BattlePrototype.OutgameDebuggingManager.BeginPageAjito // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.OutgameDebuggingStartupObject
// Size: 0x38 (Inherited: 0x28)
struct UOutgameDebuggingStartupObject : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct USaveLoadScreenParamManager* m_pDebugSystemSaveLoadScreenParamManager; // 0x30(0x08)

	void OnUseMouseCursor(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnUseMouseCursor // (Final|Native|Public) // @ game+0x79d490
	void OnSystemMaximumProgressDisplayThatHasBeenReached(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemMaximumProgressDisplayThatHasBeenReached // (Final|Native|Public) // @ game+0x79d490
	void OnSystemForcedChangeOfExecutionResultReport(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemForcedChangeOfExecutionResultReport // (Final|Native|Public) // @ game+0x79d490
	void OnSystemFastFlowSkip(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemFastFlowSkip // (Final|Native|Public) // @ game+0x79d490
	void OnSystemDummyBuffer(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemDummyBuffer // (Final|Native|Public) // @ game+0x79d490
	void OnSystemDataCorrupt(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemDataCorrupt // (Final|Native|Public) // @ game+0x79d490
	void OnSystemChangeZeroEpClearFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemChangeZeroEpClearFlag // (Final|Native|Public) // @ game+0x79d490
	void OnSystemChangeClearFlag(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSystemChangeClearFlag // (Final|Native|Public) // @ game+0x79d490
	void OnSavedataUpload(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSavedataUpload // (Final|Native|Public) // @ game+0x79d490
	void OnSavedataDownload(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSavedataDownload // (Final|Native|Public) // @ game+0x79d490
	void OnSavedataDelete(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnSavedataDelete // (Final|Native|Public) // @ game+0x79d490
	void OnReloadLevel(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnReloadLevel // (Final|Native|Public) // @ game+0x79d490
	void OnForcedChangeOfExecutionResultReportList(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnForcedChangeOfExecutionResultReportList // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteLoadLevel(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnExecuteLoadLevel // (Final|Native|Public) // @ game+0x79d490
	void OnDispUserTag(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnDispUserTag // (Final|Native|Public) // @ game+0x79d490
	void OnDispMouseRectangle(struct ADebuggingItemBool* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnDispMouseRectangle // (Final|Native|Public) // @ game+0x79d490
	void OnCosmosWebManagerHttpLastErrorCodeLog(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnCosmosWebManagerHttpLastErrorCodeLog // (Final|Native|Public) // @ game+0x79d490
	void OnChangeLoadLevel(struct ADebuggingItemStringArray* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnChangeLoadLevel // (Final|Native|Public) // @ game+0x79d490
	void OnActivityReleaseAccordingToTheMaximumProgressThatHasBeenReached(struct ADebuggingItemEvent* Item); // Function BattlePrototype.OutgameDebuggingStartupObject.OnActivityReleaseAccordingToTheMaximumProgressThatHasBeenReached // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.OutgameDebuggingWindowInterface
// Size: 0x28 (Inherited: 0x28)
struct UOutgameDebuggingWindowInterface : UInterface {

	void OnChangePage(enum class EOutgameDebuggingPage NewPage); // Function BattlePrototype.OutgameDebuggingWindowInterface.OnChangePage // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.ParticleComponentListManager
// Size: 0x38 (Inherited: 0x28)
struct UParticleComponentListManager : UObject {
	struct TArray<struct URSParticleSystemComponentBase*> ParticleSystemComponentBases; // 0x28(0x10)
};

// Class BattlePrototype.PauseUtility
// Size: 0x28 (Inherited: 0x28)
struct UPauseUtility : UObject {

	void SetRedPaused(struct UObject* WorldContextObject, int32_t PauseFlag, bool bPaused); // Function BattlePrototype.PauseUtility.SetRedPaused // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1256cd0
	void GetRedPaused(struct UObject* WorldContextObject, int32_t ReturnValue); // Function BattlePrototype.PauseUtility.GetRedPaused // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1256880
	void DumpRedActorPauseSettings(struct UObject* WorldContextObject); // Function BattlePrototype.PauseUtility.DumpRedActorPauseSettings // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12565c0
};

// Class BattlePrototype.PhantomAnimInstance
// Size: 0x640 (Inherited: 0x620)
struct UPhantomAnimInstance : UASAnimInstance {
	struct FMulticastInlineDelegate DispatchMontageBlendingOut; // 0x620(0x10)
	struct FMulticastInlineDelegate DispatchMontageEnded; // 0x630(0x10)

	void RecvOnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.PhantomAnimInstance.RecvOnMontageEnded // (Final|Native|Private) // @ game+0x1256b60
	void RecvOnMontageBlendingOut(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.PhantomAnimInstance.RecvOnMontageBlendingOut // (Final|Native|Private) // @ game+0x12569c0
};

// Class BattlePrototype.PhantomBase
// Size: 0x650 (Inherited: 0x630)
struct APhantomBase : AASCharacter {
	struct UTeamComponent* Team; // 0x628(0x08)
	struct UHitCheckComponent* HitCheck; // 0x630(0x08)
	struct UHitCheckReceiverComponent* HitCheckReceiver; // 0x638(0x08)
	struct UDynamicMaterialControllerComponent* DynamicMaterialController; // 0x640(0x08)

	void StartPhantom(struct UAnimMontage* Montage, float fadeInSec); // Function BattlePrototype.PhantomBase.StartPhantom // (Final|Native|Public|BlueprintCallable) // @ game+0x1257020
	void StartMaterialFade(bool bFadeIn, float fadeSec); // Function BattlePrototype.PhantomBase.StartMaterialFade // (Final|Native|Public|BlueprintCallable) // @ game+0x1256f50
	void RecvOnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.PhantomBase.RecvOnMontageEnded // (Final|Native|Private) // @ game+0x1256a90
	void RecvOnEndMaterialFade(struct FName ParameterName); // Function BattlePrototype.PhantomBase.RecvOnEndMaterialFade // (Final|Native|Private) // @ game+0x1256940
	bool OnCustomAttackTimingNotified(struct FName CustomName); // Function BattlePrototype.PhantomBase.OnCustomAttackTimingNotified // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.PhantomSpawnerComponent
// Size: 0xc0 (Inherited: 0xc0)
struct UPhantomSpawnerComponent : UActorComponent {

	struct APhantomBase* SpawnPhantom(struct APhantomBase* phantomClass, struct FVector RelativeLocation, struct FRotator RelativeRotation, struct UAnimMontage* Montage, float fadeInSec); // Function BattlePrototype.PhantomSpawnerComponent.SpawnPhantom // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1256dc0
	struct UPhantomSpawnerComponent* GetPhantomSpawner(struct AActor* Actor); // Function BattlePrototype.PhantomSpawnerComponent.GetPhantomSpawner // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1256800
};

// Class BattlePrototype.ActivityManager
// Size: 0x100 (Inherited: 0x28)
struct UActivityManager : UObject {
	char pad_28[0x58]; // 0x28(0x58)
	struct UDataTable* progressIDTable_Yuito; // 0x80(0x08)
	struct UDataTable* progressIDTable_Kasane; // 0x88(0x08)
	char pad_90[0x70]; // 0x90(0x70)

	void WaitUntilComplete(); // Function BattlePrototype.ActivityManager.WaitUntilComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x125f2b0
	void UpdateMainEpisodeActivity(enum class EPlayerID playerId, int32_t beforeProgressID, int32_t nextProgressID); // Function BattlePrototype.ActivityManager.UpdateMainEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125f010
	void UpdateBondsEpisodeActivity(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t ProgressId); // Function BattlePrototype.ActivityManager.UpdateBondsEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125ed00
	void Update(); // Function BattlePrototype.ActivityManager.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x125eca0
	void StartNewGame(enum class EPlayerID playerId, int32_t ProgressId); // Function BattlePrototype.ActivityManager.StartNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x125ebe0
	void StartMainEpisodeActivity(enum class EPlayerID playerId, int32_t ProgressId); // Function BattlePrototype.ActivityManager.StartMainEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125eb20
	void SetDisableFlag(enum class EGameActivityDisableFlag Type, bool isDisable); // Function BattlePrototype.ActivityManager.SetDisableFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x125de70
	void SetDebugDrawFlag(bool IsDraw, enum class EDebugGameActivityDisplayFlag Type); // Function BattlePrototype.ActivityManager.SetDebugDrawFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x125dd20
	void ResumeMainEpisodeActivity(enum class EPlayerID playerId, int32_t ProgressId); // Function BattlePrototype.ActivityManager.ResumeMainEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125d8e0
	void ResumeBondsEpisodeActivity(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t ProgressId); // Function BattlePrototype.ActivityManager.ResumeBondsEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125d7e0
	bool IsExsistDebugDrawFlag(enum class EDebugGameActivityDisplayFlag Type); // Function BattlePrototype.ActivityManager.IsExsistDebugDrawFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cb70
	bool IsExistBondsEpisodeActivity(enum class EPlayerID playerId, int32_t ProgressId); // Function BattlePrototype.ActivityManager.IsExistBondsEpisodeActivity // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cab0
	bool IsDisableFlag(enum class EGameActivityDisableFlag Type); // Function BattlePrototype.ActivityManager.IsDisableFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c900
	enum class EPlayerID GetMainCharacter(int32_t selectedScenario); // Function BattlePrototype.ActivityManager.GetMainCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c190
	void EndMainEpisodeActivity(enum class EPlayerID playerId, int32_t ProgressId, enum class EGameActivityOutcome Outcome); // Function BattlePrototype.ActivityManager.EndMainEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125bbb0
	void EndBondsEpisodeActivity(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t ProgressId, enum class EGameActivityOutcome Outcome); // Function BattlePrototype.ActivityManager.EndBondsEpisodeActivity // (Final|Native|Public|BlueprintCallable) // @ game+0x125ba20
};

// Class BattlePrototype.PlatformGameActivityFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlatformGameActivityFunctionLibrary : UBlueprintFunctionLibrary {
};

// Class BattlePrototype.RSPlatformFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSPlatformFunctionLibrary : UBlueprintFunctionLibrary {

	void SetEnableShareRecording(bool IsEnable); // Function BattlePrototype.RSPlatformFunctionLibrary.SetEnableShareRecording // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125df40
	bool SetCurrentCulture(enum class ETextLanguage textLang); // Function BattlePrototype.RSPlatformFunctionLibrary.SetCurrentCulture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125dca0
	bool IsEnableShareRecording(); // Function BattlePrototype.RSPlatformFunctionLibrary.IsEnableShareRecording // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x125c9c0
	bool IsCrossButtonDecide(); // Function BattlePrototype.RSPlatformFunctionLibrary.IsCrossButtonDecide // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7af460
	enum class ETextLanguage GetSystemVoiceLanguage(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetSystemVoiceLanguage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x125c300
	enum class ETextLanguage GetSystemTextLanguage(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetSystemTextLanguage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1252520
	enum class EPlatFormType GetPlatformType(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetPlatformType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7b7230
	enum class ERegionType GetPlatformRegion(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetPlatformRegion // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7b7230
	enum class EPlatFormConsoleType GetPlatformConsoleType(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetPlatformConsoleType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x7af460
	struct FString GetLocalizedPath(enum class ETextLanguage textLang); // Function BattlePrototype.RSPlatformFunctionLibrary.GetLocalizedPath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125c0d0
	enum class ELocalizedKeyboardType GetLocalizedKeyboardType(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetLocalizedKeyboardType // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x125c0a0
	bool GetDisplayRequestState(); // Function BattlePrototype.RSPlatformFunctionLibrary.GetDisplayRequestState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x125be10
	void DisplayRequestRelease(); // Function BattlePrototype.RSPlatformFunctionLibrary.DisplayRequestRelease // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125b980
	void DisplayRequestActive(); // Function BattlePrototype.RSPlatformFunctionLibrary.DisplayRequestActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125b960
	void ConvertKeyboardNames(struct TArray<struct FName> oldKeys, enum class ELocalizedKeyboardType oldType, struct TArray<struct FName> newKeys, enum class ELocalizedKeyboardType newType); // Function BattlePrototype.RSPlatformFunctionLibrary.ConvertKeyboardNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x125b740
	struct FName ConvertKeyboardName(struct FName oldKey, enum class ELocalizedKeyboardType oldType, enum class ELocalizedKeyboardType newType); // Function BattlePrototype.RSPlatformFunctionLibrary.ConvertKeyboardName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125b640
};

// Class BattlePrototype.PlatformUserIdFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UPlatformUserIdFunctionLibrary : UBlueprintFunctionLibrary {

	struct FString GetGamerTag(struct UObject* WorldContextObject); // Function BattlePrototype.PlatformUserIdFunctionLibrary.GetGamerTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x125bfa0
};

// Class BattlePrototype.PlayerAIBaseComponent
// Size: 0x3c0 (Inherited: 0xc0)
struct UPlayerAIBaseComponent : UActorComponent {
	char pad_C0[0x8]; // 0xc0(0x08)
	struct TArray<struct FGameTimer> ThinkTimerList; // 0xc8(0x10)
	char pad_D8[0x8]; // 0xd8(0x08)
	float Param_ThreatTime; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct TArray<struct FPlayerAIThreatActorData> ThreatDataArray; // 0xe8(0x10)
	struct FGameTimer EventMoveForceEndTimer; // 0xf8(0x0c)
	float DodgeRangeAttackDistance; // 0x104(0x04)
	int32_t EnpcUniqueObjDodgeProbability; // 0x108(0x04)
	char pad_10C[0x28]; // 0x10c(0x28)
	enum class EPlayerAIMoveModeCPP MoveModeCPP; // 0x134(0x01)
	bool bLeftPos; // 0x135(0x01)
	bool bCircleDirClockwise; // 0x136(0x01)
	char pad_137[0x1]; // 0x137(0x01)
	float MoveCircleSpeed; // 0x138(0x04)
	struct FVector JumpDestination; // 0x13c(0x0c)
	int32_t OrderJumpNum; // 0x148(0x04)
	float ThinkDistance; // 0x14c(0x04)
	struct FVector CurrentGoalBaseLocation; // 0x150(0x0c)
	struct FVector CurrentGoalRelativeLocation; // 0x15c(0x0c)
	struct FVector CurrentGoalDesiredRelativeLocation; // 0x168(0x0c)
	bool bEnableGoalRelativeLocation; // 0x174(0x01)
	char pad_175[0x3]; // 0x175(0x03)
	struct ARSGoalActorBase* MoveGoalActor; // 0x178(0x08)
	float CurrentGoalArmLength; // 0x180(0x04)
	float CurrentGoalYaw; // 0x184(0x04)
	struct FVector PrevThinkLastActorForward; // 0x188(0x0c)
	bool bCircleNear; // 0x194(0x01)
	char pad_195[0x3]; // 0x195(0x03)
	struct FGameTimer NearCircleMoveTimer; // 0x198(0x0c)
	float NearCircleMoveNearDist; // 0x1a4(0x04)
	float NearCircleMoveFarDist; // 0x1a8(0x04)
	struct FVector JumpDir; // 0x1ac(0x0c)
	struct FPlayerAICheckMoveWallParamIn AsyncCheckWallParamIn; // 0x1b8(0x20)
	bool bOwnerENPC; // 0x1d8(0x01)
	bool bInvalidKeepOut; // 0x1d9(0x01)
	bool bAttackHit; // 0x1da(0x01)
	char pad_1DB[0x1]; // 0x1db(0x01)
	struct TWeakObjectPtr<struct ARSCharacterBase> BattleTargetActor; // 0x1dc(0x08)
	struct FGameTimer UpdateTargetTimer; // 0x1e4(0x0c)
	bool bUpdateBattleTarget; // 0x1f0(0x01)
	bool bBattleModeFlag; // 0x1f1(0x01)
	bool bForceUpdateTarget; // 0x1f2(0x01)
	char pad_1F3[0x1]; // 0x1f3(0x01)
	int32_t AttackCount; // 0x1f4(0x04)
	float NoAttackTime; // 0x1f8(0x04)
	bool bBattleActionStartFlag; // 0x1fc(0x01)
	char pad_1FD[0x3]; // 0x1fd(0x03)
	float UpdateBattleTargetIntervalTime; // 0x200(0x04)
	bool bDodgeAble; // 0x204(0x01)
	bool bDodgeAttack; // 0x205(0x01)
	char pad_206[0x2]; // 0x206(0x02)
	struct FGameTimer DodgeIntervalTimer; // 0x208(0x0c)
	struct FVector BattleDodgeDir; // 0x214(0x0c)
	bool bDodgeRangeAttack; // 0x220(0x01)
	char pad_221[0x3]; // 0x221(0x03)
	struct FVector DodgeRangeAttackDir; // 0x224(0x0c)
	float DodgeIntervalTime; // 0x230(0x04)
	float ForceDodgeIntervalTime; // 0x234(0x04)
	struct FVector2D LeftStick; // 0x238(0x08)
	float LeftStickScale; // 0x240(0x04)
	bool bLeftStickScaleEnable; // 0x244(0x01)
	char pad_245[0x3]; // 0x245(0x03)
	struct TMap<struct FName, bool> bEnableInputStick; // 0x248(0x50)
	bool bMoveStickBack; // 0x298(0x01)
	bool bMoveStickDetour; // 0x299(0x01)
	char pad_29A[0x2]; // 0x29a(0x02)
	float MoveStickDetourYawAngle; // 0x29c(0x04)
	enum class EPlayerAITargetSearchModeCPP TargetSearchModeCPP; // 0x2a0(0x01)
	enum class EPlayerAIOrder Order; // 0x2a1(0x01)
	char pad_2A2[0x2]; // 0x2a2(0x02)
	float RANGE_NEAR; // 0x2a4(0x04)
	float RANGE_FAR; // 0x2a8(0x04)
	float RANGE_TOO_FAR; // 0x2ac(0x04)
	float MOVE_AIM_CIRRCLE_SPEED; // 0x2b0(0x04)
	float MOVE_CIRCLE_SPEED; // 0x2b4(0x04)
	float MOVE_CIRCLE_SPEED_FAR; // 0x2b8(0x04)
	float NPC_WARY_HP_RATE_2; // 0x2bc(0x04)
	float NPC_WARY_HP_RATE_3; // 0x2c0(0x04)
	int32_t NPC_WARY_PROBABILITY_DOWN_2; // 0x2c4(0x04)
	int32_t NPC_WARY_PROBABILITY_DOWN_3; // 0x2c8(0x04)
	float NPC_ATTACK_PROBABILITY_UP_TIME_2; // 0x2cc(0x04)
	float NPC_ATTACK_PROBABILITY_UP_TIME_3; // 0x2d0(0x04)
	int32_t NPC_ATTACK_PROBABILITY_UP_VALUE_2; // 0x2d4(0x04)
	int32_t NPC_ATTACK_PROBABILITY_UP_VALUE_3; // 0x2d8(0x04)
	float NPC_MOVE_PROBABILITY_DOWN_TIME; // 0x2dc(0x04)
	int32_t NPC_MOVE_PROBABILITY_DOWN_VALUE; // 0x2e0(0x04)
	int32_t NPC_ATTACK_PROBABILITY_DOWN_THREAT_VALUE; // 0x2e4(0x04)
	int32_t NPC_ASSIST_ATTACK_PROBABILITY_UP_VALUE; // 0x2e8(0x04)
	float NPC_REVIVE_DISTANCE; // 0x2ec(0x04)
	float NPC_REVIVE_DISTANCE_FAR; // 0x2f0(0x04)
	float CONFUSION_FRIEND_PRIORITY_OFFSET; // 0x2f4(0x04)
	struct FTimerHandle EvaluateLocationTimerHandle; // 0x2f8(0x08)
	bool bBeginEvaluateLocation; // 0x300(0x01)
	bool bFirstEvaluate; // 0x301(0x01)
	bool bResetBehaviorTree; // 0x302(0x01)
	bool bEventWait; // 0x303(0x01)
	enum class EPlayerAIBattleThinkTypeCPP CurrentBattleThinkCPP; // 0x304(0x01)
	enum class EPlayerAIBattleThinkParamCPP CurrentBattleThinkParamCPP; // 0x305(0x01)
	char pad_306[0x2]; // 0x306(0x02)
	struct TArray<int32_t> StealthThinkRateList; // 0x308(0x10)
	struct TArray<enum class EPlayerAIBattleThinkTypeCPP> StealthThinkTypeListCPP; // 0x318(0x10)
	enum class EPlayerAIBattleThinkTypeCPP ReserveThinkTypeCPP; // 0x328(0x01)
	enum class EPlayerAIBattleThinkParamCPP ReserveThinkParamCPP; // 0x329(0x01)
	bool bReserveNextThink; // 0x32a(0x01)
	bool bFinishMetamorphosis; // 0x32b(0x01)
	int32_t ThinkPhaseTransition; // 0x32c(0x04)
	enum class EPlayerAIThinkTableTypeCPP CurrentThinkTableTypeCPP; // 0x330(0x01)
	bool bEventMove; // 0x331(0x01)
	char pad_332[0x6]; // 0x332(0x06)
	struct TArray<struct FVector> EventMovePosList; // 0x338(0x10)
	struct TArray<float> EventMoveRadiusList; // 0x348(0x10)
	float EventMoveWalkScale; // 0x358(0x04)
	struct FName ClaimantNameEventMove; // 0x35c(0x08)
	enum class ECharacterHitPriority StoreCharacterHitPriority; // 0x364(0x01)
	bool bStoreCharacterHitPriority; // 0x365(0x01)
	bool bEventMoveAfterWait; // 0x366(0x01)
	bool bEventMoveWalkFlag; // 0x367(0x01)
	bool bUseItemThink; // 0x368(0x01)
	enum class EConsumeItemID UseItemID; // 0x369(0x01)
	bool bAssistItem; // 0x36a(0x01)
	char pad_36B[0x1]; // 0x36b(0x01)
	struct FVector ControlPlayerDist; // 0x36c(0x0c)
	struct FVector BattleTargetDist; // 0x378(0x0c)
	float BattleTargetAngle; // 0x384(0x04)
	bool bSelfRecoveryFlag; // 0x388(0x01)
	char pad_389[0x3]; // 0x389(0x03)
	int32_t SelfRecoveryNum; // 0x38c(0x04)
	bool bDebugDrawLocationEvaluate; // 0x390(0x01)
	char pad_391[0x3]; // 0x391(0x03)
	float InitialTargetLength; // 0x394(0x04)
	bool bDisableTargetChangeResetThink; // 0x398(0x01)
	char pad_399[0x7]; // 0x399(0x07)
	struct UPlayerScriptComponent* OwnerPlayerScript; // 0x3a0(0x08)
	bool bUseCppFunc; // 0x3a8(0x01)
	char pad_3A9[0x7]; // 0x3a9(0x07)
	struct TArray<enum class EObjectTypeQuery> CollisionObjectTypesForGroundHit; // 0x3b0(0x10)

	void UpdateThreatData(float DeltaSeconds); // Function BattlePrototype.PlayerAIBaseComponent.UpdateThreatData // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f230
	void UpdateThinkTimerList(struct AActor* UpdateActor); // Function BattlePrototype.PlayerAIBaseComponent.UpdateThinkTimerList // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f1b0
	void UpdateMoveWallCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateMoveWallCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125f190
	void UpdateMovePosCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateMovePosCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f110
	void UpdateMovePos_FollowPlayerCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateMovePos_FollowPlayerCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f170
	void UpdateMovePos_CircleCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateMovePos_CircleCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f150
	void UpdateMovePos_ApproachTargetCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateMovePos_ApproachTargetCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125f130
	void UpdateEventMoveCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateEventMoveCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125eff0
	void UpdateDodgeCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateDodgeCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125ef90
	void UpdateDodgeBattle_Enpc_BPImplement(bool bOK, bool OutDodgeNormalAttack, bool OutDodgeRangeAttack, bool OutForceDodge); // Function BattlePrototype.PlayerAIBaseComponent.UpdateDodgeBattle_Enpc_BPImplement // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void UpdateDodge_FollowPlayerCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateDodge_FollowPlayerCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125efd0
	void UpdateDodge_BattleCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateDodge_BattleCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125efb0
	void UpdateDataCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateDataCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ef70
	void UpdateCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ee00
	void UpdateCounterCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateCounterCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125ef50
	void UpdateCheckRangeAttackEnpc(struct UHitCheckComponent* HitCheck); // Function BattlePrototype.PlayerAIBaseComponent.UpdateCheckRangeAttackEnpc // (Final|Native|Protected|BlueprintCallable) // @ game+0x125eed0
	void UpdateCheckRangeAttack(struct UHitCheckComponent* HitCheck); // Function BattlePrototype.PlayerAIBaseComponent.UpdateCheckRangeAttack // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ee50
	bool UpdateCheckBattleActionStartCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateCheckBattleActionStartCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ee20
	void UpdateBattleTargetActorCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateBattleTargetActorCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ece0
	bool UpdateBattleDodgeDir_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateBattleDodgeDir_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void UpdateAI(); // Function BattlePrototype.PlayerAIBaseComponent.UpdateAI // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ecc0
	bool UnbindCheckBattleActionStart_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.UnbindCheckBattleActionStart_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetupUseItem_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.SetupUseItem_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetThinkTimerByIndex(int32_t Index, float Time); // Function BattlePrototype.PlayerAIBaseComponent.SetThinkTimerByIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x125ea50
	bool SetThinkPhaseTransitionCPP(int32_t NewPhase); // Function BattlePrototype.PlayerAIBaseComponent.SetThinkPhaseTransitionCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e9c0
	void SetThinkKeepOutCPP(); // Function BattlePrototype.PlayerAIBaseComponent.SetThinkKeepOutCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125e9a0
	void SetTargetSearchModeCPP(enum class EPlayerAITargetSearchModeCPP Value); // Function BattlePrototype.PlayerAIBaseComponent.SetTargetSearchModeCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e920
	void SetSelfRecoveryNum(int32_t Value); // Function BattlePrototype.PlayerAIBaseComponent.SetSelfRecoveryNum // (Final|Native|Public|BlueprintCallable) // @ game+0x125e8a0
	void SetOwnerPlayerScript(struct UPlayerScriptComponent* comp); // Function BattlePrototype.PlayerAIBaseComponent.SetOwnerPlayerScript // (Final|Native|Public|BlueprintCallable) // @ game+0x125e820
	void SetOrderCPP(enum class EPlayerAIOrder _Order); // Function BattlePrototype.PlayerAIBaseComponent.SetOrderCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125e7a0
	void SetMoveStickDetourCPP(bool bEnable, float YawAngle); // Function BattlePrototype.PlayerAIBaseComponent.SetMoveStickDetourCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e6d0
	void SetMoveStickBackCPP(bool bBack); // Function BattlePrototype.PlayerAIBaseComponent.SetMoveStickBackCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e640
	void SetMoveModeFromThinkCPP(enum class EPlayerAIBattleThinkTypeCPP Think); // Function BattlePrototype.PlayerAIBaseComponent.SetMoveModeFromThinkCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125e5c0
	void SetMoveModeCPP(enum class EPlayerAIMoveModeCPP Mode); // Function BattlePrototype.PlayerAIBaseComponent.SetMoveModeCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e540
	void SetMoveLocationCPP(struct FVector Location, float ArmLength, float Yaw); // Function BattlePrototype.PlayerAIBaseComponent.SetMoveLocationCPP // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x125e430
	void SetLeftStickScale(bool bEnable, float Scale); // Function BattlePrototype.PlayerAIBaseComponent.SetLeftStickScale // (Final|Native|Public|BlueprintCallable) // @ game+0x125e360
	void SetInvalidKeepOutCPP(bool IsInvalid); // Function BattlePrototype.PlayerAIBaseComponent.SetInvalidKeepOutCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e2d0
	void SetForceUpdateTarget(bool Value); // Function BattlePrototype.PlayerAIBaseComponent.SetForceUpdateTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x125e250
	bool SetFinishMetamorphosisCPP(bool bFinish); // Function BattlePrototype.PlayerAIBaseComponent.SetFinishMetamorphosisCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e1c0
	void SetEventWaitCPP(); // Function BattlePrototype.PlayerAIBaseComponent.SetEventWaitCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125e1a0
	void SetEventMoveCPP(struct TArray<struct FVector> pos_list_in, struct TArray<float> radius_list_in, bool Walk, bool bAfterWait, float MaxMoveTime); // Function BattlePrototype.PlayerAIBaseComponent.SetEventMoveCPP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x125dfc0
	void SetDisableChangeTargetResetThinkCPP(bool InDisable); // Function BattlePrototype.PlayerAIBaseComponent.SetDisableChangeTargetResetThinkCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125dde0
	bool SetBattleThink_CallFromCPP(enum class EPlayerAIBattleThinkTypeCPP Action, enum class EPlayerAIBattleThinkParamCPP Param); // Function BattlePrototype.PlayerAIBaseComponent.SetBattleThink_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetBattleTargetDist(struct FVector Value); // Function BattlePrototype.PlayerAIBaseComponent.SetBattleTargetDist // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x125dc20
	void SetBattleTargetCPP(struct ARSCharacterBase* TargetActor); // Function BattlePrototype.PlayerAIBaseComponent.SetBattleTargetCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125dba0
	void SetBattleModeCPP(bool bBattle); // Function BattlePrototype.PlayerAIBaseComponent.SetBattleModeCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125db10
	void SetAttackHit(bool Value); // Function BattlePrototype.PlayerAIBaseComponent.SetAttackHit // (Final|Native|Public|BlueprintCallable) // @ game+0x125da90
	struct ARSCharacterBase* SearchTargetCPP(struct TArray<struct ARSCharacterBase*> TargetList); // Function BattlePrototype.PlayerAIBaseComponent.SearchTargetCPP // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x125d9d0
	bool SearchPsychicObjectCPP(); // Function BattlePrototype.PlayerAIBaseComponent.SearchPsychicObjectCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125d9a0
	bool RestartBattleAI_CallFromCPP(bool bInEvent); // Function BattlePrototype.PlayerAIBaseComponent.RestartBattleAI_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ResetBattleThinkCPP(); // Function BattlePrototype.PlayerAIBaseComponent.ResetBattleThinkCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d7c0
	void ReserveNextThinkCPP(enum class EPlayerAIBattleThinkTypeCPP ThinkType, enum class EPlayerAIBattleThinkParamCPP Param); // Function BattlePrototype.PlayerAIBaseComponent.ReserveNextThinkCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d700
	void RequestUseItemCPP(enum class EConsumeItemID item_id_in, bool bAssist); // Function BattlePrototype.PlayerAIBaseComponent.RequestUseItemCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d630
	void RegisterThreatActor(struct AActor* ThreatActor); // Function BattlePrototype.PlayerAIBaseComponent.RegisterThreatActor // (Final|Native|Public|BlueprintCallable) // @ game+0x125d5b0
	void RegisterEvaluateLocationCPP(); // Function BattlePrototype.PlayerAIBaseComponent.RegisterEvaluateLocationCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125d590
	bool PreUpdateCPP_RangeAttack_BPImplement(); // Function BattlePrototype.PlayerAIBaseComponent.PreUpdateCPP_RangeAttack_BPImplement // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PreUpdateCPP(); // Function BattlePrototype.PlayerAIBaseComponent.PreUpdateCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125d570
	void PostUpdateCPP(); // Function BattlePrototype.PlayerAIBaseComponent.PostUpdateCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125d550
	void OnUpdateUpdateEvaluateLocationCPP(); // Function BattlePrototype.PlayerAIBaseComponent.OnUpdateUpdateEvaluateLocationCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d530
	void OnUpdateAI(); // Function BattlePrototype.PlayerAIBaseComponent.OnUpdateAI // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void OnReserveReturnMovePlayer(); // Function BattlePrototype.PlayerAIBaseComponent.OnReserveReturnMovePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x125d510
	void OnMovementCollisionLandCPP(); // Function BattlePrototype.PlayerAIBaseComponent.OnMovementCollisionLandCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125d4f0
	void OnJumpCPP(); // Function BattlePrototype.PlayerAIBaseComponent.OnJumpCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d4d0
	void OnInitializeAI(); // Function BattlePrototype.PlayerAIBaseComponent.OnInitializeAI // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void OnEventStartCPP(); // Function BattlePrototype.PlayerAIBaseComponent.OnEventStartCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d4b0
	void OnClearReserveReturnMovePlayer(); // Function BattlePrototype.PlayerAIBaseComponent.OnClearReserveReturnMovePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x125d490
	void OnAttackHitCPP(); // Function BattlePrototype.PlayerAIBaseComponent.OnAttackHitCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d470
	void NotifyResetBehaviorTreeCPP(); // Function BattlePrototype.PlayerAIBaseComponent.NotifyResetBehaviorTreeCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d450
	void NotifyMoveBrainFieldCPP(bool bToBrainField); // Function BattlePrototype.PlayerAIBaseComponent.NotifyMoveBrainFieldCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d3c0
	void NotifyForceWarpCPP(); // Function BattlePrototype.PlayerAIBaseComponent.NotifyForceWarpCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d3a0
	void NotifyAttackStartCPP(); // Function BattlePrototype.PlayerAIBaseComponent.NotifyAttackStartCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125d380
	struct FVector NormalizeVectorXY_CPP(struct FVector InVec); // Function BattlePrototype.PlayerAIBaseComponent.NormalizeVectorXY_CPP // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x125d2d0
	bool NextBattleThink_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.NextBattleThink_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void MainUpdateCPP(); // Function BattlePrototype.PlayerAIBaseComponent.MainUpdateCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125d2b0
	void JumpOrderCPP(struct FVector Destination); // Function BattlePrototype.PlayerAIBaseComponent.JumpOrderCPP // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x125d220
	bool IsWaitBattleStartCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsWaitBattleStartCPP // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125d1f0
	bool IsUseItemThinkCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsUseItemThinkCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125d1c0
	bool IsUseCppFunc(); // Function BattlePrototype.PlayerAIBaseComponent.IsUseCppFunc // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x851540
	bool IsUpdateCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsUpdateCPP // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125d190
	bool IsThinkTimerOverByIndex(int32_t Index); // Function BattlePrototype.PlayerAIBaseComponent.IsThinkTimerOverByIndex // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x125d100
	bool IsSelfRecoveryCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsSelfRecoveryCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125d0d0
	bool IsResetBehaviorTreeCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsResetBehaviorTreeCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125d0b0
	bool IsRegisterThreatActor(struct AActor* CheckActor); // Function BattlePrototype.PlayerAIBaseComponent.IsRegisterThreatActor // (Final|Native|Public|BlueprintCallable) // @ game+0x125d020
	bool IsRangeTooFarCPP(struct FVector Dist); // Function BattlePrototype.PlayerAIBaseComponent.IsRangeTooFarCPP // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cf80
	bool IsRangeNearCPP(struct FVector Dist); // Function BattlePrototype.PlayerAIBaseComponent.IsRangeNearCPP // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cee0
	bool IsRangeMiddleCPP(struct FVector Dist); // Function BattlePrototype.PlayerAIBaseComponent.IsRangeMiddleCPP // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125ce40
	bool IsRangeFarCPP(struct FVector Dist); // Function BattlePrototype.PlayerAIBaseComponent.IsRangeFarCPP // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cda0
	bool IsPsychicComboThinkCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsPsychicComboThinkCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cd70
	bool IsPsychicAbleCPP_TypeCheck(enum class EPlayerAIBattleThinkTypeCPP ThinkType); // Function BattlePrototype.PlayerAIBaseComponent.IsPsychicAbleCPP_TypeCheck // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cce0
	bool IsPsychicAbleCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsPsychicAbleCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125ccb0
	bool IsLeftStickScaleEnable(); // Function BattlePrototype.PlayerAIBaseComponent.IsLeftStickScaleEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cc80
	bool IsJumpAbleCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsJumpAbleCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cc50
	bool IsForceUpdateTarget(); // Function BattlePrototype.PlayerAIBaseComponent.IsForceUpdateTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cc30
	bool IsFinishMetamorphosisCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsFinishMetamorphosisCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125cc00
	bool IsEventWaitCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsEventWaitCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125ca80
	bool IsEventMoveEndCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsEventMoveEndCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125ca50
	bool IsEventMoveCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsEventMoveCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125ca20
	bool IsEnableStickInputCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsEnableStickInputCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c9f0
	bool IsDodgeAbleCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsDodgeAbleCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c990
	bool IsBattleThinkCPP(enum class EPlayerAIBattleThinkTypeCPP Type); // Function BattlePrototype.PlayerAIBaseComponent.IsBattleThinkCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c870
	bool IsBattleActionStartCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsBattleActionStartCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c840
	bool IsAttackThinkCPP(enum class EPlayerAIBattleThinkTypeCPP Type); // Function BattlePrototype.PlayerAIBaseComponent.IsAttackThinkCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c7b0
	bool IsAttackHit(); // Function BattlePrototype.PlayerAIBaseComponent.IsAttackHit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c790
	bool IsAttackAbleCPP_TypeCheck(enum class EPlayerAIBattleThinkTypeCPP ThinkType); // Function BattlePrototype.PlayerAIBaseComponent.IsAttackAbleCPP_TypeCheck // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c700
	bool IsAttackAbleCPP(); // Function BattlePrototype.PlayerAIBaseComponent.IsAttackAbleCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c6d0
	void InitializeThinkTimerList(int32_t TimerNum); // Function BattlePrototype.PlayerAIBaseComponent.InitializeThinkTimerList // (Final|Native|Protected|BlueprintCallable) // @ game+0x125c650
	void InitializeFixParam(struct FPlayerAIComponentInitializeParam Param); // Function BattlePrototype.PlayerAIBaseComponent.InitializeFixParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x125c5a0
	void InitializeAI(); // Function BattlePrototype.PlayerAIBaseComponent.InitializeAI // (Final|Native|Public|BlueprintCallable) // @ game+0x125c580
	enum class EConsumeItemID GetUseItemID_CPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetUseItemID_CPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c550
	int32_t GetThinkPhaseTransitionCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetThinkPhaseTransitionCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c520
	void GetTargetEvaluateData_CallFromCPP(struct FPlayerAIEvaluateTargetParameter OutParam); // Function BattlePrototype.PlayerAIBaseComponent.GetTargetEvaluateData_CallFromCPP // (Event|Protected|HasOutParms|BlueprintEvent|Const) // @ game+0x1685580
	float GetTargetAngleXY_CPP(struct FVector BaseDirection, struct FVector TargetDirection); // Function BattlePrototype.PlayerAIBaseComponent.GetTargetAngleXY_CPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c420
	float GetTargetAngleCPP(struct FVector BaseDirection, struct FVector TargetDirection); // Function BattlePrototype.PlayerAIBaseComponent.GetTargetAngleCPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c320
	enum class EPlayerAIBattleThinkTypeCPP GetStealthThinkCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetStealthThinkCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125c2d0
	int32_t GetSelfRecoveryNum(); // Function BattlePrototype.PlayerAIBaseComponent.GetSelfRecoveryNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c2b0
	enum class EPlayerAIOrder GetOrderCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetOrderCPP // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c280
	struct AActor* GetMovePosActorCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetMovePosActorCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c250
	enum class EPlayerAIMoveModeCPP GetMoveModeCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetMoveModeCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c220
	float GetLeftStickScale(); // Function BattlePrototype.PlayerAIBaseComponent.GetLeftStickScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125c070
	void GetEventMovePosActorCPP(struct AActor* OutPosActor, float OutAcceptRadius); // Function BattlePrototype.PlayerAIBaseComponent.GetEventMovePosActorCPP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x125bec0
	float GetEventMoveLeftStickY_CPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetEventMoveLeftStickY_CPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125be90
	float GetEventMoveLeftStickX_CPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetEventMoveLeftStickX_CPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125be60
	struct UPlayerAIEvaluateLocationComponent* GetEvaluateLocation(); // Function BattlePrototype.PlayerAIBaseComponent.GetEvaluateLocation // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125be30
	struct UDataTable* GetCurrentThinkTable_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetCurrentThinkTable_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	enum class EPlayerAIBattleThinkParamCPP GetCurrentBattleThinkParamCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetCurrentBattleThinkParamCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bde0
	enum class EPlayerAIBattleThinkTypeCPP GetCurrentBattleThinkCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetCurrentBattleThinkCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bdb0
	struct FVector GetControlPlayerDistCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetControlPlayerDistCPP // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bd70
	struct TArray<enum class EObjectTypeQuery> GetCollisionObjectTypesForGroundHit_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetCollisionObjectTypesForGroundHit_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FVector GetBattleTargetDist(); // Function BattlePrototype.PlayerAIBaseComponent.GetBattleTargetDist // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bd40
	struct AActor* GetBattleTargetActorCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetBattleTargetActorCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bd10
	enum class RSAttackInputKind GetAttackInputKindCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetAttackInputKindCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bce0
	int32_t GetAttackCountCPP(); // Function BattlePrototype.PlayerAIBaseComponent.GetAttackCountCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125bcb0
	void EndEventWaitCPP(); // Function BattlePrototype.PlayerAIBaseComponent.EndEventWaitCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125bb90
	void EndEventMoveCPP(); // Function BattlePrototype.PlayerAIBaseComponent.EndEventMoveCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125bb70
	bool EndEvaluateLocation_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.EndEvaluateLocation_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EnableStickInputCPP(struct FName ClaimantName); // Function BattlePrototype.PlayerAIBaseComponent.EnableStickInputCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125b9a0
	void DisableStickInputCPP(struct FName ClaimantName); // Function BattlePrototype.PlayerAIBaseComponent.DisableStickInputCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125b8e0
	void DecreaseSelfRecoveryNumCPP(); // Function BattlePrototype.PlayerAIBaseComponent.DecreaseSelfRecoveryNumCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125b8c0
	bool DebugUpdate_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.DebugUpdate_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct TArray<struct FPlayerAIThreatActorData> DebugGetThreatDataArray(); // Function BattlePrototype.PlayerAIBaseComponent.DebugGetThreatDataArray // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1f40
	void ClearDodgeRangeAttackData(); // Function BattlePrototype.PlayerAIBaseComponent.ClearDodgeRangeAttackData // (Final|Native|Public|BlueprintCallable) // @ game+0x125b620
	bool CheckUnderSiegeCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CheckUnderSiegeCPP // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x125b5f0
	bool CheckSelfRecovery_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CheckSelfRecovery_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckPsychicObjectCPP(bool bCapture, bool bAttack); // Function BattlePrototype.PlayerAIBaseComponent.CheckPsychicObjectCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125b510
	bool CheckNpcReviveCPP(float InDistance); // Function BattlePrototype.PlayerAIBaseComponent.CheckNpcReviveCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x125b480
	void CheckMoveWallCPP(enum class EPlayerAIMoveWallCPP OutWall, struct FVector OutLocation); // Function BattlePrototype.PlayerAIBaseComponent.CheckMoveWallCPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x125b390
	bool CheckMovePosCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CheckMovePosCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125b360
	bool CheckInAttackArea_CallFromCPP(struct FVector CheckLocation); // Function BattlePrototype.PlayerAIBaseComponent.CheckInAttackArea_CallFromCPP // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1685580
	void CheckGoalLocationKeepOutCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CheckGoalLocationKeepOutCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125b340
	bool CheckEventMovePosCPP(bool bCheckDistance); // Function BattlePrototype.PlayerAIBaseComponent.CheckEventMovePosCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125b2b0
	bool CheckDodgeRangeAttack(struct FVector DodgeDir); // Function BattlePrototype.PlayerAIBaseComponent.CheckDodgeRangeAttack // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x125b210
	bool CheckDistanceFromVectorXYZ_CPP(struct FVector Vec, float Distance); // Function BattlePrototype.PlayerAIBaseComponent.CheckDistanceFromVectorXYZ_CPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125b000
	bool CheckDistanceFromVectorXY_CPP(struct FVector Vec, float Distance); // Function BattlePrototype.PlayerAIBaseComponent.CheckDistanceFromVectorXY_CPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125b110
	bool CheckDistanceFromVectorCPP(struct FVector Dist, float Distance, bool bIgnoreHeight); // Function BattlePrototype.PlayerAIBaseComponent.CheckDistanceFromVectorCPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125aee0
	bool CheckDistanceCPP(struct FVector RefPos1, struct FVector RefPos2, float Distance, bool bIgnoreHeight); // Function BattlePrototype.PlayerAIBaseComponent.CheckDistanceCPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125ad50
	bool CheckBattleThinkTransition_CallFromCPP(enum class EPlayerAIBattleThinkTransitionCPP Transition); // Function BattlePrototype.PlayerAIBaseComponent.CheckBattleThinkTransition_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void ChangeThinkTableTypeCPP(enum class EPlayerAIThinkTableTypeCPP ThinkTableType, bool bResetThink); // Function BattlePrototype.PlayerAIBaseComponent.ChangeThinkTableTypeCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125ac80
	void CancelUseItemCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CancelUseItemCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x125ac60
	bool calcThinkTransitionProbabilityCPP_NeedsHPCheckByThinkType(enum class EPlayerAIBattleThinkTypeCPP Action); // Function BattlePrototype.PlayerAIBaseComponent.calcThinkTransitionProbabilityCPP_NeedsHPCheckByThinkType // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f360
	int32_t calcThinkTransitionProbabilityCPP_CheckMoveOrAttackOrOthers(enum class EPlayerAIBattleThinkTypeCPP Action); // Function BattlePrototype.PlayerAIBaseComponent.calcThinkTransitionProbabilityCPP_CheckMoveOrAttackOrOthers // (Final|Native|Protected|BlueprintCallable) // @ game+0x125f2d0
	int32_t CalcThinkTransitionProbabilityCPP(int32_t Probability, enum class EPlayerAIBattleThinkTypeCPP Action); // Function BattlePrototype.PlayerAIBaseComponent.CalcThinkTransitionProbabilityCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x125aba0
	float CalcTargetEvaluate_CallFromCPP(struct ARSCharacterBase* EvaluateTarget); // Function BattlePrototype.PlayerAIBaseComponent.CalcTargetEvaluate_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	struct FVector2D CalcStickDirCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CalcStickDirCPP // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x125aae0
	struct FVector CalcStickDir_BattleDodgeCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CalcStickDir_BattleDodgeCPP // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x125ab60
	struct FVector CalcStickDir_BattleAttackCPP(); // Function BattlePrototype.PlayerAIBaseComponent.CalcStickDir_BattleAttackCPP // (Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x125ab20
	struct FVector CalcMoveToActorLocationCPP(struct ACharacter* Self); // Function BattlePrototype.PlayerAIBaseComponent.CalcMoveToActorLocationCPP // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x125aa40
	float CalcDistanceTargetEvaluateCPP(struct FVector TargetLocation); // Function BattlePrototype.PlayerAIBaseComponent.CalcDistanceTargetEvaluateCPP // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x125a9a0
	bool BindCheckBattleActionStart_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.BindCheckBattleActionStart_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool BeginEvaluateLocation_CallFromCPP(); // Function BattlePrototype.PlayerAIBaseComponent.BeginEvaluateLocation_CallFromCPP // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.PlayerAIEvaluateLocationComponent
// Size: 0x5f8 (Inherited: 0xd0)
struct UPlayerAIEvaluateLocationComponent : URSAsyncTaskActorComponent {
	enum class EAIBattleRange Range_Type; // 0xd0(0x01)
	char pad_D1[0x3]; // 0xd1(0x03)
	float RANGE_NEAR; // 0xd4(0x04)
	float Range_Middle; // 0xd8(0x04)
	float RANGE_FAR; // 0xdc(0x04)
	float Width_Near; // 0xe0(0x04)
	float Width_Far; // 0xe4(0x04)
	int32_t Priority_Init; // 0xe8(0x04)
	int32_t Priority_TargetActor; // 0xec(0x04)
	int32_t Priority_NotTargetActor; // 0xf0(0x04)
	int32_t Priority_AttackActor; // 0xf4(0x04)
	int32_t Priority_Friend; // 0xf8(0x04)
	int32_t Priority_TargetFront; // 0xfc(0x04)
	int32_t Priority_TargetSide; // 0x100(0x04)
	int32_t Priority_TargetBack; // 0x104(0x04)
	int32_t Priority_TargetActorBehind; // 0x108(0x04)
	int32_t Priority_TargetActorInfront; // 0x10c(0x04)
	int32_t Priority_CurrentLocation; // 0x110(0x04)
	char pad_114[0x4]; // 0x114(0x04)
	struct FMulticastInlineDelegate DispatchUpdateEvaluateLocation; // 0x118(0x10)
	char pad_128[0x4d0]; // 0x128(0x4d0)

	void SetParameter(struct FPlayerAIParameter Parameter); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.SetParameter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1263820
	void SetIgnoreKeepOutArea(bool bIgnore); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.SetIgnoreKeepOutArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12636d0
	void RegisterActorData(enum class EEvaluateActorType actorType, enum class EEvaluateActorStatus actorStatus, struct FVector Location, struct FVector forwardDir, float Radius, bool bLockOn); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.RegisterActorData // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1262ef0
	bool GetOtherHighPriorityLocation(struct FVector OutLocation, int32_t rank); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetOtherHighPriorityLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12617f0
	bool GetNearLocation(struct FVector OutLocation, struct FVector Location); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetNearLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12616f0
	enum class EAIBattleRange GetLocationRangeType(struct FVector Location); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetLocationRangeType // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261650
	bool GetLocationPriorityRank(int32_t outRank, struct FVector OutLocation, struct FVector Location); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetLocationPriorityRank // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1261510
	bool GetHighPriorityLocationByRange(struct FVector OutLocation, enum class EAIBattleRange battleRange); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetHighPriorityLocationByRange // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1261430
	bool GetHighPriorityLocation(struct FVector OutLocation); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetHighPriorityLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1261390
	enum class EAIBattleRange GetAIBattleRangeType(); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetAIBattleRangeType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261340
	float GetAIBattleRange(enum class EAIBattleRange Range); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.GetAIBattleRange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12612b0
	void EndEvaluate(); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.EndEvaluate // (Final|Native|Public|BlueprintCallable) // @ game+0x1261290
	void DebugDrawEvaluationLocation(); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.DebugDrawEvaluationLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ClearActorData(); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.ClearActorData // (Final|Native|Public|BlueprintCallable) // @ game+0x1261250
	bool CheckKeepOutArea(struct FVector Location); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.CheckKeepOutArea // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12611b0
	void BeginEvaluate(); // Function BattlePrototype.PlayerAIEvaluateLocationComponent.BeginEvaluate // (Final|Native|Public|BlueprintCallable) // @ game+0x1261170
};

// Class BattlePrototype.PlayerAnimControllerComponent
// Size: 0x238 (Inherited: 0xe0)
struct UPlayerAnimControllerComponent : UAnimControllerComponent {
	struct TWeakObjectPtr<struct URSPlayerAnimInstance> _animBP; // 0xe0(0x08)
	struct FMulticastInlineDelegate DispatchChangeAnimKind; // 0xe8(0x10)
	struct FMulticastInlineDelegate DispatchChangeWalkRunStateKind; // 0xf8(0x10)
	struct FMulticastInlineDelegate DispatchRequestParticleEffect; // 0x108(0x10)
	struct FMulticastInlineDelegate DispatchMontageStarted; // 0x118(0x10)
	struct FMulticastInlineDelegate DispatchMontageBlendingOut; // 0x128(0x10)
	struct FMulticastInlineDelegate DispatchMontageEnded; // 0x138(0x10)
	float _SprintWalkSpeedRate; // 0x148(0x04)
	float WALK_SPEED; // 0x14c(0x04)
	float RUN_SPEED; // 0x150(0x04)
	float AJITO_RUN_SPEED; // 0x154(0x04)
	float RUN_TO_WALK_DELAY; // 0x158(0x04)
	float RUN_TO_WALK_INTERP; // 0x15c(0x04)
	float WALK_TO_RUN_INTERP; // 0x160(0x04)
	float WALK_TO_RUN_INTERP_TOWN; // 0x164(0x04)
	float DISABLE_TOWN_RUN_TIMER; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)
	struct TArray<struct FName> _bNotifyEnableMove; // 0x170(0x10)
	struct TArray<struct FName> _bNotifyEnableAction; // 0x180(0x10)
	struct TArray<struct FName> _bNotifyEnableAttack; // 0x190(0x10)
	struct TArray<struct FName> _bNotifyEnablePsychic; // 0x1a0(0x10)
	struct TArray<struct FName> _bNotifyEnablePsychicEx; // 0x1b0(0x10)
	struct TArray<struct FName> _bNotifyEnableAirJump; // 0x1c0(0x10)
	struct TArray<struct FName> _bNotifyEnableBrainCrash; // 0x1d0(0x10)
	struct TArray<struct FName> _bNotifyEnableWeaponCharge; // 0x1e0(0x10)
	struct TArray<struct FName> _bNotifyEnableWalkStop; // 0x1f0(0x10)
	char pad_200[0x38]; // 0x200(0x38)

	void UpdateWalkSpeed(float DeltaSeconds); // Function BattlePrototype.PlayerAnimControllerComponent.UpdateWalkSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1263b50
	void SetUpperAction(bool bSet); // Function BattlePrototype.PlayerAnimControllerComponent.SetUpperAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1263aa0
	void SetupAnimBP(); // Function BattlePrototype.PlayerAnimControllerComponent.SetupAnimBP // (Final|Native|Public|BlueprintCallable) // @ game+0x1263b30
	void SetUniquePsychicAim(bool bFlag); // Function BattlePrototype.PlayerAnimControllerComponent.SetUniquePsychicAim // (Final|Native|Public|BlueprintCallable) // @ game+0x1263a10
	void SetTalkMode(bool bTalk); // Function BattlePrototype.PlayerAnimControllerComponent.SetTalkMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1263980
	void SetRigidbodyAlpha(float Alpha, float LerpTime); // Function BattlePrototype.PlayerAnimControllerComponent.SetRigidbodyAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x12638c0
	void SetLeftStickPower(float Power, float prevDiff); // Function BattlePrototype.PlayerAnimControllerComponent.SetLeftStickPower // (Final|Native|Public|BlueprintCallable) // @ game+0x1263760
	void SetBattleEm1500(bool bBattle); // Function BattlePrototype.PlayerAnimControllerComponent.SetBattleEm1500 // (Final|Native|Public|BlueprintCallable) // @ game+0x1263640
	void SetAjitoFlag(bool bAjito); // Function BattlePrototype.PlayerAnimControllerComponent.SetAjitoFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12635b0
	void SetAimRotator(struct FRotator Rotator); // Function BattlePrototype.PlayerAnimControllerComponent.SetAimRotator // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1263520
	void RequestStep(struct FVector StepDirection, enum class EPlayerAnimDir Dir, int32_t Param, bool bFlying); // Function BattlePrototype.PlayerAnimControllerComponent.RequestStep // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12633b0
	void RequestBattleIdle(bool IsStart); // Function BattlePrototype.PlayerAnimControllerComponent.RequestBattleIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x1263320
	void RequestAttack(struct UAnimMontage* AnimMontage, float InPlayRate, struct FName StartSectionName); // Function BattlePrototype.PlayerAnimControllerComponent.RequestAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x1263210
	void RequestAnim(enum class PlayerAnimKind kind, int32_t Param, bool bFlying); // Function BattlePrototype.PlayerAnimControllerComponent.RequestAnim // (Final|Native|Public|BlueprintCallable) // @ game+0x1263100
	void ReceiveNotifyInputPsychic(bool bEnable); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyInputPsychic // (Final|Native|Public|BlueprintCallable) // @ game+0x1262e60
	void ReceiveNotifyInputDodge(bool bEnable); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyInputDodge // (Final|Native|Public|BlueprintCallable) // @ game+0x1262dd0
	void ReceiveNotifyInputAttack(bool bEnable); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyInputAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x1262d40
	void ReceiveNotifyEnableWeaponCharge(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableWeaponCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x1262c80
	void ReceiveNotifyEnableWalkStop(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableWalkStop // (Final|Native|Public|BlueprintCallable) // @ game+0x1262bc0
	void ReceiveNotifyEnablePsychicEx(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnablePsychicEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1262b00
	void ReceiveNotifyEnablePsychic(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnablePsychic // (Final|Native|Public|BlueprintCallable) // @ game+0x1262a40
	void ReceiveNotifyEnableMove(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableMove // (Final|Native|Public|BlueprintCallable) // @ game+0x1262980
	void ReceiveNotifyEnableBrainCrash(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableBrainCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x12628c0
	void ReceiveNotifyEnableAttack(bool bEnable, bool bNotComboEnd, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x12627b0
	void ReceiveNotifyEnableAirJump(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableAirJump // (Final|Native|Public|BlueprintCallable) // @ game+0x12626f0
	void ReceiveNotifyEnableAction(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerAnimControllerComponent.ReceiveNotifyEnableAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1262630
	void OnRequestParticleEffect(struct URequestParticleEffectArgs* Args); // Function BattlePrototype.PlayerAnimControllerComponent.OnRequestParticleEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12625b0
	void OnMontageStarted(struct UAnimMontage* Montage); // Function BattlePrototype.PlayerAnimControllerComponent.OnMontageStarted // (Final|Native|Private) // @ game+0x1262530
	void OnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.PlayerAnimControllerComponent.OnMontageEnded // (Final|Native|Private) // @ game+0x1262460
	void OnMontageBlendingOut(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.PlayerAnimControllerComponent.OnMontageBlendingOut // (Final|Native|Private) // @ game+0x1262390
	void OnChangeWalkRunStateKind(enum class PlayerWalkRunStateKind NewKind); // Function BattlePrototype.PlayerAnimControllerComponent.OnChangeWalkRunStateKind // (Final|Native|Private) // @ game+0x1262310
	void OnChangeAnimKind(enum class PlayerAnimKind NewAnimKind, enum class PlayerAnimKind OldAnimKind); // Function BattlePrototype.PlayerAnimControllerComponent.OnChangeAnimKind // (Final|Native|Private) // @ game+0x1262250
	bool IsUpperAction(); // Function BattlePrototype.PlayerAnimControllerComponent.IsUpperAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262220
	bool IsRunningAnimStateForAIMove(); // Function BattlePrototype.PlayerAnimControllerComponent.IsRunningAnimStateForAIMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12621f0
	bool IsPsychicCaptureNoMotionAction(); // Function BattlePrototype.PlayerAnimControllerComponent.IsPsychicCaptureNoMotionAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12621c0
	bool IsNotifyInputPsychic(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyInputPsychic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262190
	bool IsNotifyInputDodge(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyInputDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262160
	bool IsNotifyInputAttack(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyInputAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262130
	bool IsNotifyEnableWeaponCharge(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableWeaponCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262100
	bool IsNotifyEnableWalkStop(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableWalkStop // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12620d0
	bool IsNotifyEnablePsychicEx(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnablePsychicEx // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12620a0
	bool IsNotifyEnablePsychic(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnablePsychic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262070
	bool IsNotifyEnableMove(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262040
	bool IsNotifyEnableBrainCrash(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableBrainCrash // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1262010
	bool IsNotifyEnableAttackOptionNotComboEnd(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableAttackOptionNotComboEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1261fe0
	bool IsNotifyEnableAttack(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261fb0
	bool IsNotifyEnableAirJump(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableAirJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261f80
	bool IsNotifyEnableAction(); // Function BattlePrototype.PlayerAnimControllerComponent.IsNotifyEnableAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261f50
	bool IsExistAnimRequest(); // Function BattlePrototype.PlayerAnimControllerComponent.IsExistAnimRequest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261f20
	bool IsCheckIdle(); // Function BattlePrototype.PlayerAnimControllerComponent.IsCheckIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261ef0
	bool IsAttackInputAccept(int32_t AttackId); // Function BattlePrototype.PlayerAnimControllerComponent.IsAttackInputAccept // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261e60
	bool IsASNodePlayEnd(); // Function BattlePrototype.PlayerAnimControllerComponent.IsASNodePlayEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261a70
	bool IsASAnimPlayEnd(enum class PlayerAnimKind kind); // Function BattlePrototype.PlayerAnimControllerComponent.IsASAnimPlayEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12619e0
	bool IsAnimStepEnd(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimStepEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261e30
	bool IsAnimStep(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimStep // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261e00
	bool IsAnimStartBattle(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimStartBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261dd0
	bool IsAnimSprint(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261da0
	bool IsAnimSideStep(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimSideStep // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261d70
	bool IsAnimPsychic(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimPsychic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261d40
	bool IsAnimLand(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimLand // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261d10
	bool IsAnimKind(enum class PlayerAnimKind kind); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261c80
	bool IsAnimJump(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261c20
	bool IsAnimIdleWalkRun(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimIdleWalkRun // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261bf0
	bool IsAnimFall(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimFall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261bc0
	bool IsAnimEndBattle(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimEndBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261b90
	bool IsAnimDead(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261b60
	bool IsAnimDamage(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261b30
	bool IsAnimBrake(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimBrake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261b00
	bool IsAnimAttack(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261ad0
	bool IsAnimAnyAttack(); // Function BattlePrototype.PlayerAnimControllerComponent.IsAnimAnyAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261aa0
	enum class PlayerWalkRunStateKind GetWalkRunStateKind(); // Function BattlePrototype.PlayerAnimControllerComponent.GetWalkRunStateKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12619b0
	float GetWalkRunMoveScale(); // Function BattlePrototype.PlayerAnimControllerComponent.GetWalkRunMoveScale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261980
	float GetRigidbodyAlpha(); // Function BattlePrototype.PlayerAnimControllerComponent.GetRigidbodyAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x1261950
	struct UPlayerAnimControllerComponent* GetPlayerAnimControllerComponentFromActor(struct AActor* Actor); // Function BattlePrototype.PlayerAnimControllerComponent.GetPlayerAnimControllerComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12618d0
	float GetBaseWalkSpeed(); // Function BattlePrototype.PlayerAnimControllerComponent.GetBaseWalkSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261370
	void ClearAllCancelFlag(); // Function BattlePrototype.PlayerAnimControllerComponent.ClearAllCancelFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1261270
	void BeginPlayPublic(); // Function BattlePrototype.PlayerAnimControllerComponent.BeginPlayPublic // (Final|Native|Public|BlueprintCallable) // @ game+0x1261190
};

// Class BattlePrototype.PlayerAsyncScriptComponent
// Size: 0xfe8 (Inherited: 0xd0)
struct UPlayerAsyncScriptComponent : URSAsyncTaskActorComponent {
	float CheckMoveWallHeight; // 0xd0(0x04)
	float CheckMoveWall_CheckForwardLength; // 0xd4(0x04)
	float CheckMoveWall_CheckBackLength; // 0xd8(0x04)
	float CheckMoveWall_CheckSideLengthShort; // 0xdc(0x04)
	float CheckMoveWall_CheckSideLength; // 0xe0(0x04)
	char pad_E4[0xedc]; // 0xe4(0xedc)
	struct TArray<struct FHitResult> TempOutHitResultAsync; // 0xfc0(0x10)
	struct TArray<struct FHitResult> TempOutHitResultAsyncSubFunc; // 0xfd0(0x10)
	char pad_FE0[0x8]; // 0xfe0(0x08)

	bool SyncResult(); // Function BattlePrototype.PlayerAsyncScriptComponent.SyncResult // (Final|Native|Public|BlueprintCallable) // @ game+0x126be10
	void SetEnableAsync(bool bAsync); // Function BattlePrototype.PlayerAsyncScriptComponent.SetEnableAsync // (Final|Native|Public|BlueprintCallable) // @ game+0x1269bf0
	void SetCheckParameter(struct FPlayerAsyncParameter InParameter); // Function BattlePrototype.PlayerAsyncScriptComponent.SetCheckParameter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1269b50
	bool IsFallAbleGround(); // Function BattlePrototype.PlayerAsyncScriptComponent.IsFallAbleGround // (Final|Native|Public|BlueprintCallable) // @ game+0x1267f20
	struct FPlayerCollisionCheckResult GetAsyncResult(enum class EPlayerCollisionCheckType Type); // Function BattlePrototype.PlayerAsyncScriptComponent.GetAsyncResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1267960
	struct FVector GetAssyncResult_PlayerAICheckGoalLocation(); // Function BattlePrototype.PlayerAsyncScriptComponent.GetAssyncResult_PlayerAICheckGoalLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1267920
	void DebugDispResult(struct TArray<enum class EPlayerCollisionCheckType> DispList); // Function BattlePrototype.PlayerAsyncScriptComponent.DebugDispResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1266f30
	void ClearAsyncResult(); // Function BattlePrototype.PlayerAsyncScriptComponent.ClearAsyncResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1266d10
};

// Class BattlePrototype.PlayerCameraComponent
// Size: 0x14b8 (Inherited: 0xd0)
struct UPlayerCameraComponent : URSAsyncTaskActorComponent {
	struct TWeakObjectPtr<struct UUserParamManager> pUserParamManager; // 0xd0(0x08)
	float fDeltaSecond; // 0xd8(0x04)
	bool bMaleOwner; // 0xdc(0x01)
	bool bMaleOwnerCheck; // 0xdd(0x01)
	enum class EPlayerCameraMode CameraMode; // 0xde(0x01)
	enum class EPlayerCameraLookAtMode LookAtMode; // 0xdf(0x01)
	struct ACameraActor* pCameraActor; // 0xe0(0x08)
	struct TWeakObjectPtr<struct AActor> pRootActor; // 0xe8(0x08)
	struct UCapsuleComponent* pRootActorCapsule; // 0xf0(0x08)
	float RootActorCapsuleHeight; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UPlayerScriptComponent* pRootActorPlayerScript; // 0x100(0x08)
	struct FVector vRootActorPos; // 0x108(0x0c)
	struct FVector vRootActorMove; // 0x114(0x0c)
	bool bCheckRootPosType; // 0x120(0x01)
	bool bCheckRootPosMidCheck; // 0x121(0x01)
	char pad_122[0x2]; // 0x122(0x02)
	float fAspectRatio; // 0x124(0x04)
	float fAspectRateVt; // 0x128(0x04)
	float fAspectRateHz; // 0x12c(0x04)
	struct UDataTable* dtActionParameter; // 0x130(0x08)
	bool bWorkPosPlayer; // 0x138(0x01)
	char pad_139[0x3]; // 0x139(0x03)
	struct FVector vWorkPosPlayer; // 0x13c(0x0c)
	bool bWorkPosRemote; // 0x148(0x01)
	char pad_149[0x3]; // 0x149(0x03)
	struct FVector vWorkPosRemote; // 0x14c(0x0c)
	bool bActionResetApply; // 0x158(0x01)
	char pad_159[0x3]; // 0x159(0x03)
	float fActionResetLerpTime; // 0x15c(0x04)
	float fActionResetLerpTimer; // 0x160(0x04)
	float fActionResetKeepTime; // 0x164(0x04)
	float fActionResetKeepTimer; // 0x168(0x04)
	float fActionResetLerpAngleStt; // 0x16c(0x04)
	float fActionResetLerpAngleEnd; // 0x170(0x04)
	bool bDebugPrintActionReset; // 0x174(0x01)
	bool bMovementDelay; // 0x175(0x01)
	bool bTemporaryCameraEnable; // 0x176(0x01)
	char pad_177[0x1]; // 0x177(0x01)
	struct FString TemporaryCameraRefName; // 0x178(0x10)
	enum class EPlayerCameraActionPriority TemporaryCameraPriority; // 0x188(0x01)
	bool bTemporaryCameraApply; // 0x189(0x01)
	bool bTemporaryRootOffsetApply; // 0x18a(0x01)
	bool bTemporaryRootOffsetNoRotate; // 0x18b(0x01)
	struct FVector TemporaryRootOffset; // 0x18c(0x0c)
	bool bTemporaryDistanceOffsetApply; // 0x198(0x01)
	char pad_199[0x3]; // 0x199(0x03)
	float TemporaryDistanceOffset; // 0x19c(0x04)
	bool bTemporaryFovApply; // 0x1a0(0x01)
	char pad_1A1[0x3]; // 0x1a1(0x03)
	float TemporaryFov; // 0x1a4(0x04)
	float TemporaryLockOnRate; // 0x1a8(0x04)
	float TemporaryOptionSkipInput; // 0x1ac(0x04)
	float TemporaryOptionSkipReturn; // 0x1b0(0x04)
	float TemporaryOptionSkipKeepAngle; // 0x1b4(0x04)
	char pad_1B8[0x3d]; // 0x1b8(0x3d)
	bool bDebugTemporaryUseNew; // 0x1f5(0x01)
	bool bDebugPrintTemporary; // 0x1f6(0x01)
	bool bSlopeAssistEnable; // 0x1f7(0x01)
	bool bSlopeAssistSkip; // 0x1f8(0x01)
	bool bSlopeAssistAsyncRequestPrevProc; // 0x1f9(0x01)
	bool bSlopeAssistAsyncRequestTaskProc; // 0x1fa(0x01)
	bool bSlopeAssistAsyncRequestTaskDone; // 0x1fb(0x01)
	int32_t SlopeAssistCheckNum; // 0x1fc(0x04)
	float SlopeAssistCheckInterval; // 0x200(0x04)
	float SlopeAssistCheckIntervalAngle; // 0x204(0x04)
	float SlopeAssistCheckAngleVtMax; // 0x208(0x04)
	float SlopeAssistCheckAngleVtStt; // 0x20c(0x04)
	float SlopeAssistCheckAngleVtEnd; // 0x210(0x04)
	float SlopeAssistCheckAngleHz; // 0x214(0x04)
	struct FVector vSlopeAssistMoveDirection; // 0x218(0x0c)
	struct FVector vSlopeAssistMoveDirectionHz; // 0x224(0x0c)
	bool bSlopeAssistSkipMoveDir; // 0x230(0x01)
	bool bSlopeAssistLerpApply; // 0x231(0x01)
	char pad_232[0x2]; // 0x232(0x02)
	float SlopeAssistLerpRate; // 0x234(0x04)
	struct FVector vSlopeAssistLerpVector; // 0x238(0x0c)
	float SlopeAssistLerpAngleVt; // 0x244(0x04)
	float SlopeAssistDelayTime; // 0x248(0x04)
	float SlopeAssistDelayTimer; // 0x24c(0x04)
	bool bSlopeAssistCheckBgEnable; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	struct FVector SlopeAssistCheckBgOffset; // 0x254(0x0c)
	bool bSlopeAssistFixAngleEnable; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	float SlopeAssistFixAngleInterval; // 0x264(0x04)
	float SlopeAssistFixAngleRange; // 0x268(0x04)
	bool bSlopeAssistSpeedLerpEnable; // 0x26c(0x01)
	char pad_26D[0x3]; // 0x26d(0x03)
	float SlopeAssistSpeedLerpMin; // 0x270(0x04)
	float SlopeAssistSpeedLerpMax; // 0x274(0x04)
	float SlopeAssistSpeedLerpRateMax; // 0x278(0x04)
	float SlopeAssistSpeedLerpRate; // 0x27c(0x04)
	struct TArray<float> SlopeAssistResultAngleList; // 0x280(0x10)
	char pad_290[0xd0]; // 0x290(0xd0)
	bool bDebugSlopeAssistSyncApply; // 0x360(0x01)
	bool bDebugPrintSlopeAssist; // 0x361(0x01)
	bool bDebugDrawSlopeAssistVector; // 0x362(0x01)
	bool bDebugDrawSlopeAssistCheckPoint; // 0x363(0x01)
	bool bDebugDrawSlopeAssistCheckHit; // 0x364(0x01)
	char pad_365[0x33]; // 0x365(0x33)
	bool bDebugPrintDistance; // 0x398(0x01)
	bool bDebugTraceHit; // 0x399(0x01)
	bool bInputEnable; // 0x39a(0x01)
	char pad_39B[0x1]; // 0x39b(0x01)
	float fInputLtX; // 0x39c(0x04)
	float fInputLtY; // 0x3a0(0x04)
	float fInputRtX; // 0x3a4(0x04)
	float fInputRtY; // 0x3a8(0x04)
	bool bInputLt; // 0x3ac(0x01)
	bool bInputRt; // 0x3ad(0x01)
	bool bInputUp; // 0x3ae(0x01)
	bool bInputDn; // 0x3af(0x01)
	bool bInputAngle; // 0x3b0(0x01)
	bool bTurnCheckEnable; // 0x3b1(0x01)
	char pad_3B2[0x2]; // 0x3b2(0x02)
	struct FVector vTurnCheckOffsetUpStt; // 0x3b4(0x0c)
	struct FVector vTurnCheckOffsetUpEnd; // 0x3c0(0x0c)
	struct FVector vTurnCheckOffsetDnStt; // 0x3cc(0x0c)
	struct FVector vTurnCheckOffsetDnEnd; // 0x3d8(0x0c)
	struct FVector vTurnCheckOffsetLtStt; // 0x3e4(0x0c)
	struct FVector vTurnCheckOffsetLtEnd; // 0x3f0(0x0c)
	struct FVector vTurnCheckOffsetRtStt; // 0x3fc(0x0c)
	struct FVector vTurnCheckOffsetRtEnd; // 0x408(0x0c)
	bool bTurnCheckReturnEnable; // 0x414(0x01)
	char pad_415[0x3]; // 0x415(0x03)
	float fTurnCheckReturnTime; // 0x418(0x04)
	char pad_41C[0x84]; // 0x41c(0x84)
	bool bDebugTurnCheckFlag1; // 0x4a0(0x01)
	bool bDebugTurnCheckDrawCt; // 0x4a1(0x01)
	bool bDebugTurnCheckDrawCtRay; // 0x4a2(0x01)
	char pad_4A3[0x1]; // 0x4a3(0x01)
	float fDefaultFov; // 0x4a4(0x04)
	struct FVector vDefaultOffset; // 0x4a8(0x0c)
	struct FVector vDefaultOffsetWall; // 0x4b4(0x0c)
	float fDefaultAngleVt; // 0x4c0(0x04)
	float fDefaultAngleHz; // 0x4c4(0x04)
	float fDefaultDistance; // 0x4c8(0x04)
	float fDefaultDistanceMin; // 0x4cc(0x04)
	float fCurrentFov; // 0x4d0(0x04)
	float fCurrentAngleVt; // 0x4d4(0x04)
	float fCurrentAngleHz; // 0x4d8(0x04)
	float fCurrentDistance; // 0x4dc(0x04)
	struct FVector vCurrentRoot; // 0x4e0(0x0c)
	struct FVector vCurrentPos; // 0x4ec(0x0c)
	struct FVector vCurrentLookAt; // 0x4f8(0x0c)
	struct FVector vCurrentDir; // 0x504(0x0c)
	struct FRotator rCurrentRot; // 0x510(0x0c)
	float fDestinationAngleVt; // 0x51c(0x04)
	float fDestinationAngleHz; // 0x520(0x04)
	float fDestinationDistance; // 0x524(0x04)
	struct FVector vDestinationRoot; // 0x528(0x0c)
	struct FVector vDestinationPos; // 0x534(0x0c)
	struct FVector vDestinationDir; // 0x540(0x0c)
	struct FRotator rDestinationRot; // 0x54c(0x0c)
	bool bDebugDrawDestinationRootList; // 0x558(0x01)
	bool bBattleOffsetEnable; // 0x559(0x01)
	bool bBattleOffset; // 0x55a(0x01)
	bool bBattleOffsetLerp; // 0x55b(0x01)
	bool bBattleOffsetLerpSign; // 0x55c(0x01)
	char pad_55D[0x3]; // 0x55d(0x03)
	float fBattleOffsetTime; // 0x560(0x04)
	char pad_564[0x4]; // 0x564(0x04)
	struct UCurveFloat* pBattleOffsetLerpCurve; // 0x568(0x08)
	float fBattleOffsetTimer; // 0x570(0x04)
	float fBattleOffsetLerpRate; // 0x574(0x04)
	float fBattleOffsetDistanceLerp; // 0x578(0x04)
	struct FVector vBattleOffsetRootPosLerp; // 0x57c(0x0c)
	float fBattleOffsetDistance; // 0x588(0x04)
	struct FVector vBattleOffsetRootPos; // 0x58c(0x0c)
	bool bDebugPrintBattleOffset; // 0x598(0x01)
	bool bLockRootPosEnable; // 0x599(0x01)
	bool bLockRootPosSkip; // 0x59a(0x01)
	char pad_59B[0x1]; // 0x59b(0x01)
	float fRestoreRootPosLerpRate; // 0x59c(0x04)
	float fLockRootPosDistance; // 0x5a0(0x04)
	float fRestoreRootPosDistance; // 0x5a4(0x04)
	struct FVector vPrevRootPos; // 0x5a8(0x0c)
	bool bDebugPrintLockRootPos; // 0x5b4(0x01)
	char pad_5B5[0x3]; // 0x5b5(0x03)
	struct FVector vPlayerInputMove; // 0x5b8(0x0c)
	bool bRootLerpEnable; // 0x5c4(0x01)
	char pad_5C5[0x3]; // 0x5c5(0x03)
	float fRootLerpValueDefault; // 0x5c8(0x04)
	float fRootLerpValueAction; // 0x5cc(0x04)
	float fRootLerpValue; // 0x5d0(0x04)
	float fRootLerpValueVt; // 0x5d4(0x04)
	float fRootLerpDistanceDefault; // 0x5d8(0x04)
	float fRootLerpDistanceAction; // 0x5dc(0x04)
	float fRootLerpDistance; // 0x5e0(0x04)
	float fRootLerpDistanceWork; // 0x5e4(0x04)
	float fRootLerpDistanceMin; // 0x5e8(0x04)
	float fRootLerpDistanceTarget; // 0x5ec(0x04)
	float fRootLerpDistanceMove; // 0x5f0(0x04)
	bool bRootLerpActionLerp; // 0x5f4(0x01)
	char pad_5F5[0x3]; // 0x5f5(0x03)
	struct FString RootLerpActionRefName; // 0x5f8(0x10)
	enum class EPlayerCameraActionPriority RootLerpActionPriority; // 0x608(0x01)
	char pad_609[0x3]; // 0x609(0x03)
	float fRootLerpActionLerpRate; // 0x60c(0x04)
	char pad_610[0x14]; // 0x610(0x14)
	bool bRootLerpAngleEnable; // 0x624(0x01)
	char pad_625[0x3]; // 0x625(0x03)
	struct UCurveFloat* pRootLerpDirCurve; // 0x628(0x08)
	float fRootLerpDirLerpRate; // 0x630(0x04)
	float fRootLerpDirLerpRateMin; // 0x634(0x04)
	float fRootLerpMoveLerpValue; // 0x638(0x04)
	float fRootLerpMoveLerpRate; // 0x63c(0x04)
	float fRootLerpMoveLerpRateMin; // 0x640(0x04)
	float fRootLerpAngleLerpRate; // 0x644(0x04)
	float fRootLerpAngleRate; // 0x648(0x04)
	bool bRootLerpCamDistEnable; // 0x64c(0x01)
	char pad_64D[0x3]; // 0x64d(0x03)
	float fRootLerpCamDistRate; // 0x650(0x04)
	bool bDebugPrintRootLerp; // 0x654(0x01)
	bool bDebugPrintRootLerpAction; // 0x655(0x01)
	char pad_656[0x2]; // 0x656(0x02)
	float fSpinSpeedMaxHz; // 0x658(0x04)
	float fSpinAccelHz; // 0x65c(0x04)
	float fSpinDecelHz; // 0x660(0x04)
	float fSpinDirectionHz; // 0x664(0x04)
	float fSpinSpeedHz; // 0x668(0x04)
	float fSpinInputHz; // 0x66c(0x04)
	float fSpinMoveInputHz; // 0x670(0x04)
	float fSpinMoveRateHz; // 0x674(0x04)
	float fSpinMoveDecelHz; // 0x678(0x04)
	float fSpinMoveSpeedHz; // 0x67c(0x04)
	float fSpinAngleMin; // 0x680(0x04)
	float fSpinAngleMax; // 0x684(0x04)
	float fSpinSpeedMaxVt; // 0x688(0x04)
	float fSpinAccelVt; // 0x68c(0x04)
	float fSpinDecelVt; // 0x690(0x04)
	float fSpinDirectionVt; // 0x694(0x04)
	float fSpinSpeedVt; // 0x698(0x04)
	float fSpinInputVt; // 0x69c(0x04)
	float fSpinMoveInputVt; // 0x6a0(0x04)
	float fSpinMoveAngleMinVt; // 0x6a4(0x04)
	float fSpinMoveAngleMaxVt; // 0x6a8(0x04)
	bool bAngleVtDistEnable; // 0x6ac(0x01)
	char pad_6AD[0x3]; // 0x6ad(0x03)
	float fAngleVtDistRate; // 0x6b0(0x04)
	char pad_6B4[0x4]; // 0x6b4(0x04)
	struct UCurveFloat* pAngleVtDistLerpCurve; // 0x6b8(0x08)
	bool bAngleVtRootEnable; // 0x6c0(0x01)
	char pad_6C1[0x3]; // 0x6c1(0x03)
	float fAngleVtRootRate; // 0x6c4(0x04)
	struct FVector vAngleVtRootOffset; // 0x6c8(0x0c)
	char pad_6D4[0x4]; // 0x6d4(0x04)
	struct UCurveFloat* pAngleVtRootLerpCurve; // 0x6d8(0x08)
	bool bLockOnApply; // 0x6e0(0x01)
	char pad_6E1[0x3]; // 0x6e1(0x03)
	struct TWeakObjectPtr<struct AActor> pLockOnActor; // 0x6e4(0x08)
	struct FVector LockOnOffset; // 0x6ec(0x0c)
	float LockOnAngleLimitPly; // 0x6f8(0x04)
	float LockOnAngleLimitCam; // 0x6fc(0x04)
	float fLockOnAngleUp; // 0x700(0x04)
	float fLockOnAngleDn; // 0x704(0x04)
	float fLockOnAngleLt; // 0x708(0x04)
	float fLockOnAngleRt; // 0x70c(0x04)
	bool bDebugNoLerpVtAngle; // 0x710(0x01)
	char pad_711[0x3]; // 0x711(0x03)
	struct FVector vLockOnRootPly; // 0x714(0x0c)
	struct FVector vLockOnRootEnm; // 0x720(0x0c)
	struct FVector vLockOnLookAt; // 0x72c(0x0c)
	bool bLockOnRoot; // 0x738(0x01)
	char pad_739[0x3]; // 0x739(0x03)
	struct FVector vLockOnRoot; // 0x73c(0x0c)
	float fLookAtDistanceOffset; // 0x748(0x04)
	bool bDebugPrintLogLockOn; // 0x74c(0x01)
	bool bLockOnLerp; // 0x74d(0x01)
	char pad_74E[0x2]; // 0x74e(0x02)
	float fLockOnLerpTime; // 0x750(0x04)
	float fLockOnLerpTimeSign; // 0x754(0x04)
	struct UCurveFloat* pLockOnLerpCurve; // 0x758(0x08)
	float fLockOnLerpTimer; // 0x760(0x04)
	float fLockOnLerpRate; // 0x764(0x04)
	bool bLockOnLerpAngleVtEnable; // 0x768(0x01)
	bool bLockOnLerpAngleVtApply; // 0x769(0x01)
	char pad_76A[0x2]; // 0x76a(0x02)
	float fLockOnLerpAngleVtStt; // 0x76c(0x04)
	float fLockOnLerpAngleVtEnd; // 0x770(0x04)
	float fLockOnLerpAngleVtEaseBlend; // 0x774(0x04)
	bool bDebugPrintLockOnLerp; // 0x778(0x01)
	char pad_779[0x3]; // 0x779(0x03)
	struct TWeakObjectPtr<struct AActor> pLookAtObject; // 0x77c(0x08)
	bool bLockOnLookAtObj; // 0x784(0x01)
	bool bLockOnObjLerp; // 0x785(0x01)
	char pad_786[0x2]; // 0x786(0x02)
	float fLockOnObjLerpRateStt; // 0x788(0x04)
	float fLockOnObjLerpRate; // 0x78c(0x04)
	float fLockOnObjLerpAngleMax; // 0x790(0x04)
	float fLockOnObjLerpTimeStart; // 0x794(0x04)
	float fLockOnObjLerpTime; // 0x798(0x04)
	float fLockOnObjLerpTimeEnd; // 0x79c(0x04)
	float fLockOnObjLerpTimer; // 0x7a0(0x04)
	float fLockOnObjLerpTimeSign; // 0x7a4(0x04)
	struct UCurveFloat* pLockOnObjLerpCurve; // 0x7a8(0x08)
	bool bLockOnObjLerpDelayApply; // 0x7b0(0x01)
	char pad_7B1[0x3]; // 0x7b1(0x03)
	struct FVector vLockOnObjLerpDelayOffsetEnd; // 0x7b4(0x0c)
	struct FVector vLockOnObjLerpDelayOffset; // 0x7c0(0x0c)
	float fLockOnObjLerpDelayTime; // 0x7cc(0x04)
	float fLockOnObjLerpDelayTimer; // 0x7d0(0x04)
	bool bDebugPrintLockOnObjLerp; // 0x7d4(0x01)
	bool bLockOnLookAtDistAngleVtLerpEnable; // 0x7d5(0x01)
	char pad_7D6[0x2]; // 0x7d6(0x02)
	struct UCurveFloat* pLockOnLookAtDistAngleVtLerp; // 0x7d8(0x08)
	float fLockOnLookAtDistAngleVtLerpRate; // 0x7e0(0x04)
	bool bLockOnLookAtDistCamDistEnable; // 0x7e4(0x01)
	char pad_7E5[0x3]; // 0x7e5(0x03)
	struct UCurveFloat* pLockOnLookAtDistCamDistLerp; // 0x7e8(0x08)
	float fLockOnLookAtDistCamDistLerpRate; // 0x7f0(0x04)
	bool bLockOnRotateSpeedRateEnable; // 0x7f4(0x01)
	char pad_7F5[0x3]; // 0x7f5(0x03)
	float fLockOnRotateSpeedRateFovRateHz; // 0x7f8(0x04)
	float fLockOnRotateSpeedRateFovRateVt; // 0x7fc(0x04)
	float fLockOnRotateSpeedRateAngleHz; // 0x800(0x04)
	float fLockOnRotateSpeedRateAngleVt; // 0x804(0x04)
	bool bLockOnRotateSpeedRateLerp; // 0x808(0x01)
	bool bLockOnRotateSpeedRateSign; // 0x809(0x01)
	char pad_80A[0x6]; // 0x80a(0x06)
	struct UCurveFloat* pLockOnRotateSpeedRateCurve; // 0x810(0x08)
	float fLockOnRotateSpeedRateTimeDecel; // 0x818(0x04)
	float fLockOnRotateSpeedRateTimeReturn; // 0x81c(0x04)
	float fLockOnRotateSpeedRateTimer; // 0x820(0x04)
	float fLockOnRotateSpeedRateCurrent; // 0x824(0x04)
	bool bDebugPrintLockOnRotateSpeed; // 0x828(0x01)
	bool bDebugDrawLockOnRotateLine; // 0x829(0x01)
	bool bLockOnReturnEnable; // 0x82a(0x01)
	bool bLockOnReturnSkip; // 0x82b(0x01)
	float fLockOnReturnAngleHz; // 0x82c(0x04)
	float fLockOnReturnAngleVt; // 0x830(0x04)
	bool bLockOnReturnCheck; // 0x834(0x01)
	bool bLockOnReturnLerpStt; // 0x835(0x01)
	bool bLockOnReturnLerpHz; // 0x836(0x01)
	bool bLockOnReturnLerpHzPly; // 0x837(0x01)
	bool bLockOnReturnLerpVt; // 0x838(0x01)
	char pad_839[0x3]; // 0x839(0x03)
	float fLockOnReturnLerpTime; // 0x83c(0x04)
	float fLockOnReturnLerpTimer; // 0x840(0x04)
	float fLockOnReturnAngleHzStt; // 0x844(0x04)
	float fLockOnReturnAngleHzEnd; // 0x848(0x04)
	float fLockOnReturnAngleVtStt; // 0x84c(0x04)
	float fLockOnReturnAngleVtEnd; // 0x850(0x04)
	bool bLockOnReturnClockwise; // 0x854(0x01)
	char pad_855[0x3]; // 0x855(0x03)
	struct UCurveFloat* pLockOnReturnLerpCurve; // 0x858(0x08)
	bool bLockOnReturnActionEnableHz; // 0x860(0x01)
	bool bLockOnReturnActionApplyHz; // 0x861(0x01)
	bool bLockOnReturnActionLerpHz; // 0x862(0x01)
	bool bLockOnReturnActionLerpEndHz; // 0x863(0x01)
	float fLockOnReturnActionLerpTimeHz; // 0x864(0x04)
	float fLockOnReturnActionLerpTimerHz; // 0x868(0x04)
	float fLockOnReturnActionAngleHz; // 0x86c(0x04)
	bool bDebugDrawLockOnReturnLine; // 0x870(0x01)
	bool bDebugPrintLockOnReturnSkip; // 0x871(0x01)
	bool bKeepAngleEnable; // 0x872(0x01)
	bool bKeepAngleApply; // 0x873(0x01)
	float fKeepAngleLookAtDistance; // 0x874(0x04)
	bool bLockOnKeepAngleEnable; // 0x878(0x01)
	bool bLockOnKeepAngleSpeedEnable; // 0x879(0x01)
	bool bLockOnKeepAngleSkip; // 0x87a(0x01)
	bool bLockOnKeepAngleHzSkip; // 0x87b(0x01)
	float fLockOnKeepAngleHzSpeed; // 0x87c(0x04)
	bool bLockOnKeepAngleVtSkip; // 0x880(0x01)
	char pad_881[0x3]; // 0x881(0x03)
	float fLockOnKeepAngleVtSpeed; // 0x884(0x04)
	bool bDebugPrintLockOnKeepAngleSkip; // 0x888(0x01)
	bool bLockEnemyPosEnable; // 0x889(0x01)
	bool bLockEnemyPosUpdateParam; // 0x88a(0x01)
	bool bLockEnemyPosSkip; // 0x88b(0x01)
	bool bLockEnemyPosUpdate; // 0x88c(0x01)
	char pad_88D[0x3]; // 0x88d(0x03)
	struct FVector vLockEnemyPos; // 0x890(0x0c)
	float fLockEnemyLerpRate; // 0x89c(0x04)
	float fLockEnemyPosLockDistanceHz; // 0x8a0(0x04)
	float fLockEnemyPosRestoreDistanceHz; // 0x8a4(0x04)
	struct FVector vLockEnemyPosPrevHz; // 0x8a8(0x0c)
	bool bLockEnemyPosSkipHz; // 0x8b4(0x01)
	char pad_8B5[0x3]; // 0x8b5(0x03)
	float fLockEnemyPosLockDistanceVt; // 0x8b8(0x04)
	float fLockEnemyPosRestoreDistanceVt; // 0x8bc(0x04)
	struct FVector vLockEnemyPosPrevVt; // 0x8c0(0x0c)
	bool bLockEnemyPosSkipVt; // 0x8cc(0x01)
	char pad_8CD[0x3]; // 0x8cd(0x03)
	float fLockEnemyPosDistMaxHz; // 0x8d0(0x04)
	float fLockEnemyPosDistMaxVt; // 0x8d4(0x04)
	bool bDebugPrintLockEnemyPos; // 0x8d8(0x01)
	char pad_8D9[0xb]; // 0x8d9(0x0b)
	float LockOnMapGimmickLerpTime; // 0x8e4(0x04)
	bool bUniqueObjectCameraApply; // 0x8e8(0x01)
	bool bUniqueObjectCameraSocketType; // 0x8e9(0x01)
	bool bUniqueObjectCameraSocketOption; // 0x8ea(0x01)
	char pad_8EB[0x5]; // 0x8eb(0x05)
	struct FCameraUniqueObjectParameter UniqueObjectCameraParam; // 0x8f0(0x58)
	struct UMeshComponent* pUniqueObjectCameraMeshComp; // 0x948(0x08)
	bool bUniqueObjectCameraPlayerFix; // 0x950(0x01)
	char pad_951[0x3]; // 0x951(0x03)
	struct FVector UniqueObjectCameraPlayerPos; // 0x954(0x0c)
	bool bUniqueObjectCameraSocketApply; // 0x960(0x01)
	char pad_961[0x3]; // 0x961(0x03)
	struct FVector UniqueObjectCameraSocketPos; // 0x964(0x0c)
	bool bUniqueObjectCameraSocketLerp; // 0x970(0x01)
	bool bUniqueObjectCameraSocketLerpEnd; // 0x971(0x01)
	char pad_972[0x2]; // 0x972(0x02)
	float UniqueObjectCameraSocketLerpTimeStt; // 0x974(0x04)
	float UniqueObjectCameraSocketLerpTimeEnd; // 0x978(0x04)
	float UniqueObjectCameraSocketLerpRate; // 0x97c(0x04)
	bool bUniqueObjectCameraControlType; // 0x980(0x01)
	char pad_981[0x3]; // 0x981(0x03)
	struct FRotator UniqueObjectCameraControlRot; // 0x984(0x0c)
	bool bUniqueObjectCameraRemoteType; // 0x990(0x01)
	char pad_991[0x3]; // 0x991(0x03)
	struct TWeakObjectPtr<struct AActor> pUniqueObjectCameraRemoteActor; // 0x994(0x08)
	bool bUniqueObjectCameraLookAtLerpApply; // 0x99c(0x01)
	char pad_99D[0x3]; // 0x99d(0x03)
	float UniqueObjectCameraLookAtRate; // 0x9a0(0x04)
	float UniqueObjectCameraLookAtLerpTime; // 0x9a4(0x04)
	float UniqueObjectCameraLookAtLerpTimer; // 0x9a8(0x04)
	float UniqueObjectCameraLookAtDelayRate; // 0x9ac(0x04)
	char pad_9B0[0x8]; // 0x9b0(0x08)
	struct TWeakObjectPtr<struct AActor> pUniqueObjectCameraEnemyActor; // 0x9b8(0x08)
	struct FVector UniqueObjectCameraEnemyActorPos; // 0x9c0(0x0c)
	struct TWeakObjectPtr<struct AActor> pUniqueObjectCameraObjectActor; // 0x9cc(0x08)
	struct FVector vUniqueObjectCameraLookAtPos; // 0x9d4(0x0c)
	bool bUniqueObjectCameraDistNear; // 0x9e0(0x01)
	char pad_9E1[0x3]; // 0x9e1(0x03)
	float UniqueObjectCameraDistRate; // 0x9e4(0x04)
	struct UCurveFloat* pUniqueObjectCameraLerpCurveStt; // 0x9e8(0x08)
	struct UCurveFloat* pUniqueObjectCameraLerpCurveEnd; // 0x9f0(0x08)
	bool bUniqueObjectCameraLerp; // 0x9f8(0x01)
	bool bUniqueObjectCameraLerpEnd; // 0x9f9(0x01)
	bool bUniqueObjectCameraLerpEndInstance; // 0x9fa(0x01)
	char pad_9FB[0x1]; // 0x9fb(0x01)
	float UniqueObjectCameraLerpTimer; // 0x9fc(0x04)
	float UniqueObjectCameraLerpRate; // 0xa00(0x04)
	char pad_A04[0x90]; // 0xa04(0x90)
	bool bUniqueObjectCameraPlayerLeft; // 0xa94(0x01)
	bool bDebugPrintUniqueObjectCamera; // 0xa95(0x01)
	bool bDebugPrintUniqueObjectCameraPos; // 0xa96(0x01)
	bool bDebugPrintUniqueObjectCameraPosLerp; // 0xa97(0x01)
	bool bDebugPrintUniqueObjectCameraLookAt; // 0xa98(0x01)
	bool bDebugPrintUniqueObjectCameraRot; // 0xa99(0x01)
	bool bDebugPrintUniqueObjectCameraFov; // 0xa9a(0x01)
	bool bDebugPrintUniqueObjectCameraSocket; // 0xa9b(0x01)
	bool bDebugPrintUniqueObjectCameraControl; // 0xa9c(0x01)
	bool bDebugUniqueObjectCameraNewLookAt; // 0xa9d(0x01)
	bool bDebugPrintUniqueObjectCameraLookAtRate; // 0xa9e(0x01)
	bool bDebugDrawUniqueObjectCameraPos; // 0xa9f(0x01)
	bool bDebugDrawUniqueObjectCameraPosLerp; // 0xaa0(0x01)
	bool bDebugDrawUniqueObjectCameraLookAt; // 0xaa1(0x01)
	char pad_AA2[0x2]; // 0xaa2(0x02)
	float bDebugDrawUniqueObjectCameraTime; // 0xaa4(0x04)
	float bDebugDrawUniqueObjectCameraBgTrace; // 0xaa8(0x04)
	bool bAttentionCameraApply; // 0xaac(0x01)
	bool bAttentionLerpStt; // 0xaad(0x01)
	bool bAttentionLerpEnd; // 0xaae(0x01)
	bool bAttentionActor; // 0xaaf(0x01)
	struct FVector vAttentionPos; // 0xab0(0x0c)
	struct TWeakObjectPtr<struct AActor> pAttentionActor; // 0xabc(0x08)
	char pad_AC4[0x4]; // 0xac4(0x04)
	struct UCurveFloat* pAttentionActorCurve; // 0xac8(0x08)
	bool bAttentionActorFixAngleVt; // 0xad0(0x01)
	char pad_AD1[0x3]; // 0xad1(0x03)
	float AttentionActorFixAngleVt; // 0xad4(0x04)
	bool bAttentionActorOffsetDistHz; // 0xad8(0x01)
	char pad_AD9[0x3]; // 0xad9(0x03)
	float AttentionActorOffsetDistHz; // 0xadc(0x04)
	float AttentionActorOffsetDistHzSign; // 0xae0(0x04)
	bool bAttentionFov; // 0xae4(0x01)
	char pad_AE5[0x3]; // 0xae5(0x03)
	struct UCurveFloat* pAttentionFovCurve; // 0xae8(0x08)
	float AttentionCameraLerpTime; // 0xaf0(0x04)
	float AttentionCameraLerpRate; // 0xaf4(0x04)
	char pad_AF8[0x18]; // 0xaf8(0x18)
	bool bDebugPrintAttentionCamera; // 0xb10(0x01)
	bool bPlayerLerpAuto; // 0xb11(0x01)
	char pad_B12[0x6]; // 0xb12(0x06)
	struct TArray<float> fPlayerLerpTraceAngleList; // 0xb18(0x10)
	float fPlayerLerpTraceDistance; // 0xb28(0x04)
	float fPlayerLerpDistance; // 0xb2c(0x04)
	bool bPlayerLerp; // 0xb30(0x01)
	char pad_B31[0x3]; // 0xb31(0x03)
	struct FVector vPlayerLerpPosStt; // 0xb34(0x0c)
	struct FVector vPlayerLerpPosEnd; // 0xb40(0x0c)
	float fPlayerLerpRadius; // 0xb4c(0x04)
	struct UCurveFloat* pPlayerLerpCurve; // 0xb50(0x08)
	struct TWeakObjectPtr<struct ARSCharacterBase> pEnemyLerpActor; // 0xb58(0x08)
	float fEnemyLerpDistance; // 0xb60(0x04)
	float fEnemyLerpRateDefault; // 0xb64(0x04)
	float fEnemyLerpRate; // 0xb68(0x04)
	float fEnemyLerpRadius; // 0xb6c(0x04)
	float fPlayerPullDistance; // 0xb70(0x04)
	float fPlayerPullMoveDistMax; // 0xb74(0x04)
	bool bEnemyLerp; // 0xb78(0x01)
	char pad_B79[0x3]; // 0xb79(0x03)
	struct FVector vEnemyLerpPosStt; // 0xb7c(0x0c)
	struct FVector vEnemyLerpPosEnd; // 0xb88(0x0c)
	bool bDebugDrawPlayerLerpVector; // 0xb94(0x01)
	bool bDebugDrawPlayerLerpSphere; // 0xb95(0x01)
	bool bDebugDrawEnemyLerpSphere; // 0xb96(0x01)
	bool bDebugPrintEnemyLerpSphere; // 0xb97(0x01)
	bool bLerpReset; // 0xb98(0x01)
	bool bLerpUpdateAngleHz; // 0xb99(0x01)
	bool bCameraReset; // 0xb9a(0x01)
	char pad_B9B[0x1]; // 0xb9b(0x01)
	float fLerpTime; // 0xb9c(0x04)
	float fLerpRate; // 0xba0(0x04)
	char pad_BA4[0x40]; // 0xba4(0x40)
	float fCameraHitRadius; // 0xbe4(0x04)
	float fCameraHitRadiusPlane; // 0xbe8(0x04)
	float fCameraHitRadiusOffset; // 0xbec(0x04)
	bool bCameraBuried; // 0xbf0(0x01)
	char pad_BF1[0x3]; // 0xbf1(0x03)
	float fDistSpeedAccel; // 0xbf4(0x04)
	float fDistSpeedMax; // 0xbf8(0x04)
	float fDistSpeed; // 0xbfc(0x04)
	bool bDebugDrawTraceCorner; // 0xc00(0x01)
	bool bDebugDrawTraceCameraRoot; // 0xc01(0x01)
	bool bDebugDrawTraceCameraDistance; // 0xc02(0x01)
	char pad_C03[0x5]; // 0xc03(0x05)
	struct FCameraTriggerInfo AreaTriggerInfo; // 0xc08(0x28)
	struct FCameraTriggerInfo CurrentTriggerInfo; // 0xc30(0x28)
	struct TArray<struct FCameraTriggerInfo> TriggerInfoList; // 0xc58(0x10)
	bool bTriggerInfoLerp; // 0xc68(0x01)
	char pad_C69[0x3]; // 0xc69(0x03)
	float TriggerInfoLerpTimer; // 0xc6c(0x04)
	struct UCurveFloat* pTriggerInfoLerpCurve; // 0xc70(0x08)
	float TriggerInfoLerpTime; // 0xc78(0x04)
	char pad_C7C[0x4]; // 0xc7c(0x04)
	struct UCurveFloat* pTriggerInfoLerpCurveDefault; // 0xc80(0x08)
	float TriggerInfoLerpTimeDefault; // 0xc88(0x04)
	bool bTriggerInfoSkipLerp; // 0xc8c(0x01)
	char pad_C8D[0x3]; // 0xc8d(0x03)
	struct TArray<struct FString> TriggerInfoSkipLerpRefList; // 0xc90(0x10)
	struct FPlayerCameraPreset PresetBasic; // 0xca0(0xd8)
	struct FPlayerCameraPreset PresetOffset; // 0xd78(0xd8)
	struct FPlayerCameraPreset CurrentPreset; // 0xe50(0xd8)
	bool bDebugNewTriggerEndLerp; // 0xf28(0x01)
	char pad_F29[0x207]; // 0xf29(0x207)
	struct FCameraTriggerInfo NextTriggerInfo; // 0x1130(0x28)
	bool bAssistRootHeight; // 0x1158(0x01)
	char pad_1159[0x3]; // 0x1159(0x03)
	float fAssistRootHeightDistYut; // 0x115c(0x04)
	float fAssistRootHeightDistKsn; // 0x1160(0x04)
	float fAssistRootHeightDistMax; // 0x1164(0x04)
	float fAssistRootHeightDistRangeMin; // 0x1168(0x04)
	float fAssistRootHeightDistRangeMax; // 0x116c(0x04)
	float fAssistRootHeightAngleYut; // 0x1170(0x04)
	float fAssistRootHeightAngleKsn; // 0x1174(0x04)
	float fAssistRootHeightAngleMax; // 0x1178(0x04)
	float fAssistRootHeightAngleRangeMin; // 0x117c(0x04)
	float fAssistRootHeightAngleRangeMax; // 0x1180(0x04)
	bool bDbDispAssistRootHeight; // 0x1184(0x01)
	char pad_1185[0x7f]; // 0x1185(0x7f)
	bool bAsyncRequestPrevProc; // 0x1204(0x01)
	bool bAsyncRequestTaskProc; // 0x1205(0x01)
	bool bAsyncTaskDone; // 0x1206(0x01)
	char pad_1207[0x1]; // 0x1207(0x01)
	float ActorMoveDistMin; // 0x1208(0x04)
	char pad_120C[0xa4]; // 0x120c(0xa4)
	bool dbDrawTrace; // 0x12b0(0x01)
	bool bDebugPrintRootOffsetHz; // 0x12b1(0x01)
	bool bDebugDrawTraceRootOffsetHz; // 0x12b2(0x01)
	bool bDbTemp0; // 0x12b3(0x01)
	bool bDbTemp1; // 0x12b4(0x01)
	bool bDbTemp2; // 0x12b5(0x01)
	char pad_12B6[0x202]; // 0x12b6(0x202)

	void UpdateUniqueObjectPlayerLerp(float timeRate); // Function BattlePrototype.PlayerCameraComponent.UpdateUniqueObjectPlayerLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c1a0
	void UpdateUniqueObjectCameraRemoteType(); // Function BattlePrototype.PlayerCameraComponent.UpdateUniqueObjectCameraRemoteType // (Final|Native|Public|BlueprintCallable) // @ game+0x126c180
	void UpdateTriggerInfoLerp(); // Function BattlePrototype.PlayerCameraComponent.UpdateTriggerInfoLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c160
	void UpdateTemporaryParameter(); // Function BattlePrototype.PlayerCameraComponent.UpdateTemporaryParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x126c140
	void UpdateRootLerpActionLerp(); // Function BattlePrototype.PlayerCameraComponent.UpdateRootLerpActionLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c120
	void UpdateLockOnRotateSpeedLerp(); // Function BattlePrototype.PlayerCameraComponent.UpdateLockOnRotateSpeedLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c100
	void UpdateLockOnReturnAction(); // Function BattlePrototype.PlayerCameraComponent.UpdateLockOnReturnAction // (Final|Native|Public|BlueprintCallable) // @ game+0x126c0e0
	void UpdateLockOnLookAtObjLerp(float Rate); // Function BattlePrototype.PlayerCameraComponent.UpdateLockOnLookAtObjLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c060
	void UpdateCameraLockOnLerp(); // Function BattlePrototype.PlayerCameraComponent.UpdateCameraLockOnLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c040
	void UpdateCameraActionReset(); // Function BattlePrototype.PlayerCameraComponent.UpdateCameraActionReset // (Final|Native|Public|BlueprintCallable) // @ game+0x126c020
	void UpdateBattleCameraLerp(); // Function BattlePrototype.PlayerCameraComponent.UpdateBattleCameraLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126c000
	void UpdateAttentionCamera(); // Function BattlePrototype.PlayerCameraComponent.UpdateAttentionCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x126bfe0
	void UpdateAsyncTrace(); // Function BattlePrototype.PlayerCameraComponent.UpdateAsyncTrace // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void UpdateAsyncParameter(); // Function BattlePrototype.PlayerCameraComponent.UpdateAsyncParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void TickAsyncSlopeAssist(); // Function BattlePrototype.PlayerCameraComponent.TickAsyncSlopeAssist // (Final|Native|Public|BlueprintCallable) // @ game+0x126bfc0
	void TestTrace(struct FVector posS, struct FVector Pose, float Radius, float dTime); // Function BattlePrototype.PlayerCameraComponent.TestTrace // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x126be40
	void SetUniqueObjectPlayerPullParameter(float pullDistance, float MoveDistMax); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectPlayerPullParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x126bd50
	void SetUniqueObjectPlayerLerpParameter(struct TArray<float> angleList, float traceDist, float lerpDist, float enmDist, float enmRate); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectPlayerLerpParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x126bb70
	void SetUniqueObjectPlayerLerpAuto(struct ARSCharacterBase* pEnemyActor, float radiusEnm, float radiusPly); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectPlayerLerpAuto // (Final|Native|Public|BlueprintCallable) // @ game+0x126ba70
	void SetUniqueObjectPlayerLerp(struct FVector tgtPos); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectPlayerLerp // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x126b9e0
	void SetUniqueObjectLookAtRate(float LookAtRate, float LerpTime, float DelayRate); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectLookAtRate // (Final|Native|Public|BlueprintCallable) // @ game+0x126b8d0
	void SetUniqueObjectEnemyLerp(struct FVector tgtPos); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectEnemyLerp // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x126b840
	void SetUniqueObjectCameraSocketTypeOption(struct AActor* pObjActor); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectCameraSocketTypeOption // (Final|Native|Public|BlueprintCallable) // @ game+0x126b7c0
	void SetUniqueObjectCameraSocketType(bool Flag, struct FCameraUniqueObjectParameter Param); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectCameraSocketType // (Final|Native|Public|BlueprintCallable) // @ game+0x126b660
	void SetUniqueObjectCameraSocketApply(bool Flag, float LerpTime); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectCameraSocketApply // (Final|Native|Public|BlueprintCallable) // @ game+0x126b590
	void SetUniqueObjectCameraRemoteType(bool Flag, struct AActor* pRemoteActor, struct FCameraUniqueObjectParameter Param); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectCameraRemoteType // (Final|Native|Public|BlueprintCallable) // @ game+0x126b400
	void SetUniqueObjectCameraControlType(bool Flag, struct AActor* pObjActor, struct FCameraUniqueObjectParameter Param, bool bSkipResetCamera); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectCameraControlType // (Final|Native|Public|BlueprintCallable) // @ game+0x126b230
	void SetUniqueObjectCamera(bool Flag, struct AActor* pObjActor, struct AActor* pEnmActor, struct FCameraUniqueObjectParameter Param); // Function BattlePrototype.PlayerCameraComponent.SetUniqueObjectCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x126b060
	void SetTemporaryParameter(bool Flag, float LerpTime, struct FString refName, enum class EPlayerCameraActionPriority Priority, bool bEnableRootOffset, bool bRootOffsetNoRotate, struct FVector rootOffset, bool bEnableCamDistance, float camDistance, bool bEnableFov, float FOV, enum class EEasingFunc easeFunc, float easeBlendExp); // Function BattlePrototype.PlayerCameraComponent.SetTemporaryParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x126ac60
	void SetTemporaryOption(bool bSkipInput, bool bSkipReturn, bool bSkipKeepAngle); // Function BattlePrototype.PlayerCameraComponent.SetTemporaryOption // (Final|Native|Public|BlueprintCallable) // @ game+0x126ab40
	void SetSlopeAssistSkip(bool Flag); // Function BattlePrototype.PlayerCameraComponent.SetSlopeAssistSkip // (Final|Native|Public|BlueprintCallable) // @ game+0x126aab0
	void SetRootLerpActionParameter(bool Flag, struct FString refName, enum class EPlayerCameraActionPriority prio, float LerpTime, float LerpValue, float maxDist); // Function BattlePrototype.PlayerCameraComponent.SetRootLerpActionParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x126a890
	void SetRootLerpActionName(bool Flag, struct FString refName, enum class EPlayerCameraActionPriority prio, float LerpTime, struct FName ActionName); // Function BattlePrototype.PlayerCameraComponent.SetRootLerpActionName // (Final|Native|Public|BlueprintCallable) // @ game+0x126a6b0
	void SetPlayerCameraMode(enum class EPlayerCameraMode camMode); // Function BattlePrototype.PlayerCameraComponent.SetPlayerCameraMode // (Final|Native|Public|BlueprintCallable) // @ game+0x126a630
	void SetPlayerCamera(struct AActor* CameraActor); // Function BattlePrototype.PlayerCameraComponent.SetPlayerCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x79d490
	void SetMaleOwner(bool bFlag); // Function BattlePrototype.PlayerCameraComponent.SetMaleOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x126a5b0
	void SetLockRootPosParameter(float skipDist, float restoreDist); // Function BattlePrototype.PlayerCameraComponent.SetLockRootPosParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x126a4f0
	void SetLockOnRotateSpeedLerp(bool bSign); // Function BattlePrototype.PlayerCameraComponent.SetLockOnRotateSpeedLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x126a460
	void SetLockOnReturnSkip(bool Flag); // Function BattlePrototype.PlayerCameraComponent.SetLockOnReturnSkip // (Final|Native|Public|BlueprintCallable) // @ game+0x126a3d0
	void SetLockOnReturnAction(bool bFlag, bool bLerpHz, float lerpTimeHz, float angleRateHz); // Function BattlePrototype.PlayerCameraComponent.SetLockOnReturnAction // (Final|Native|Public|BlueprintCallable) // @ game+0x126a270
	void SetLockOnLookAtObj(bool bFlag, struct AActor* pObjActor, bool bDelay); // Function BattlePrototype.PlayerCameraComponent.SetLockOnLookAtObj // (Final|Native|Public|BlueprintCallable) // @ game+0x126a160
	void SetLockOnKeepAngleSkip(bool Flag); // Function BattlePrototype.PlayerCameraComponent.SetLockOnKeepAngleSkip // (Final|Native|Public|BlueprintCallable) // @ game+0x126a0d0
	void SetLerpTriggerInfo(struct FCameraTriggerInfo triggerInfo, struct UCurveFloat* pEndCurve); // Function BattlePrototype.PlayerCameraComponent.SetLerpTriggerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1269fc0
	void SetInputMoveParameter(float delayValue, float delayValueVt, float delayDistMax, float speedRateHz, float decelHz, float vtAngleMin, float vtAngleMax); // Function BattlePrototype.PlayerCameraComponent.SetInputMoveParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1269da0
	void SetEventTriggerInfo(bool Flag, struct FCameraTriggerInfo triggerInfo); // Function BattlePrototype.PlayerCameraComponent.SetEventTriggerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1269c80
	void SetCameraSpeed(float spinSpeedVt, float spinAccelVt, float spinDecelVt, float spinSpeedHz, float spinAccelHz, float spinDecelHz); // Function BattlePrototype.PlayerCameraComponent.SetCameraSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1269970
	void SetCameraRotation(struct FRotator Rot, bool bOverwrite); // Function BattlePrototype.PlayerCameraComponent.SetCameraRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1269890
	void SetCameraRoot(struct AActor* pRootActor, struct FVector Offset, bool bAttachIn); // Function BattlePrototype.PlayerCameraComponent.SetCameraRoot // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1269780
	void SetCameraRoatatLimit(float vtAngleMin, float vtAngleMax); // Function BattlePrototype.PlayerCameraComponent.SetCameraRoatatLimit // (Final|Native|Public|BlueprintCallable) // @ game+0x12696c0
	void SetCameraPlayerParameter(bool bYuito); // Function BattlePrototype.PlayerCameraComponent.SetCameraPlayerParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1269630
	void SetCameraMovementDelay(bool bDelay); // Function BattlePrototype.PlayerCameraComponent.SetCameraMovementDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x12695a0
	void SetCameraLockOnMapGimmick(struct AMapGimmickObject* pMapGimmick, bool ResetOnly); // Function BattlePrototype.PlayerCameraComponent.SetCameraLockOnMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x12694d0
	void SetCameraLockOn(struct AActor* pTargetActor); // Function BattlePrototype.PlayerCameraComponent.SetCameraLockOn // (Final|Native|Public|BlueprintCallable) // @ game+0x1269450
	void SetCameraLocation(struct FVector Pos); // Function BattlePrototype.PlayerCameraComponent.SetCameraLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12693c0
	void SetCameraInputRotate(float spinRateVt, float spinRateHz); // Function BattlePrototype.PlayerCameraComponent.SetCameraInputRotate // (Final|Native|Public|BlueprintCallable) // @ game+0x1269300
	void SetCameraInputMove(struct FVector inputMove, float hzRate, float vtRate); // Function BattlePrototype.PlayerCameraComponent.SetCameraInputMove // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12691f0
	void SetCameraFieldOfView(float FOV); // Function BattlePrototype.PlayerCameraComponent.SetCameraFieldOfView // (Final|Native|Public|BlueprintCallable) // @ game+0x1269170
	void SetCameraDefault(float angleVt, float angleHz); // Function BattlePrototype.PlayerCameraComponent.SetCameraDefault // (Final|Native|Public|BlueprintCallable) // @ game+0x12690b0
	void SetCameraCollisionParameter(float camRadius, float distSpeedAccel, float distSpeedMax); // Function BattlePrototype.PlayerCameraComponent.SetCameraCollisionParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1268fa0
	void SetCameraByCameraActor(struct ACameraActor* pCamActor, bool bPitch, float BlendTime, enum class EViewTargetBlendFunction BlendFunc, float BlendExp); // Function BattlePrototype.PlayerCameraComponent.SetCameraByCameraActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1268e10
	void SetCameraActionReset(bool Flag, float LerpTime, float keepTime); // Function BattlePrototype.PlayerCameraComponent.SetCameraActionReset // (Final|Native|Public|BlueprintCallable) // @ game+0x1268d10
	void SetBattleCamera(bool bSign, bool bLerp); // Function BattlePrototype.PlayerCameraComponent.SetBattleCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1268c40
	void SetAttentionCameraOption(bool bFixAngleVt, float fixAngleVt, bool bOffsetDistHz, float offsetDistHz); // Function BattlePrototype.PlayerCameraComponent.SetAttentionCameraOption // (Final|Native|Public|BlueprintCallable) // @ game+0x1268ae0
	void SetAttentionCamera(bool Flag, bool bLookAtActor, struct FVector lookAtPos, struct AActor* pTgtActor, struct UCurveFloat* pActorCurve, bool ChangeFov, float tgtFov, struct UCurveFloat* pFovCurve); // Function BattlePrototype.PlayerCameraComponent.SetAttentionCamera // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1268870
	void SetAssistRootHeightParam(float heightDistY, float heightDistK, float minDist, float maxDist, float heightAngleY, float heightAngleK, float minAngle, float maxAngle); // Function BattlePrototype.PlayerCameraComponent.SetAssistRootHeightParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1268600
	void SetAssistRootHeight(bool Flag); // Function BattlePrototype.PlayerCameraComponent.SetAssistRootHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x1268570
	void SetAssistKeepAngle(bool bFlag); // Function BattlePrototype.PlayerCameraComponent.SetAssistKeepAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x12684e0
	void SetAreaTriggerInfo(struct FCameraTriggerInfo triggerInfo, bool bLerp); // Function BattlePrototype.PlayerCameraComponent.SetAreaTriggerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x12683d0
	void SetAreaChangeSkipLerp(bool Flag, struct FString refName); // Function BattlePrototype.PlayerCameraComponent.SetAreaChangeSkipLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x12682a0
	void ResetTriggerInfoLerp(); // Function BattlePrototype.PlayerCameraComponent.ResetTriggerInfoLerp // (Final|Native|Public|BlueprintCallable) // @ game+0x1268280
	void ResetTriggerInfo(); // Function BattlePrototype.PlayerCameraComponent.ResetTriggerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1268260
	void ResetSlopeAssist(); // Function BattlePrototype.PlayerCameraComponent.ResetSlopeAssist // (Final|Native|Public|BlueprintCallable) // @ game+0x1268240
	void ResetLockOnRotateSpeedRate(); // Function BattlePrototype.PlayerCameraComponent.ResetLockOnRotateSpeedRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1268220
	void ResetLockEnemyPos(); // Function BattlePrototype.PlayerCameraComponent.ResetLockEnemyPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1268200
	void ResetCameraHz(float LerpTime, bool bUpdateAngleHz, bool bSkipCheck); // Function BattlePrototype.PlayerCameraComponent.ResetCameraHz // (Final|Native|Public|BlueprintCallable) // @ game+0x12680f0
	void ResetCamera(float LerpTime, bool bUpdateAngleHz, bool bSkipCheck); // Function BattlePrototype.PlayerCameraComponent.ResetCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1267fe0
	void PrevUpdateUniqueObjectCamera(); // Function BattlePrototype.PlayerCameraComponent.PrevUpdateUniqueObjectCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1267fc0
	void PrevAsyncSlopeAssist(); // Function BattlePrototype.PlayerCameraComponent.PrevAsyncSlopeAssist // (Final|Native|Public|BlueprintCallable) // @ game+0x1267fa0
	void PostUpdateUniqueObjectCamera(); // Function BattlePrototype.PlayerCameraComponent.PostUpdateUniqueObjectCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1267f80
	bool isOptionSpinMoveInputEnable(); // Function BattlePrototype.PlayerCameraComponent.isOptionSpinMoveInputEnable // (Final|Native|Private|BlueprintCallable) // @ game+0x126c250
	bool isOptionSpinMoveDecelEnable(); // Function BattlePrototype.PlayerCameraComponent.isOptionSpinMoveDecelEnable // (Final|Native|Private|BlueprintCallable) // @ game+0x126c220
	bool IsMaleOwner(); // Function BattlePrototype.PlayerCameraComponent.IsMaleOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x1267f50
	void Initialize(); // Function BattlePrototype.PlayerCameraComponent.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	struct FRotator GetRootActorRotation(bool bSkipCheck); // Function BattlePrototype.PlayerCameraComponent.GetRootActorRotation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1267e70
	bool GetRootActorMeshComponent(); // Function BattlePrototype.PlayerCameraComponent.GetRootActorMeshComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1267e40
	struct FVector GetRootActorLocation(bool bSkipCheck); // Function BattlePrototype.PlayerCameraComponent.GetRootActorLocation // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1267d90
	enum class EPlayerCameraMode GetPlayerCameraMode(); // Function BattlePrototype.PlayerCameraComponent.GetPlayerCameraMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1267d70
	struct FVector GetLockRootPos(bool bLockCheck); // Function BattlePrototype.PlayerCameraComponent.GetLockRootPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1267cc0
	float GetLockOnReturnAngleHz(); // Function BattlePrototype.PlayerCameraComponent.GetLockOnReturnAngleHz // (Final|Native|Public|BlueprintCallable) // @ game+0x1267c90
	float GetLockOnLookAtObjRate(); // Function BattlePrototype.PlayerCameraComponent.GetLockOnLookAtObjRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1267c60
	struct FVector GetLockEnemyPos(); // Function BattlePrototype.PlayerCameraComponent.GetLockEnemyPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1267c20
	struct FRotator GetCameraRotation(); // Function BattlePrototype.PlayerCameraComponent.GetCameraRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1267be0
	bool GetCameraPreset(enum class EPlayerCameraPreset PresetName, struct FPlayerCameraPreset dstPreset, bool bOffset); // Function BattlePrototype.PlayerCameraComponent.GetCameraPreset // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1267a90
	float GetCameraLockOnLerpRate(); // Function BattlePrototype.PlayerCameraComponent.GetCameraLockOnLerpRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1267a60
	struct FVector GetCameraLocation(); // Function BattlePrototype.PlayerCameraComponent.GetCameraLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1267a20
	float GetCameraFieldOfView(); // Function BattlePrototype.PlayerCameraComponent.GetCameraFieldOfView // (Final|Native|Public|BlueprintCallable) // @ game+0x12679f0
	float GetAspectRatio(); // Function BattlePrototype.PlayerCameraComponent.GetAspectRatio // (Final|Native|Public|BlueprintCallable) // @ game+0x12678f0
	void EnableTemporaryParameter(float LerpTime, struct FString refName, enum class EPlayerCameraActionPriority prio, struct FVector Offset, bool bEnableRootOffset, bool bRootOffsetNoRotate, struct FVector rootOffset, bool bEnableDistance, float Distance, bool bEnableFov, float FOV, enum class EEasingFunc easeFunc, float easeBlendExp); // Function BattlePrototype.PlayerCameraComponent.EnableTemporaryParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12674f0
	void DisableTemporaryParameter(float LerpTime, struct FString refName, enum class EPlayerCameraActionPriority prio, enum class EEasingFunc easeFunc, float easeBlendExp); // Function BattlePrototype.PlayerCameraComponent.DisableTemporaryParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1267310
	void DebugSetRecordListShowIndex(int32_t commandNo); // Function BattlePrototype.PlayerCameraComponent.DebugSetRecordListShowIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1267290
	void DebugSetRecordListDraw(bool Flag); // Function BattlePrototype.PlayerCameraComponent.DebugSetRecordListDraw // (Final|Native|Public|BlueprintCallable) // @ game+0x1267200
	void DebugResetRecordList(); // Function BattlePrototype.PlayerCameraComponent.DebugResetRecordList // (Final|Native|Public|BlueprintCallable) // @ game+0x12671e0
	void DebugInitRecordList(struct TArray<float> Radius, struct TArray<struct FColor> Color); // Function BattlePrototype.PlayerCameraComponent.DebugInitRecordList // (Final|Native|Public|BlueprintCallable) // @ game+0x1267070
	void DebugDrawRecordList(); // Function BattlePrototype.PlayerCameraComponent.DebugDrawRecordList // (Final|Native|Public|BlueprintCallable) // @ game+0x1267050
	void DebugDrawLockOnRotateSpeedRateLine(); // Function BattlePrototype.PlayerCameraComponent.DebugDrawLockOnRotateSpeedRateLine // (Final|Native|Private|BlueprintCallable) // @ game+0x1267030
	void DebugDrawLockOnReturnLine(); // Function BattlePrototype.PlayerCameraComponent.DebugDrawLockOnReturnLine // (Final|Native|Private|BlueprintCallable) // @ game+0x1267010
	void DebugAddRecordListCamPos(struct FVector posCam); // Function BattlePrototype.PlayerCameraComponent.DebugAddRecordListCamPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1266ea0
	void DebugAddRecordList(int32_t posidx, int32_t lineIdx, struct FVector value0, struct FVector value1); // Function BattlePrototype.PlayerCameraComponent.DebugAddRecordList // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1266d30
	struct FVector CheckRootPos(struct FVector posRoot, bool bDebugDraw); // Function BattlePrototype.PlayerCameraComponent.CheckRootPos // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1266c10
	bool CheckRootOffsetHz(); // Function BattlePrototype.PlayerCameraComponent.CheckRootOffsetHz // (Final|Native|Protected|BlueprintCallable) // @ game+0x1266be0
	float CalcUniqueObjectPlayerLerpAngle(struct FVector posCam, struct FVector posPly); // Function BattlePrototype.PlayerCameraComponent.CalcUniqueObjectPlayerLerpAngle // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1266af0
	void CalcDefaultCameraLocationRotation(struct FVector rootPos, struct FRotator rootRot, struct FVector camPos, struct FRotator camRot); // Function BattlePrototype.PlayerCameraComponent.CalcDefaultCameraLocationRotation // (Native|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1266950
	void CalcAngleVtDistRate(); // Function BattlePrototype.PlayerCameraComponent.CalcAngleVtDistRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1266930
	void ApplyTriggerInfo(struct FCameraTriggerInfo triggerInfo); // Function BattlePrototype.PlayerCameraComponent.ApplyTriggerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1266840
	void ApplyCameraPreset(struct FPlayerCameraPreset Preset); // Function BattlePrototype.PlayerCameraComponent.ApplyCameraPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x1266680
};

// Class BattlePrototype.PlayerCopyInterface
// Size: 0x28 (Inherited: 0x28)
struct UPlayerCopyInterface : UInterface {

	bool IsPlayerCopy(); // Function BattlePrototype.PlayerCopyInterface.IsPlayerCopy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsExistPlayerCopy(); // Function BattlePrototype.PlayerCopyInterface.IsExistPlayerCopy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.PlayerDamageReactionInfoBase
// Size: 0x110 (Inherited: 0xc0)
struct UPlayerDamageReactionInfoBase : UActorComponent {
	struct ARSCharacterBase* OwnerCharacter; // 0xc0(0x08)
	struct UPlayerScriptComponent* OwnerPlayerScript; // 0xc8(0x08)
	enum class EPlayerDamageKind damageKind; // 0xd0(0x01)
	enum class EPlayerDamageKind DamageKindNow; // 0xd1(0x01)
	char pad_D2[0x2]; // 0xd2(0x02)
	struct FVector DamageDir; // 0xd4(0x0c)
	bool bAddDamage; // 0xe0(0x01)
	char pad_E1[0x3]; // 0xe1(0x03)
	struct TWeakObjectPtr<struct AActor> DamageAttacker; // 0xe4(0x08)
	struct TWeakObjectPtr<struct AActor> attacker; // 0xec(0x08)
	enum class HCHitStopCauseType HitStopCauseType; // 0xf4(0x01)
	char pad_F5[0x3]; // 0xf5(0x03)
	float FloatingPower; // 0xf8(0x04)
	struct FRotator FloatingAngle; // 0xfc(0x0c)
	enum class HCSkillAttackType AttackType; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	int32_t BadStateFlag; // 0x10c(0x04)

	void UpdateDamageReactionCPP(struct FHCHitResult HitResult); // Function BattlePrototype.PlayerDamageReactionInfoBase.UpdateDamageReactionCPP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12701d0
	bool StartEnpcDamageMove_BPImplement(struct FVector DamageDir, float Power, bool DeadMove); // Function BattlePrototype.PlayerDamageReactionInfoBase.StartEnpcDamageMove_BPImplement // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1685580
	bool StartEnemyAddDamageShake_BPImplement(bool bTriggerAttack); // Function BattlePrototype.PlayerDamageReactionInfoBase.StartEnemyAddDamageShake_BPImplement // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool IsKnockbackLongNowCPP(); // Function BattlePrototype.PlayerDamageReactionInfoBase.IsKnockbackLongNowCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x12701a0
	bool IsExistDamageCPP(); // Function BattlePrototype.PlayerDamageReactionInfoBase.IsExistDamageCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270170
	bool IsAttackerPlayerCPP(); // Function BattlePrototype.PlayerDamageReactionInfoBase.IsAttackerPlayerCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x1270140
	bool IsAerialDamageCPP(); // Function BattlePrototype.PlayerDamageReactionInfoBase.IsAerialDamageCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1270110
	bool CheckFinishMetamorphosis_BPImplement(struct UPlayerENpcBaseComponent* ENpcComp, enum class EPlayerDamageKind InDamageKind, bool bFront); // Function BattlePrototype.PlayerDamageReactionInfoBase.CheckFinishMetamorphosis_BPImplement // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool CheckBadStateDamageCPP(int32_t Flag, enum class EHCBadState BadState); // Function BattlePrototype.PlayerDamageReactionInfoBase.CheckBadStateDamageCPP // (Final|Native|Protected|BlueprintCallable) // @ game+0x1270050
	bool BrainCrashAccess_CallFromCPP(); // Function BattlePrototype.PlayerDamageReactionInfoBase.BrainCrashAccess_CallFromCPP // (Event|Protected|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.HardenStartParameter
// Size: 0x40 (Inherited: 0x30)
struct UHardenStartParameter : UDataAsset {
	struct FLinearColor EmissiveColor; // 0x30(0x10)
};

// Class BattlePrototype.PlayerDriveComponent
// Size: 0x2c8 (Inherited: 0xc0)
struct UPlayerDriveComponent : UActorComponent {
	struct FMulticastInlineDelegate DispatchBeginDrive; // 0xc0(0x10)
	struct FMulticastInlineDelegate DispatchEndDrive; // 0xd0(0x10)
	struct FMulticastInlineDelegate DispatchSetDriveGauge; // 0xe0(0x10)
	struct FMulticastInlineDelegate DispatchDriveGaugeMax; // 0xf0(0x10)
	struct FMulticastInlineDelegate DispatchRegenerateHP; // 0x100(0x10)
	struct FMulticastInlineDelegate DispatchNotifyBrainFieldStock; // 0x110(0x10)
	struct FMulticastInlineDelegate DispatchNotifyParameterMax; // 0x120(0x10)
	char pad_130[0x60]; // 0x130(0x60)
	struct TArray<struct FName> DisableDriveClaimantList; // 0x190(0x10)
	char pad_1A0[0x128]; // 0x1a0(0x128)

	void UpdateNpcDriveInterval(float DeltaSeconds); // Function BattlePrototype.PlayerDriveComponent.UpdateNpcDriveInterval // (Final|Native|Private) // @ game+0x1276d50
	void UpdateDriveTick(float DeltaSeconds); // Function BattlePrototype.PlayerDriveComponent.UpdateDriveTick // (Final|Native|Private) // @ game+0x1276cd0
	void SetSASCharge(bool bEnable); // Function BattlePrototype.PlayerDriveComponent.SetSASCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x12767e0
	void SetRegenerateInterval(float Interval); // Function BattlePrototype.PlayerDriveComponent.SetRegenerateInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x12766a0
	void SetRegenerateHPRate(float Rate); // Function BattlePrototype.PlayerDriveComponent.SetRegenerateHPRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1276620
	void SetRegenerate(bool bEnable); // Function BattlePrototype.PlayerDriveComponent.SetRegenerate // (Final|Native|Public|BlueprintCallable) // @ game+0x1276590
	void SetRecoveryBadStatus(bool bEnable); // Function BattlePrototype.PlayerDriveComponent.SetRecoveryBadStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1165f80
	void SetPauseDriveTimer(bool bPause); // Function BattlePrototype.PlayerDriveComponent.SetPauseDriveTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1276500
	void SetNpcDriveData(struct FNpcDriveData InData); // Function BattlePrototype.PlayerDriveComponent.SetNpcDriveData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1276460
	void SetExtendTimeBrainCrash(float ExtendTime); // Function BattlePrototype.PlayerDriveComponent.SetExtendTimeBrainCrash // (Final|Native|Public|BlueprintCallable) // @ game+0x12762a0
	void SetDriveParameter(struct FPlayerDriveParameter Parameter); // Function BattlePrototype.PlayerDriveComponent.SetDriveParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1276110
	void SetDriveGaugeParameter(struct FPlayerDriveGaugeParameter Parameter); // Function BattlePrototype.PlayerDriveComponent.SetDriveGaugeParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1275fa0
	void SetDriveGaugeIncreaseRate(float Rate); // Function BattlePrototype.PlayerDriveComponent.SetDriveGaugeIncreaseRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1275f20
	void SetDriveGaugeDirect(float Value); // Function BattlePrototype.PlayerDriveComponent.SetDriveGaugeDirect // (Final|Native|Public|BlueprintCallable) // @ game+0x1275ea0
	void SetDriveCommonParameter(struct FPlayerDriveCommonParameter Parameter); // Function BattlePrototype.PlayerDriveComponent.SetDriveCommonParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1275d70
	void RestrictDriveBegin(bool bRestrict); // Function BattlePrototype.PlayerDriveComponent.RestrictDriveBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x1275b40
	void ResetNpcDriveInterval(); // Function BattlePrototype.PlayerDriveComponent.ResetNpcDriveInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x1275b20
	void ResetDriveGauge(); // Function BattlePrototype.PlayerDriveComponent.ResetDriveGauge // (Final|Native|Public|BlueprintCallable) // @ game+0x12759f0
	void ResetBrainFieldCount(); // Function BattlePrototype.PlayerDriveComponent.ResetBrainFieldCount // (Final|Native|Public|BlueprintCallable) // @ game+0x12759b0
	void ReserveNpcDrive(); // Function BattlePrototype.PlayerDriveComponent.ReserveNpcDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x1275990
	void OnNotifyDriveEvent(enum class ENotifyDriveEvent Type, int32_t Param); // Function BattlePrototype.PlayerDriveComponent.OnNotifyDriveEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1275850
	bool IsSASCharge(); // Function BattlePrototype.PlayerDriveComponent.IsSASCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12750a0
	bool IsReservedNpcDrive(); // Function BattlePrototype.PlayerDriveComponent.IsReservedNpcDrive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274e80
	bool IsRecoveryBadStatus(); // Function BattlePrototype.PlayerDriveComponent.IsRecoveryBadStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274c10
	bool IsEnableDriveNpc(); // Function BattlePrototype.PlayerDriveComponent.IsEnableDriveNpc // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274660
	bool IsEnableDrive(); // Function BattlePrototype.PlayerDriveComponent.IsEnableDrive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274630
	bool IsEnableBrainField(); // Function BattlePrototype.PlayerDriveComponent.IsEnableBrainField // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274600
	bool IsDriveMode(); // Function BattlePrototype.PlayerDriveComponent.IsDriveMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12745d0
	bool IsDebugInfiniteDrive(); // Function BattlePrototype.PlayerDriveComponent.IsDebugInfiniteDrive // (Event|Protected|BlueprintEvent|Const) // @ game+0x1685580
	bool IsDebugAlwaysDrive(); // Function BattlePrototype.PlayerDriveComponent.IsDebugAlwaysDrive // (Event|Protected|BlueprintEvent|Const) // @ game+0x1685580
	float GetPsychicWaitGaugeRate(); // Function BattlePrototype.PlayerDriveComponent.GetPsychicWaitGaugeRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274460
	float GetPsychicGaugeRate(); // Function BattlePrototype.PlayerDriveComponent.GetPsychicGaugeRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x6933f0
	float GetParameterMaxTime(); // Function BattlePrototype.PlayerDriveComponent.GetParameterMaxTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12742b0
	float GetNpcDriveIntervalTimerRemain(); // Function BattlePrototype.PlayerDriveComponent.GetNpcDriveIntervalTimerRemain // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274280
	float GetMoveSpeedRate(); // Function BattlePrototype.PlayerDriveComponent.GetMoveSpeedRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274110
	float GetMaxDriveTime(); // Function BattlePrototype.PlayerDriveComponent.GetMaxDriveTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12740e0
	float GetMaxDriveGauge(); // Function BattlePrototype.PlayerDriveComponent.GetMaxDriveGauge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12740b0
	float GetDriveTimerRemain(); // Function BattlePrototype.PlayerDriveComponent.GetDriveTimerRemain // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273ea0
	float GetDriveGaugeRate(); // Function BattlePrototype.PlayerDriveComponent.GetDriveGaugeRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273e70
	float GetDriveGauge(); // Function BattlePrototype.PlayerDriveComponent.GetDriveGauge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273e40
	float GetDisableDriveLastEnemyHpRate(); // Function BattlePrototype.PlayerDriveComponent.GetDisableDriveLastEnemyHpRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273e10
	float GetCurrentParameterRate(); // Function BattlePrototype.PlayerDriveComponent.GetCurrentParameterRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273de0
	float GetCurrentDriveTimeRate(); // Function BattlePrototype.PlayerDriveComponent.GetCurrentDriveTimeRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273db0
	float GetCurrentDriveTime(); // Function BattlePrototype.PlayerDriveComponent.GetCurrentDriveTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11f3550
	float GetCrashRate(); // Function BattlePrototype.PlayerDriveComponent.GetCrashRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273d80
	int32_t GetBrainFieldCount(); // Function BattlePrototype.PlayerDriveComponent.GetBrainFieldCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273d50
	float GetAttackRate(); // Function BattlePrototype.PlayerDriveComponent.GetAttackRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273d20
	float GetAttackAnimationPlayRate(); // Function BattlePrototype.PlayerDriveComponent.GetAttackAnimationPlayRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1261980
	void ForceBeginNpcDriveInterval(); // Function BattlePrototype.PlayerDriveComponent.ForceBeginNpcDriveInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x1273ce0
	void EndDriveMode(bool bInterruption, bool bLocationChange); // Function BattlePrototype.PlayerDriveComponent.EndDriveMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1273c10
	void DisableDrive(bool bDisable, struct FName ClaimantName); // Function BattlePrototype.PlayerDriveComponent.DisableDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x1273b50
	void DirectDriveTimeSetting(float CurrentTime, float ExtendTime); // Function BattlePrototype.PlayerDriveComponent.DirectDriveTimeSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1273a90
	void ClearReserveNpcDrive(); // Function BattlePrototype.PlayerDriveComponent.ClearReserveNpcDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x1273a70
	bool CheckNpcDrive(enum class ENpcDriveCheckType CheckType, int32_t bondsLevel, float PlayerDriveRate, float PlayerHpRate); // Function BattlePrototype.PlayerDriveComponent.CheckNpcDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x1273850
	void BeginDriveTimer(); // Function BattlePrototype.PlayerDriveComponent.BeginDriveTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1273810
	void BeginDriveMode(bool bDelayTimerTick, bool bDisableTimer, bool bNpcDrive); // Function BattlePrototype.PlayerDriveComponent.BeginDriveMode // (Final|Native|Public|BlueprintCallable) // @ game+0x12736f0
	void AddDefeatedEnemy(int32_t defeatedNum); // Function BattlePrototype.PlayerDriveComponent.AddDefeatedEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x12734e0
	void AddBrainFieldCount(bool bItemUse, bool bNoEffect); // Function BattlePrototype.PlayerDriveComponent.AddBrainFieldCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1273410
	void AddBrainCrashDefeatedEnemy(int32_t defeatedNum, bool bUniqueBrainCrash); // Function BattlePrototype.PlayerDriveComponent.AddBrainCrashDefeatedEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x1273350
};

// Class BattlePrototype.PlayerENpcBaseComponent
// Size: 0xc8 (Inherited: 0xc0)
struct UPlayerENpcBaseComponent : UActorComponent {
	bool bReactionChance; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)

	bool StartReactionChance_CallFromCPP(); // Function BattlePrototype.PlayerENpcBaseComponent.StartReactionChance_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool SetHitTrigger_CallFromCPP(bool bIsHitTrigger); // Function BattlePrototype.PlayerENpcBaseComponent.SetHitTrigger_CallFromCPP // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsReactionChanceCPP(); // Function BattlePrototype.PlayerENpcBaseComponent.IsReactionChanceCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11e3a00
};

// Class BattlePrototype.PlayerHeightGradationComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UPlayerHeightGradationComponent : UActorComponent {
	char pad_C0[0x10]; // 0xc0(0x10)

	void ResetGradation(struct UMeshComponent* Mesh, struct TArray<struct FHeightGradationSettings> SettingsArray); // Function BattlePrototype.PlayerHeightGradationComponent.ResetGradation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1275a10
	void AddGradation(struct UMeshComponent* Mesh, struct TArray<struct FHeightGradationSettings> SettingsArray); // Function BattlePrototype.PlayerHeightGradationComponent.AddGradation // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1273560
};

// Class BattlePrototype.PlayerInputBaseComponent
// Size: 0x540 (Inherited: 0xc0)
struct UPlayerInputBaseComponent : UActorComponent {
	struct FMulticastInlineDelegate DispatchTrigger_Attack; // 0xc0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_AttackLongPress; // 0xd0(0x10)
	struct FMulticastInlineDelegate DispatchRelease_Attack; // 0xe0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_AttackSub; // 0xf0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_AttackSubLongPress; // 0x100(0x10)
	struct FMulticastInlineDelegate DispatchRelease_AttackSub; // 0x110(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_LaunchAttack; // 0x120(0x10)
	struct FMulticastInlineDelegate DispatchRelease_LaunchAttack; // 0x130(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_BackStepAttack; // 0x140(0x10)
	struct FMulticastInlineDelegate DispatchRelease_BackStepAttack; // 0x150(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_Dodge; // 0x160(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_Jump; // 0x170(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_TargetLock; // 0x180(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_TargetChange; // 0x190(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_TargetChangeLeft; // 0x1a0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_TargetChangeRight; // 0x1b0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_ReadySAS; // 0x1c0(0x10)
	struct FMulticastInlineDelegate DispatchRelease_ReadySAS; // 0x1d0(0x10)
	struct FMulticastInlineDelegate Dispatch_ReadySAS; // 0x1e0(0x10)
	struct FMulticastInlineDelegate Dispatch_SasSelectSlow; // 0x1f0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_UpSAS; // 0x200(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_DownSAS; // 0x210(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_LeftSAS; // 0x220(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_RightSAS; // 0x230(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_OffSAS; // 0x240(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_SASHologramAttack; // 0x250(0x10)
	struct FMulticastInlineDelegate DispatchRelease_SASHologramAttack; // 0x260(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_UpCombinationVision; // 0x270(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_DownCombinationVision; // 0x280(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_LeftCombinationVision; // 0x290(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_RightCombinationVision; // 0x2a0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_ChangeSASSet; // 0x2b0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_Psychic; // 0x2c0(0x10)
	struct FMulticastInlineDelegate DispatchRelease_Psychic; // 0x2d0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_SpecialPsychic; // 0x2e0(0x10)
	struct FMulticastInlineDelegate DispatchRelease_SpecialPsychic; // 0x2f0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_BrainFieldPsychicUp; // 0x300(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_BrainFieldPsychicLeft; // 0x310(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_BrainFieldPsychicRight; // 0x320(0x10)
	struct FMulticastInlineDelegate DispatchRelease_BrainFieldPsychicRight; // 0x330(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_PsychicField; // 0x340(0x10)
	struct FMulticastInlineDelegate DispatchRelease_PsychicField; // 0x350(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_BrainCrash; // 0x360(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_MapGimmick; // 0x370(0x10)
	struct FMulticastInlineDelegate DispatchRelease_MapGimmick; // 0x380(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_BrainField; // 0x390(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_Intercept; // 0x3a0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_UseItem; // 0x3b0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_ItemSelectLeft; // 0x3c0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_ItemSelectRight; // 0x3d0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_Ressurect; // 0x3e0(0x10)
	struct FMulticastInlineDelegate DispatchRelease_Ressurect; // 0x3f0(0x10)
	struct FMulticastInlineDelegate DispatchTrigger_ResetCamera; // 0x400(0x10)
	float LONG_ATTACK_INPUT_TIME; // 0x410(0x04)
	float LONG_ATTACK_INPUT_TIME_AERIAL; // 0x414(0x04)
	float DOUBLE_INPUT_INTERVAL; // 0x418(0x04)
	float SAS_SELECT_SLOW_DELAY_TIME; // 0x41c(0x04)
	float SAS_SELECT_SLOW_TIME; // 0x420(0x04)
	char pad_424[0x11c]; // 0x424(0x11c)

	void Update(float DeltaSeconds); // Function BattlePrototype.PlayerInputBaseComponent.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x1276c50
	void TutorialRestrictPsychic(bool bRestrict); // Function BattlePrototype.PlayerInputBaseComponent.TutorialRestrictPsychic // (Final|Native|Public|BlueprintCallable) // @ game+0x1276bc0
	void TutorialRestrictLaunchAttack(bool bRestrict); // Function BattlePrototype.PlayerInputBaseComponent.TutorialRestrictLaunchAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x1276b30
	void TutorialRestrictAttackSub(bool bRestrict); // Function BattlePrototype.PlayerInputBaseComponent.TutorialRestrictAttackSub // (Final|Native|Public|BlueprintCallable) // @ game+0x1276aa0
	void TutorialRestrictAttackAll(bool bRestrict); // Function BattlePrototype.PlayerInputBaseComponent.TutorialRestrictAttackAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1276a10
	void SubRestriction(enum class EPlayerInputRestrictionType Restriction); // Function BattlePrototype.PlayerInputBaseComponent.SubRestriction // (Final|Native|Public|BlueprintCallable) // @ game+0x1276990
	void SetTutorial(bool bTutorial); // Function BattlePrototype.PlayerInputBaseComponent.SetTutorial // (Final|Native|Public|BlueprintCallable) // @ game+0x1276900
	void SetTalkMode(bool bTalk); // Function BattlePrototype.PlayerInputBaseComponent.SetTalkMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1276870
	void SetRightStick(float X, float Y); // Function BattlePrototype.PlayerInputBaseComponent.SetRightStick // (Final|Native|Public|BlueprintCallable) // @ game+0x1276720
	void SetLeftStick(float X, float Y); // Function BattlePrototype.PlayerInputBaseComponent.SetLeftStick // (Final|Native|Public|BlueprintCallable) // @ game+0x12763a0
	void SetInputType(enum class EPlayerInputType Type); // Function BattlePrototype.PlayerInputBaseComponent.SetInputType // (Final|Native|Public|BlueprintCallable) // @ game+0x1276320
	void SetEnableSasSelectSlow(bool bEnable); // Function BattlePrototype.PlayerInputBaseComponent.SetEnableSasSelectSlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1276210
	void SetButton(enum class ERSGamepadInputName Button); // Function BattlePrototype.PlayerInputBaseComponent.SetButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1275cf0
	void SetBrainFieldMode(bool bBrainField); // Function BattlePrototype.PlayerInputBaseComponent.SetBrainFieldMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1275c60
	void SetAI(bool bAI); // Function BattlePrototype.PlayerInputBaseComponent.SetAI // (Final|Native|Public|BlueprintCallable) // @ game+0x1275bd0
	void ResetChangeSasSetDoubleInput(); // Function BattlePrototype.PlayerInputBaseComponent.ResetChangeSasSetDoubleInput // (Final|Native|Public|BlueprintCallable) // @ game+0x12759d0
	void ReleaseButton(enum class ERSGamepadInputName Button); // Function BattlePrototype.PlayerInputBaseComponent.ReleaseButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1275910
	bool IsTrgUpSAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgUpSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275820
	bool IsTrgUpCombinationVision(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgUpCombinationVision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12757f0
	bool IsTrgUniqueTriangle(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgUniqueTriangle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275250
	bool IsTrgUniqueDischarge(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgUniqueDischarge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12757c0
	bool IsTrgUniqueCircle(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgUniqueCircle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275790
	bool IsTrgUniqueCharge(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgUniqueCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12755e0
	bool IsTrgTargetLock(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgTargetLock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275760
	bool IsTrgTargetChangeRight(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgTargetChangeRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275730
	bool IsTrgTargetChangeLeft(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgTargetChangeLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275700
	bool IsTrgTargetChange(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgTargetChange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12756d0
	bool IsTrgSASOffAll(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgSASOffAll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12756a0
	bool IsTrgSASHologramAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgSASHologramAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275670
	bool IsTrgRightSAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgRightSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275640
	bool IsTrgRightCombinationVision(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgRightCombinationVision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275610
	bool IsTrgRideAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgRideAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12755e0
	bool IsTrgRideAccel(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgRideAccel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12755b0
	bool IsTrgResurrect(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgResurrect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275580
	bool IsTrgResetCamera(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgResetCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275550
	bool IsTrgRecovery(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgRecovery // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275520
	bool IsTrgReadySAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgReadySAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12754f0
	bool IsTrgPsychicObjectUnique(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgPsychicObjectUnique // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275250
	bool IsTrgPsychicObjectNormal(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgPsychicObjectNormal // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275280
	bool IsTrgMapGimmick(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgMapGimmick // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12754c0
	bool IsTrgLeftSAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgLeftSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275490
	bool IsTrgLeftCombinationVision(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgLeftCombinationVision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275460
	bool IsTrgLaunchAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgLaunchAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275430
	bool IsTrgJump(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275400
	bool IsTrgItemUse(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgItemUse // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12753d0
	bool IsTrgItemSelectRight(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgItemSelectRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12753a0
	bool IsTrgItemSelectLeft(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgItemSelectLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275370
	bool IsTrgIntercept(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgIntercept // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275280
	bool IsTrgDownSAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgDownSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275340
	bool IsTrgDownCombinationVision(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgDownCombinationVision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275310
	bool IsTrgDodge(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12752e0
	bool IsTrgChangeSASSet(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgChangeSASSet // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12752b0
	bool IsTrgBrainFieldPsychicUp(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgBrainFieldPsychicUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275280
	bool IsTrgBrainFieldPsychicRight(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgBrainFieldPsychicRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275250
	bool IsTrgBrainFieldPsychicLeft(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgBrainFieldPsychicLeft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275220
	bool IsTrgBrainField(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgBrainField // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12751f0
	bool IsTrgBrainCrash(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgBrainCrash // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12751c0
	bool IsTrgBackStepAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgBackStepAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsTrgAttackSub(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgAttackSub // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275190
	bool IsTrgAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsTrgAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275160
	bool IsTrg(enum class ERSGamepadInputName Button); // Function BattlePrototype.PlayerInputBaseComponent.IsTrg // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12750d0
	bool IsRightStickZero(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.IsRightStickZero // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1275010
	bool IsRightStickInput(float Power, bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.IsRightStickInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274f40
	bool IsRestriction(enum class EPlayerInputRestrictionType Restriction); // Function BattlePrototype.PlayerInputBaseComponent.IsRestriction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274eb0
	bool IsReleaseSASHologramAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseSASHologramAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274e50
	bool IsReleaseReadySAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseReadySAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274e20
	bool IsReleaseMapGimmick(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseMapGimmick // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274df0
	bool IsReleaseLaunchAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseLaunchAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274dc0
	bool IsReleaseJump(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274d90
	bool IsReleaseDodge(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274d60
	bool IsReleaseBrainFieldPsychicRight(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseBrainFieldPsychicRight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274d30
	bool IsReleaseBackStepAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseBackStepAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool IsReleaseAttackSub(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseAttackSub // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274d00
	bool IsReleaseAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsReleaseAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274cd0
	bool IsRelease(enum class ERSGamepadInputName Button); // Function BattlePrototype.PlayerInputBaseComponent.IsRelease // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274c40
	bool IsPrecedeInputUseItem(); // Function BattlePrototype.PlayerInputBaseComponent.IsPrecedeInputUseItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274be0
	bool IsPrecedeInputPsychic(); // Function BattlePrototype.PlayerInputBaseComponent.IsPrecedeInputPsychic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274bb0
	bool IsPrecedeInputJump(); // Function BattlePrototype.PlayerInputBaseComponent.IsPrecedeInputJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274b80
	bool IsPrecedeInputDodge(); // Function BattlePrototype.PlayerInputBaseComponent.IsPrecedeInputDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274b50
	bool IsOnWakeUp(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnWakeUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274b20
	bool IsOnUniqueCircle(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnUniqueCircle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274af0
	bool IsOnUniqueCharge(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnUniqueCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274ac0
	bool IsOnRideAccel(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnRideAccel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274a90
	bool IsOnResurrect(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnResurrect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274a60
	bool IsOnReadyTargetChange(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnReadyTargetChange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274a30
	bool IsOnReadySAS(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnReadySAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274a00
	bool IsOnReadyCombinationVision(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnReadyCombinationVision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12749d0
	bool IsOnPsychicObjectUnique(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnPsychicObjectUnique // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12749a0
	bool IsOnJump(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274970
	bool IsOnDodge(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274940
	bool IsOnAttackSub(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnAttackSub // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274910
	bool IsOnAttack(); // Function BattlePrototype.PlayerInputBaseComponent.IsOnAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12748e0
	bool IsOn(enum class ERSGamepadInputName Button); // Function BattlePrototype.PlayerInputBaseComponent.IsOn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274850
	bool IsLeftStickZero(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.IsLeftStickZero // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12747c0
	bool IsLeftStickRun(); // Function BattlePrototype.PlayerInputBaseComponent.IsLeftStickRun // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274790
	bool IsLeftStickInput(float Power, bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.IsLeftStickInput // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12746c0
	bool IsKeyboard(); // Function BattlePrototype.PlayerInputBaseComponent.IsKeyboard // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274690
	enum class EPlayerInputSASReadyType GetSasReadyType(); // Function BattlePrototype.PlayerInputBaseComponent.GetSasReadyType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xcdd070
	float GetRightStickY(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.GetRightStickY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274530
	float GetRightStickX(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.GetRightStickX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274490
	float GetPrevLeftStickY(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.GetPrevLeftStickY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12743c0
	float GetPrevLeftStickX(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.GetPrevLeftStickX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274320
	struct FVector GetPrecedeInputDodgeStick(); // Function BattlePrototype.PlayerInputBaseComponent.GetPrecedeInputDodgeStick // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12742e0
	void GetMoveStick(float OutX, float OutY, float OutPower); // Function BattlePrototype.PlayerInputBaseComponent.GetMoveStick // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274140
	float GetLongPressAttackInputTime(); // Function BattlePrototype.PlayerInputBaseComponent.GetLongPressAttackInputTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274080
	float GetLeftStickY(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.GetLeftStickY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273fe0
	float GetLeftStickX(bool bRaw); // Function BattlePrototype.PlayerInputBaseComponent.GetLeftStickX // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273f40
	struct FVector2D GetLeftStickPrevInputDiff(); // Function BattlePrototype.PlayerInputBaseComponent.GetLeftStickPrevInputDiff // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1273f00
	enum class EPlayerInputType GetInputType(); // Function BattlePrototype.PlayerInputBaseComponent.GetInputType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1273ed0
	void ForceEndSasSelectSlow(); // Function BattlePrototype.PlayerInputBaseComponent.ForceEndSasSelectSlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1273d00
	void ClearPrecedeInputDodge(); // Function BattlePrototype.PlayerInputBaseComponent.ClearPrecedeInputDodge // (Final|Native|Public|BlueprintCallable) // @ game+0x1273a50
	void ClearPrecedeInput(); // Function BattlePrototype.PlayerInputBaseComponent.ClearPrecedeInput // (Final|Native|Public|BlueprintCallable) // @ game+0x1273a30
	void ClearInput(bool bButtonOnly); // Function BattlePrototype.PlayerInputBaseComponent.ClearInput // (Final|Native|Public|BlueprintCallable) // @ game+0x12739a0
	void CheckChangeSasSetOption(); // Function BattlePrototype.PlayerInputBaseComponent.CheckChangeSasSetOption // (Final|Native|Public|BlueprintCallable) // @ game+0x1273830
	void AddRestriction(enum class EPlayerInputRestrictionType Restriction); // Function BattlePrototype.PlayerInputBaseComponent.AddRestriction // (Final|Native|Public|BlueprintCallable) // @ game+0x1273670
};

// Class BattlePrototype.PlayerInterface
// Size: 0x28 (Inherited: 0x28)
struct UPlayerInterface : UInterface {

	void UpdateParameter(struct FCharactersParameterTable Table); // Function BattlePrototype.PlayerInterface.UpdateParameter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FPlayerInfo UpdateMenuParameter(struct FPlayerInfo CurrentParameter); // Function BattlePrototype.PlayerInterface.UpdateMenuParameter // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SpawnBattleParticle(struct FName ClaimantName); // Function BattlePrototype.PlayerInterface.SpawnBattleParticle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetStealthReactionInterval_CallFromCPP(); // Function BattlePrototype.PlayerInterface.SetStealthReactionInterval_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetSasStealth_CallFromCPP(bool stealth_on_in, bool hero_order_in, bool check_delay, bool check_ignore, bool no_sas_cancel_in); // Function BattlePrototype.PlayerInterface.SetSasStealth_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetReserveCoverDamage_CallFromCPP(bool Flag); // Function BattlePrototype.PlayerInterface.SetReserveCoverDamage_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerInputRestriction_CallFromCPP(enum class EPlayerInputRestrictionType Type, bool bRistriction); // Function BattlePrototype.PlayerInterface.SetPlayerInputRestriction_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetPlayerCamera(struct ACameraActor* pCameraActor, bool bPitch, float BlendTime, enum class EViewTargetBlendFunction BlendFunc, float BlendExp); // Function BattlePrototype.PlayerInterface.SetPlayerCamera // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class RSPartyPlayerKind SetPartyPlayerKind(enum class RSPartyPlayerKind kind); // Function BattlePrototype.PlayerInterface.SetPartyPlayerKind // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetMoveStickBack_CallFromCPP(bool bBack); // Function BattlePrototype.PlayerInterface.SetMoveStickBack_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetMoveMode_CallFromCPP(enum class EPlayerAIMoveModeCPP MoveModeCPP); // Function BattlePrototype.PlayerInterface.SetMoveMode_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetMaterialScalarParameterOther(struct FName ParamName, float Value); // Function BattlePrototype.PlayerInterface.SetMaterialScalarParameterOther // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetForceLockTargetSelf_CallFromCPP(); // Function BattlePrototype.PlayerInterface.SetForceLockTargetSelf_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEyeControlParameter(float Horizontal, float Vertical); // Function BattlePrototype.PlayerInterface.SetEyeControlParameter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEyeControlEnable(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.PlayerInterface.SetEyeControlEnable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEventWait_CallFromCPP(); // Function BattlePrototype.PlayerInterface.SetEventWait_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEventMove_CallFromCPP(struct TArray<struct FVector> pos_list_in, struct TArray<float> radius_list_in, bool Walk, bool bAfterWait); // Function BattlePrototype.PlayerInterface.SetEventMove_CallFromCPP // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEventEndDown(bool bFront); // Function BattlePrototype.PlayerInterface.SetEventEndDown // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEnableInputStick_CallFromCPP(bool bEnable); // Function BattlePrototype.PlayerInterface.SetEnableInputStick_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetBattleParticleType(enum class EPlayerBattleParticleType Type); // Function BattlePrototype.PlayerInterface.SetBattleParticleType // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetAIOrder(enum class EPlayerAIOrder plan); // Function BattlePrototype.PlayerInterface.SetAIOrder // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetAIMoveStick_CallFromCPP(bool bMoveStick); // Function BattlePrototype.PlayerInterface.SetAIMoveStick_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SearchAIPsychicObject_CallFromCPP(); // Function BattlePrototype.PlayerInterface.SearchAIPsychicObject_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ScaleMaxSpeed_CallFromCPP(float Scale, struct FName ClaimantName); // Function BattlePrototype.PlayerInterface.ScaleMaxSpeed_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RestoreMaxSpeed_CallFromCPP(struct FName ClaimantName); // Function BattlePrototype.PlayerInterface.RestoreMaxSpeed_CallFromCPP // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RestartBattleAI_CallFromCPP(); // Function BattlePrototype.PlayerInterface.RestartBattleAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetCoverDamagePlayer_CallFromCPP(); // Function BattlePrototype.PlayerInterface.ResetCoverDamagePlayer_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetBattleThink_CallFromCPP(); // Function BattlePrototype.PlayerInterface.ResetBattleThink_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetAnimLeftStickPower(); // Function BattlePrototype.PlayerInterface.ResetAnimLeftStickPower // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class RSAttackInputKind OverwriteAttackInputKindAI_CallFromCPP(enum class EPlayerAIBattleThinkTypeCPP Think, enum class RSAttackInputKind kind); // Function BattlePrototype.PlayerInterface.OverwriteAttackInputKindAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OpenBrainField(); // Function BattlePrototype.PlayerInterface.OpenBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnChangeBattleThink_CallFromCPP(enum class EPlayerAIBattleThinkTypeCPP Next, enum class EPlayerAIBattleThinkTypeCPP prev); // Function BattlePrototype.PlayerInterface.OnChangeBattleThink_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnAnimNotifyEnablePsychic(); // Function BattlePrototype.PlayerInterface.OnAnimNotifyEnablePsychic // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnAnimNotifyEnableAttack(); // Function BattlePrototype.PlayerInterface.OnAnimNotifyEnableAttack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OnAnimNotifyEnableAction(); // Function BattlePrototype.PlayerInterface.OnAnimNotifyEnableAction // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool NotifyResetBehaviorTree_CallFromCPP(); // Function BattlePrototype.PlayerInterface.NotifyResetBehaviorTree_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool NextBattleThink_CallFromCPP(); // Function BattlePrototype.PlayerInterface.NextBattleThink_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsUseItemThink_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsUseItemThink_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsUseAbleSASRecastGauge(enum class E_SASKindNative SasKind); // Function BattlePrototype.PlayerInterface.IsUseAbleSASRecastGauge // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsUseAbleCombinationVision(enum class E_SASKindNative InKind); // Function BattlePrototype.PlayerInterface.IsUseAbleCombinationVision // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsUniqueEffectiveSas_CallFromCPP(struct AActor* InAttackActor, float OutWinceRate, float OutKnockBackRate, float OutDownRate, float OutCrashRate); // Function BattlePrototype.PlayerInterface.IsUniqueEffectiveSas_CallFromCPP // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsUniqueConditionTransition_CallFromCPP(int32_t UniqueNo); // Function BattlePrototype.PlayerInterface.IsUniqueConditionTransition_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsSpecialDown_CallFromCPP(float OutSpDownWince); // Function BattlePrototype.PlayerInterface.IsSpecialDown_CallFromCPP // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsSelfRecovery_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsSelfRecovery_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsResetBehaviorTree_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsResetBehaviorTree_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsReactionChance_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsReactionChance_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsPsychicAble_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsPsychicAble_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsPlayerSuperArmor_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsPlayerSuperArmor_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPlayerStatusAI_CallFromCPP(enum class EPlayerCommonStatus Status); // Function BattlePrototype.PlayerInterface.IsPlayerStatusAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsOnReadySAS(); // Function BattlePrototype.PlayerInterface.IsOnReadySAS // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsMoveAble_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsMoveAble_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsMetalMode_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsMetalMode_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsLockTargetLostInterface(); // Function BattlePrototype.PlayerInterface.IsLockTargetLostInterface // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsLockTargetInterface(bool IsLockTarget); // Function BattlePrototype.PlayerInterface.IsLockTargetInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsJumpAble_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsJumpAble_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsInputSAS(enum class E_SASButton SASButton, bool IsInputSAS); // Function BattlePrototype.PlayerInterface.IsInputSAS // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsInputOverwriteENPCBrainField(); // Function BattlePrototype.PlayerInterface.IsInputOverwriteENPCBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsInputAI_UseItem_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsInputAI_UseItem_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsInputAI_Psychic_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsInputAI_Psychic_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsInputAI_Jump_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsInputAI_Jump_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsInputAI_Dodge_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsInputAI_Dodge_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsInputAI_Attack_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsInputAI_Attack_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsIgnoreStealthVelocity(); // Function BattlePrototype.PlayerInterface.IsIgnoreStealthVelocity // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEventWait_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEventWait_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEventMoveEnd_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEventMoveEnd_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEventMove_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEventMove_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnemyPlayer_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEnemyPlayer_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnemyForceWait_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEnemyForceWait_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnableSasSelectSlow(); // Function BattlePrototype.PlayerInterface.IsEnableSasSelectSlow // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableSASHologramAttack(enum class ESASHologramAttackTiming Timing); // Function BattlePrototype.PlayerInterface.IsEnableSASHologramAttack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableSASEffectHologram(enum class EPlayerID playerId); // Function BattlePrototype.PlayerInterface.IsEnableSASEffectHologram // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsEnableSASCoverDamageFromPlayerID(enum class EPlayerID CoverPlayerID); // Function BattlePrototype.PlayerInterface.IsEnableSASCoverDamageFromPlayerID // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableCheckActionIcon(); // Function BattlePrototype.PlayerInterface.IsEnableCheckActionIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableBrainCrash_Native(); // Function BattlePrototype.PlayerInterface.IsEnableBrainCrash_Native // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnableBackStepAttack(); // Function BattlePrototype.PlayerInterface.IsEnableBackStepAttack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableActionJump_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEnableActionJump_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnableActionDodge_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEnableActionDodge_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEnableActionCounter_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsEnableActionCounter_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsDying_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsDying_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDodgeAble_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsDodgeAble_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDamageCollisionInvincible_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsDamageCollisionInvincible_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsControlAI_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsControlAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void IsCanSAS_Use(enum class E_SASButton SASButton, bool IsSASUse); // Function BattlePrototype.PlayerInterface.IsCanSAS_Use // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsBattleThinkParam_CallFromCPP(enum class EPlayerAIBattleThinkParamCPP Param); // Function BattlePrototype.PlayerInterface.IsBattleThinkParam_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsBattleThink_CallFromCPP(enum class EPlayerAIBattleThinkTypeCPP Type); // Function BattlePrototype.PlayerInterface.IsBattleThink_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsBattleActionStartAI_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsBattleActionStartAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsAttackAble_CallFromCPP(); // Function BattlePrototype.PlayerInterface.IsAttackAble_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsAIPlayer(); // Function BattlePrototype.PlayerInterface.IsAIPlayer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsAIMoveMode_CallFromCPP(enum class EPlayerAIMoveModeCPP MoveModeCPP); // Function BattlePrototype.PlayerInterface.IsAIMoveMode_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Telepo(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Telepo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Stealth(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Stealth // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_SeeThrough(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_SeeThrough // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Psychic(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Psychic // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Metal(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Metal // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void IsActiveSAS_ForButton(enum class E_SASButton SASButton, bool IsSAS); // Function BattlePrototype.PlayerInterface.IsActiveSAS_ForButton // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsActiveSAS_Fire(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Fire // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Electric(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Electric // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Copy(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Copy // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActiveSAS_Accelerator(); // Function BattlePrototype.PlayerInterface.IsActiveSAS_Accelerator // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsActionStatusAI_CallFromCPP(enum class EPlayerActionStatus Status); // Function BattlePrototype.PlayerInterface.IsActionStatusAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsAbleOverwriteENPCBrainField(); // Function BattlePrototype.PlayerInterface.IsAbleOverwriteENPCBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool InputAI_UseItem_CallFromCPP(bool bPressed); // Function BattlePrototype.PlayerInterface.InputAI_UseItem_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool InputAI_Psychic_CallFromCPP(bool bPressed); // Function BattlePrototype.PlayerInterface.InputAI_Psychic_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool InputAI_LeftStick_CallFromCPP(float X, float Y); // Function BattlePrototype.PlayerInterface.InputAI_LeftStick_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool InputAI_Jump_CallFromCPP(bool bPressed); // Function BattlePrototype.PlayerInterface.InputAI_Jump_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool InputAI_Dodge_CallFromCPP(bool bPressed); // Function BattlePrototype.PlayerInterface.InputAI_Dodge_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool InputAI_Attack_CallFromCPP(bool bPressed); // Function BattlePrototype.PlayerInterface.InputAI_Attack_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetTargetBossInterface(struct AActor* LockBoss); // Function BattlePrototype.PlayerInterface.GetTargetBossInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetSASRecastAndActiveGaugeRate(enum class E_SASButton SASButton, float SASGaugeRate, bool IsActive); // Function BattlePrototype.PlayerInterface.GetSASRecastAndActiveGaugeRate // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetSASKindforButton(enum class E_SASButton SASButton, enum class E_SASKindNative SasKind); // Function BattlePrototype.PlayerInterface.GetSASKindforButton // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool GetSASEffectFixParam(enum class E_SASKindNative InKind, struct TArray<struct F_SASParamNative> OutFixParam); // Function BattlePrototype.PlayerInterface.GetSASEffectFixParam // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetSASActiveSeconds(enum class E_SASButton SASButton, float RemainingSec); // Function BattlePrototype.PlayerInterface.GetSASActiveSeconds // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetSAS_MaxActiveSeconds(enum class E_SASKindNative SasKind, float ActivationSeconds); // Function BattlePrototype.PlayerInterface.GetSAS_MaxActiveSeconds // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EPlayerID GetPlayerID(); // Function BattlePrototype.PlayerInterface.GetPlayerID // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetPlayerAccessoryEffect_CallFromCPP(enum class EEffecacyType effectType, bool bOutEquip, float OutParam); // Function BattlePrototype.PlayerInterface.GetPlayerAccessoryEffect_CallFromCPP // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	enum class RSPartyPlayerKind GetPartyPlayerKind(); // Function BattlePrototype.PlayerInterface.GetPartyPlayerKind // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct AActor* GetMovePosActor_CallFromCPP(); // Function BattlePrototype.PlayerInterface.GetMovePosActor_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	float GetMaxSpeedScale_CallFromCPP(); // Function BattlePrototype.PlayerInterface.GetMaxSpeedScale_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetEventMovePosActor_CallFromCPP(struct AActor* OutActor, float OutRadius); // Function BattlePrototype.PlayerInterface.GetEventMovePosActor_CallFromCPP // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetCurrentTargetActorInterface(struct AActor* TargetActor); // Function BattlePrototype.PlayerInterface.GetCurrentTargetActorInterface // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void GetCurrentSASGaugeRate(enum class E_SASButton SASButton, float SASGaugeRate); // Function BattlePrototype.PlayerInterface.GetCurrentSASGaugeRate // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EPlayerActionKind GetCurrentActionStateInterface(); // Function BattlePrototype.PlayerInterface.GetCurrentActionStateInterface // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EPlayerID GetCoverDamagePlayerID_CallFromCPP(); // Function BattlePrototype.PlayerInterface.GetCoverDamagePlayerID_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetControlPlayerDist_CallFromCPP(); // Function BattlePrototype.PlayerInterface.GetControlPlayerDist_CallFromCPP // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	enum class EPlayerBrainFieldDanger GetBrainFieldDangerLV(); // Function BattlePrototype.PlayerInterface.GetBrainFieldDangerLV // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct AActor* GetBattleTargetActor_CallFromCPP(); // Function BattlePrototype.PlayerInterface.GetBattleTargetActor_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t GetAttackCountAI_CallFromCPP(); // Function BattlePrototype.PlayerInterface.GetAttackCountAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool ForceWarp_CallFromCPP(struct FTransform Transform, float IdleRestoreDelay); // Function BattlePrototype.PlayerInterface.ForceWarp_CallFromCPP // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ForceEndSAS_Telepo(); // Function BattlePrototype.PlayerInterface.ForceEndSAS_Telepo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EquipWeapon(int32_t WeaponId); // Function BattlePrototype.PlayerInterface.EquipWeapon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EquipCostume(int32_t CostumeId); // Function BattlePrototype.PlayerInterface.EquipCostume // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EquipAttachment(enum class EPlayerAttachment Index, int32_t attachmentId); // Function BattlePrototype.PlayerInterface.EquipAttachment // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EquipAccessory(enum class EPlayerAccessory Index, int32_t accessoryId); // Function BattlePrototype.PlayerInterface.EquipAccessory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool EndEventWait_CallFromCPP(); // Function BattlePrototype.PlayerInterface.EndEventWait_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EndControlPsychicObject(struct AActor* TargetActor); // Function BattlePrototype.PlayerInterface.EndControlPsychicObject // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CloseBrainField(bool bCrash); // Function BattlePrototype.PlayerInterface.CloseBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ClearBattleParticle(struct FName ClaimantName, bool bForceClear); // Function BattlePrototype.PlayerInterface.ClearBattleParticle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckRareArrangeItemBySAS(); // Function BattlePrototype.PlayerInterface.CheckRareArrangeItemBySAS // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckJumpCount(); // Function BattlePrototype.PlayerInterface.CheckJumpCount // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CheckHologramAttack(enum class ESASHologramAttackTiming Timing, struct ARSCharacterBase* RequestCharacter); // Function BattlePrototype.PlayerInterface.CheckHologramAttack // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckFriendCoverDamage(float DamageValue); // Function BattlePrototype.PlayerInterface.CheckFriendCoverDamage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckEventMovePos_CallFromCPP(); // Function BattlePrototype.PlayerInterface.CheckEventMovePos_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckAutoCounter_CallFromCPP(); // Function BattlePrototype.PlayerInterface.CheckAutoCounter_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckAIPsychicObject_CallFromCPP(bool bCapture, bool bAttack); // Function BattlePrototype.PlayerInterface.CheckAIPsychicObject_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CanBattleAction_CallFromCPP(enum class EPlayerAIBattleThinkTypeCPP ThinkType); // Function BattlePrototype.PlayerInterface.CanBattleAction_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void BeginControlPsychicObject(struct AActor* TargetActor); // Function BattlePrototype.PlayerInterface.BeginControlPsychicObject // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float BeforeTakeDamage(float DamageValue, struct FHCHitResult HitResult); // Function BattlePrototype.PlayerInterface.BeforeTakeDamage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool AimStartAI_CallFromCPP(); // Function BattlePrototype.PlayerInterface.AimStartAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool AimEndAI_CallFromCPP(); // Function BattlePrototype.PlayerInterface.AimEndAI_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.PlayerJustDodgeComponent
// Size: 0xd8 (Inherited: 0xc0)
struct UPlayerJustDodgeComponent : UActorComponent {
	float JUST_DODGE_TIME; // 0xc0(0x04)
	float JUST_DODGE_GAMESPEED_RATE; // 0xc4(0x04)
	float JUST_DODGE_INVINSIBLE_TIME; // 0xc8(0x04)
	float JUST_DODGE_RADIUS; // 0xcc(0x04)
	float JUST_DODGE_RADIUS_RANGEATTACK; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)

	bool CheckJustDodge(); // Function BattlePrototype.PlayerJustDodgeComponent.CheckJustDodge // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CalcJustDodgeByLocation(struct FVector Location, struct FVector UpDir, struct FVector Offset, float Height, float Radius, struct UHitCheckComponent* HitCheck, float CheckScale, float CheckRangeScale); // Function BattlePrototype.PlayerJustDodgeComponent.CalcJustDodgeByLocation // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127d2f0
	bool CalcJustDodge(struct UCapsuleComponent* BaseCapsule, struct UHitCheckComponent* HitCheck, struct FVector Offset, float CheckScale, float CheckRangeScale); // Function BattlePrototype.PlayerJustDodgeComponent.CalcJustDodge // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127d130
};

// Class BattlePrototype.PlayerLookAtComponent
// Size: 0x148 (Inherited: 0xc0)
struct UPlayerLookAtComponent : UActorComponent {
	float LimitDegreeUp; // 0xc0(0x04)
	float LimitDegreeDown; // 0xc4(0x04)
	float LimitDegreeRight; // 0xc8(0x04)
	float LimitDegreeLeft; // 0xcc(0x04)
	float LookAtFollowSpeed; // 0xd0(0x04)
	struct FName LookAtSocketName; // 0xd4(0x08)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct UCurveFloat* LookAroundCurve; // 0xe0(0x08)
	char pad_E8[0x48]; // 0xe8(0x48)
	struct TWeakObjectPtr<struct UTargetSearchComponent> _TargetSearchComponent; // 0x130(0x08)
	struct TWeakObjectPtr<struct USkeletalMeshComponent> _MeshComponent; // 0x138(0x08)
	struct TWeakObjectPtr<struct URSPlayerAnimInstance> _PlayerAnimInstance; // 0x140(0x08)

	void SetLookAtLocation(bool bLookLocation, struct FVector LookAtLocation); // Function BattlePrototype.PlayerLookAtComponent.SetLookAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127fdd0
	void SetLookAtEnabled(bool bEnabled); // Function BattlePrototype.PlayerLookAtComponent.SetLookAtEnabled // (Final|Native|Public|BlueprintCallable) // @ game+0x127fd40
	void SetLookAround(bool bLookAround); // Function BattlePrototype.PlayerLookAtComponent.SetLookAround // (Final|Native|Public|BlueprintCallable) // @ game+0x127fcb0
	void SetEventLookAtLocation(bool bEnable, struct FVector LookAtLocation); // Function BattlePrototype.PlayerLookAtComponent.SetEventLookAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127fb30
	void SetEventLookAtActor(bool bEnable, struct AActor* LookAtActor); // Function BattlePrototype.PlayerLookAtComponent.SetEventLookAtActor // (Final|Native|Public|BlueprintCallable) // @ game+0x127fa70
	bool IsLookAtEnabled(); // Function BattlePrototype.PlayerLookAtComponent.IsLookAtEnabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127eda0
	void ForceReset(); // Function BattlePrototype.PlayerLookAtComponent.ForceReset // (Final|Native|Public|BlueprintCallable) // @ game+0x127e200
};

// Class BattlePrototype.PlayerManager
// Size: 0x398 (Inherited: 0x230)
struct APlayerManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct TArray<struct ARSCharacterBase*> _playerList; // 0x238(0x10)
	struct TArray<struct ARSCharacterBase*> _extraPlayerList; // 0x248(0x10)
	char pad_258[0x1]; // 0x258(0x01)
	enum class EPlayerID _BattleMemberMain; // 0x259(0x01)
	enum class EPlayerID _BattleMemberLeft; // 0x25a(0x01)
	enum class EPlayerID _BattleMemberRight; // 0x25b(0x01)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct TArray<struct FPlayerInfo> _partyInfoList; // 0x260(0x10)
	struct TArray<struct FCharactersParameterTable> _partyParameterTableList; // 0x270(0x10)
	struct TArray<struct FDelayLoadPlayerEquipData> _delayLoadList; // 0x280(0x10)
	struct FMulticastInlineDelegate DispatchEquipWeaponDelegate; // 0x290(0x10)
	struct FMulticastInlineDelegate DispatchEquipCostumeDelegate; // 0x2a0(0x10)
	struct TArray<struct FPartyPlayerCacheData> _partyPlayerCache; // 0x2b0(0x10)
	struct FMulticastInlineDelegate DispatchChangeDisableBattleActionFlag; // 0x2c0(0x10)
	char pad_2D0[0x3c]; // 0x2d0(0x3c)
	bool bNpcThinkAssistAttack; // 0x30c(0x01)
	char pad_30D[0x8b]; // 0x30d(0x8b)

	void UpdatLastNoSallyTime(enum class EPlayerID ID, int32_t PlayBrainTalkTimeMin); // Function BattlePrototype.PlayerManager.UpdatLastNoSallyTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1280470
	struct FCharactersParameterTable UpdatePlayerParameter(enum class EPlayerID playerId, bool bMaxHP); // Function BattlePrototype.PlayerManager.UpdatePlayerParameter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void UpdateLastUseSasTime(enum class EPlayerID ID, bool isPlayBrainTalk); // Function BattlePrototype.PlayerManager.UpdateLastUseSasTime // (Final|Native|Public|BlueprintCallable) // @ game+0x12805f0
	void UpdateLastSallyTime(enum class EPlayerID ID, int32_t PlayBrainTalkTimeMin); // Function BattlePrototype.PlayerManager.UpdateLastSallyTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1280530
	void UnregisterKeepOutArea(int32_t registerId); // Function BattlePrototype.PlayerManager.UnregisterKeepOutArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12803f0
	void UnregisterExtraPlayer(struct ARSCharacterBase* extraPlayer); // Function BattlePrototype.PlayerManager.UnregisterExtraPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1280370
	void SwapPartyMemberInfo(int32_t first, int32_t second); // Function BattlePrototype.PlayerManager.SwapPartyMemberInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x12802b0
	void SetPlayerParameter(enum class EPlayerID ID, struct FCharactersParameterTable Table, bool bMaxHP); // Function BattlePrototype.PlayerManager.SetPlayerParameter // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1280170
	void SetPlayerAIOrder(enum class EPlayerID ID, enum class EPlayerAIOrder Order); // Function BattlePrototype.PlayerManager.SetPlayerAIOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x12800b0
	void SetPartyMemberInfo(enum class EPlayerID ID, struct FPlayerInfo Info, bool bDelayLoad); // Function BattlePrototype.PlayerManager.SetPartyMemberInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x127feb0
	void SetLevelDifferentExpRate(struct FLevelDifferentExpRateData Data); // Function BattlePrototype.PlayerManager.SetLevelDifferentExpRate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x127fc10
	void SetDriveUsedFlag(bool bFlag); // Function BattlePrototype.PlayerManager.SetDriveUsedFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x127f9e0
	void SetDisableBattleActionFlag(bool bDisable); // Function BattlePrototype.PlayerManager.SetDisableBattleActionFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x127f950
	void SetBattleMemberToEmpty(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.SetBattleMemberToEmpty // (Final|Native|Public|BlueprintCallable) // @ game+0x127f8d0
	bool SetBattleMemberCore(enum class RSPartyPlayerKind kind, enum class EPlayerID ID, bool bSpawn); // Function BattlePrototype.PlayerManager.SetBattleMemberCore // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x127f7c0
	void SetBattleMember(enum class RSPartyPlayerKind kind, enum class EPlayerID ID, bool bSpawn); // Function BattlePrototype.PlayerManager.SetBattleMember // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x127f6c0
	void SetBattleEndReserveMemberStatus(float ReviveHPRate); // Function BattlePrototype.PlayerManager.SetBattleEndReserveMemberStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x127f640
	void ReturnPartyMember(enum class EPlayerID ID, bool isCheckBattleMemberMain); // Function BattlePrototype.PlayerManager.ReturnPartyMember // (Final|Native|Public|BlueprintCallable) // @ game+0x127f570
	void ReturnEventRemvoeMembers(); // Function BattlePrototype.PlayerManager.ReturnEventRemvoeMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x127f550
	void RemovePartyMember(enum class EPlayerID ID, bool bDestroy, bool bDequipAttachment, bool bDefaultCostume); // Function BattlePrototype.PlayerManager.RemovePartyMember // (Final|Native|Public|BlueprintCallable) // @ game+0x127f3f0
	void RegisterKeepOutAreaCircle(int32_t outRegisterId, struct FVector Location, float Radius); // Function BattlePrototype.PlayerManager.RegisterKeepOutAreaCircle // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127f2c0
	void RegisterKeepOutAreaBox(int32_t outRegisterId, struct FVector InMin, struct FVector InMax); // Function BattlePrototype.PlayerManager.RegisterKeepOutAreaBox // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127f180
	void RegisterExtraPlayer(struct ARSCharacterBase* extraPlayer); // Function BattlePrototype.PlayerManager.RegisterExtraPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x127f100
	void ReflectBattleMemberParameterPersonal(enum class EPlayerID playerId); // Function BattlePrototype.PlayerManager.ReflectBattleMemberParameterPersonal // (Final|Native|Public|BlueprintCallable) // @ game+0x127f080
	void ReflectBattleMemberParameter(); // Function BattlePrototype.PlayerManager.ReflectBattleMemberParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x127f060
	void RecoveryReserveMemberHP(); // Function BattlePrototype.PlayerManager.RecoveryReserveMemberHP // (Final|Native|Public|BlueprintCallable) // @ game+0x127f040
	void RecoveryReserveMemberBadStatus(); // Function BattlePrototype.PlayerManager.RecoveryReserveMemberBadStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x127f020
	int32_t ReCalcRemainingSkillPoint(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.ReCalcRemainingSkillPoint // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct ARSCharacterBase* ProtectedSpawnNotPartyPlayer(struct ARSCharacterBase* playerClass, struct FTransform Transform, struct AActor* createOwner); // Function BattlePrototype.PlayerManager.ProtectedSpawnNotPartyPlayer // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x127eea0
	void PlayerSetting(enum class RSPartyPlayerKind kind, struct ARSCharacterBase* Player); // Function BattlePrototype.PlayerManager.PlayerSetting // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool NeedsStatusAssist(); // Function BattlePrototype.PlayerManager.NeedsStatusAssist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ee70
	void MainPlayerAccessoryBackup(enum class EPlayerID playerId); // Function BattlePrototype.PlayerManager.MainPlayerAccessoryBackup // (Final|Native|Public|BlueprintCallable) // @ game+0x127edf0
	void LocationChangeParameterReset(); // Function BattlePrototype.PlayerManager.LocationChangeParameterReset // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1174080
	void kpiAddNpcSupportRevive(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.kpiAddNpcSupportRevive // (Final|Native|Public|BlueprintCallable) // @ game+0x1280840
	void kpiAddNpcSupportCover(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.kpiAddNpcSupportCover // (Final|Native|Public|BlueprintCallable) // @ game+0x12807c0
	void kpiAddNpcSupportBrainField(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.kpiAddNpcSupportBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1280740
	void kpiAddNpcSupportAttack(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.kpiAddNpcSupportAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x12806c0
	bool IsPlayingRecover_CallFromCPP(); // Function BattlePrototype.PlayerManager.IsPlayingRecover_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPlayingDeadRecover_CallFromCPP(); // Function BattlePrototype.PlayerManager.IsPlayingDeadRecover_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPlayingDead_CallFromCPP(); // Function BattlePrototype.PlayerManager.IsPlayingDead_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPlayerStatus(enum class RSPartyPlayerKind kind, enum class EPlayerCommonStatus PlayerStatus); // Function BattlePrototype.PlayerManager.IsPlayerStatus // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsPlayerInputTrgBrainField(); // Function BattlePrototype.PlayerManager.IsPlayerInputTrgBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsNpcThinkAssistAttackCPP(); // Function BattlePrototype.PlayerManager.IsNpcThinkAssistAttackCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127edd0
	bool IsExistPartyMember(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.IsExistPartyMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ed10
	bool IsExistBattleMember(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.IsExistBattleMember // (Final|Native|Public|BlueprintCallable) // @ game+0x127ec80
	bool IsExecResurrect_CallFromCPP(); // Function BattlePrototype.PlayerManager.IsExecResurrect_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsExecNpcReviveDirection_CallFromCPP(); // Function BattlePrototype.PlayerManager.IsExecNpcReviveDirection_CallFromCPP // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDriveUsedFlag(); // Function BattlePrototype.PlayerManager.IsDriveUsedFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x127ec50
	bool IsDisableBattleActionFlag(); // Function BattlePrototype.PlayerManager.IsDisableBattleActionFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ec20
	bool IsCreatePlayerCharacters(); // Function BattlePrototype.PlayerManager.IsCreatePlayerCharacters // (Final|Native|Public|BlueprintCallable) // @ game+0x1166d80
	void InitializeAll(bool isNoResetPartyInfo); // Function BattlePrototype.PlayerManager.InitializeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x127eb90
	void GetPlayerWeaponActorListFromNative(struct AActor* OwnerPlayer, enum class EGetPlayerWeaponType Type, struct TArray<struct AActor*> WeaponList); // Function BattlePrototype.PlayerManager.GetPlayerWeaponActorListFromNative // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	float GetPlayerUseTime(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.GetPlayerUseTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127eb00
	int32_t GetPlayerUseCount(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.GetPlayerUseCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ea70
	int32_t GetPlayerNum(); // Function BattlePrototype.PlayerManager.GetPlayerNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127ea40
	struct TArray<struct ARSCharacterBase*> GetPlayerList(); // Function BattlePrototype.PlayerManager.GetPlayerList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11893d0
	bool GetPlayerCharacterParam(enum class RSPartyPlayerKind Type, struct FVector Location, struct FRotator Rotation); // Function BattlePrototype.PlayerManager.GetPlayerCharacterParam // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x127e910
	struct TSoftClassPtr<UObject> GetPlayerBPSoftRef(enum class EPlayerID playerId, bool bENPC, bool bMetamorphosis); // Function BattlePrototype.PlayerManager.GetPlayerBPSoftRef // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct ARSCharacterBase* GetPlayer(enum class RSPartyPlayerKind kind); // Function BattlePrototype.PlayerManager.GetPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127e880
	struct FPartyPlayerCacheData GetPartyPlayerCache(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.GetPartyPlayerCache // (Final|Native|Public|BlueprintCallable) // @ game+0x127e7b0
	struct FPlayerInfo GetPartyMemberInfo(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.GetPartyMemberInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127e6a0
	struct TArray<struct FPlayerInfo> GetPartyInfoList(); // Function BattlePrototype.PlayerManager.GetPartyInfoList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x127e620
	int32_t GetNpcAssistCountRevive(); // Function BattlePrototype.PlayerManager.GetNpcAssistCountRevive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t GetNpcAssistCountHP(); // Function BattlePrototype.PlayerManager.GetNpcAssistCountHP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t GetNpcAssistCountBadStatus(); // Function BattlePrototype.PlayerManager.GetNpcAssistCountBadStatus // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct TArray<struct ARSCharacterBase*> GetExtraPlayerList(); // Function BattlePrototype.PlayerManager.GetExtraPlayerList // (Final|Native|Public|BlueprintCallable) // @ game+0x127e5a0
	struct FCharactersParameterTable GetCharactersParameterTable(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.GetCharactersParameterTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x127e4f0
	enum class EPlayerID GetBattleMemberPlayerID(enum class RSPartyPlayerKind kind); // Function BattlePrototype.PlayerManager.GetBattleMemberPlayerID // (Final|Native|Public|BlueprintCallable) // @ game+0x127e460
	struct ARSCharacterBase* GetBattleMemberActorFromKind(enum class RSPartyPlayerKind kind); // Function BattlePrototype.PlayerManager.GetBattleMemberActorFromKind // (Final|Native|Public|BlueprintCallable) // @ game+0x127e3d0
	struct ARSCharacterBase* GetBattleMemberActorFromID(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.GetBattleMemberActorFromID // (Final|Native|Public|BlueprintCallable) // @ game+0x127e340
	int32_t GetAccessoryEquipNum(enum class EPlayerID playerId); // Function BattlePrototype.PlayerManager.GetAccessoryEquipNum // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool GetAccessoryEffect(float outValue, enum class EPlayerID ID, enum class EEffecacyType effectType); // Function BattlePrototype.PlayerManager.GetAccessoryEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x127e220
	void EventReviveBattleMember(); // Function BattlePrototype.PlayerManager.EventReviveBattleMember // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EventRemvoeMembers(struct TArray<enum class EPlayerID> IgnoreActorList, bool bDisableSAS); // Function BattlePrototype.PlayerManager.EventRemvoeMembers // (Final|Native|Public|BlueprintCallable) // @ game+0x127e0d0
	void EventCutSceneAfterFunc(); // Function BattlePrototype.PlayerManager.EventCutSceneAfterFunc // (Final|Native|Public|BlueprintCallable) // @ game+0x127e0b0
	void EquipWeapon(enum class EPlayerID ID, int32_t WeaponId, bool bTempEquip); // Function BattlePrototype.PlayerManager.EquipWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x127dfa0
	void EquipCostume(enum class EPlayerID ID, int32_t CostumeId); // Function BattlePrototype.PlayerManager.EquipCostume // (Final|Native|Public|BlueprintCallable) // @ game+0x127dee0
	void EquipAttachment(enum class EPlayerID ID, enum class EPlayerAttachment Index, int32_t attachmentId); // Function BattlePrototype.PlayerManager.EquipAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x127dde0
	void EquipAccessory(enum class EPlayerID ID, enum class EPlayerAccessory Index, int32_t accessoryId, bool bTempEquip); // Function BattlePrototype.PlayerManager.EquipAccessory // (Final|Native|Public|BlueprintCallable) // @ game+0x127dc90
	void DestroyPlayerCharacters(); // Function BattlePrototype.PlayerManager.DestroyPlayerCharacters // (Final|Native|Public|BlueprintCallable) // @ game+0x127dc70
	void DestroyPlayerCharacter(enum class RSPartyPlayerKind Type); // Function BattlePrototype.PlayerManager.DestroyPlayerCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x127dbf0
	void DelayLoadPlayerEquip(); // Function BattlePrototype.PlayerManager.DelayLoadPlayerEquip // (Final|Native|Public|BlueprintCallable) // @ game+0x127dbd0
	void DebugDrawKeepOutArea(); // Function BattlePrototype.PlayerManager.DebugDrawKeepOutArea // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CreatePlayerCharacters(struct FString playerStartName); // Function BattlePrototype.PlayerManager.CreatePlayerCharacters // (Final|Native|Public|BlueprintCallable) // @ game+0x127db30
	struct ARSCharacterBase* CreatePlayerCharacterFromID(enum class RSPartyPlayerKind Type, enum class EPlayerID ID, struct FVector Location, struct FRotator Rotation); // Function BattlePrototype.PlayerManager.CreatePlayerCharacterFromID // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x127d9b0
	struct ARSCharacterBase* CreatePlayerCharacter(enum class RSPartyPlayerKind Type, struct ARSCharacterBase* playerClass, struct FVector Location, struct FRotator Rotation); // Function BattlePrototype.PlayerManager.CreatePlayerCharacter // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x127d830
	void ClearPlayerUseInfo(); // Function BattlePrototype.PlayerManager.ClearPlayerUseInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x127d810
	void ClearPlayerInfoDrive(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.ClearPlayerInfoDrive // (Final|Native|Public|BlueprintCallable) // @ game+0x127d790
	void ClearPlayerInfoBadStatus(enum class EPlayerID ID); // Function BattlePrototype.PlayerManager.ClearPlayerInfoBadStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x127d710
	void ClearPartyMember(); // Function BattlePrototype.PlayerManager.ClearPartyMember // (Final|Native|Public|BlueprintCallable) // @ game+0x127d6f0
	bool CheckRareArrangeItem(); // Function BattlePrototype.PlayerManager.CheckRareArrangeItem // (Final|Native|Public|BlueprintCallable) // @ game+0x127d6c0
	void ChangePlayerCharacter(enum class RSPartyPlayerKind Type, struct ARSCharacterBase* playerClass); // Function BattlePrototype.PlayerManager.ChangePlayerCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x127d600
	float CalcLevelDifferentExpRate(int32_t DifferentLevel); // Function BattlePrototype.PlayerManager.CalcLevelDifferentExpRate // (Final|Native|Public|BlueprintCallable) // @ game+0x127d570
	void AllPlayerCharacterTickStop(); // Function BattlePrototype.PlayerManager.AllPlayerCharacterTickStop // (Final|Native|Public|BlueprintCallable) // @ game+0x127d110
	void AllDestroyPlayerCharacter(); // Function BattlePrototype.PlayerManager.AllDestroyPlayerCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x127d0f0
	void AddPartyMemberByPreset(struct FAddPartyPresetData Preset, bool isCheckBattleMemberMain, bool bNotEquipSAS); // Function BattlePrototype.PlayerManager.AddPartyMemberByPreset // (Final|Native|Public|BlueprintCallable) // @ game+0x127cfa0
	void AddPartyMember(struct FPlayerInfo Info, bool isSaveDataLoadFlow); // Function BattlePrototype.PlayerManager.AddPartyMember // (Final|Native|Public|BlueprintCallable) // @ game+0x127cde0
};

// Class BattlePrototype.PlayerMaterialAccessorComponent
// Size: 0x360 (Inherited: 0x360)
struct UPlayerMaterialAccessorComponent : UMaterialAccessorComponent {

	void SetupDefaultParameter(struct ACharacter* Player); // Function BattlePrototype.PlayerMaterialAccessorComponent.SetupDefaultParameter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11f92a0
	void SetPlayerMesh(struct USkeletalMeshComponent* PlayerMesh); // Function BattlePrototype.PlayerMaterialAccessorComponent.SetPlayerMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11f8400
	void SetCable(struct AActor* Player); // Function BattlePrototype.PlayerMaterialAccessorComponent.SetCable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.PlayerMeshSetupComponent
// Size: 0xd0 (Inherited: 0xc0)
struct UPlayerMeshSetupComponent : UActorComponent {
	char pad_C0[0x10]; // 0xc0(0x10)

	void DoSetup(struct UMeshComponent* Mesh, struct UPlayerRenderSettings* RenderSettingsClass); // Function BattlePrototype.PlayerMeshSetupComponent.DoSetup // (Final|Native|Public|BlueprintCallable) // @ game+0x1285840
};

// Class BattlePrototype.PlayerRenderSettings
// Size: 0x38 (Inherited: 0x28)
struct UPlayerRenderSettings : UObject {
	struct TArray<struct FHeightGradationSettings> HeightGradationSettingsArray; // 0x28(0x10)
};

// Class BattlePrototype.PlayerRessurectComponent
// Size: 0x108 (Inherited: 0xc0)
struct UPlayerRessurectComponent : UActorComponent {
	struct FMulticastInlineDelegate DispatchResurrectSuccess; // 0xc0(0x10)
	float RessurectTime; // 0xd0(0x04)
	float DecreaseTimeRate; // 0xd4(0x04)
	float RessurectRange; // 0xd8(0x04)
	float RessurectHeight; // 0xdc(0x04)
	float RessurectAngle; // 0xe0(0x04)
	float IconOffsetZ; // 0xe4(0x04)
	char pad_E8[0x20]; // 0xe8(0x20)

	void SuspendRessurect(); // Function BattlePrototype.PlayerRessurectComponent.SuspendRessurect // (Final|Native|Public|BlueprintCallable) // @ game+0x1288900
	void SetVisibleWidget(bool Visible); // Function BattlePrototype.PlayerRessurectComponent.SetVisibleWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12886f0
	bool IsExecRessurect(); // Function BattlePrototype.PlayerRessurectComponent.IsExecRessurect // (Final|Native|Public|BlueprintCallable) // @ game+0x1286e00
	bool IsEnableRessurect(); // Function BattlePrototype.PlayerRessurectComponent.IsEnableRessurect // (Final|Native|Public|BlueprintCallable) // @ game+0x127eda0
	struct UUIResurrectionGauge* GetUI(); // Function BattlePrototype.PlayerRessurectComponent.GetUI // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	float GetDistanceSquared2D(); // Function BattlePrototype.PlayerRessurectComponent.GetDistanceSquared2D // (Final|Native|Public|BlueprintCallable) // @ game+0x1285e60
	void DeactivateRessurectIcon(); // Function BattlePrototype.PlayerRessurectComponent.DeactivateRessurectIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x12856b0
	void BeginRessurect(float timeRate); // Function BattlePrototype.PlayerRessurectComponent.BeginRessurect // (Final|Native|Public|BlueprintCallable) // @ game+0x1283d50
	void ActivateRessurectIcon(struct AActor* deadPlayer); // Function BattlePrototype.PlayerRessurectComponent.ActivateRessurectIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x12838c0
};

// Class BattlePrototype.PlayerSASHologramAttackCheckComponent
// Size: 0x150 (Inherited: 0xc0)
struct UPlayerSASHologramAttackCheckComponent : UActorComponent {
	float ENABLE_CALLTIME; // 0xc0(0x04)
	float ATTACK_INTERVAL_TIME; // 0xc4(0x04)
	float CANCEL_INTERVAL_TIME; // 0xc8(0x04)
	float REQUEST_DISTANCE_MAX; // 0xcc(0x04)
	struct TArray<struct FSASHologramAttackCheckData> CallDataTable; // 0xd0(0x10)
	struct TArray<struct FSASHologramAttackProbabilityData> ProbabilityDataTable; // 0xe0(0x10)
	char pad_F0[0x60]; // 0xf0(0x60)

	void SetTimerPause(bool bPause); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.SetTimerPause // (Final|Native|Public|BlueprintCallable) // @ game+0x11e0470
	void SetEnableCheck(bool bSet); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.SetEnableCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x1288220
	void NotifyAttackEnd(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.NotifyAttackEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1287530
	void NotifyAttackBegin(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.NotifyAttackBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x1287510
	void LoadDataTable(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.LoadDataTable // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool IsExistCall(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.IsExistCall // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286e30
	bool IsEnableSASHologram(enum class EPlayerID playerId); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.IsEnableSASHologram // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool IsDoneCallPlayer(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.IsDoneCallPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286760
	bool IsAttackState(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.IsAttackState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12865f0
	int32_t GetHologramRushCount(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.GetHologramRushCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1285e90
	enum class EPlayerID GetCallPlayer(); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.GetCallPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1285d10
	void EndCallUI(bool bSuccess); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.EndCallUI // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void DebugSetIgnoreInterval(bool bSet); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.DebugSetIgnoreInterval // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugSetFixPlayerID(enum class EPlayerID playerId); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.DebugSetFixPlayerID // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void DebugSetAlways(bool bSet); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.DebugSetAlways // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugPrintLog(bool bSet); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.DebugPrintLog // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void CheckHologramAttack(enum class ESASHologramAttackTiming Timing, struct ARSCharacterBase* RequestCharacter); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.CheckHologramAttack // (Final|Native|Public|BlueprintCallable) // @ game+0x12854f0
	void CancelCall(bool bInterval); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.CancelCall // (Final|Native|Public|BlueprintCallable) // @ game+0x1285350
	void BeginCallUI(enum class EPlayerID playerId); // Function BattlePrototype.PlayerSASHologramAttackCheckComponent.BeginCallUI // (Event|Protected|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.PlayerScriptComponent
// Size: 0x6f0 (Inherited: 0xc0)
struct UPlayerScriptComponent : UActorComponent {
	char pad_C0[0x90]; // 0xc0(0x90)
	struct FSASEffectState SAS_Fire; // 0x150(0x18)
	struct FSASEffectState SAS_Metal; // 0x168(0x18)
	struct FSASEffectState SAS_SeeThrough; // 0x180(0x18)
	struct FSASEffectState SAS_Telepo; // 0x198(0x18)
	struct FSASEffectState SAS_Stealth; // 0x1b0(0x18)
	struct FSASEffectState SAS_Electric; // 0x1c8(0x18)
	struct FSASEffectState SAS_Copy; // 0x1e0(0x18)
	struct FSASEffectState SAS_Accelerator; // 0x1f8(0x18)
	struct FSASEffectState SAS_Psychic_ch0100; // 0x210(0x18)
	struct FSASEffectState SAS_Psychic_ch0200; // 0x228(0x18)
	struct FSASEffectState SAS_Invalid; // 0x240(0x18)
	char pad_258[0x80]; // 0x258(0x80)
	struct TArray<struct FVector> _LocationHistroy; // 0x2d8(0x10)
	float ConfusionStickParam_InputTimeMin; // 0x2e8(0x04)
	float ConfusionStickParam_InputTimeMax; // 0x2ec(0x04)
	float ConfusionStickParam_IntervalMin; // 0x2f0(0x04)
	float ConfusionStickParam_IntervalMax; // 0x2f4(0x04)
	float ConfusionAttackParam_IntervalMin; // 0x2f8(0x04)
	float ConfusionAttackParam_IntervalMax; // 0x2fc(0x04)
	float ConfusionAttackParam_Rate; // 0x300(0x04)
	float ConfusionPsychicParam_Rate; // 0x304(0x04)
	char pad_308[0x28]; // 0x308(0x28)
	struct FMulticastInlineDelegate DispatchSkillRegenerateHP; // 0x330(0x10)
	char pad_340[0x18]; // 0x340(0x18)
	float NeonNotifyTimeMax; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
	struct URSParticleSystemComponentBase* NeonNotifyParticleComponentClass; // 0x360(0x08)
	struct UParticleSystem* NeonNotifyParticle_DriveMax; // 0x368(0x08)
	struct UParticleSystem* NeonNotifyParticle_Dying; // 0x370(0x08)
	struct UParticleSystem* NeonNotifyParticle_ActionFailed; // 0x378(0x08)
	struct FName NeonNotifyParticleAttach_SocketName; // 0x380(0x08)
	struct FVector NeonNotifyParticleAttach_Offset; // 0x388(0x0c)
	char pad_394[0x14]; // 0x394(0x14)
	struct FMulticastInlineDelegate DispatchUpdateBrainField; // 0x3a8(0x10)
	struct FMulticastInlineDelegate DispatchBrainFieldState; // 0x3b8(0x10)
	struct FMulticastInlineDelegate DispatchBrainFieldIntervalEnd; // 0x3c8(0x10)
	struct FMulticastInlineDelegate DispatchLunaticBrainTalk; // 0x3d8(0x10)
	struct FMulticastInlineDelegate DispatchBrainFieldPsychicGaugeChange; // 0x3e8(0x10)
	char pad_3F8[0x168]; // 0x3f8(0x168)
	struct TArray<struct FBrainFieldPsychicGaugeDirectionData> PsychicGaugeDirectionData; // 0x560(0x10)
	char pad_570[0x10]; // 0x570(0x10)
	struct TArray<enum class EPlayerID> BrainFieldHelpedPlayerList; // 0x580(0x10)
	char pad_590[0xf8]; // 0x590(0xf8)
	struct FMulticastInlineDelegate DispatchBrainTalkHitCount; // 0x688(0x10)
	int32_t Param_BrainTalkHitCount; // 0x698(0x04)
	float Param_BrainTalkHitCountClearIntarval; // 0x69c(0x04)
	struct TArray<enum class E_SASKindNative> BrainTalkHitCountCheckSASList; // 0x6a0(0x10)
	char pad_6B0[0x10]; // 0x6b0(0x10)
	int32_t AvoidWallCountMax; // 0x6c0(0x04)
	float StagnationCheckLocationThreshold; // 0x6c4(0x04)
	float StagnationResetTime; // 0x6c8(0x04)
	char pad_6CC[0x24]; // 0x6cc(0x24)

	void UpdateMoveInputTrigger(bool bEnableAddMove, float MaxSpeedScale, float MoveInputScale, float MoveDeadEndDistance); // Function BattlePrototype.PlayerScriptComponent.UpdateMoveInputTrigger // (Final|Native|Public|BlueprintCallable) // @ game+0x1288c70
	void UpdateEnableActionCommon(); // Function BattlePrototype.PlayerScriptComponent.UpdateEnableActionCommon // (Final|Native|Public|BlueprintCallable) // @ game+0x1288c50
	void UpdateDisableAction(); // Function BattlePrototype.PlayerScriptComponent.UpdateDisableAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1288c30
	void UpdateCameraRotate(float DeltaSeconds, struct FVector2D FixCameraLeftStick, bool bLockTarget, bool bDisableCameraControl, bool bUseCutCamera, bool bUniqueObjectInput); // Function BattlePrototype.PlayerScriptComponent.UpdateCameraRotate // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1288a20
	void UpdateBrainFieldInterval(float DeltaSeconds); // Function BattlePrototype.PlayerScriptComponent.UpdateBrainFieldInterval // (Final|Native|Private) // @ game+0x12889a0
	void UpdateBrainField(float DeltaSeconds); // Function BattlePrototype.PlayerScriptComponent.UpdateBrainField // (Final|Native|Private) // @ game+0x1288920
	void SubUpperActionStatus(enum class EPlayerUpperActionStatus Status); // Function BattlePrototype.PlayerScriptComponent.SubUpperActionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1288880
	void SubPlayerStatus(enum class EPlayerCommonStatus Status); // Function BattlePrototype.PlayerScriptComponent.SubPlayerStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1288800
	void SubActionStatus(enum class EPlayerActionStatus Status); // Function BattlePrototype.PlayerScriptComponent.SubActionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1288780
	void SetRunSpeedRate(float InRate); // Function BattlePrototype.PlayerScriptComponent.SetRunSpeedRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1288670
	void SetRestrictStagnationCheck(bool bRestrict); // Function BattlePrototype.PlayerScriptComponent.SetRestrictStagnationCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x12885e0
	void SetPauseTimer(bool bPause); // Function BattlePrototype.PlayerScriptComponent.SetPauseTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1288550
	void SetMaxFlyingDodgeCount(int32_t count); // Function BattlePrototype.PlayerScriptComponent.SetMaxFlyingDodgeCount // (Final|Native|Public|BlueprintCallable) // @ game+0x12884d0
	void SetLotFriendData(enum class EFriendLotType lotType, struct FFriendLotData Data); // Function BattlePrototype.PlayerScriptComponent.SetLotFriendData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12883b0
	void SetIgnoreFallTimer(float IgnoreTime); // Function BattlePrototype.PlayerScriptComponent.SetIgnoreFallTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1288330
	void SetFlyingActionLimitDistance(float limitDistance); // Function BattlePrototype.PlayerScriptComponent.SetFlyingActionLimitDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x12882b0
	void SetBrainFieldState(enum class EPlayerBrainFieldState State); // Function BattlePrototype.PlayerScriptComponent.SetBrainFieldState // (Final|Native|Public|BlueprintCallable) // @ game+0x12881a0
	void SetBrainFieldExtraTime(float ExtraTime); // Function BattlePrototype.PlayerScriptComponent.SetBrainFieldExtraTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1288120
	void SetBrainFieldData(struct FPlayerBrainFieldData InData, struct FPlayerBrainFieldData InFirstBrainFieldData, struct FPlayerBrainFieldHelpData InHelpData, struct TArray<struct FBrainFieldPsychicGaugeDirectionData> PsychicGaugeData); // Function BattlePrototype.PlayerScriptComponent.SetBrainFieldData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1287e60
	void SetBattling(bool bBattle); // Function BattlePrototype.PlayerScriptComponent.SetBattling // (Final|Native|Public|BlueprintCallable) // @ game+0x1287dd0
	void SetAttackFlyingEnd(); // Function BattlePrototype.PlayerScriptComponent.SetAttackFlyingEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1287db0
	void ResetStagnation(); // Function BattlePrototype.PlayerScriptComponent.ResetStagnation // (Final|Native|Public|BlueprintCallable) // @ game+0x1287d90
	void ResetHistory(); // Function BattlePrototype.PlayerScriptComponent.ResetHistory // (Final|Native|Public|BlueprintCallable) // @ game+0x1287d70
	void PreTick(float DeltaSeconds); // Function BattlePrototype.PlayerScriptComponent.PreTick // (Final|Native|Public|BlueprintCallable) // @ game+0x1287cf0
	void PostTick(float DeltaSeconds); // Function BattlePrototype.PlayerScriptComponent.PostTick // (Final|Native|Public|BlueprintCallable) // @ game+0x1287c70
	void PauseBrainFieldTimer(bool bPause); // Function BattlePrototype.PlayerScriptComponent.PauseBrainFieldTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1287be0
	bool OverwriteAttackCollisionInfo_ForPlayer(struct FHCCollisionCommonInfo refCommonInfo, struct FHCSkillCommonInfo refSkill, bool bAddTelepoAttack); // Function BattlePrototype.PlayerScriptComponent.OverwriteAttackCollisionInfo_ForPlayer // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x12879d0
	bool OverwriteAttackCollisionInfo_ForHero(struct FHCCollisionCommonInfo refCommonInfo, struct FHCSkillCommonInfo refSkill, float SkillWeaponCrashScale, float SkillPsychicCrashScale, float SkillDriveCrashScale, float NPC_HERO_CRASH_RATE, bool bExJustDodgeFlag, float ExJustDodgeAttackRate, float ExJustDodgeCrashRate, float Skill_AerialAttackPsychicGaugeUp); // Function BattlePrototype.PlayerScriptComponent.OverwriteAttackCollisionInfo_ForHero // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x12875e0
	void OnBeginAvoidWall(struct FVector InLocation); // Function BattlePrototype.PlayerScriptComponent.OnBeginAvoidWall // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1287550
	void NextBrainFieldState(); // Function BattlePrototype.PlayerScriptComponent.NextBrainFieldState // (Final|Native|Public|BlueprintCallable) // @ game+0x12874f0
	void MainTick(float DeltaSeconds); // Function BattlePrototype.PlayerScriptComponent.MainTick // (Final|Native|Public|BlueprintCallable) // @ game+0x1287470
	enum class EPlayerID LotFriendPlayer(enum class EFriendLotType lotType, bool bDebugSuccess); // Function BattlePrototype.PlayerScriptComponent.LotFriendPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x12873a0
	bool LotAssassinAttackLevelOffset(enum class EAssassinAttackHit EffectiveType, int32_t OwnerLevel, int32_t TargetLevel, bool bSeeThrough, struct FAssassinAttackData CalcData); // Function BattlePrototype.PlayerScriptComponent.LotAssassinAttackLevelOffset // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12871e0
	bool IsUpperActionStatus(enum class EPlayerUpperActionStatus Status); // Function BattlePrototype.PlayerScriptComponent.IsUpperActionStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287150
	bool IsStagnation(bool bCheckLocation, struct FVector InCurrentLocation); // Function BattlePrototype.PlayerScriptComponent.IsStagnation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287070
	bool IsSearchAbleActionIcon(); // Function BattlePrototype.PlayerScriptComponent.IsSearchAbleActionIcon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287040
	bool IsRunOrSprint(); // Function BattlePrototype.PlayerScriptComponent.IsRunOrSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286fe0
	bool IsRunningAnimStateForAIMove(); // Function BattlePrototype.PlayerScriptComponent.IsRunningAnimStateForAIMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1287010
	bool IsRestrictStagnationCheck(); // Function BattlePrototype.PlayerScriptComponent.IsRestrictStagnationCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286fb0
	bool IsPlayerStatus(enum class EPlayerCommonStatus Status); // Function BattlePrototype.PlayerScriptComponent.IsPlayerStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286f20
	bool IsPlayerInAerial(); // Function BattlePrototype.PlayerScriptComponent.IsPlayerInAerial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286ef0
	bool IsInitializedSASEffectFixParam(enum class E_SASKindNative kind); // Function BattlePrototype.PlayerScriptComponent.IsInitializedSASEffectFixParam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286e60
	void IsEnableSASEffect(enum class E_SASKindNative kind, enum class ESASEffect Effect, bool OutEnable, float OutParam0, float OutParam1, float OutParam2, float OutParam3); // Function BattlePrototype.PlayerScriptComponent.IsEnableSASEffect // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286bb0
	bool IsEnableSAS(); // Function BattlePrototype.PlayerScriptComponent.IsEnableSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286b80
	bool IsEnableNpcAssist(); // Function BattlePrototype.PlayerScriptComponent.IsEnableNpcAssist // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286b50
	bool IsEnableDriveFullDirection(); // Function BattlePrototype.PlayerScriptComponent.IsEnableDriveFullDirection // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286b20
	bool IsEnableActionUseItem(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionUseItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286af0
	bool IsEnableActionSprint(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286ac0
	bool IsEnableActionPsychic(bool bPsychicEx); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionPsychic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286a30
	bool IsEnableActionJump(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286a00
	bool IsEnableActionIdleWalkRun(bool bIgnoreExecTelepo); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionIdleWalkRun // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286970
	bool IsEnableActionDodge(bool bIgnoreBadStatus); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12868e0
	bool IsEnableActionDamage(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12868b0
	bool IsEnableActionCommon(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionCommon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286880
	bool IsEnableActionChangeBattle(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionChangeBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286850
	bool IsEnableActionBrainFieldOpen(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionBrainFieldOpen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286820
	bool IsEnableActionBrainFieldClose(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionBrainFieldClose // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12867f0
	bool IsEnableActionBrainCrash(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionBrainCrash // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12867c0
	bool IsEnableActionAttack(); // Function BattlePrototype.PlayerScriptComponent.IsEnableActionAttack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286790
	bool IsDisableActionDodge(bool bIgnoreBadStatus); // Function BattlePrototype.PlayerScriptComponent.IsDisableActionDodge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12866d0
	bool IsDisableAction(); // Function BattlePrototype.PlayerScriptComponent.IsDisableAction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12866a0
	bool IsBrainFieldInterval(); // Function BattlePrototype.PlayerScriptComponent.IsBrainFieldInterval // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286670
	bool IsBossBattle(); // Function BattlePrototype.PlayerScriptComponent.IsBossBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286650
	bool IsBattling(); // Function BattlePrototype.PlayerScriptComponent.IsBattling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286620
	bool IsActiveSAS(enum class E_SASKindNative kind); // Function BattlePrototype.PlayerScriptComponent.IsActiveSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286560
	bool IsActiveBrainFieldGameOverTimer(); // Function BattlePrototype.PlayerScriptComponent.IsActiveBrainFieldGameOverTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1286530
	bool IsActionStatus(enum class EPlayerActionStatus Status); // Function BattlePrototype.PlayerScriptComponent.IsActionStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12864a0
	void Initialize(bool bNpc, struct UCharacterMovementComponent* CharaMoveComp, struct UPlayerAnimControllerComponent* AnimControllerComp, struct UCharactersParameterComponent* CharactersParameterComp, struct URSStateManageComponent* StateManageComp, struct URSStateManageComponent* UpperStateManageComp, struct UPlayerInputBaseComponent* PlayerInputComp, struct UAttackInputComponent* AttackInputComp, struct UPlayerAsyncScriptComponent* PlayerAsyncComp, struct UMoveInputComponent* MoveInputComp, struct UPlayerCameraComponent* PlayerCameraComp); // Function BattlePrototype.PlayerScriptComponent.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x1286190
	struct FSASEffectState GetSASEffectStateConst(enum class E_SASKindNative kind); // Function BattlePrototype.PlayerScriptComponent.GetSASEffectStateConst // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286100
	struct FSASEffectState GetSASEffectState(enum class E_SASKindNative kind); // Function BattlePrototype.PlayerScriptComponent.GetSASEffectState // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1286100
	struct FVector GetRecentAverageVelocity(); // Function BattlePrototype.PlayerScriptComponent.GetRecentAverageVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12860c0
	struct UPlayerAnimControllerComponent* GetPlayerAnimController(); // Function BattlePrototype.PlayerScriptComponent.GetPlayerAnimController // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1286090
	void GetPlayerAccessoryEffect(enum class EEffecacyType effectType, bool bOutEquip, float OutParam); // Function BattlePrototype.PlayerScriptComponent.GetPlayerAccessoryEffect // (Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1285f70
	struct TArray<struct FVector> GetLocationHistory(); // Function BattlePrototype.PlayerScriptComponent.GetLocationHistory // (Final|Native|Public|BlueprintCallable) // @ game+0x1285ef0
	bool GetIsDead_Native(); // Function BattlePrototype.PlayerScriptComponent.GetIsDead_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x1285ec0
	void GetConfusionStickInput(bool bOverwriteInput, struct FVector2D StickInput); // Function BattlePrototype.PlayerScriptComponent.GetConfusionStickInput // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1285d80
	struct FRotator GetCameraRotation(); // Function BattlePrototype.PlayerScriptComponent.GetCameraRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1285d40
	int32_t GetBrainFieldWarningCount(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldWarningCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1285ce0
	float GetBrainFieldTimeRate(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldTimeRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1285cb0
	enum class EPlayerBrainFieldState GetBrainFieldState(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1285c80
	float GetBrainFieldRemainTime(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldRemainTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1285c50
	enum class EPlayerID GetBrainFieldHelpPlayer(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldHelpPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1285c20
	struct FName GetBrainFieldHelpBrainTalkID(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldHelpBrainTalkID // (Final|Native|Public|BlueprintCallable) // @ game+0x1285be0
	float GetBrainFieldGameOverTimeRate(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldGameOverTimeRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1285bb0
	enum class EPlayerBrainFieldDanger GetBrainFieldDangerLV(); // Function BattlePrototype.PlayerScriptComponent.GetBrainFieldDangerLV // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1285b80
	void ForceSettingConfusionStick(float InputTime); // Function BattlePrototype.PlayerScriptComponent.ForceSettingConfusionStick // (Final|Native|Public|BlueprintCallable) // @ game+0x1285b00
	void ExcludeLotPlayer(enum class EPlayerID ID, enum class EFriendLotType lotType); // Function BattlePrototype.PlayerScriptComponent.ExcludeLotPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1285a40
	void EventDirectBrainFieldWarning(); // Function BattlePrototype.PlayerScriptComponent.EventDirectBrainFieldWarning // (Final|Native|Public|BlueprintCallable) // @ game+0x1285a20
	void EndNeonNotify(); // Function BattlePrototype.PlayerScriptComponent.EndNeonNotify // (Final|Native|Public|BlueprintCallable) // @ game+0x1285a00
	void EndConfusionStick(); // Function BattlePrototype.PlayerScriptComponent.EndConfusionStick // (Final|Native|Public|BlueprintCallable) // @ game+0x12859e0
	void EndBrainField(); // Function BattlePrototype.PlayerScriptComponent.EndBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x12859c0
	void EnableRegenerateHP(float RegenerateHPRate, float IntervalTime); // Function BattlePrototype.PlayerScriptComponent.EnableRegenerateHP // (Final|Native|Public|BlueprintCallable) // @ game+0x1285900
	void DisableRegenerateHP(); // Function BattlePrototype.PlayerScriptComponent.DisableRegenerateHP // (Final|Native|Public|BlueprintCallable) // @ game+0x1285820
	void DisableBrainFieldLunaticBrainTalk(bool bDisable); // Function BattlePrototype.PlayerScriptComponent.DisableBrainFieldLunaticBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x1285790
	void DebugNoBrainFieldHelp(bool bSet); // Function BattlePrototype.PlayerScriptComponent.DebugNoBrainFieldHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugLotPlayerTest(enum class EFriendLotType lotType, int32_t count); // Function BattlePrototype.PlayerScriptComponent.DebugLotPlayerTest // (Final|Native|Public|BlueprintCallable) // @ game+0x12856d0
	void DebugInfiniteBrainField(bool bSet); // Function BattlePrototype.PlayerScriptComponent.DebugInfiniteBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugCoverDamagePrintLog(bool bOutput); // Function BattlePrototype.PlayerScriptComponent.DebugCoverDamagePrintLog // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void DebugBrainFieldHelpPlayerFix(enum class EPlayerID FixPlayerID); // Function BattlePrototype.PlayerScriptComponent.DebugBrainFieldHelpPlayerFix // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void DebugBrainFieldHelpForceSuccess(bool bSet); // Function BattlePrototype.PlayerScriptComponent.DebugBrainFieldHelpForceSuccess // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void ClearUpperActionStatus(); // Function BattlePrototype.PlayerScriptComponent.ClearUpperActionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1285690
	void ClearPlayerStatus(); // Function BattlePrototype.PlayerScriptComponent.ClearPlayerStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1285670
	void ClearFlyingDodgeCount(); // Function BattlePrototype.PlayerScriptComponent.ClearFlyingDodgeCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1285650
	void ClearExcludeLotPlayer(enum class EFriendLotType lotType); // Function BattlePrototype.PlayerScriptComponent.ClearExcludeLotPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x12855d0
	void ClearActionStatus(); // Function BattlePrototype.PlayerScriptComponent.ClearActionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x12855b0
	struct TArray<enum class EFindTargetBrainTalkType> CheckFindBrainTalk(struct ARSCharacterBase* TargetActor); // Function BattlePrototype.PlayerScriptComponent.CheckFindBrainTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x1285410
	enum class EPlayerID CheckBrainFieldHelpPlayer(); // Function BattlePrototype.PlayerScriptComponent.CheckBrainFieldHelpPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x12853e0
	float CalcFinalDamageByDefence_ForPlayer(float Damage, struct AActor* attackActor, float NPC_DEFENCE_DAMAGE_RATE); // Function BattlePrototype.PlayerScriptComponent.CalcFinalDamageByDefence_ForPlayer // (Final|Native|Private|BlueprintCallable) // @ game+0x1285240
	float CalcFinalDamageByDefence_ForHero(float Damage, struct AActor* attackActor, bool bSkill_PinchStatusUp, float Skill_PinchDamageDownRate, float Skill_BrainFieldDamageCut); // Function BattlePrototype.PlayerScriptComponent.CalcFinalDamageByDefence_ForHero // (Final|Native|Private|BlueprintCallable) // @ game+0x1285090
	float CalcFinalDamageByAttack_ForPlayer(float Damage, struct AActor* defenseActor, struct FHCSkillCommonInfo skillInfo, float COPY_ATTACK_RATE, float NPC_ATTACK_DAMAGE_RATE); // Function BattlePrototype.PlayerScriptComponent.CalcFinalDamageByAttack_ForPlayer // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x1284ea0
	float CalcFinalDamageByAttack_ForHero(float Damage, struct AActor* defenseActor, struct FHCSkillCommonInfo skillInfo, bool bSkill_PinchStatusUp, float Skill_DownDamageUp, float Skill_PinchAttackUpRate); // Function BattlePrototype.PlayerScriptComponent.CalcFinalDamageByAttack_ForHero // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x1284c70
	bool CalcDamageByAttack_ForHero(float refPhysicsDamage, float refObjDamage, float refFlameDamage, float refElectricDamage, float refCriticalDamageRate, struct AActor* defenseActor); // Function BattlePrototype.PlayerScriptComponent.CalcDamageByAttack_ForHero // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x1284a50
	float CalcCritical_ForPlayer(float Critical, struct AActor* defenseActor, bool isEnpc, struct AActor* TargetActor); // Function BattlePrototype.PlayerScriptComponent.CalcCritical_ForPlayer // (Final|Native|Private|BlueprintCallable) // @ game+0x12848f0
	bool CalcAccumulationByDefence_ForPlayer(float refWince, float refKnockback, float refDown, float refLaunch, float refFlame, float refElectric, float refFlooded, float refOil, float refConfusion, float refCrashScale, struct AActor* attackActor, bool isSuperArmor); // Function BattlePrototype.PlayerScriptComponent.CalcAccumulationByDefence_ForPlayer // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x12844e0
	bool CalcAccumulationByAttack_ForPlayer(float refWince, float refKnockback, float refDown, float refLaunch, float refFlame, float refElectric, float refFlooded, float refOil, float refConfusion, float refCrashScale, struct AActor* defenseActor, enum class HCSkillAttackType AttackType, bool bCopyActor, float COPY_REACTION_RATE, float COPY_BADSTATUS_RATE); // Function BattlePrototype.PlayerScriptComponent.CalcAccumulationByAttack_ForPlayer // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x1284010
	float CalcAccessoryBadStatusRate(float Value, float Rate); // Function BattlePrototype.PlayerScriptComponent.CalcAccessoryBadStatusRate // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // @ game+0x1283f40
	void BrainTalk_ClearHitCount(); // Function BattlePrototype.PlayerScriptComponent.BrainTalk_ClearHitCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1283f20
	void BrainTalk_CheckSASHitCount(bool bCheck, enum class E_SASKindNative kind); // Function BattlePrototype.PlayerScriptComponent.BrainTalk_CheckSASHitCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1283e60
	void BrainTalk_AddHitCount(bool bNoDamage); // Function BattlePrototype.PlayerScriptComponent.BrainTalk_AddHitCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1283dd0
	void BeginNeonNotify(enum class EPlayerNeonNotifyType Type); // Function BattlePrototype.PlayerScriptComponent.BeginNeonNotify // (Final|Native|Public|BlueprintCallable) // @ game+0x1283cd0
	void BeginConfusionStick(); // Function BattlePrototype.PlayerScriptComponent.BeginConfusionStick // (Final|Native|Public|BlueprintCallable) // @ game+0x1283cb0
	void BeginBrainField(); // Function BattlePrototype.PlayerScriptComponent.BeginBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1283c90
	void ApplySASEffectPassiveAllLinkAble(); // Function BattlePrototype.PlayerScriptComponent.ApplySASEffectPassiveAllLinkAble // (Final|Native|Public|BlueprintCallable) // @ game+0x1283c70
	void ApplySASEffectPassiveAll(); // Function BattlePrototype.PlayerScriptComponent.ApplySASEffectPassiveAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1283c50
	void ApplySASEffectPassive(enum class E_SASKindNative kind); // Function BattlePrototype.PlayerScriptComponent.ApplySASEffectPassive // (Final|Native|Public|BlueprintCallable) // @ game+0x1283bd0
	void ApplySASEffectActive(enum class E_SASKindNative kind, bool bActivate); // Function BattlePrototype.PlayerScriptComponent.ApplySASEffectActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1283b00
	void AddUpperActionStatus(enum class EPlayerUpperActionStatus Status); // Function BattlePrototype.PlayerScriptComponent.AddUpperActionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1283a80
	void AddPlayerStatus(enum class EPlayerCommonStatus Status); // Function BattlePrototype.PlayerScriptComponent.AddPlayerStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1283a00
	void AddFlyingDodgeCount(); // Function BattlePrototype.PlayerScriptComponent.AddFlyingDodgeCount // (Final|Native|Public|BlueprintCallable) // @ game+0x12839e0
	void AddBrainFieldHelpExtraTime(); // Function BattlePrototype.PlayerScriptComponent.AddBrainFieldHelpExtraTime // (Final|Native|Public|BlueprintCallable) // @ game+0x12839c0
	void AddActionStatus(enum class EPlayerActionStatus Status); // Function BattlePrototype.PlayerScriptComponent.AddActionStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x1283940
	bool ActionState_CommonTransition(enum class EPlayerActionKind NextAction, int32_t NextParam); // Function BattlePrototype.PlayerScriptComponent.ActionState_CommonTransition // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12837d0
};

// Class BattlePrototype.PlayerShadeNoiseComponent
// Size: 0x100 (Inherited: 0xc0)
struct UPlayerShadeNoiseComponent : UActorComponent {
	float CharacterMovementSpeedUpScale; // 0xc0(0x04)
	float CharacterRotationSpeedUpScale; // 0xc4(0x04)
	struct UMeshComponent* TargetMesh; // 0xc8(0x08)
	struct TArray<struct UMaterialInstanceDynamic*> TargetMaterials; // 0xd0(0x10)
	char pad_E0[0x20]; // 0xe0(0x20)

	void FirstSetup(struct UMeshComponent* InMesh, float InCharacterMovementSpeedUpScale, float InCharacterRotationSpeedUpScale); // Function BattlePrototype.PlayerShadeNoiseComponent.FirstSetup // (Final|Native|Public|BlueprintCallable) // @ game+0x128bc00
};

// Class BattlePrototype.PlayerWeaponChargeComponent
// Size: 0xf0 (Inherited: 0xc0)
struct UPlayerWeaponChargeComponent : UActorComponent {
	struct FMulticastInlineDelegate DispatchChangeLevel; // 0xc0(0x10)
	struct TArray<float> ChargeTimeList; // 0xd0(0x10)
	char pad_E0[0x10]; // 0xe0(0x10)

	void StartCharge(struct TArray<float> TimeList); // Function BattlePrototype.PlayerWeaponChargeComponent.StartCharge // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x128cfb0
	void ResetCharge(); // Function BattlePrototype.PlayerWeaponChargeComponent.ResetCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x128c6f0
	bool IsCharge(); // Function BattlePrototype.PlayerWeaponChargeComponent.IsCharge // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x128c280
	int32_t GetChargeLevel(); // Function BattlePrototype.PlayerWeaponChargeComponent.GetChargeLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x128bd00
	void EndCharge(); // Function BattlePrototype.PlayerWeaponChargeComponent.EndCharge // (Final|Native|Public|BlueprintCallable) // @ game+0x128bbe0
};

// Class BattlePrototype.DebuggingItemPlayTimeGroup
// Size: 0x300 (Inherited: 0x2d0)
struct ADebuggingItemPlayTimeGroup : ADebuggingItemGroup {
	struct TWeakObjectPtr<struct ADebuggingItemInt> timeInt; // 0x2d0(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemInt> timeHour; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemInt> timeMinute; // 0x2e0(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemInt> timeSecond; // 0x2e8(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemLabel> Label; // 0x2f0(0x08)
	struct UUserParamManager* paramMan; // 0x2f8(0x08)

	void UpdateDebugParam(); // Function BattlePrototype.DebuggingItemPlayTimeGroup.UpdateDebugParam // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void OnExecChangePlayTime(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemPlayTimeGroup.OnExecChangePlayTime // (Final|Native|Public) // @ game+0x79d490
	void OnChangePlayTimePartial(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingItemPlayTimeGroup.OnChangePlayTimePartial // (Final|Native|Public) // @ game+0x79d490
	void OnChangePlayTime(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingItemPlayTimeGroup.OnChangePlayTime // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.PostProcessManager
// Size: 0x238 (Inherited: 0x230)
struct APostProcessManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)

	void UnregisterPostProcess(struct UPostProcessComponent* InComponent); // Function BattlePrototype.PostProcessManager.UnregisterPostProcess // (Final|Native|Protected|BlueprintCallable) // @ game+0x128d060
	void RegisterPostProcess(struct UPostProcessComponent* InComponent); // Function BattlePrototype.PostProcessManager.RegisterPostProcess // (Final|Native|Protected|BlueprintCallable) // @ game+0x128c630
};

// Class BattlePrototype.PostProcessOverraySystem
// Size: 0x230 (Inherited: 0x230)
struct APostProcessOverraySystem : AActor {
};

// Class BattlePrototype.PostProcessParam
// Size: 0x50 (Inherited: 0x30)
struct UPostProcessParam : UDataAsset {
	float VisionFogSeeThroughFog; // 0x30(0x04)
	float VisionFogSeeThroughFogList_em1020; // 0x34(0x04)
	float VisionFogSeeThroughFogList_em1200; // 0x38(0x04)
	float VisionFogSeeThroughFogList_em1210; // 0x3c(0x04)
	float VisionFogSeeThroughFogList_em1300; // 0x40(0x04)
	float VisionFogSeeThroughFogList_em1400; // 0x44(0x04)
	float VisionFogSeeThroughFogList_em8300; // 0x48(0x04)
	float VisionFogSeeThroughFogList_np1100; // 0x4c(0x04)
};

// Class BattlePrototype.PresentData
// Size: 0x38 (Inherited: 0x28)
struct UPresentData : UObject {
	struct UDataTable* presentData_; // 0x28(0x08)
	struct UDataTable* presentLocationData_; // 0x30(0x08)

	void LoadPresentDataTable(struct FString presentDataPath, struct FString presentLocationDatapath); // Function BattlePrototype.PresentData.LoadPresentDataTable // (Final|Native|Public) // @ game+0x128c440
	bool GetPresentEventData(struct FPresentEventDataCell presentEventData, struct FName ItemId, struct FName FromCharaID, struct FName ForCharaID); // Function BattlePrototype.PresentData.GetPresentEventData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x128bdc0
};

// Class BattlePrototype.PresentInfoParam
// Size: 0xd0 (Inherited: 0x28)
struct UPresentInfoParam : UObject {
	struct TMap<enum class EPlayerID, struct FPresentCheckArray> presentInfoData_ch0100; // 0x28(0x50)
	struct TMap<enum class EPlayerID, struct FPresentCheckArray> presentInfoData_ch0200; // 0x78(0x50)
	struct URSGameInstance* GameInstance; // 0xc8(0x08)

	bool UpdatePresentInfo(enum class EPlayerID sendCharId, enum class EPlayerID recvCharID, struct FName ItemId); // Function BattlePrototype.PresentInfoParam.UpdatePresentInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x128d0e0
	void Reset(); // Function BattlePrototype.PresentInfoParam.Reset // (Final|Native|Public|BlueprintCallable) // @ game+0x128c6b0
	bool IsPresentedFirstTime(enum class EPlayerID sendCharId, enum class EPlayerID recvCharID, struct FName ItemId, bool IsFirstTime); // Function BattlePrototype.PresentInfoParam.IsPresentedFirstTime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x128c2e0
	void GetPresentInfoList(enum class EPlayerID sendCharId, enum class EPlayerID recvCharID, struct TArray<struct FPresentInfoData> getList, bool includeEvent); // Function BattlePrototype.PresentInfoParam.GetPresentInfoList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x128bfd0
};

// Class BattlePrototype.PreventDamageMotionComponent
// Size: 0xe8 (Inherited: 0xc0)
struct UPreventDamageMotionComponent : UActorComponent {
	int32_t _maxGuardValue; // 0xc0(0x04)
	float _guardRecoverStartSec; // 0xc4(0x04)
	float _recoverGuardPerSec; // 0xc8(0x04)
	float _guardBreakMinSec; // 0xcc(0x04)
	float _guardBreakMaxSec; // 0xd0(0x04)
	float _guardValue; // 0xd4(0x04)
	int32_t _guardReduceCount; // 0xd8(0x04)
	int32_t _guardBreakCount; // 0xdc(0x04)
	float _guardBreakStartTime; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)

	void ResetGuardValue(); // Function BattlePrototype.PreventDamageMotionComponent.ResetGuardValue // (Final|Native|Public|BlueprintCallable) // @ game+0x128c710
	void ReduceGuard(int32_t reducedValue); // Function BattlePrototype.PreventDamageMotionComponent.ReduceGuard // (Final|Native|Public|BlueprintCallable) // @ game+0x128c5b0
	bool IsGuardBreak(); // Function BattlePrototype.PreventDamageMotionComponent.IsGuardBreak // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x128c2b0
	float GetGuardValue(); // Function BattlePrototype.PreventDamageMotionComponent.GetGuardValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x118dde0
};

// Class BattlePrototype.ProjectiveGeomBPFunctions
// Size: 0x28 (Inherited: 0x28)
struct UProjectiveGeomBPFunctions : UBlueprintFunctionLibrary {

	struct FVector4 GetViewRect(struct APlayerController* PlayerController); // Function BattlePrototype.ProjectiveGeomBPFunctions.GetViewRect // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x128c1a0
	struct FVector4 GetDeprojectionMatrix(struct APlayerController* PlayerController); // Function BattlePrototype.ProjectiveGeomBPFunctions.GetDeprojectionMatrix // (Final|Native|Static|Private|HasDefaults|BlueprintCallable) // @ game+0x128bd30
};

// Class BattlePrototype.PsychicObjectBasicC
// Size: 0x320 (Inherited: 0x230)
struct APsychicObjectBasicC : AActor {
	char pad_230[0x18]; // 0x230(0x18)
	enum class EPsychicObjectID PsychicObjectIdC; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct UMeshComponent* pMeshComp; // 0x250(0x08)
	struct UMeshComponent* pShadowComp; // 0x258(0x08)
	bool bCpuAccessC; // 0x260(0x01)
	bool bCheckCpuAccessC; // 0x261(0x01)
	bool bRegisterableC; // 0x262(0x01)
	bool bActiveC; // 0x263(0x01)
	bool bInUseC; // 0x264(0x01)
	bool bTickC; // 0x265(0x01)
	char pad_266[0x2]; // 0x266(0x02)
	struct TArray<struct FName> TickReferenceList; // 0x268(0x10)
	bool bMaterialParameterEnableC; // 0x278(0x01)
	bool bSimulateControlEnableC; // 0x279(0x01)
	bool bSimulateControlAwakeC; // 0x27a(0x01)
	bool bSimulateControlCheckC; // 0x27b(0x01)
	bool bSimulateControlCheckRenderC; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	float SimulateControlCheckRenderRadiusSqC; // 0x280(0x04)
	bool bSimulateControlApplyC; // 0x284(0x01)
	bool bSimulateControlBackUpC; // 0x285(0x01)
	bool bRenderC; // 0x286(0x01)
	bool bSwingTypeC; // 0x287(0x01)
	bool bBrainFieldObjectC; // 0x288(0x01)
	bool bUniqueObjectC; // 0x289(0x01)
	bool bTownSettingC; // 0x28a(0x01)
	bool bBackupSettingC; // 0x28b(0x01)
	bool bBackupSimualteC; // 0x28c(0x01)
	bool bSearchableC; // 0x28d(0x01)
	bool bSkipCheckRenderedC; // 0x28e(0x01)
	bool bFixSearchPosC; // 0x28f(0x01)
	struct FVector SearchPosC; // 0x290(0x0c)
	bool bSearchHeightC; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	float SearchHeightMinC; // 0x2a0(0x04)
	float SearchHeightMaxC; // 0x2a4(0x04)
	float SearchRadiusC; // 0x2a8(0x04)
	float SearchSizeValueC; // 0x2ac(0x04)
	int32_t SearchPointC; // 0x2b0(0x04)
	bool bArrangeResetEnableC; // 0x2b4(0x01)
	char pad_2B5[0xb]; // 0x2b5(0x0b)
	struct FTransform ArrangeActorTransformC; // 0x2c0(0x30)
	struct FTransform ArrangeMeshTransformC; // 0x2f0(0x30)

	struct FHitResult SetSceneComponentLocationRotation(struct USceneComponent* SceneComp, struct FVector Location, struct FRotator Rotation, bool bSweep); // Function BattlePrototype.PsychicObjectBasicC.SetSceneComponentLocationRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x128cde0
	void SetPsychicObjectSimulateControlRenderCheckParamC(bool Flag, float Radius); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSimulateControlRenderCheckParamC // (Final|Native|Public|BlueprintCallable) // @ game+0x128cd10
	void SetPsychicObjectSimulateControlEnableC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSimulateControlEnableC // (Final|Native|Public|BlueprintCallable) // @ game+0x128cc90
	void SetPsychicObjectSimulateControlCheckC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSimulateControlCheckC // (Final|Native|Public|BlueprintCallable) // @ game+0x128cc10
	void SetPsychicObjectSimulateControlAwakeC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSimulateControlAwakeC // (Final|Native|Public|BlueprintCallable) // @ game+0x128cb90
	void SetPsychicObjectSearchSkipCheckRenderedC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSearchSkipCheckRenderedC // (Final|Native|Public|BlueprintCallable) // @ game+0x128ca90
	void SetPsychicObjectSearchPosC(bool bFlag, struct FVector Pos); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSearchPosC // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x128c9b0
	void SetPsychicObjectSearchPos(bool bFlag, struct FVector Pos); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSearchPos // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x128c9b0
	void SetPsychicObjectSearchHeight(bool bFlag, float heightMin, float heightMix); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSearchHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x128c8b0
	void SetPsychicObjectSearchableC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSearchableC // (Final|Native|Public|BlueprintCallable) // @ game+0x128cb10
	void SetPsychicObjectSearchable(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectSearchable // (Final|Native|Public|BlueprintCallable) // @ game+0x128cb10
	void SetPsychicObjectRegisterableC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectRegisterableC // (Final|Native|Public|BlueprintCallable) // @ game+0x128c830
	void SetPsychicObjectMaterialParameterEnableC(bool Flag); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectMaterialParameterEnableC // (Final|Native|Public|BlueprintCallable) // @ game+0x128c7b0
	void SetPsychicObjectIdC(enum class EPsychicObjectID psyObjId); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectIdC // (Final|Native|Public|BlueprintCallable) // @ game+0x128c730
	bool SetPsychicObjectFellOutOfWorld(struct UDamageType* pDmgType); // Function BattlePrototype.PsychicObjectBasicC.SetPsychicObjectFellOutOfWorld // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1237f60
	bool SetDistanceDestroyC(); // Function BattlePrototype.PsychicObjectBasicC.SetDistanceDestroyC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1173a80
	void ResetArrangeTransformC(); // Function BattlePrototype.PsychicObjectBasicC.ResetArrangeTransformC // (Final|Native|Public|BlueprintCallable) // @ game+0x128c6d0
	bool IsAllowCpuAccess(); // Function BattlePrototype.PsychicObjectBasicC.IsAllowCpuAccess // (Final|Native|Public|BlueprintCallable) // @ game+0x128c250
	void InitializeCpuAccess(); // Function BattlePrototype.PsychicObjectBasicC.InitializeCpuAccess // (Final|Native|Public|BlueprintCallable) // @ game+0x128c230
	struct UAnimMontage* GetUniqueObjectPlayerMontage(enum class EPsychicObjectUniqueMontageIndex MontageIndex, bool bLeft, bool bMaleHero); // Function BattlePrototype.PsychicObjectBasicC.GetUniqueObjectPlayerMontage // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool GetUniqueObjectAttackParameter(struct FHCCollisionCommonInfo OutCommonInto, struct FHCSkillCommonInfo OutSkillInfo); // Function BattlePrototype.PsychicObjectBasicC.GetUniqueObjectAttackParameter // (Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UMeshComponent* GetPsychicObjectShadow(); // Function BattlePrototype.PsychicObjectBasicC.GetPsychicObjectShadow // (Final|Native|Public|BlueprintCallable) // @ game+0x128c170
	struct UMeshComponent* GetPsychicObjectMesh(); // Function BattlePrototype.PsychicObjectBasicC.GetPsychicObjectMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x128c140
	struct TArray<struct UMeshComponent*> GetMaterialParameterMeshList(); // Function BattlePrototype.PsychicObjectBasicC.GetMaterialParameterMeshList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckPsychicObjectStillInWorld(float killZ); // Function BattlePrototype.PsychicObjectBasicC.CheckPsychicObjectStillInWorld // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x128bb50
	bool CheckDestroyDistanceC(float chkDist); // Function BattlePrototype.PsychicObjectBasicC.CheckDestroyDistanceC // (Final|Native|Public|BlueprintCallable) // @ game+0x128bac0
};

// Class BattlePrototype.PsychicObjectInterface
// Size: 0x28 (Inherited: 0x28)
struct UPsychicObjectInterface : UInterface {

	bool SetUniqueObjectC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetUniqueObjectC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12925f0
	void SetTownSetting(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetTownSetting // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1292560
	bool SetSwingTypeC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetSwingTypeC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12924c0
	bool SetPsychicObjectTickC(struct FName refName, bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetPsychicObjectTickC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1292250
	bool SetPsychicObjectSimulateControlC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetPsychicObjectSimulateControlC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12921b0
	bool SetPsychicObjectRenderC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetPsychicObjectRenderC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1292110
	bool SetPsychicObjectInUseC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetPsychicObjectInUseC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1291db0
	bool SetPsychicObjectEventC(bool bStart, bool bTick, bool bVisibility); // Function BattlePrototype.PsychicObjectInterface.SetPsychicObjectEventC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1291c90
	bool SetPsychicObjectActiveC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetPsychicObjectActiveC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1291bf0
	void SetMaterialParameter(struct FName ParamName, float ParamValue); // Function BattlePrototype.PsychicObjectInterface.SetMaterialParameter // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1291aa0
	bool SetDuelPoleType(bool bDuelType); // Function BattlePrototype.PsychicObjectInterface.SetDuelPoleType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12913e0
	bool SetBrainFieldObjectC(bool Flag); // Function BattlePrototype.PsychicObjectInterface.SetBrainFieldObjectC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12912b0
	bool ResetPsychicObjectArrangeTransformC(); // Function BattlePrototype.PsychicObjectInterface.ResetPsychicObjectArrangeTransformC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184290
	bool RequestEndUniqueObjectState(struct AActor* pActor); // Function BattlePrototype.PsychicObjectInterface.RequestEndUniqueObjectState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290d40
	bool IsUniqueObjectC(); // Function BattlePrototype.PsychicObjectInterface.IsUniqueObjectC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11844f0
	bool IsUniqueObject(); // Function BattlePrototype.PsychicObjectInterface.IsUniqueObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11844c0
	bool IsSwingTypeC(); // Function BattlePrototype.PsychicObjectInterface.IsSwingTypeC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290bc0
	bool IsSwingType(); // Function BattlePrototype.PsychicObjectInterface.IsSwingType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184610
	bool IsPsychicObjectTickC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectTickC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290b60
	bool IsPsychicObjectSimulateControlEnableC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectSimulateControlEnableC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290b30
	bool IsPsychicObjectSimulateC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectSimulateC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290b00
	bool IsPsychicObjectRenderC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectRenderC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184490
	bool IsPsychicObjectRegisterableC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectRegisterableC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290ad0
	bool IsPsychicObjectInUseC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectInUseC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290aa0
	bool IsPsychicObjectActiveC(); // Function BattlePrototype.PsychicObjectInterface.IsPsychicObjectActiveC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1290a70
	bool IsFloatObjectC(); // Function BattlePrototype.PsychicObjectInterface.IsFloatObjectC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184010
	bool IsCopyPsychicObject(); // Function BattlePrototype.PsychicObjectInterface.IsCopyPsychicObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11845e0
	bool IsBrainFieldObjectC(); // Function BattlePrototype.PsychicObjectInterface.IsBrainFieldObjectC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184670
	bool InitializeCopyPsychicObject(); // Function BattlePrototype.PsychicObjectInterface.InitializeCopyPsychicObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11845b0
	struct FVector GetUnqObjMoveVelocity(); // Function BattlePrototype.PsychicObjectInterface.GetUnqObjMoveVelocity // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x12909b0
	struct FVector GetUnqObjCamTargetPos(); // Function BattlePrototype.PsychicObjectInterface.GetUnqObjCamTargetPos // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1290970
	struct FRotator GetUniqueObjectCameraOwnerRotation(); // Function BattlePrototype.PsychicObjectInterface.GetUniqueObjectCameraOwnerRotation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1290930
	struct FVector GetUniqueObjectCameraLookAtPos(float LookAtRate); // Function BattlePrototype.PsychicObjectInterface.GetUniqueObjectCameraLookAtPos // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1290890
	enum class EPsychicObjectSizeType GetPsychicObjectSize(); // Function BattlePrototype.PsychicObjectInterface.GetPsychicObjectSize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12907a0
	bool GetPsychicObjectSimulateControlDistanceSqC(float distSq); // Function BattlePrototype.PsychicObjectInterface.GetPsychicObjectSimulateControlDistanceSqC // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x12906f0
	bool GetDebrisEffectData(struct UParticleSystem* ParticleTemplate, struct UMaterialInterface* OverrideMaterial); // Function BattlePrototype.PsychicObjectInterface.GetDebrisEffectData // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool GetDebrisEffect(enum class EEffectObjectDebrisType Type, struct UMaterialInterface* OverrideMaterial); // Function BattlePrototype.PsychicObjectInterface.GetDebrisEffect // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckPsychicObjectSimulateC(struct FVector posPly); // Function BattlePrototype.PsychicObjectInterface.CheckPsychicObjectSimulateC // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x128fdb0
	bool CheckPsychicObjectIdC(enum class EPsychicObjectID checkId); // Function BattlePrototype.PsychicObjectInterface.CheckPsychicObjectIdC // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x128fd20
};

// Class BattlePrototype.PsychicObjectManager
// Size: 0x478 (Inherited: 0x230)
struct APsychicObjectManager : AActor {
	char pad_230[0x18]; // 0x230(0x18)
	struct TArray<struct UObject*> PsychicObjectClassList_S; // 0x248(0x10)
	struct TArray<struct UObject*> PsychicObjectClassList_M; // 0x258(0x10)
	struct TArray<struct UObject*> PsychicObjectClassList_L; // 0x268(0x10)
	struct TArray<struct UObject*> PsychicObjectClassList_XL; // 0x278(0x10)
	struct TArray<struct UObject*> PsychicObjectClassList_XXL; // 0x288(0x10)
	struct TArray<struct UObject*> PsychicObjectClassList_Swing; // 0x298(0x10)
	char pad_2A8[0x10]; // 0x2a8(0x10)
	bool bSizeListSkipSwingType; // 0x2b8(0x01)
	char pad_2B9[0x1f]; // 0x2b9(0x1f)
	struct TArray<struct UObject*> PsychicObjectClassList_Unknown; // 0x2d8(0x10)
	char pad_2E8[0x8]; // 0x2e8(0x08)
	struct TMap<struct FName, struct FPsychicObjectListInfo> PsychicObjectListByLevel; // 0x2f0(0x50)
	char pad_340[0xc]; // 0x340(0x0c)
	float SearchDistanceMinEnemy; // 0x34c(0x04)
	bool bSearchCheckTraceEnemy; // 0x350(0x01)
	char pad_351[0x3]; // 0x351(0x03)
	float SearchDistanceMinNpc; // 0x354(0x04)
	bool bSearchCheckTraceNpc; // 0x358(0x01)
	char pad_359[0x37]; // 0x359(0x37)
	struct TArray<float> FocusParamDistList; // 0x390(0x10)
	struct TArray<int32_t> FocusParamDistPointList; // 0x3a0(0x10)
	struct TArray<float> FocusParamAngleList; // 0x3b0(0x10)
	struct TArray<int32_t> FocusParamAnglePointList; // 0x3c0(0x10)
	char pad_3D0[0x28]; // 0x3d0(0x28)
	bool bDebugDispSearchScore; // 0x3f8(0x01)
	bool bDebugDispSearchParam; // 0x3f9(0x01)
	bool bDebugDispSearchNpc; // 0x3fa(0x01)
	char pad_3FB[0x7d]; // 0x3fb(0x7d)

	void UnregisterPsychicObject(struct AActor* PsyObjActor); // Function BattlePrototype.PsychicObjectManager.UnregisterPsychicObject // (Final|Native|Protected|BlueprintCallable) // @ game+0x1292710
	void UnregisterMapGimmick(struct AActor* pActor); // Function BattlePrototype.PsychicObjectManager.UnregisterMapGimmick // (Final|Native|Protected|BlueprintCallable) // @ game+0x1292690
	void SetSearchFocus(bool Flag); // Function BattlePrototype.PsychicObjectManager.SetSearchFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x1292440
	void SetSearchComponent(struct UPsychicObjectSearchComponent* comp); // Function BattlePrototype.PsychicObjectManager.SetSearchComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x12923b0
	void SetPsychicObjectTownSetting(bool Flag); // Function BattlePrototype.PsychicObjectManager.SetPsychicObjectTownSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1292320
	void SetPsychicObjectRegisterSkip(bool Flag); // Function BattlePrototype.PsychicObjectManager.SetPsychicObjectRegisterSkip // (Final|Native|Public|BlueprintCallable) // @ game+0x11a3a60
	void SetPsychicObjectMaterialValueDither(bool bRestore, float Rate); // Function BattlePrototype.PsychicObjectManager.SetPsychicObjectMaterialValueDither // (Final|Native|Protected|BlueprintCallable) // @ game+0x1292040
	void SetPsychicObjectMaterialDitherParameterOnce(bool bChkOnce, float applyRadius); // Function BattlePrototype.PsychicObjectManager.SetPsychicObjectMaterialDitherParameterOnce // (Final|Native|Protected|BlueprintCallable) // @ game+0x1291f70
	void SetPsychicObjectMaterialDitherParameter(bool bChkDist, float applyRadius); // Function BattlePrototype.PsychicObjectManager.SetPsychicObjectMaterialDitherParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x11ed210
	void SetPsychicObjectListEventC(bool bStart, bool bTick, bool bVisibility); // Function BattlePrototype.PsychicObjectManager.SetPsychicObjectListEventC // (Final|Native|Public|BlueprintCallable) // @ game+0x1291e50
	void SetNpcSearchDistanceMin(float Dist); // Function BattlePrototype.PsychicObjectManager.SetNpcSearchDistanceMin // (Final|Native|Protected|BlueprintCallable) // @ game+0x1291b70
	void SetFocusSearchPause(bool Flag, struct FName TagName, bool bResetResult); // Function BattlePrototype.PsychicObjectManager.SetFocusSearchPause // (Final|Native|Public|BlueprintCallable) // @ game+0x1291990
	void SetFocusSearchEnable(bool Flag, struct FName TagName); // Function BattlePrototype.PsychicObjectManager.SetFocusSearchEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x12918d0
	void SetFocusParameter(struct TArray<float> distList, struct TArray<int32_t> distPointList, struct TArray<float> angleList, struct TArray<int32_t> anglePointList); // Function BattlePrototype.PsychicObjectManager.SetFocusParameter // (Final|Native|Protected|BlueprintCallable) // @ game+0x1291640
	void SetEnemySearchID(enum class EPsychicObjectID searchId); // Function BattlePrototype.PsychicObjectManager.SetEnemySearchID // (Final|Native|Protected|BlueprintCallable) // @ game+0x12915c0
	bool SetEnablePsychicObjectRegister(struct FString refName, bool Flag); // Function BattlePrototype.PsychicObjectManager.SetEnablePsychicObjectRegister // (Final|Native|Public|BlueprintCallable) // @ game+0x1291480
	bool SetDuelPoleType(bool bDuelType); // Function BattlePrototype.PsychicObjectManager.SetDuelPoleType // (Final|Native|Public|BlueprintCallable) // @ game+0x1291350
	void SearchNpcPsychicObject(bool bUnqObj, bool bEnemy, struct FVector chkPos, struct FPsychicObjectFocusResult Result); // Function BattlePrototype.PsychicObjectManager.SearchNpcPsychicObject // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1291130
	void SearchFocusPsychicObject(struct FVector chkPos, struct FVector chkDir, struct FPsychicObjectFocusResult Result); // Function BattlePrototype.PsychicObjectManager.SearchFocusPsychicObject // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1291000
	void SearchEnemyPsychicObject(bool bUnqObj, struct FVector chkPos, struct FPsychicObjectFocusResult Result); // Function BattlePrototype.PsychicObjectManager.SearchEnemyPsychicObject // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1290ed0
	void ResetPsychicObjectArrangeTransform(); // Function BattlePrototype.PsychicObjectManager.ResetPsychicObjectArrangeTransform // (Final|Native|Public|BlueprintCallable) // @ game+0x1290eb0
	void ResetNpcObject(bool bUnqObj, bool bEnemy); // Function BattlePrototype.PsychicObjectManager.ResetNpcObject // (Final|Native|Protected|BlueprintCallable) // @ game+0x1290de0
	void RegisterPsychicObject(struct AActor* PsyObjActor); // Function BattlePrototype.PsychicObjectManager.RegisterPsychicObject // (Final|Native|Protected|BlueprintCallable) // @ game+0x1290cc0
	void RegisterMapGimmick(struct AActor* pActor, float distMin); // Function BattlePrototype.PsychicObjectManager.RegisterMapGimmick // (Final|Native|Protected|BlueprintCallable) // @ game+0x1290bf0
	bool IsSetSearchComponent(); // Function BattlePrototype.PsychicObjectManager.IsSetSearchComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1290b90
	bool IsFocusSearchPause(); // Function BattlePrototype.PsychicObjectManager.IsFocusSearchPause // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1290a40
	bool IsFocusSearchEnable(); // Function BattlePrototype.PsychicObjectManager.IsFocusSearchEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1290a10
	bool IsFloatObjectExist(); // Function BattlePrototype.PsychicObjectManager.IsFloatObjectExist // (Final|Native|Public|BlueprintCallable) // @ game+0x12909f0
	struct UObject* GetRandomSwingTypeObjectRegisterClass(); // Function BattlePrototype.PsychicObjectManager.GetRandomSwingTypeObjectRegisterClass // (Final|Native|Public|BlueprintCallable) // @ game+0x1290860
	struct UObject* GetRandomPsychicObjectRegisterClass(enum class EPsychicObjectSizeType objSize); // Function BattlePrototype.PsychicObjectManager.GetRandomPsychicObjectRegisterClass // (Final|Native|Public|BlueprintCallable) // @ game+0x12907d0
	int32_t GetPsychicObjectRegisterNum(); // Function BattlePrototype.PsychicObjectManager.GetPsychicObjectRegisterNum // (Final|Native|Public|BlueprintCallable) // @ game+0x12906c0
	struct AActor* GetPsychicObjectRegisterActor(int32_t idx); // Function BattlePrototype.PsychicObjectManager.GetPsychicObjectRegisterActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1290630
	int32_t GetPsychicObjectNumByLevelName(struct FName LevelName); // Function BattlePrototype.PsychicObjectManager.GetPsychicObjectNumByLevelName // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x12905a0
	struct TArray<struct AActor*> GetPsychicObjectListByLevelName(struct FName LevelName); // Function BattlePrototype.PsychicObjectManager.GetPsychicObjectListByLevelName // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x12904c0
	struct AActor* GetNpcObject(bool bUnqObj, bool bEnemy); // Function BattlePrototype.PsychicObjectManager.GetNpcObject // (Final|Native|Protected|BlueprintCallable) // @ game+0x12903e0
	void GetFocusPsychicObject(struct FPsychicObjectFocusResult Result); // Function BattlePrototype.PsychicObjectManager.GetFocusPsychicObject // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1290350
	struct AActor* GetEnemyObject(bool bUnqObj); // Function BattlePrototype.PsychicObjectManager.GetEnemyObject // (Final|Native|Protected|BlueprintCallable) // @ game+0x12902b0
	struct TArray<enum class EPsychicObjectSizeType> GetAvailableRegisterSizeArray(int32_t Len, struct TArray<enum class EPsychicObjectSizeType> requestSize); // Function BattlePrototype.PsychicObjectManager.GetAvailableRegisterSizeArray // (Final|Native|Public|BlueprintCallable) // @ game+0x1290140
	void DebugPrintString(struct FString logString); // Function BattlePrototype.PsychicObjectManager.DebugPrintString // (Final|Native|Public|BlueprintCallable) // @ game+0x128fe70
	void DebugPrintRegisterInfo(); // Function BattlePrototype.PsychicObjectManager.DebugPrintRegisterInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1290120
	void DebugPrintPsychicObjectSizeList(); // Function BattlePrototype.PsychicObjectManager.DebugPrintPsychicObjectSizeList // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void DebugMultiSphereTraceForObject(struct TArray<struct FHitResult> resultList, struct FVector posS, struct FVector Pose, float Radius, bool bDbDraw, bool bDbPrint); // Function BattlePrototype.PsychicObjectManager.DebugMultiSphereTraceForObject // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x128ff10
	void DebugLog(struct FString logString); // Function BattlePrototype.PsychicObjectManager.DebugLog // (Final|Native|Public|BlueprintCallable) // @ game+0x128fe70
	void DebugCheckPsychicObjectSizeListNum(); // Function BattlePrototype.PsychicObjectManager.DebugCheckPsychicObjectSizeListNum // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ClearPsychicObjectList(); // Function BattlePrototype.PsychicObjectManager.ClearPsychicObjectList // (Final|Native|Public|BlueprintCallable) // @ game+0x128fe50
	bool CheckNpcObject(bool bUnqObj, bool bEnemy, bool chkCapture, bool chkAttack); // Function BattlePrototype.PsychicObjectManager.CheckNpcObject // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x128fba0
	bool CheckEnemyObject(bool bUnqObj, bool chkCapture, bool chkAttack); // Function BattlePrototype.PsychicObjectManager.CheckEnemyObject // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x128fa80
};

// Class BattlePrototype.PsychicObjectManagerAsyncComponent
// Size: 0x198 (Inherited: 0xd0)
struct UPsychicObjectManagerAsyncComponent : URSAsyncTaskActorComponent {
	bool bAsyncTack; // 0xd0(0x01)
	char pad_D1[0x6f]; // 0xd1(0x6f)
	bool bTickControlEnable; // 0x140(0x01)
	bool bSimulateControl; // 0x141(0x01)
	bool bTickControlPrevAsync; // 0x142(0x01)
	bool bTickControlTickAsync; // 0x143(0x01)
	float TickControlDistanceSq; // 0x144(0x04)
	float TickControlActorNum; // 0x148(0x04)
	int32_t TickControlChangeNum; // 0x14c(0x04)
	bool bBrainField; // 0x150(0x01)
	char pad_151[0x3]; // 0x151(0x03)
	int32_t ActorNum; // 0x154(0x04)
	int32_t ActorIndex; // 0x158(0x04)
	char pad_15C[0x34]; // 0x15c(0x34)
	bool bRenderCheckEnable; // 0x190(0x01)
	bool bRenderCheckPrevAsync; // 0x191(0x01)
	bool bRenderCheckTickAsync; // 0x192(0x01)
	bool bDebugPrintTickControl; // 0x193(0x01)
	char pad_194[0x4]; // 0x194(0x04)

	void UpdatePlayerPos(); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.UpdatePlayerPos // (Final|Native|Protected|BlueprintCallable) // @ game+0x12971f0
	void TickControlTickAsync(); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.TickControlTickAsync // (Final|Native|Private|BlueprintCallable) // @ game+0x1297090
	void TickControlPrevAsync(); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.TickControlPrevAsync // (Final|Native|Private|BlueprintCallable) // @ game+0x1297070
	void SetTickReference(struct FString refName, bool Flag); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.SetTickReference // (Final|Native|Protected|BlueprintCallable) // @ game+0x1296b00
	void SetTickControlParameter(float activeDistance, int32_t actorNumPerFrame, int32_t changeNumPerFrame); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.SetTickControlParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12969f0
	void SetTickControlEnable(bool Flag); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.SetTickControlEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1296960
	void SetTickControlBrainField(bool Flag); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.SetTickControlBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x12968e0
	void SetRenderCheckEnable(bool Flag); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.SetRenderCheckEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x12967e0
	void SetRenderCheckActor(bool Flag, struct AActor* pActor); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.SetRenderCheckActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1296720
	void RenderCheckTickAsync(); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.RenderCheckTickAsync // (Final|Native|Private|BlueprintCallable) // @ game+0x1295d90
	void RenderCheckPrevAsync(); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.RenderCheckPrevAsync // (Final|Native|Private|BlueprintCallable) // @ game+0x1295d70
	int32_t GetRenderCheckActorListLen(); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.GetRenderCheckActorListLen // (Final|Native|Public|BlueprintCallable) // @ game+0x1294f60
	struct AActor* GetRenderCheckActor(int32_t Index); // Function BattlePrototype.PsychicObjectManagerAsyncComponent.GetRenderCheckActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1294ec0
};

// Class BattlePrototype.PsychicObjectSearchComponent
// Size: 0x280 (Inherited: 0xd0)
struct UPsychicObjectSearchComponent : URSAsyncTaskActorComponent {
	char pad_D0[0x8]; // 0xd0(0x08)
	struct FMulticastInlineDelegate DispatchUpdateSearchObject; // 0xd8(0x10)
	char pad_E8[0x30]; // 0xe8(0x30)
	struct TArray<float> FocusParamDistList; // 0x118(0x10)
	struct TArray<int32_t> FocusParamDistPointList; // 0x128(0x10)
	struct TArray<float> FocusParamAngleList; // 0x138(0x10)
	struct TArray<int32_t> FocusParamAnglePointList; // 0x148(0x10)
	char pad_158[0x90]; // 0x158(0x90)
	int32_t PsychicFieldObjectNum; // 0x1e8(0x04)
	float PsychicFieldRadius; // 0x1ec(0x04)
	bool DebugPrintPsychicFieldSearch; // 0x1f0(0x01)
	char pad_1F1[0x1b]; // 0x1f1(0x1b)
	bool bDebugDispSyncProc; // 0x20c(0x01)
	bool bDebugDispSearchProc; // 0x20d(0x01)
	bool bDebugDispSearchScore; // 0x20e(0x01)
	char pad_20F[0x1]; // 0x20f(0x01)
	int32_t DebugDispSearchCount; // 0x210(0x04)
	int32_t DebugDispTraceCount; // 0x214(0x04)
	char pad_218[0x60]; // 0x218(0x60)
	bool bDebugDispSearchEnpc; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)

	void UnregisterMapGimmick(struct AActor* pActor); // Function BattlePrototype.PsychicObjectSearchComponent.UnregisterMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x1297170
	struct TArray<struct AActor*> SortBySize(struct TArray<struct AActor*> ActorList, bool bAscend); // Function BattlePrototype.PsychicObjectSearchComponent.SortBySize // (Final|Native|Public|BlueprintCallable) // @ game+0x1296ef0
	struct TArray<struct AActor*> SortByDistance(struct TArray<struct AActor*> ActorList, struct AActor* pTargetActor, bool bAscend, bool bIgnoreZ, bool bSearchPos, struct FVector checkPos, float searchRadius); // Function BattlePrototype.PsychicObjectSearchComponent.SortByDistance // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1296c30
	void SetPsychicFieldParameter(float Radius, int32_t objNum); // Function BattlePrototype.PsychicObjectSearchComponent.SetPsychicFieldParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1296570
	void SetFocusSearchScoreParameter(struct TArray<float> distList, struct TArray<int32_t> distPointList, struct TArray<float> angleList, struct TArray<int32_t> anglePointList); // Function BattlePrototype.PsychicObjectSearchComponent.SetFocusSearchScoreParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12962e0
	void SetFocusSearchHeightParameter(float heightMin, float heightMax); // Function BattlePrototype.PsychicObjectSearchComponent.SetFocusSearchHeightParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1296220
	void SetFocusSearchEnable(bool Flag, struct FName TagName); // Function BattlePrototype.PsychicObjectSearchComponent.SetFocusSearchEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1296160
	void SetEnpcSearchParameter(float radiusMin); // Function BattlePrototype.PsychicObjectSearchComponent.SetEnpcSearchParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12960e0
	struct TArray<struct AActor*> SearchPsychicFieldTarget(struct FVector SearchPos, struct AActor* pTargetActor); // Function BattlePrototype.PsychicObjectSearchComponent.SearchPsychicFieldTarget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1295f20
	struct TArray<struct AActor*> SearchPsychicFieldObject(); // Function BattlePrototype.PsychicObjectSearchComponent.SearchPsychicFieldObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1295ea0
	void SearchEnpcPsychicObject(struct FVector chkPos, struct FPsychicObjectEvaluateData Result); // Function BattlePrototype.PsychicObjectSearchComponent.SearchEnpcPsychicObject // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1295db0
	void RegisterMapGimmick(struct AActor* pActor, float distMin); // Function BattlePrototype.PsychicObjectSearchComponent.RegisterMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x1295ca0
	bool IsFocusSearchEnable(); // Function BattlePrototype.PsychicObjectSearchComponent.IsFocusSearchEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1295220
	struct AActor* GetSearchResultUnq(); // Function BattlePrototype.PsychicObjectSearchComponent.GetSearchResultUnq // (Final|Native|Public|BlueprintCallable) // @ game+0x1295100
	struct AActor* GetSearchResultNrl(); // Function BattlePrototype.PsychicObjectSearchComponent.GetSearchResultNrl // (Final|Native|Public|BlueprintCallable) // @ game+0x12950e0
	struct AActor* GetEnpcPsychicObject(); // Function BattlePrototype.PsychicObjectSearchComponent.GetEnpcPsychicObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1294e30
	void DebugDispFocusSearchProc(struct FVector Pos); // Function BattlePrototype.PsychicObjectSearchComponent.DebugDispFocusSearchProc // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1294a20
	bool CheckEnpcPsychicObject(bool chkCapture, bool chkAttack); // Function BattlePrototype.PsychicObjectSearchComponent.CheckEnpcPsychicObject // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1294940
};

// Class BattlePrototype.PsychicObjectSearchInterface
// Size: 0x28 (Inherited: 0x28)
struct UPsychicObjectSearchInterface : UInterface {

	void SetSearchPoint(int32_t Point); // Function BattlePrototype.PsychicObjectSearchInterface.SetSearchPoint // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1296860
	bool SetEffectFocus(bool Flag); // Function BattlePrototype.PsychicObjectSearchInterface.SetEffectFocus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1296040
	bool IsSkipCheckRendered(); // Function BattlePrototype.PsychicObjectSearchInterface.IsSkipCheckRendered // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1295260
	bool IsSearchUnique(); // Function BattlePrototype.PsychicObjectSearchInterface.IsSearchUnique // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184580
	bool IsSearchMapGimmick(); // Function BattlePrototype.PsychicObjectSearchInterface.IsSearchMapGimmick // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184700
	bool IsSearchable(); // Function BattlePrototype.PsychicObjectSearchInterface.IsSearchable // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1184520
	float GetSearchSizeValue(); // Function BattlePrototype.PsychicObjectSearchInterface.GetSearchSizeValue // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1295120
	float GetSearchRadius(); // Function BattlePrototype.PsychicObjectSearchInterface.GetSearchRadius // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12950b0
	struct FVector GetSearchPos(); // Function BattlePrototype.PsychicObjectSearchInterface.GetSearchPos // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1290930
	int32_t GetSearchPoint(); // Function BattlePrototype.PsychicObjectSearchInterface.GetSearchPoint // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1295080
	bool GetSearchHeight(float heightMin, float heightMax); // Function BattlePrototype.PsychicObjectSearchInterface.GetSearchHeight // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1294f80
};

// Class BattlePrototype.PsychicObjectSoundComponent
// Size: 0x100 (Inherited: 0xc0)
struct UPsychicObjectSoundComponent : UActorComponent {
	char pad_C0[0x8]; // 0xc0(0x08)
	struct FName OverrideEffectTableId; // 0xc8(0x08)
	struct FName OverrideSoundTableId; // 0xd0(0x08)
	struct UFootStepComponent* FootStepComponent; // 0xd8(0x08)
	struct TArray<struct FHitActorInfoAtPsychic> HitActorList; // 0xe0(0x10)
	float HitSeInterval; // 0xf0(0x04)
	float PlaySeVelocity; // 0xf4(0x04)
	float PlayRunSeVelocity; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)

	void OnHitCallback(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult Hit); // Function BattlePrototype.PsychicObjectSoundComponent.OnHitCallback // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1295af0
};

// Class BattlePrototype.PsychicObjectSpawnComponent
// Size: 0x4a0 (Inherited: 0x4a0)
struct UPsychicObjectSpawnComponent : UStaticMeshComponent {
};

// Class BattlePrototype.PsychokinesisedComponent
// Size: 0xc0 (Inherited: 0xc0)
struct UPsychokinesisedComponent : UActorComponent {

	void MoveRootComponent(struct FVector Delta, struct FHitResult OutHit, bool bSweep, bool bTeleport); // Function BattlePrototype.PsychokinesisedComponent.MoveRootComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1295940
	void MakeRotatorAxisAndAngle(struct FRotator outRot, struct FVector Axis, float angleDegree); // Function BattlePrototype.PsychokinesisedComponent.MakeRotatorAxisAndAngle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1295820
	void GetAxisAndAngleFromRotator(struct FVector Axis, float angleDegree, struct FRotator Rot); // Function BattlePrototype.PsychokinesisedComponent.GetAxisAndAngleFromRotator // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1294bd0
	void DebugDrawRotator(struct FRotator Rot, struct FVector centerPos, float Radius); // Function BattlePrototype.PsychokinesisedComponent.DebugDrawRotator // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1294ab0
	void CalcAngularVelocityToTarget(struct FVector AngularVelocity, struct USceneComponent* directionComp, struct FVector TargetLocation); // Function BattlePrototype.PsychokinesisedComponent.CalcAngularVelocityToTarget // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1294810
};

// Class BattlePrototype.PurposeMessageParamManager
// Size: 0x50 (Inherited: 0x28)
struct UPurposeMessageParamManager : UObject {
	struct UDataTable* dataTable_; // 0x28(0x08)
	struct UDataTable* bondsPurposeTable_; // 0x30(0x08)
	char pad_38[0x18]; // 0x38(0x18)

	void SetPurposeMessageNum(int32_t Num); // Function BattlePrototype.PurposeMessageParamManager.SetPurposeMessageNum // (Final|Native|Public|BlueprintCallable) // @ game+0xad5970
	void SetPurposeMessage(struct FString messageID); // Function BattlePrototype.PurposeMessageParamManager.SetPurposeMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1296640
	void InitData(struct URSGameInstance* gameInst); // Function BattlePrototype.PurposeMessageParamManager.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x12951a0
	int32_t GetPurposeMessageNum(); // Function BattlePrototype.PurposeMessageParamManager.GetPurposeMessageNum // (Final|Native|Public|BlueprintCallable) // @ game+0xcdd570
	struct FName GetPurposeMessage(); // Function BattlePrototype.PurposeMessageParamManager.GetPurposeMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1294e80
	struct FName GetBondsPurposeMessage(enum class EPlayerID heroID, enum class EPlayerID TargetID); // Function BattlePrototype.PurposeMessageParamManager.GetBondsPurposeMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1294d60
};

// Class BattlePrototype.QuestData
// Size: 0x58 (Inherited: 0x28)
struct UQuestData : UObject {
	struct UDataTable* RefMainDataAsset; // 0x28(0x08)
	struct UDataTable* RefSubDataAsset; // 0x30(0x08)
	struct UDataTable* RefBondsDataAsset; // 0x38(0x08)
	struct UDataTable* finderMain; // 0x40(0x08)
	struct UMainQuestDBAsset* MainQuestDataAsset; // 0x48(0x08)
	struct UBondsEpisodeDBAsset* BondsQuestDataAsset; // 0x50(0x08)

	bool UnloadDataTable_Sub(); // Function BattlePrototype.QuestData.UnloadDataTable_Sub // (Final|Native|Public|BlueprintCallable) // @ game+0x1297140
	bool UnloadDataTable_Main(); // Function BattlePrototype.QuestData.UnloadDataTable_Main // (Final|Native|Public|BlueprintCallable) // @ game+0x1297110
	bool UnloadDataTable_Bonds(); // Function BattlePrototype.QuestData.UnloadDataTable_Bonds // (Final|Native|Public|BlueprintCallable) // @ game+0x12970e0
	bool UnloadDataTable(); // Function BattlePrototype.QuestData.UnloadDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x12970b0
	bool LoadDataAsset_Sub(struct FString dataPath); // Function BattlePrototype.QuestData.LoadDataAsset_Sub // (Final|Native|Public|BlueprintCallable) // @ game+0x1295730
	bool LoadDataAsset_Main(struct FString dataPath); // Function BattlePrototype.QuestData.LoadDataAsset_Main // (Final|Native|Public|BlueprintCallable) // @ game+0x1295640
	bool LoadDataAsset_Bonds(struct FString dataPath); // Function BattlePrototype.QuestData.LoadDataAsset_Bonds // (Final|Native|Public|BlueprintCallable) // @ game+0x1295550
	bool LoadDataAsset(struct FString mainDTPath, struct FString subDTPath, struct FString bondsDTPath); // Function BattlePrototype.QuestData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1295350
	bool IsValidSubDB(); // Function BattlePrototype.QuestData.IsValidSubDB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295320
	bool IsValidMainDB(); // Function BattlePrototype.QuestData.IsValidMainDB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12952f0
	bool IsValidDB(); // Function BattlePrototype.QuestData.IsValidDB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12952c0
	bool IsValidBondsDB(); // Function BattlePrototype.QuestData.IsValidBondsDB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295290
	int32_t GetSubQuestDataNum(); // Function BattlePrototype.QuestData.GetSubQuestDataNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295170
	struct UDataTable* GetSubQuestData(); // Function BattlePrototype.QuestData.GetSubQuestData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1295150
	int32_t GetMainQuestDataNum(); // Function BattlePrototype.QuestData.GetMainQuestDataNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1294e50
	struct UMainQuestDBAsset* GetMainQuestData(); // Function BattlePrototype.QuestData.GetMainQuestData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11fe4e0
	int32_t GetBondsEpisodeDataNum(); // Function BattlePrototype.QuestData.GetBondsEpisodeDataNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1294d30
	struct UBondsEpisodeDBAsset* GetBondsEpisodeData(); // Function BattlePrototype.QuestData.GetBondsEpisodeData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1294d10
};

// Class BattlePrototype.MainQuestDBAsset
// Size: 0x78 (Inherited: 0x28)
struct UMainQuestDBAsset : UObject {
	struct TMap<struct FName, struct FMainQuestDBDataCell> DBMap; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.MainQuestDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.SubQuestDBAsset
// Size: 0x78 (Inherited: 0x28)
struct USubQuestDBAsset : UObject {
	struct TMap<struct FName, struct FSubQuestDBDataCell> DBMap; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.SubQuestDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.BondsEpisodeDBAsset
// Size: 0x78 (Inherited: 0x28)
struct UBondsEpisodeDBAsset : UObject {
	struct TMap<struct FName, struct FBondsEpisodeDBDataCell> DBMap; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.BondsEpisodeDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.QuestParamManager
// Size: 0x130 (Inherited: 0x28)
struct UQuestParamManager : UObject {
	struct FMulticastInlineDelegate onChangeNoticeUiStateDelegate_; // 0x28(0x10)
	struct FMulticastInlineDelegate onChangeQuestActiveUiStateDelegate_; // 0x38(0x10)
	struct TArray<struct FQuestParams> questParams_; // 0x48(0x10)
	struct TArray<struct FConditionQuestParams> subQuestParams_; // 0x58(0x10)
	struct TArray<struct FProgressRateQuestParams> bondsQuestParams_; // 0x68(0x10)
	int32_t activeMainQuest_; // 0x78(0x04)
	int32_t activeSubQuest_; // 0x7c(0x04)
	int32_t activeSubQuestKasane_; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct TArray<int32_t> needItemSubQuestNumber_; // 0x88(0x10)
	struct TArray<int32_t> needKillEnemySubQuestNumber_; // 0x98(0x10)
	char pad_A8[0x10]; // 0xa8(0x10)
	struct TArray<struct FName> subQuestRowNames_; // 0xb8(0x10)
	struct TArray<struct FName> bondsQuestRowNames_; // 0xc8(0x10)
	char pad_D8[0x20]; // 0xd8(0x20)
	bool bDrivemode_; // 0xf8(0x01)
	char pad_F9[0x37]; // 0xf9(0x37)

	void ThrowSubQuestNotification(struct FName questId); // Function BattlePrototype.QuestParamManager.ThrowSubQuestNotification // (Final|Native|Public|BlueprintCallable) // @ game+0x129c2a0
	void SetSubQuestState(int32_t QuestNumber, enum class QuestProgressState State); // Function BattlePrototype.QuestParamManager.SetSubQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x129c1e0
	void SetNewIcon(enum class QuestType qType, int32_t QuestNumber, bool flg); // Function BattlePrototype.QuestParamManager.SetNewIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x129c0d0
	void SetMainQuestState(int32_t QuestNumber, enum class QuestProgressState State); // Function BattlePrototype.QuestParamManager.SetMainQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x129c010
	void SetBondsQuestState(int32_t QuestNumber, enum class QuestProgressState State); // Function BattlePrototype.QuestParamManager.SetBondsQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x129be60
	void SetBondsQuestProgressRate(int32_t QuestNumber, int32_t Rate); // Function BattlePrototype.QuestParamManager.SetBondsQuestProgressRate // (Final|Native|Public|BlueprintCallable) // @ game+0x129bda0
	void SetActiveSubQuestNumber(int32_t subQuestNumber); // Function BattlePrototype.QuestParamManager.SetActiveSubQuestNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x129bd20
	void KillEnemy(struct FName enemyName, struct FHCHitResult hcResult, enum class EPsychicObjectUniqueType poType, int32_t killNum, bool bBrainCrashMulti, enum class EPlayerID holoPlayerID); // Function BattlePrototype.QuestParamManager.KillEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x129b890
	bool IsUnlockContentMainQuest(struct FName Key, int32_t contentNumber); // Function BattlePrototype.QuestParamManager.IsUnlockContentMainQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x129b7d0
	bool IsUnlockContentBondsEpisode(struct FName Key, int32_t contentNumber); // Function BattlePrototype.QuestParamManager.IsUnlockContentBondsEpisode // (Final|Native|Public|BlueprintCallable) // @ game+0x129b710
	bool IsTargetEnemyForActiveSubQuest(struct FString enemyName); // Function BattlePrototype.QuestParamManager.IsTargetEnemyForActiveSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x129b620
	bool IsSubQuestRelatedToThePlayer(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.IsSubQuestRelatedToThePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x129b590
	bool IsQuestEnemy(struct FName enemyName); // Function BattlePrototype.QuestParamManager.IsQuestEnemy // (Final|Native|Public|BlueprintCallable) // @ game+0x129b500
	bool IsBondsQuestRelatedToThePlayer(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.IsBondsQuestRelatedToThePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x129b470
	void InProgressSubQuest(int32_t subQuestNumber); // Function BattlePrototype.QuestParamManager.InProgressSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x129b2f0
	void InProgressBondsQuest(int32_t bondsQuestNumber); // Function BattlePrototype.QuestParamManager.InProgressBondsQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x129b270
	void InitData(struct URSGameInstance* gameInst); // Function BattlePrototype.QuestParamManager.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x129b3f0
	void InitAtExNewGame(enum class EPlayerID MainPlayerID); // Function BattlePrototype.QuestParamManager.InitAtExNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x129b370
	enum class QuestProgressState GetSubQuestState(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.GetSubQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x129b1e0
	int32_t GetSubQuestNumberFromID(struct FName questId); // Function BattlePrototype.QuestParamManager.GetSubQuestNumberFromID // (Final|Native|Public|BlueprintCallable) // @ game+0x129b150
	int32_t GetSubQuestNumberAchieved(struct FName questId, struct FName TargetID); // Function BattlePrototype.QuestParamManager.GetSubQuestNumberAchieved // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x129b060
	struct TArray<int32_t> GetQuestSortID(enum class QuestType questTyp, enum class SortType SortType, int32_t activeNumber); // Function BattlePrototype.QuestParamManager.GetQuestSortID // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x129af10
	enum class QuestProgressState GetMainQuestState(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.GetMainQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x129ae80
	int32_t GetMainQuestNumberFromID(struct FName questId); // Function BattlePrototype.QuestParamManager.GetMainQuestNumberFromID // (Final|Native|Public|BlueprintCallable) // @ game+0x129adf0
	struct FName GetMainQuestIDFromNumber(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.GetMainQuestIDFromNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x129ad60
	void GetItem(struct FName ItemName, int32_t itemNum); // Function BattlePrototype.QuestParamManager.GetItem // (Final|Native|Public|BlueprintCallable) // @ game+0x129aca0
	struct FName GetIDFromSubQuestNumber(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.GetIDFromSubQuestNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x129ac10
	enum class QuestProgressState GetBondsQuestState(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.GetBondsQuestState // (Final|Native|Public|BlueprintCallable) // @ game+0x129aa80
	int32_t GetBondsQuestProgressRate(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.GetBondsQuestProgressRate // (Final|Native|Public|BlueprintCallable) // @ game+0x129a9f0
	int32_t GetBondsQuestNumberFromID(struct FName questId); // Function BattlePrototype.QuestParamManager.GetBondsQuestNumberFromID // (Final|Native|Public|BlueprintCallable) // @ game+0x129a960
	struct FName GetBondsEpisodeIDFromNumber(int32_t Number); // Function BattlePrototype.QuestParamManager.GetBondsEpisodeIDFromNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x129a8d0
	int32_t GetActiveSubQuestNumber(); // Function BattlePrototype.QuestParamManager.GetActiveSubQuestNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x129a8a0
	bool CheckSubQuestSuitableNowPlayer(int32_t QuestNumber); // Function BattlePrototype.QuestParamManager.CheckSubQuestSuitableNowPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x129a7f0
	void CheckSubQuestsStateNotOrder(); // Function BattlePrototype.QuestParamManager.CheckSubQuestsStateNotOrder // (Final|Native|Public|BlueprintCallable) // @ game+0x129a880
	bool CheckPlayingDLCBondsNow(); // Function BattlePrototype.QuestParamManager.CheckPlayingDLCBondsNow // (Final|Native|Public|BlueprintCallable) // @ game+0x129a7c0
	bool CheckNeedItem(struct FName ItemId); // Function BattlePrototype.QuestParamManager.CheckNeedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x129a730
	bool CheckDLCQuestContentCheck(struct FName questId); // Function BattlePrototype.QuestParamManager.CheckDLCQuestContentCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x129a6a0
	void ChangeToProgressAllQuest(); // Function BattlePrototype.QuestParamManager.ChangeToProgressAllQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
};

// Class BattlePrototype.QuestDataUtility
// Size: 0x48 (Inherited: 0x28)
struct UQuestDataUtility : UBlueprintFunctionLibrary {
	char pad_28[0x20]; // 0x28(0x20)

	void SetDLCBondsStartTargetChar(struct UObject* WorldContextObject, struct FName dlcBondsID, enum class EPlayerID startChar); // Function BattlePrototype.QuestDataUtility.SetDLCBondsStartTargetChar // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x129bf20
	bool KillEnemyDataForSubQuest(struct UObject* WorldContextObject, struct FName enemyName, struct FHCHitResult hcResult, enum class EPsychicObjectUniqueType poType, bool bBrainCrashMulti, enum class EPlayerID holoPlayerID); // Function BattlePrototype.QuestDataUtility.KillEnemyDataForSubQuest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x129bae0
	void GetCharStartedDLCBonds(struct UObject* WorldContextObject, struct FName dlcBondsID, enum class EPlayerID startedCharID); // Function BattlePrototype.QuestDataUtility.GetCharStartedDLCBonds // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x129ab10
	bool CheckDLCQuestContentCheck(struct UObject* WorldContextObject, struct FName questId); // Function BattlePrototype.QuestDataUtility.CheckDLCQuestContentCheck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x129a5e0
};

// Class BattlePrototype.RadialBlurManager
// Size: 0x2a0 (Inherited: 0x230)
struct ARadialBlurManager : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	bool IsPlaying; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct FRadialBlurData AdditionalBlurParameter; // 0x248(0x38)
	struct UMaterialParameterCollection* MPC; // 0x280(0x08)
	struct UMaterialParameterCollection* MPCC; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)

	void Stop(); // Function BattlePrototype.RadialBlurManager.Stop // (Final|Native|Public|BlueprintCallable) // @ game+0x129f180
	void PlayPresetColorModulate(int32_t Priority, struct UCurveVector* CurveData, struct FVector Location, enum class ENotifyRadialBlurModulateType PresetColorType, bool Force); // Function BattlePrototype.RadialBlurManager.PlayPresetColorModulate // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x129e4d0
	void Play(int32_t Priority, struct UCurveVector* CurveData, struct FVector Location, struct FLinearColor ColorModuate, bool Force); // Function BattlePrototype.RadialBlurManager.Play // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x129e310
	bool GetPlaying(); // Function BattlePrototype.RadialBlurManager.GetPlaying // (Final|Native|Public|BlueprintCallable) // @ game+0x1274c10
};

// Class BattlePrototype.REDebugLines
// Size: 0x268 (Inherited: 0x230)
struct UREDebugLines : UUserWidget {
	struct FVector2D m_AbsolutePosition; // 0x230(0x08)
	struct FVector2D m_AbsoluteSize; // 0x238(0x08)
	struct FVector2D topleft; // 0x240(0x08)
	struct FVector2D topright; // 0x248(0x08)
	struct FVector2D bottomleft; // 0x250(0x08)
	struct FVector2D bottomright; // 0x258(0x08)
	bool m_Circle; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)

	void SetHitData(struct FVector2D Pos, struct FVector2D Size); // Function BattlePrototype.REDebugLines.SetHitData // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x129e8b0
	void SetClippingZone(struct FVector2D topleft, struct FVector2D topright, struct FVector2D bottomleft, struct FVector2D bottomright); // Function BattlePrototype.REDebugLines.SetClippingZone // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x129e780
	void SetCircle(bool circle); // Function BattlePrototype.REDebugLines.SetCircle // (Final|Native|Public|BlueprintCallable) // @ game+0x129e6f0
};

// Class BattlePrototype.REDHorizonFlipbookWidget
// Size: 0x308 (Inherited: 0x238)
struct UREDHorizonFlipbookWidget : UHorizonFlipbookWidget {
	bool FlagMouse; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	struct FRedMouseArgument MouseCallArgument; // 0x23c(0x0c)
	struct FVector2D MouseHitOffsetPos; // 0x248(0x08)
	struct FVector2D MouseHitOffsetSize; // 0x250(0x08)
	bool DebugMouseHitDisp; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
	struct FMulticastInlineDelegate m_FlipBookFocusMouse; // 0x260(0x10)
	struct FMulticastInlineDelegate m_FlipBookUnFocusMouse; // 0x270(0x10)
	struct FMulticastInlineDelegate m_FlipBookDownMouse; // 0x280(0x10)
	char pad_290[0x18]; // 0x290(0x18)
	struct TWeakObjectPtr<struct UUIBase> m_ParentUIBase; // 0x2a8(0x08)
	struct UREDebugLines* m_DebugDraw; // 0x2b0(0x08)
	char pad_2B8[0x50]; // 0x2b8(0x50)

	void SetParentUIBase(struct UUIBase* pUiBase); // Function BattlePrototype.REDHorizonFlipbookWidget.SetParentUIBase // (Final|Native|Public|BlueprintCallable) // @ game+0x129ef50
	void SetMouseMode(bool mousemode, int32_t inputLevel); // Function BattlePrototype.REDHorizonFlipbookWidget.SetMouseMode // (Final|Native|Public|BlueprintCallable) // @ game+0x129ed10
	void SetMouseInputLevel(int32_t inputLevel); // Function BattlePrototype.REDHorizonFlipbookWidget.SetMouseInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x129eb90
	void SetMouseDisable(bool Flag); // Function BattlePrototype.REDHorizonFlipbookWidget.SetMouseDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x129e9e0
	void RedFlipBookUnFocus__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDHorizonFlipbookWidget.RedFlipBookUnFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedFlipBookFocus__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDHorizonFlipbookWidget.RedFlipBookFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedFlipBookDown__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDHorizonFlipbookWidget.RedFlipBookDown__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	int32_t GetMouseInputLevel(); // Function BattlePrototype.REDHorizonFlipbookWidget.GetMouseInputLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129e2b0
	bool GetMouseDisable(); // Function BattlePrototype.REDHorizonFlipbookWidget.GetMouseDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129e250
	struct FVector2D GetAbsoluteSize(); // Function BattlePrototype.REDHorizonFlipbookWidget.GetAbsoluteSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x129e1c0
	struct FVector2D GetAbsolutePosition(); // Function BattlePrototype.REDHorizonFlipbookWidget.GetAbsolutePosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x129e130
	bool CheckRectangleCore(struct FVector2D Position); // Function BattlePrototype.REDHorizonFlipbookWidget.CheckRectangleCore // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x129def0
	bool CheckRectangle(); // Function BattlePrototype.REDHorizonFlipbookWidget.CheckRectangle // (Final|Native|Public|BlueprintCallable) // @ game+0x129de60
};

// Class BattlePrototype.REDImage
// Size: 0x2e8 (Inherited: 0x210)
struct UREDImage : UImage {
	char pad_210[0x8]; // 0x210(0x08)
	bool FlagMouse; // 0x218(0x01)
	char pad_219[0x3]; // 0x219(0x03)
	struct FVector2D MouseHitOffsetPos; // 0x21c(0x08)
	struct FVector2D MouseHitOffsetSize; // 0x224(0x08)
	bool DebugMouseHitDisp; // 0x22c(0x01)
	char pad_22D[0x3]; // 0x22d(0x03)
	struct FRedMouseArgument MouseCallArgument; // 0x230(0x0c)
	char pad_23C[0x4]; // 0x23c(0x04)
	struct FMulticastInlineDelegate m_ImageFocusMouse; // 0x240(0x10)
	struct FMulticastInlineDelegate m_ImageUnFocusMouse; // 0x250(0x10)
	struct FMulticastInlineDelegate m_ImageDownMouse; // 0x260(0x10)
	bool bIsStartTick; // 0x270(0x01)
	char pad_271[0x17]; // 0x271(0x17)
	struct TWeakObjectPtr<struct UUIBase> m_ParentUIBase; // 0x288(0x08)
	struct UREDebugLines* m_DebugDraw; // 0x290(0x08)
	struct FGeometry m_geometry; // 0x298(0x38)
	struct FVector2D vectorPixel; // 0x2d0(0x08)
	struct FVector2D vectorSize; // 0x2d8(0x08)
	struct FVector2D vectorPos; // 0x2e0(0x08)

	void SetParentUIBase(struct UUIBase* pUiBase); // Function BattlePrototype.REDImage.SetParentUIBase // (Final|Native|Public|BlueprintCallable) // @ game+0x129efe0
	void SetMouseMode(bool mousemode, int32_t inputLevel); // Function BattlePrototype.REDImage.SetMouseMode // (Final|Native|Public|BlueprintCallable) // @ game+0x129edd0
	void SetMouseInputLevel(int32_t inputLevel); // Function BattlePrototype.REDImage.SetMouseInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x129ec10
	void SetMouseDisable(bool Flag); // Function BattlePrototype.REDImage.SetMouseDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x129ea70
	void RedImageUnFocus__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDImage.RedImageUnFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedImageFocus__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDImage.RedImageFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedImageDown__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDImage.RedImageDown__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	int32_t GetMouseInputLevel(); // Function BattlePrototype.REDImage.GetMouseInputLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129e2d0
	bool GetMouseDisable(); // Function BattlePrototype.REDImage.GetMouseDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129e270
	struct FVector2D GetAbsoluteSize(); // Function BattlePrototype.REDImage.GetAbsoluteSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129e1f0
	struct FVector2D GetAbsolutePosition(); // Function BattlePrototype.REDImage.GetAbsolutePosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129e160
	bool CheckRectangleCore(struct FVector2D Position); // Function BattlePrototype.REDImage.CheckRectangleCore // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129df70
	bool CheckRectangle(); // Function BattlePrototype.REDImage.CheckRectangle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x129de90
	bool CheckCircleCore(struct FVector2D Position); // Function BattlePrototype.REDImage.CheckCircleCore // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129dd60
	bool CheckCircle(); // Function BattlePrototype.REDImage.CheckCircle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x129dd00
};

// Class BattlePrototype.REDImageBase
// Size: 0x238 (Inherited: 0x210)
struct UREDImageBase : UImage {
	struct TArray<struct FREDLocalizeImageParam> LocalizedParamList; // 0x210(0x10)
	struct FREDLocalizeImageParam DefaultParam; // 0x220(0x14)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class BattlePrototype.REDLuaScriptComponent
// Size: 0x118 (Inherited: 0xc0)
struct UREDLuaScriptComponent : UActorComponent {
	struct UObject* m_parent; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)
	struct APlayerController* m_PlayerController; // 0xd0(0x08)
	char pad_D8[0x8]; // 0xd8(0x08)
	struct UObject* m_AnimationActor; // 0xe0(0x08)
	char pad_E8[0x8]; // 0xe8(0x08)
	struct AActor* m_pWaitAnimMontageActor; // 0xf0(0x08)
	struct UAnimMontage* m_pWaitAnimMontageMontage; // 0xf8(0x08)
	struct UCurveFloat* m_pStaticCutsceneBG_ParticleSpeedUpCurveData; // 0x100(0x08)
	char pad_108[0x8]; // 0x108(0x08)
	struct UEventAsset* m_pWaitLoadAsset; // 0x110(0x08)

	void SetPlayerController(struct APlayerController* PlayerController); // Function BattlePrototype.REDLuaScriptComponent.SetPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x129f100
	void SetIsEndMotion(bool IsEndMotion); // Function BattlePrototype.REDLuaScriptComponent.SetIsEndMotion // (Final|Native|Public|BlueprintCallable) // @ game+0x129e960
	void SetAnimationActor(struct UObject* Object); // Function BattlePrototype.REDLuaScriptComponent.SetAnimationActor // (Final|Native|Public|BlueprintCallable) // @ game+0x129e670
	bool CreateContextRED(struct UObject* Parent, bool isRun); // Function BattlePrototype.REDLuaScriptComponent.CreateContextRED // (Final|Native|Public|BlueprintCallable) // @ game+0x129e070
};

// Class BattlePrototype.REDOverlay
// Size: 0x208 (Inherited: 0x130)
struct UREDOverlay : UOverlay {
	char pad_130[0x8]; // 0x130(0x08)
	bool FlagMouse; // 0x138(0x01)
	char pad_139[0x3]; // 0x139(0x03)
	struct FRedMouseArgument MouseCallArgument; // 0x13c(0x0c)
	struct FVector2D MouseHitOffsetPos; // 0x148(0x08)
	struct FVector2D MouseHitOffsetSize; // 0x150(0x08)
	bool DebugMouseHitDisp; // 0x158(0x01)
	char pad_159[0x7]; // 0x159(0x07)
	struct FMulticastInlineDelegate m_OverlayFocusMouse; // 0x160(0x10)
	struct FMulticastInlineDelegate m_OverlayUnFocusMouse; // 0x170(0x10)
	struct FMulticastInlineDelegate m_OverlayDownMouse; // 0x180(0x10)
	bool bIsStartTick; // 0x190(0x01)
	char pad_191[0x17]; // 0x191(0x17)
	struct TWeakObjectPtr<struct UUIBase> m_ParentUIBase; // 0x1a8(0x08)
	struct UREDebugLines* m_DebugDraw; // 0x1b0(0x08)
	struct FGeometry m_geometry; // 0x1b8(0x38)
	struct FVector2D vectorPixel; // 0x1f0(0x08)
	struct FVector2D vectorSize; // 0x1f8(0x08)
	struct FVector2D vectorPos; // 0x200(0x08)

	void SetParentUIBase(struct UUIBase* pUiBase); // Function BattlePrototype.REDOverlay.SetParentUIBase // (Final|Native|Public|BlueprintCallable) // @ game+0x129f070
	void SetMouseMode(bool mousemode, int32_t inputLevel); // Function BattlePrototype.REDOverlay.SetMouseMode // (Final|Native|Public|BlueprintCallable) // @ game+0x129ee90
	void SetMouseInputLevel(int32_t inputLevel); // Function BattlePrototype.REDOverlay.SetMouseInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x129ec90
	void SetMouseDisable(bool Flag); // Function BattlePrototype.REDOverlay.SetMouseDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x129eb00
	void RedOverlayUnFocus__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDOverlay.RedOverlayUnFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedOverlayFocus__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDOverlay.RedOverlayFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedOverlayDown__DelegateSignature(struct FRedMouseArgument argument, struct UObject* pWidget); // DelegateFunction BattlePrototype.REDOverlay.RedOverlayDown__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	int32_t GetMouseInputLevel(); // Function BattlePrototype.REDOverlay.GetMouseInputLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129e2f0
	bool GetMouseDisable(); // Function BattlePrototype.REDOverlay.GetMouseDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x129e290
	struct FVector2D GetAbsoluteSize(); // Function BattlePrototype.REDOverlay.GetAbsoluteSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129e220
	struct FVector2D GetAbsolutePosition(); // Function BattlePrototype.REDOverlay.GetAbsolutePosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129e190
	bool CheckRectangleCore(struct FVector2D Position); // Function BattlePrototype.REDOverlay.CheckRectangleCore // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129dff0
	bool CheckRectangle(); // Function BattlePrototype.REDOverlay.CheckRectangle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x129dec0
	bool CheckCircleCore(struct FVector2D Position); // Function BattlePrototype.REDOverlay.CheckCircleCore // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129dde0
	bool CheckCircle(); // Function BattlePrototype.REDOverlay.CheckCircle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x129dd30
};

// Class BattlePrototype.REDRetainerBox
// Size: 0x158 (Inherited: 0x158)
struct UREDRetainerBox : URetainerBox {

	void setPhaseCount(int32_t _count); // Function BattlePrototype.REDRetainerBox.setPhaseCount // (Final|Native|Public|BlueprintCallable) // @ game+0x129f220
	void setPhase(int32_t _phase); // Function BattlePrototype.REDRetainerBox.setPhase // (Final|Native|Public|BlueprintCallable) // @ game+0x129f1a0
};

// Class BattlePrototype.REDScrollBox
// Size: 0x988 (Inherited: 0x880)
struct UREDScrollBox : UScrollBox {
	bool DebugMouseHitDisp; // 0x880(0x01)
	bool DebugMouseHitBarDisp; // 0x881(0x01)
	char pad_882[0x6]; // 0x882(0x06)
	struct UObject* m_pElementClass; // 0x888(0x08)
	char pad_890[0x10]; // 0x890(0x10)
	struct TArray<struct UREDScrollBoxElement*> m_elementList; // 0x8a0(0x10)
	char pad_8B0[0x8]; // 0x8b0(0x08)
	struct TArray<struct FRedScrollBoxWork> m_elementWork; // 0x8b8(0x10)
	char pad_8C8[0x8]; // 0x8c8(0x08)
	struct UObject* m_elementClass; // 0x8d0(0x08)
	char pad_8D8[0x40]; // 0x8d8(0x40)
	struct FMulticastInlineDelegate m_updateElement; // 0x918(0x10)
	struct FMulticastInlineDelegate m_focus; // 0x928(0x10)
	struct FMulticastInlineDelegate m_unFocus; // 0x938(0x10)
	struct FMulticastInlineDelegate m_FocusMouse; // 0x948(0x10)
	struct FMulticastInlineDelegate m_unFocusMouse; // 0x958(0x10)
	struct FMulticastInlineDelegate m_LeftDownMouse; // 0x968(0x10)
	struct UREDebugLines* m_DebugDraw; // 0x978(0x08)
	struct UREDebugLines* m_DebugbarDraw; // 0x980(0x08)

	void UpdateList(float DeltaSeconds); // Function BattlePrototype.REDScrollBox.UpdateList // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2c00
	void UpdateDrawAreaWidget(); // Function BattlePrototype.REDScrollBox.UpdateDrawAreaWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2be0
	void SetupList(struct UObject* ElementClass, int32_t ElementNum, struct FVector2D ElementSize, float OffsetSize, int32_t initcursor, bool IsCursorTop); // Function BattlePrototype.REDScrollBox.SetupList // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12a2a00
	void SetScrollSpeed(float Speed); // Function BattlePrototype.REDScrollBox.SetScrollSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2980
	void SetScrollOffsetRED(float Offset); // Function BattlePrototype.REDScrollBox.SetScrollOffsetRED // (Final|Native|Public|BlueprintCallable) // @ game+0x12a28f0
	void SetMouseInputLevel(int32_t inputLevel); // Function BattlePrototype.REDScrollBox.SetMouseInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x12a27f0
	void SetMouseInputDisable(bool Flag); // Function BattlePrototype.REDScrollBox.SetMouseInputDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x12a26d0
	void SetMouseDisable(bool Flag, enum class ESlateVisibility Lockvisibility); // Function BattlePrototype.REDScrollBox.SetMouseDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2610
	void SetDrawTop(int32_t Pos); // Function BattlePrototype.REDScrollBox.SetDrawTop // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2580
	void setDebugDraw(bool IsDraw); // Function BattlePrototype.REDScrollBox.setDebugDraw // (Final|Native|Public|BlueprintCallable) // @ game+0xad5970
	void SetCursorPosition(int32_t Index, bool mouseflag, bool mouseScrollflag); // Function BattlePrototype.REDScrollBox.SetCursorPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2480
	void ResetList(); // Function BattlePrototype.REDScrollBox.ResetList // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2240
	void ReleaseList(); // Function BattlePrototype.REDScrollBox.ReleaseList // (Final|Native|Public|BlueprintCallable) // @ game+0x12a20f0
	bool IsScrollBarClicking(); // Function BattlePrototype.REDScrollBox.IsScrollBarClicking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a20c0
	bool IsScrollAnimation(); // Function BattlePrototype.REDScrollBox.IsScrollAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a20a0
	bool IsRedrawScroll(); // Function BattlePrototype.REDScrollBox.IsRedrawScroll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a2080
	void IncrementWorkWeight(int32_t CursorPosition); // Function BattlePrototype.REDScrollBox.IncrementWorkWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x12a1f40
	struct UUserWidget* GetWorkWidget(int32_t Index, bool IsSetFreeWork, bool notupdateElement); // Function BattlePrototype.REDScrollBox.GetWorkWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a1db0
	struct UUserWidget* GetSimpleCurrentWidget(); // Function BattlePrototype.REDScrollBox.GetSimpleCurrentWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a1b90
	int32_t GetPageDrawNum(); // Function BattlePrototype.REDScrollBox.GetPageDrawNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1b60
	int32_t GetMouseInputLevel(); // Function BattlePrototype.REDScrollBox.GetMouseInputLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1b40
	bool GetMouseInputDisable(); // Function BattlePrototype.REDScrollBox.GetMouseInputDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1b20
	bool GetMouseDisable(); // Function BattlePrototype.REDScrollBox.GetMouseDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1ae0
	int32_t GetMouseBackUpCursor(); // Function BattlePrototype.REDScrollBox.GetMouseBackUpCursor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1ac0
	bool GetIsSetUp(); // Function BattlePrototype.REDScrollBox.GetIsSetUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1aa0
	int32_t GetDrawTopGoal(); // Function BattlePrototype.REDScrollBox.GetDrawTopGoal // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a19b0
	int32_t GetDrawTop(); // Function BattlePrototype.REDScrollBox.GetDrawTop // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1970
	struct UUserWidget* GetCurrentWidget(); // Function BattlePrototype.REDScrollBox.GetCurrentWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a1930
	int32_t GetCurrentIndex(); // Function BattlePrototype.REDScrollBox.GetCurrentIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a18e0
	void DecrementWorkWeightAll(); // Function BattlePrototype.REDScrollBox.DecrementWorkWeightAll // (Final|Native|Public|BlueprintCallable) // @ game+0x12a1860
	void CorrectCursorDrawArea(bool IsScroll, bool initcursorTop); // Function BattlePrototype.REDScrollBox.CorrectCursorDrawArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12a1710
	void CloseDrawAreaWidget(); // Function BattlePrototype.REDScrollBox.CloseDrawAreaWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a16f0
	void CleanUpList(); // Function BattlePrototype.REDScrollBox.CleanUpList // (Final|Native|Public|BlueprintCallable) // @ game+0x12a16d0
	void AddElement(); // Function BattlePrototype.REDScrollBox.AddElement // (Final|Native|Public|BlueprintCallable) // @ game+0x12a15f0
};

// Class BattlePrototype.REDScrollBoxElement
// Size: 0x270 (Inherited: 0x230)
struct UREDScrollBoxElement : UUserWidget {
	char pad_230[0x10]; // 0x230(0x10)
	struct UUserWidget* Widget; // 0x240(0x08)
	char pad_248[0x28]; // 0x248(0x28)

	void SetMouseInputLevel(int32_t inputLevel); // Function BattlePrototype.REDScrollBoxElement.SetMouseInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2870
	void SetMouseInputDisable(bool Flag); // Function BattlePrototype.REDScrollBoxElement.SetMouseInputDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2760
	void SetMouseDisable(bool Flag); // Function BattlePrototype.REDScrollBoxElement.SetMouseDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x11f2b90
	void SelfInitialize(); // Function BattlePrototype.REDScrollBoxElement.SelfInitialize // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UOverlay* Overlay, struct USpacer* Spacer); // Function BattlePrototype.REDScrollBoxElement.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x12a1fc0
	struct UREDScrollBoxElement* GetThis(); // Function BattlePrototype.REDScrollBoxElement.GetThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1242fb0
	int32_t GetMouseInputLevel(); // Function BattlePrototype.REDScrollBoxElement.GetMouseInputLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1164bc0
	bool GetMouseInputDisable(); // Function BattlePrototype.REDScrollBoxElement.GetMouseInputDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1166d80
	bool GetMouseDisable(); // Function BattlePrototype.REDScrollBoxElement.GetMouseDisable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a1b00
	bool GetHitWidget(); // Function BattlePrototype.REDScrollBoxElement.GetHitWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12a1a70
	struct FVector2D GetAbsoluteSize(); // Function BattlePrototype.REDScrollBoxElement.GetAbsoluteSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12a18b0
	struct FVector2D GetAbsolutePosition(); // Function BattlePrototype.REDScrollBoxElement.GetAbsolutePosition // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12a1880
};

// Class BattlePrototype.REDScrollBoxSimple
// Size: 0x8a0 (Inherited: 0x880)
struct UREDScrollBoxSimple : UScrollBox {
	bool DebugMouseHitDisp; // 0x880(0x01)
	bool DebugMouseHitBarDisp; // 0x881(0x01)
	char pad_882[0xe]; // 0x882(0x0e)
	struct UREDebugLines* m_DebugDraw; // 0x890(0x08)
	struct UREDebugLines* m_DebugbarDraw; // 0x898(0x08)

	bool updateMouse(); // Function BattlePrototype.REDScrollBoxSimple.updateMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3e80
	void updateAutoScroll(float DeltaTime); // Function BattlePrototype.REDScrollBoxSimple.updateAutoScroll // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3e00
	void SetScrollSpeed(float Speed); // Function BattlePrototype.REDScrollBoxSimple.SetScrollSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3b40
	void setAutoScroll(float Offset); // Function BattlePrototype.REDScrollBoxSimple.setAutoScroll // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3ac0
	bool scrollUp(); // Function BattlePrototype.REDScrollBoxSimple.scrollUp // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3a90
	bool scrollDown(); // Function BattlePrototype.REDScrollBoxSimple.scrollDown // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3a60
	void resetScrollOffset(); // Function BattlePrototype.REDScrollBoxSimple.resetScrollOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3a40
	bool isMouseON(); // Function BattlePrototype.REDScrollBoxSimple.isMouseON // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3900
	struct UUserWidget* createAndAddChildEx(struct UObject* ClassInfo); // Function BattlePrototype.REDScrollBoxSimple.createAndAddChildEx // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2fe0
};

// Class BattlePrototype.RedSettings
// Size: 0x58 (Inherited: 0x28)
struct URedSettings : UObject {
	struct FString purpose; // 0x28(0x10)
	float SampleFloatRequireRestart; // 0x38(0x04)
	int32_t ClampedIntSetting; // 0x3c(0x04)
	struct FSoftObjectPath StringMaterialAssetReference; // 0x40(0x18)
};

// Class BattlePrototype.REDStringUtility
// Size: 0x28 (Inherited: 0x28)
struct UREDStringUtility : UBlueprintFunctionLibrary {

	void SetActionTagSingleBIG(struct UObject* pWorld, struct UImage* iconImage, struct FString ActionName); // Function BattlePrototype.REDStringUtility.SetActionTagSingleBIG // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a2370
	void SetActionTagSingle(struct UObject* pWorld, struct UImage* iconImage, struct FString ActionName); // Function BattlePrototype.REDStringUtility.SetActionTagSingle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a2260
	void ReplaceOneCharacter(struct FString String, int32_t Index, struct FString To); // Function BattlePrototype.REDStringUtility.ReplaceOneCharacter // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a2110
	bool isFullCharacter(enum class ETextLanguage Language); // Function BattlePrototype.REDStringUtility.isFullCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a3870
	enum class ETextLanguage IncrementTextLanguageEnum(enum class ETextLanguage oldLanguage); // Function BattlePrototype.REDStringUtility.IncrementTextLanguageEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a1ec0
	struct FString GetTextLanguageName(enum class ETextLanguage Language); // Function BattlePrototype.REDStringUtility.GetTextLanguageName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a1cf0
	struct FString GetStringWithoutREDTag(struct UObject* WorldObject, struct FString Source); // Function BattlePrototype.REDStringUtility.GetStringWithoutREDTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a1bd0
	struct FLinearColor GetFontColor(enum class ETextColor TextColor); // Function BattlePrototype.REDStringUtility.GetFontColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12a19f0
	struct FString getDateString(int32_t year, int32_t month, int32_t day); // Function BattlePrototype.REDStringUtility.getDateString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a31d0
	enum class ETextLanguage GetCurrentTextLanguageEnum(); // Function BattlePrototype.REDStringUtility.GetCurrentTextLanguageEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a1900
	enum class ETextLanguage DecrementTextLanguageEnum(enum class ETextLanguage oldLanguage); // Function BattlePrototype.REDStringUtility.DecrementTextLanguageEnum // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a17e0
	void AutoScale(struct UTextBlock* TextBlock, float Width); // Function BattlePrototype.REDStringUtility.AutoScale // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a1610
};

// Class BattlePrototype.REDTextBlock
// Size: 0x2c8 (Inherited: 0x2a0)
struct UREDTextBlock : UTextBlock {
	struct TArray<struct FREDLocalizeTextParam> FontSizeParamList; // 0x2a0(0x10)
	struct FREDLocalizeTextParam DefaultParam; // 0x2b0(0x14)
	char pad_2C4[0x4]; // 0x2c4(0x04)
};

// Class BattlePrototype.REDUserTextWidget
// Size: 0x248 (Inherited: 0x230)
struct UREDUserTextWidget : UUserWidget {
	char pad_230[0x18]; // 0x230(0x18)

	void setStringSlotVersion(int32_t StringIndex, struct FString String); // Function BattlePrototype.REDUserTextWidget.setStringSlotVersion // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3d00
	void setString(int32_t StringIndex, struct FString String, bool bIsAnalyzeTag); // Function BattlePrototype.REDUserTextWidget.setString // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3bc0
	void resetString(); // Function BattlePrototype.REDUserTextWidget.resetString // (Native|Public|BlueprintCallable) // @ game+0x6940b0
	void moveAll(int32_t StringIndex, float fMoveX, float fMoveY); // Function BattlePrototype.REDUserTextWidget.moveAll // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3930
	void initializeStringForKeyGuide(int32_t StringIndex, int32_t guideNum, struct UTextBlock* baseTextBlock, struct UImage* baseIconFont); // Function BattlePrototype.REDUserTextWidget.initializeStringForKeyGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3730
	void initializeString(int32_t StringIndex, struct UTextBlock* baseTextBlock, int32_t textBlockNum, struct UImage* baseIconFont, int32_t iconFontNum, bool isUseRuby); // Function BattlePrototype.REDUserTextWidget.initializeString // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3580
	void getTextRectLight(int32_t StringIndex, struct FVector4 rect); // Function BattlePrototype.REDUserTextWidget.getTextRectLight // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a3490
	void getTextRect(int32_t StringIndex, struct FVector4 rect); // Function BattlePrototype.REDUserTextWidget.getTextRect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a33a0
	struct UWidget* getRootWidget(); // Function BattlePrototype.REDUserTextWidget.getRootWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a3370
	float getGeometryScale(); // Function BattlePrototype.REDUserTextWidget.getGeometryScale // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12a3340
	struct FVector2D getDefaultViewportSize(); // Function BattlePrototype.REDUserTextWidget.getDefaultViewportSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a3300
	struct UTextBlock* getBaseTextBlock(int32_t StringIndex); // Function BattlePrototype.REDUserTextWidget.getBaseTextBlock // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a3110
	void destroy(int32_t StringIndex); // Function BattlePrototype.REDUserTextWidget.destroy // (Final|Native|Public|BlueprintCallable) // @ game+0x12a3070
	void clearString(int32_t StringIndex); // Function BattlePrototype.REDUserTextWidget.clearString // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2f40
	void changeRubyProperty(int32_t StringIndex, float rubySizeRate, float rubyAdjustY); // Function BattlePrototype.REDUserTextWidget.changeRubyProperty // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2e00
	void changeFont(int32_t StringIndex, struct UObject* Font); // Function BattlePrototype.REDUserTextWidget.changeFont // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2d20
	void applyTextFormatFromBase(int32_t StringIndex); // Function BattlePrototype.REDUserTextWidget.applyTextFormatFromBase // (Final|Native|Public|BlueprintCallable) // @ game+0x12a2c80
};

// Class BattlePrototype.REDWidgetBPLibrary
// Size: 0x28 (Inherited: 0x28)
struct UREDWidgetBPLibrary : UBlueprintFunctionLibrary {

	void UISetThumbnailIconSas(struct UImage* Image, int32_t ID); // Function BattlePrototype.REDWidgetBPLibrary.UISetThumbnailIconSas // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8a10
	int32_t UIGetIdIconSasStatus(enum class E_SASKindNative sas, enum class E_SASIconStatus Status); // Function BattlePrototype.REDWidgetBPLibrary.UIGetIdIconSasStatus // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8950
	int32_t UIGetIdIconSas(enum class E_SASKindNative sas); // Function BattlePrototype.REDWidgetBPLibrary.UIGetIdIconSas // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a88d0
	void UI_SetThumbnail_Action(struct UImage* Image, enum class EActionIconType Index, bool IsActive); // Function BattlePrototype.REDWidgetBPLibrary.UI_SetThumbnail_Action // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8b70
	void UI_SetColorAction(struct UImage* Image, int32_t Index); // Function BattlePrototype.REDWidgetBPLibrary.UI_SetColorAction // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8ac0
	void SetIconGamePadM(struct UObject* WorldContextObject, struct UImage* Image, enum class ERSGamepadInputName Button); // Function BattlePrototype.REDWidgetBPLibrary.SetIconGamePadM // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8110
	void SetIconGamePadL(struct UObject* WorldContextObject, struct UImage* Image, enum class ERSGamepadInputName Button); // Function BattlePrototype.REDWidgetBPLibrary.SetIconGamePadL // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8020
	void SetIconBaseGamePad(struct UObject* WorldContextObject, struct UImage* Image, enum class ERSGamepadInputName Button); // Function BattlePrototype.REDWidgetBPLibrary.SetIconBaseGamePad // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a7f30
	void SetIcon(struct UObject* WorldContextObject, struct UImage* Image, enum class EUI_UV_BUtton_N1 Button); // Function BattlePrototype.REDWidgetBPLibrary.SetIcon // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a7e40
	struct ARSHUDBase* GetRSHudBase(struct UObject* WorldContextObject); // Function BattlePrototype.REDWidgetBPLibrary.GetRSHudBase // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6a80
};

// Class BattlePrototype.REDWidgetUtility
// Size: 0x28 (Inherited: 0x28)
struct UREDWidgetUtility : UBlueprintFunctionLibrary {

	void SetCurrentLocationAreaName(struct UObject* WorldObject, int32_t LocationNo, int32_t AreaNo); // Function BattlePrototype.REDWidgetUtility.SetCurrentLocationAreaName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a7d50
	void ProjectWorldToScreen2(struct UObject* WorldContextObject, struct FVector WorldPosition, struct FVector2D ScreenPosition); // Function BattlePrototype.REDWidgetUtility.ProjectWorldToScreen2 // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a7400
	bool isYuitoMode(struct UObject* WorldContextObject); // Function BattlePrototype.REDWidgetUtility.isYuitoMode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8dc0
	bool isSpoiler(struct UObject* WorldContextObject, struct FName ItemId); // Function BattlePrototype.REDWidgetUtility.isSpoiler // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12a8cf0
	void GetViewportOffset(struct UObject* WorldContextObject, struct FVector2D absolutePosition, struct FVector2D calcOffset); // Function BattlePrototype.REDWidgetUtility.GetViewportOffset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a6f60
	void GetScreenOffsetReverse(struct UObject* WorldContextObject, struct FVector2D baseOffset, struct FVector2D calcOffset); // Function BattlePrototype.REDWidgetUtility.GetScreenOffsetReverse // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a6db0
	void GetScreenOffset(struct UObject* WorldContextObject, struct FVector2D baseOffset, struct FVector2D calcOffset); // Function BattlePrototype.REDWidgetUtility.GetScreenOffset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a6cb0
	struct FVector2D GetRelativePositionVector2D(struct UWidget* Widget); // Function BattlePrototype.REDWidgetUtility.GetRelativePositionVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12a6c20
	void GetRelativePosition(struct UWidget* Widget, float X, float Y); // Function BattlePrototype.REDWidgetUtility.GetRelativePosition // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12a6b00
	enum class EPlayerID getMainPlayerID(struct UObject* WorldContextObject); // Function BattlePrototype.REDWidgetUtility.getMainPlayerID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a8c70
	struct UInvalidationBox* GetFirstInvalidationBox(struct UUserWidget* Widget); // Function BattlePrototype.REDWidgetUtility.GetFirstInvalidationBox // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6970
	void GetDesiredSizeWithPrepass(struct UWidget* Widget, float Width, float Height); // Function BattlePrototype.REDWidgetUtility.GetDesiredSizeWithPrepass // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a6850
	void GetAbsoluteScreenOfffset(struct UObject* WorldContextObject, struct FVector2D baseOffset, struct FVector2D calcOffset); // Function BattlePrototype.REDWidgetUtility.GetAbsoluteScreenOfffset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12a6750
	struct FVector2D GetAbsolutePositionVector2D(struct UWidget* Widget); // Function BattlePrototype.REDWidgetUtility.GetAbsolutePositionVector2D // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12a66c0
	void GetAbsolutePosition(struct UWidget* Widget, float X, float Y); // Function BattlePrototype.REDWidgetUtility.GetAbsolutePosition // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12a65a0
	void CreateWidgetRED(struct UObject* WorldContextObject, struct UUserWidget* WidgetType, struct UUserWidget* Output); // Function BattlePrototype.REDWidgetUtility.CreateWidgetRED // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a63d0
	void CopyTextBlockProperty(struct UTextBlock* Source, struct UTextBlock* Dest); // Function BattlePrototype.REDWidgetUtility.CopyTextBlockProperty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6320
	void CopySpacerProperty(struct USpacer* Source, struct USpacer* Dest); // Function BattlePrototype.REDWidgetUtility.CopySpacerProperty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6270
	void CopySlotProperty(struct UWidget* Source, struct UWidget* Dest); // Function BattlePrototype.REDWidgetUtility.CopySlotProperty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a61c0
	void CopyOverlayProperty(struct UOverlay* Source, struct UOverlay* Dest); // Function BattlePrototype.REDWidgetUtility.CopyOverlayProperty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6060
	void CopyImageProperty(struct UImage* Source, struct UImage* Dest); // Function BattlePrototype.REDWidgetUtility.CopyImageProperty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6110
	void CopyHorizontalBoxProperty(struct UHorizontalBox* Source, struct UHorizontalBox* Dest); // Function BattlePrototype.REDWidgetUtility.CopyHorizontalBoxProperty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a6060
	void ConvertImagePathPlatformName(struct UImage* Image); // Function BattlePrototype.REDWidgetUtility.ConvertImagePathPlatformName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a5ff0
	void ConvertButtonIconPlatform(struct UImage* Image); // Function BattlePrototype.REDWidgetUtility.ConvertButtonIconPlatform // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a5f80
	void ClearFontAtlas(); // Function BattlePrototype.REDWidgetUtility.ClearFontAtlas // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12a5f40
};

// Class BattlePrototype.RegisterEffectInterface
// Size: 0x28 (Inherited: 0x28)
struct URegisterEffectInterface : UInterface {

	void RegisterInterruptTelepoEffectInterface(struct URSParticleSystemComponentBase* Particle); // Function BattlePrototype.RegisterEffectInterface.RegisterInterruptTelepoEffectInterface // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void RegisterEffectInterface(struct URSParticleSystemComponentBase* Particle); // Function BattlePrototype.RegisterEffectInterface.RegisterEffectInterface // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RenderingManager
// Size: 0x238 (Inherited: 0x230)
struct ARenderingManager : AActor {
	struct URenderingManagerCoreComponent* CoreComponent; // 0x230(0x08)
};

// Class BattlePrototype.RenderingManagerCoreComponent
// Size: 0xe0 (Inherited: 0xc0)
struct URenderingManagerCoreComponent : UActorComponent {
	float ShadeNoiseProgressScale; // 0xc0(0x04)
	char pad_C4[0x4]; // 0xc4(0x04)
	struct UMaterialParameterCollection* MPC; // 0xc8(0x08)
	char pad_D0[0x10]; // 0xd0(0x10)
};

// Class BattlePrototype.RenderingSettingsFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URenderingSettingsFunctionLibrary : UBlueprintFunctionLibrary {

	void SetupRenderingSettingsTranslucencyResolution(struct UObject* WorldContextObject, struct FRenderingSettings Settings); // Function BattlePrototype.RenderingSettingsFunctionLibrary.SetupRenderingSettingsTranslucencyResolution // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a8760
	void SetupRenderingSettingsSSRResolution(struct UObject* WorldContextObject, struct FRenderingSettings Settings); // Function BattlePrototype.RenderingSettingsFunctionLibrary.SetupRenderingSettingsSSRResolution // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a8620
	struct FRenderingSettings MergeRenderingSettings(struct FRenderingSettings DefaultSettings, struct FRenderingSettings OverrideSettings); // Function BattlePrototype.RenderingSettingsFunctionLibrary.MergeRenderingSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12a71d0
};

// Class BattlePrototype.RequestParticleEffectArgs
// Size: 0x60 (Inherited: 0x28)
struct URequestParticleEffectArgs : UObject {
	struct FName _CustomName; // 0x28(0x08)
	struct USceneComponent* _MeshComponent; // 0x30(0x08)
	struct UParticleSystem* _PSTemplate; // 0x38(0x08)
	struct FName _SocketName; // 0x40(0x08)
	struct FVector _LocationOffset; // 0x48(0x0c)
	struct FRotator _RotationOffset; // 0x54(0x0c)

	struct UParticleSystemComponent* StartParticleEffect(); // Function BattlePrototype.RequestParticleEffectArgs.StartParticleEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12a88a0
	void Setup(struct FName CustomName, struct USceneComponent* MeshComponent, struct UParticleSystem* PSTemplate, struct FName SocketName, struct FVector LocationOffset, struct FRotator RotationOffset); // Function BattlePrototype.RequestParticleEffectArgs.Setup // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12a8440
	bool EqualsCustomName(struct FName Name); // Function BattlePrototype.RequestParticleEffectArgs.EqualsCustomName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a6510
};

// Class BattlePrototype.ResourceManager
// Size: 0x400 (Inherited: 0x230)
struct AResourceManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	struct TMap<int32_t, struct FNpcMergeMeshResource> NpcMergeMesh; // 0x238(0x50)
	struct UDataTable* MipPrestreamMeshDataTable; // 0x288(0x08)
	struct TMap<struct FName, int32_t> MipPrestreams; // 0x290(0x50)
	struct TArray<struct UTexture2D*> MipPrestreamTextures; // 0x2e0(0x10)
	char pad_2F0[0x10]; // 0x2f0(0x10)
	struct TSet<struct FName> NotExistsAssets; // 0x300(0x50)
	struct TSet<struct FName> ExistsAssets; // 0x350(0x50)
	struct TMap<struct UTexture2D*, int32_t> ReleaseTransientTextures; // 0x3a0(0x50)
	char pad_3F0[0x10]; // 0x3f0(0x10)

	void SetMipPrestreamMesh(struct FName MeshName, bool bLoad, bool HighPriority); // Function BattlePrototype.ResourceManager.SetMipPrestreamMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12a8330
	void SetMipPrestreamEvent(struct FResourceMipPrestreamEventTable EventData, bool bLoad); // Function BattlePrototype.ResourceManager.SetMipPrestreamEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12a8200
	void ResetMipPrestreamMesh(struct FName MeshName, bool bForce); // Function BattlePrototype.ResourceManager.ResetMipPrestreamMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12a7c80
	void ResetMipPrestreamEvent(struct FResourceMipPrestreamEventTable EventData, bool bForce); // Function BattlePrototype.ResourceManager.ResetMipPrestreamEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12a7b50
	void ResetAllMipPrestream(); // Function BattlePrototype.ResourceManager.ResetAllMipPrestream // (Final|Native|Public|BlueprintCallable) // @ game+0x12a7b30
	void ResetAllLockMipPrestreamMesh(); // Function BattlePrototype.ResourceManager.ResetAllLockMipPrestreamMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12a7b10
	void ProtectedGetMipPrestreamPlayerSoftMeshes(struct TArray<struct TSoftObjectPtr<USkeletalMesh>> SkeletalMeshes, struct TArray<struct TSoftObjectPtr<UObject>> Attachment1Meshes, struct TArray<struct TSoftObjectPtr<UMaterialInstance>> Attachment1Materials, struct TArray<struct TSoftObjectPtr<UObject>> Attachment2Meshes, struct TArray<struct TSoftObjectPtr<UMaterialInstance>> Attachment2Materials, struct TArray<struct TSoftObjectPtr<UObject>> Attachment3Meshes, struct TArray<struct TSoftObjectPtr<UMaterialInstance>> Attachment3Materials, enum class EPlayerID playerId); // Function BattlePrototype.ResourceManager.ProtectedGetMipPrestreamPlayerSoftMeshes // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x12a76b0
	void ProtectedGetMipPrestreamPlayerMeshes(struct TArray<struct USkeletalMesh*> SkeletalMeshes, struct TArray<struct UStaticMesh*> StaticMeshes, enum class EPlayerID playerId, bool bLoad); // Function BattlePrototype.ResourceManager.ProtectedGetMipPrestreamPlayerMeshes // (Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x12a7510
	void LockMipPrestreamMesh(struct TArray<struct FName> MeshNames); // Function BattlePrototype.ResourceManager.LockMipPrestreamMesh // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12a7120
	bool IsReadyMipPrestreamMesh(struct FName MeshName); // Function BattlePrototype.ResourceManager.IsReadyMipPrestreamMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12a7090
	bool IsReadyAllMipPrestream(); // Function BattlePrototype.ResourceManager.IsReadyAllMipPrestream // (Final|Native|Public|BlueprintCallable) // @ game+0x12a7060
	void GetSnowCaptures(struct TArray<struct ASnowCaptureBase*> OutSnowCaptures); // Function BattlePrototype.ResourceManager.GetSnowCaptures // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12a6eb0
	int32_t GetMipPrestreamTextureNum(); // Function BattlePrototype.ResourceManager.GetMipPrestreamTextureNum // (Final|Native|Public|BlueprintCallable) // @ game+0x12a6a50
	int32_t GetMipPrestreamMeshNum(); // Function BattlePrototype.ResourceManager.GetMipPrestreamMeshNum // (Final|Native|Public|BlueprintCallable) // @ game+0x12a6a20
	int32_t GetMipPrestreamLockMeshNum(); // Function BattlePrototype.ResourceManager.GetMipPrestreamLockMeshNum // (Final|Native|Public|BlueprintCallable) // @ game+0x12a69f0
	void DumpNPCMergeMesh(); // Function BattlePrototype.ResourceManager.DumpNPCMergeMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x12a64f0
	void DumpMipPrestream(); // Function BattlePrototype.ResourceManager.DumpMipPrestream // (Final|Native|Public|BlueprintCallable) // @ game+0x12a64d0
	void ClearNotExistsList(); // Function BattlePrototype.ResourceManager.ClearNotExistsList // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5f60
	bool CheckNotExists(struct FName Name); // Function BattlePrototype.ResourceManager.CheckNotExists // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5eb0
	bool CheckExists(struct FName Name); // Function BattlePrototype.ResourceManager.CheckExists // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5e20
	void AddReleaseTransientTexture(struct UTexture2D* Texture); // Function BattlePrototype.ResourceManager.AddReleaseTransientTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5da0
	void AddNotExistsList(struct FName Name); // Function BattlePrototype.ResourceManager.AddNotExistsList // (Final|Native|Public|BlueprintCallable) // @ game+0x12a5d20
};

// Class BattlePrototype.RevisionData
// Size: 0x48 (Inherited: 0x28)
struct URevisionData : UObject {
	struct FString Revision; // 0x28(0x10)
	struct FString BuildDate; // 0x38(0x10)

	struct FString GetRevisionStr(); // Function BattlePrototype.RevisionData.GetRevisionStr // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12abed0
	struct FString GetBuildDateStr(); // Function BattlePrototype.RevisionData.GetBuildDateStr // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12abbd0
	struct FString GetBuildConfigStr(); // Function BattlePrototype.RevisionData.GetBuildConfigStr // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12abb50
};

// Class BattlePrototype.RSAccountManager
// Size: 0x220 (Inherited: 0x38)
struct URSAccountManager : URSTickableManagerBase {
	char pad_38[0x8]; // 0x38(0x08)
	struct URSGameInstance* _gameInstance; // 0x40(0x08)
	struct FString m_UserAccountID; // 0x48(0x10)
	struct FString m_AssumedDefaultUserAccountID; // 0x58(0x10)
	bool m_isFirstButtonPushCheck; // 0x68(0x01)
	bool m_isFirstCheckSuccessed; // 0x69(0x01)
	bool m_isInvalidPairingCheck; // 0x6a(0x01)
	char pad_6B[0x1]; // 0x6b(0x01)
	float m_DelayCounter; // 0x6c(0x04)
	bool m_bDebugInvalidXB1ProfileCheck; // 0x70(0x01)
	bool m_bDebugTickOutputLog; // 0x71(0x01)
	char pad_72[0x16]; // 0x72(0x16)
	struct FMulticastInlineDelegate XboxFirstConnectEvent; // 0x88(0x10)
	struct FMulticastInlineDelegate XboxChangeAccountEvent; // 0x98(0x10)
	struct FMulticastInlineDelegate XboxCuttingAccountEvent; // 0xa8(0x10)
	struct FMulticastInlineDelegate XboxReconnectAccountEvent; // 0xb8(0x10)
	struct FMulticastInlineDelegate XboxConnectFromInvalidIndexEvent; // 0xc8(0x10)
	char pad_D8[0x148]; // 0xd8(0x148)

	bool UpdateUserAccountID(); // Function BattlePrototype.RSAccountManager.UpdateUserAccountID // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac7e0
	bool UpdateController(); // Function BattlePrototype.RSAccountManager.UpdateController // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac7b0
	void Test_XboxOneGetUserID(); // Function BattlePrototype.RSAccountManager.Test_XboxOneGetUserID // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void SetCheckAccountInvalidBitFlag(enum class ECheckAccountFlag Flag, bool IsInvalid); // Function BattlePrototype.RSAccountManager.SetCheckAccountInvalidBitFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac4a0
	void SetActiveAllController(int32_t _ControllerId); // Function BattlePrototype.RSAccountManager.SetActiveAllController // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void ResetAccount(); // Function BattlePrototype.RSAccountManager.ResetAccount // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac480
	void OutputLocalPlayerInfo(); // Function BattlePrototype.RSAccountManager.OutputLocalPlayerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac460
	void OutputDebugInfo(); // Function BattlePrototype.RSAccountManager.OutputDebugInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac460
	void OutputControllerInfo(); // Function BattlePrototype.RSAccountManager.OutputControllerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void OutputAllLoginProfileID(); // Function BattlePrototype.RSAccountManager.OutputAllLoginProfileID // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool OpenLoginUI(bool IsFirst); // Function BattlePrototype.RSAccountManager.OpenLoginUI // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac3d0
	void OnFirstConnect(struct FString AccountId); // Function BattlePrototype.RSAccountManager.OnFirstConnect // (Final|Native|Private|BlueprintCallable) // @ game+0x11c14b0
	void OnAccountReconnect(struct FString AccountId); // Function BattlePrototype.RSAccountManager.OnAccountReconnect // (Final|Native|Private|BlueprintCallable) // @ game+0x11c14b0
	void OnAccountCutting(struct FString AccountId); // Function BattlePrototype.RSAccountManager.OnAccountCutting // (Final|Native|Private|BlueprintCallable) // @ game+0x11c14b0
	void OnAccountConnectFromInvalidIndex(int32_t ControllerId, struct FString AccountId); // Function BattlePrototype.RSAccountManager.OnAccountConnectFromInvalidIndex // (Final|Native|Private|BlueprintCallable) // @ game+0x12ac2b0
	void OnAccountChange(struct FString PrevAccountId, struct FString NowAccountId); // Function BattlePrototype.RSAccountManager.OnAccountChange // (Final|Native|Private|BlueprintCallable) // @ game+0x12ac140
	void GetLocalPlayerUserInfo(); // Function BattlePrototype.RSAccountManager.GetLocalPlayerUserInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x12abe80
	struct FString GetLocalPlayerUserID(); // Function BattlePrototype.RSAccountManager.GetLocalPlayerUserID // (Final|Native|Public|BlueprintCallable) // @ game+0x12abe00
	struct FString GetLocalPlayerProfileID(int32_t _LocalPlayerIndex); // Function BattlePrototype.RSAccountManager.GetLocalPlayerProfileID // (Final|Native|Public|BlueprintCallable) // @ game+0x12abc90
	int32_t GetLocalPlayerControllerID(); // Function BattlePrototype.RSAccountManager.GetLocalPlayerControllerID // (Final|Native|Public|BlueprintCallable) // @ game+0x12abdd0
	struct FString GetControllerProfileID(int32_t _ControllerId); // Function BattlePrototype.RSAccountManager.GetControllerProfileID // (Final|Native|Public|BlueprintCallable) // @ game+0x12abc90
	bool FirstCheckUserAccount(); // Function BattlePrototype.RSAccountManager.FirstCheckUserAccount // (Final|Native|Public|BlueprintCallable) // @ game+0x12abb20
	bool FirstButtonPushCheck(); // Function BattlePrototype.RSAccountManager.FirstButtonPushCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x12abaf0
};

// Class BattlePrototype.RSActorPlayerBase
// Size: 0x230 (Inherited: 0x230)
struct ARSActorPlayerBase : AActor {
};

// Class BattlePrototype.RSActorEnemyBase
// Size: 0x230 (Inherited: 0x230)
struct ARSActorEnemyBase : AActor {
};

// Class BattlePrototype.RSActorPsychicObjectBase
// Size: 0x230 (Inherited: 0x230)
struct ARSActorPsychicObjectBase : AActor {
};

// Class BattlePrototype.RSActorUIBase
// Size: 0x230 (Inherited: 0x230)
struct ARSActorUIBase : AActor {
};

// Class BattlePrototype.RSActorComponentSystemBase
// Size: 0xc0 (Inherited: 0xc0)
struct URSActorComponentSystemBase : UActorComponent {
};

// Class BattlePrototype.RSActorComponentPlayerBase
// Size: 0xc0 (Inherited: 0xc0)
struct URSActorComponentPlayerBase : UActorComponent {
};

// Class BattlePrototype.RSActorComponentEnemyBase
// Size: 0xc0 (Inherited: 0xc0)
struct URSActorComponentEnemyBase : UActorComponent {
};

// Class BattlePrototype.RSActorComponentPsychicObjectBase
// Size: 0xc0 (Inherited: 0xc0)
struct URSActorComponentPsychicObjectBase : UActorComponent {
};

// Class BattlePrototype.RSActorComponentBackgroundBase
// Size: 0xc0 (Inherited: 0xc0)
struct URSActorComponentBackgroundBase : UActorComponent {
};

// Class BattlePrototype.RSActorComponentUIBase
// Size: 0xc0 (Inherited: 0xc0)
struct URSActorComponentUIBase : UActorComponent {
};

// Class BattlePrototype.RSAjitoAnimBaseInstance
// Size: 0x630 (Inherited: 0x620)
struct URSAjitoAnimBaseInstance : UASAnimInstance {
	char pad_620[0x10]; // 0x620(0x10)
};

// Class BattlePrototype.RSAjitoAnimInstance
// Size: 0x720 (Inherited: 0x620)
struct URSAjitoAnimInstance : UASAnimInstance {
	char pad_620[0x8]; // 0x620(0x08)
	bool IsWaitStateTransition; // 0x628(0x01)
	bool IsReadyToTransitionIdle; // 0x629(0x01)
	bool IsReadyToTransitionTalk; // 0x62a(0x01)
	bool IsLookAtInTalking; // 0x62b(0x01)
	bool IsLookAt; // 0x62c(0x01)
	bool UseOverrideAnim; // 0x62d(0x01)
	char pad_62E[0x2]; // 0x62e(0x02)
	struct FVector LookAtPoint; // 0x630(0x0c)
	bool IsToTalkWaiting; // 0x63c(0x01)
	bool IsToIdleWaiting; // 0x63d(0x01)
	enum class EAjitoMemberState CurrentState; // 0x63e(0x01)
	enum class EAjitoMemberState RequestedState; // 0x63f(0x01)
	enum class EAjitoMemberIdleStateType IdleState; // 0x640(0x01)
	enum class EAjitoMemberTalkStateType TalkState; // 0x641(0x01)
	char pad_642[0x6]; // 0x642(0x06)
	struct FAjitoMemberAnimInfo AnimInfo; // 0x648(0x50)
	struct FAjitoMemberInfo MemberInfo; // 0x698(0x40)
	struct UAnimSequence* OverrideAnim; // 0x6d8(0x08)
	struct UASAnimationSet* AnimationSet; // 0x6e0(0x08)
	float EyeHorizontal; // 0x6e8(0x04)
	float EyeVertical; // 0x6ec(0x04)
	float EyeBlendRate; // 0x6f0(0x04)
	bool IsChangeStateImmediate; // 0x6f4(0x01)
	bool IsResetState; // 0x6f5(0x01)
	bool IsStartState; // 0x6f6(0x01)
	bool IsIdleOnlyAction; // 0x6f7(0x01)
	int32_t NextAnimNo; // 0x6f8(0x04)
	bool IsPresentEvent; // 0x6fc(0x01)
	char pad_6FD[0x3]; // 0x6fd(0x03)
	struct FRotator HeadRot; // 0x700(0x0c)
	bool IsBoxNoDisp; // 0x70c(0x01)
	char pad_70D[0x3]; // 0x70d(0x03)
	struct TArray<struct FName> _bEnableEyeControl; // 0x710(0x10)

	void WaitTransitionToTalk(float WaitTime); // Function BattlePrototype.RSAjitoAnimInstance.WaitTransitionToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac890
	void WaitTransitionToIdle(float WaitTime); // Function BattlePrototype.RSAjitoAnimInstance.WaitTransitionToIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac810
	bool StartTalking(); // Function BattlePrototype.RSAjitoAnimInstance.StartTalking // (Native|Event|Public|BlueprintEvent) // @ game+0x12ac780
	void SetIsLookAt(bool IsLookAt); // Function BattlePrototype.RSAjitoAnimInstance.SetIsLookAt // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac6f0
	void SetEyeControlParameter(float Horizontal, float Vertical); // Function BattlePrototype.RSAjitoAnimInstance.SetEyeControlParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac630
	void SetEyeControlEnable(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.RSAjitoAnimInstance.SetEyeControlEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x12ac570
	bool IsWaitTransitionToTalk(); // Function BattlePrototype.RSAjitoAnimInstance.IsWaitTransitionToTalk // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ac110
	bool IsWaitTransitionToIdle(); // Function BattlePrototype.RSAjitoAnimInstance.IsWaitTransitionToIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ac0e0
	bool InitializeInstance(struct FAjitoMemberInfo Info); // Function BattlePrototype.RSAjitoAnimInstance.InitializeInstance // (Native|Event|Public|BlueprintEvent) // @ game+0x12abf90
	struct AAjitoMember* GetOwningAjitoMember(); // Function BattlePrototype.RSAjitoAnimInstance.GetOwningAjitoMember // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12abea0
	struct FName GetCurrentASNodeAssetName(); // Function BattlePrototype.RSAjitoAnimInstance.GetCurrentASNodeAssetName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12abd90
	struct UAnimSequenceBase* GetCurrentASNodeAnimSequence(); // Function BattlePrototype.RSAjitoAnimInstance.GetCurrentASNodeAnimSequence // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12abd60
	bool EndTalking(); // Function BattlePrototype.RSAjitoAnimInstance.EndTalking // (Native|Event|Public|BlueprintEvent) // @ game+0x12abac0
	void ClearWaitTransitionToTalk(); // Function BattlePrototype.RSAjitoAnimInstance.ClearWaitTransitionToTalk // (Final|Native|Public|BlueprintCallable) // @ game+0x12abaa0
	void ClearWaitTransitionToIdle(); // Function BattlePrototype.RSAjitoAnimInstance.ClearWaitTransitionToIdle // (Final|Native|Public|BlueprintCallable) // @ game+0x12aba80
};

// Class BattlePrototype.RSAjitoAnimInstanceInterface
// Size: 0x28 (Inherited: 0x28)
struct URSAjitoAnimInstanceInterface : UInterface {

	bool UseOverrideAnim(bool IsOverride); // Function BattlePrototype.RSAjitoAnimInstanceInterface.UseOverrideAnim // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1296040
	bool SetPlayerFacePos(struct FVector PlayerFacePos); // Function BattlePrototype.RSAjitoAnimInstanceInterface.SetPlayerFacePos // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x12b0150
	bool SetLookAtPlayer(bool IsLookAt); // Function BattlePrototype.RSAjitoAnimInstanceInterface.SetLookAtPlayer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12913e0
	bool SetASStateMachine(struct UASStateMachine* StateMachine); // Function BattlePrototype.RSAjitoAnimInstanceInterface.SetASStateMachine // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12afd50
	bool SetASAnimationSet(struct UASAnimationSet* AnimationSet); // Function BattlePrototype.RSAjitoAnimInstanceInterface.SetASAnimationSet // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12afcb0
	bool ResetState(); // Function BattlePrototype.RSAjitoAnimInstanceInterface.ResetState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x11846d0
	bool RequestState(enum class EAjitoMemberState State); // Function BattlePrototype.RSAjitoAnimInstanceInterface.RequestState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12afb60
};

// Class BattlePrototype.RSAnimationFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSAnimationFunctionLibrary : UBlueprintFunctionLibrary {

	struct FTransform GetBoneTransformForAnimSequence(struct UAnimSequence* AnimSequence, float Time, int32_t BoneIndex, bool bUseRawData); // Function BattlePrototype.RSAnimationFunctionLibrary.GetBoneTransformForAnimSequence // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12ae810
	struct FTransform GetBoneTransformForAnimMontage(struct UAnimMontage* AnimMontage, float Time, int32_t BoneIndex, bool bUseRawData); // Function BattlePrototype.RSAnimationFunctionLibrary.GetBoneTransformForAnimMontage // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12ae680
	struct FVector GetBoneMoveForAnimSequence(struct UAnimSequence* AnimSequence, int32_t BoneIndex); // Function BattlePrototype.RSAnimationFunctionLibrary.GetBoneMoveForAnimSequence // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12ae5b0
	struct UAnimationAsset* GetAnimSequenceFromPath(struct UObject* WorldContextObject, struct FString Path, bool Load, struct AResourceManager* ResourceManager); // Function BattlePrototype.RSAnimationFunctionLibrary.GetAnimSequenceFromPath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ae450
	struct UObject* GetAnimBPGeneratedClassFromPath(struct UObject* WorldContextObject, struct FString Path, bool Load); // Function BattlePrototype.RSAnimationFunctionLibrary.GetAnimBPGeneratedClassFromPath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ae330
};

// Class BattlePrototype.RSArrangeEventPlaneActor
// Size: 0x230 (Inherited: 0x230)
struct ARSArrangeEventPlaneActor : AActor {
};

// Class BattlePrototype.RSAtomComponentBase
// Size: 0x1250 (Inherited: 0x1210)
struct URSAtomComponentBase : UAtomComponent {
	struct AActor* CreatorActor; // 0x1210(0x08)
	bool bCalcSIWAttenuation; // 0x1218(0x01)
	char pad_1219[0x3]; // 0x1219(0x03)
	float mSoundVolumeScale; // 0x121c(0x04)
	enum class ESoundFadeState mFadeState; // 0x1220(0x01)
	enum class ESoundActionOnFadeOutEnd mActionOnFadeOutEnd; // 0x1221(0x01)
	char pad_1222[0x2]; // 0x1222(0x02)
	float mFadeTime; // 0x1224(0x04)
	float mFadeTimer; // 0x1228(0x04)
	float mFadeVolume; // 0x122c(0x04)
	float mFadeStartVolume; // 0x1230(0x04)
	float mFadeFinishVolume; // 0x1234(0x04)
	float mSIWAttenuationRate; // 0x1238(0x04)
	bool mSkipAtSequencer; // 0x123c(0x01)
	char pad_123D[0x3]; // 0x123d(0x03)
	struct FDelegate OnEndPlayAtom; // 0x1240(0x10)

	void UpdateVolume(); // Function BattlePrototype.RSAtomComponentBase.UpdateVolume // (Final|Native|Protected|BlueprintCallable) // @ game+0x12b1730
	void StopSound(float FadeTime, float FadeVolume); // Function BattlePrototype.RSAtomComponentBase.StopSound // (Final|Native|Public|BlueprintCallable) // @ game+0x12b1670
	void SetSIWAttenuationRate(float AttenuationRate); // Function BattlePrototype.RSAtomComponentBase.SetSIWAttenuationRate // (Final|Native|Public|BlueprintCallable) // @ game+0x12b01f0
	void SetFadeParam(float FadeTime, float FadeFinishVolume); // Function BattlePrototype.RSAtomComponentBase.SetFadeParam // (Final|Native|Public|BlueprintCallable) // @ game+0x12affa0
	void RSFadeOut(float FadeTime, float FadeVolume, enum class ESoundActionOnFadeOutEnd actionOnFadeOutEnd); // Function BattlePrototype.RSAtomComponentBase.RSFadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x12af970
	void RSFadeIn(float FadeTime, float FadeVolume); // Function BattlePrototype.RSAtomComponentBase.RSFadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x12af8b0
	void ResumeSound(float FadeTime, float FadeVolume); // Function BattlePrototype.RSAtomComponentBase.ResumeSound // (Final|Native|Public|BlueprintCallable) // @ game+0x12afbf0
	void PlaySoundToPad(struct UObject* WorldContextObject, struct USoundAtomCue* NewSound, float StartTime, float FadeTime, float FadeVolume, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomComponentBase.PlaySoundToPad // (Final|Native|Public|BlueprintCallable) // @ game+0x12aef90
	void PlaySound(struct UObject* WorldContextObject, struct USoundAtomCue* NewSound, float StartTime, float FadeTime, float FadeVolume, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomComponentBase.PlaySound // (Final|Native|Public|BlueprintCallable) // @ game+0x12aef90
	void PauseSound(float FadeTime, float FadeVolume); // Function BattlePrototype.RSAtomComponentBase.PauseSound // (Final|Native|Public|BlueprintCallable) // @ game+0x12aec00
	void Initialize(); // Function BattlePrototype.RSAtomComponentBase.Initialize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12aeb00
	bool GetAisacByName(struct FString ControlName, float Value); // Function BattlePrototype.RSAtomComponentBase.GetAisacByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ae1e0
	void Fade(float DeltaTime); // Function BattlePrototype.RSAtomComponentBase.Fade // (Final|Native|Public|BlueprintCallable) // @ game+0x12ae080
	void ChangeFade(float FadeTime); // Function BattlePrototype.RSAtomComponentBase.ChangeFade // (Final|Native|Public|BlueprintCallable) // @ game+0x12ae000
	void _OnEndPlayAtom(); // Function BattlePrototype.RSAtomComponentBase._OnEndPlayAtom // (Final|Native|Public|BlueprintCallable) // @ game+0x12b1750
};

// Class BattlePrototype.RSAtomCuePlayNotifyBase
// Size: 0x40 (Inherited: 0x38)
struct URSAtomCuePlayNotifyBase : UAnimNotify {
	struct USoundAtomCue* m_pSound; // 0x38(0x08)

	void OnSetEditorSound(struct USoundAtomCue* Sound); // Function BattlePrototype.RSAtomCuePlayNotifyBase.OnSetEditorSound // (Native|Event|Public|BlueprintCallable|BlueprintEvent|Const) // @ game+0x1212bd0
};

// Class BattlePrototype.RSAtomCuePlayNotifyStateBase
// Size: 0x38 (Inherited: 0x30)
struct URSAtomCuePlayNotifyStateBase : UAnimNotifyState {
	struct USoundAtomCue* m_pSound; // 0x30(0x08)

	void OnSetEditorSound(struct USoundAtomCue* Sound); // Function BattlePrototype.RSAtomCuePlayNotifyStateBase.OnSetEditorSound // (Native|Event|Public|BlueprintCallable|BlueprintEvent|Const) // @ game+0x124c1d0
};

// Class BattlePrototype.RSAtomStatics
// Size: 0x28 (Inherited: 0x28)
struct URSAtomStatics : UBlueprintFunctionLibrary {

	struct URSAtomComponentBase* SpawnSoundAttachedRS(struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy, bool bAutoActivate, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.SpawnSoundAttachedRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12b11d0
	struct URSAtomComponentBase* SpawnSoundAttachedLoadedSheetRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy, bool bAutoActivate, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.SpawnSoundAttachedLoadedSheetRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12b0cf0
	struct URSAtomComponentBase* SpawnSoundAtLocationRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy, bool bAutoActivate, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.SpawnSoundAtLocationRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12b0910
	struct URSAtomComponentBase* SpawnSoundAtLocationLoadedSheetRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy, bool bAutoActivate, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.SpawnSoundAtLocationLoadedSheetRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12b0530
	struct URSAtomComponentBase* SpawnSound2DRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, float PitchMultiplier, float StartTime, bool bPersistAcrossLevelTransition, bool bAutoDestroy, bool bAutoActivate, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.SpawnSound2DRS // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x12b0270
	void SetNonPlayerCueSheetVolumeParam(float Volume); // Function BattlePrototype.RSAtomStatics.SetNonPlayerCueSheetVolumeParam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12b00e0
	void SetIsCueSheetVolumeEnable(bool Flag); // Function BattlePrototype.RSAtomStatics.SetIsCueSheetVolumeEnable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12b0060
	void SetCueSheetVolume(struct FString SheetName, float Volume); // Function BattlePrototype.RSAtomStatics.SetCueSheetVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12afdf0
	void RemoveCueSheetVolume(struct FString SheetName); // Function BattlePrototype.RSAtomStatics.RemoveCueSheetVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12afa90
	void RemoveAllCueSheetVolume(); // Function BattlePrototype.RSAtomStatics.RemoveAllCueSheetVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12afa70
	struct URSAtomComponentBase* PlaySoundAttachedRS(struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.PlaySoundAttachedRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12af4a0
	void PlaySoundAtLocationRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.PlaySoundAtLocationRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12af150
	void PlayOneShotSoundAtLocationRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct FVector Location, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, struct UObject* Creator, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSAtomStatics.PlayOneShotSoundAtLocationRS // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12aecc0
	void PauseAudioOutputRS(bool bPause); // Function BattlePrototype.RSAtomStatics.PauseAudioOutputRS // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12aeb80
	float GetNonPlayerCueSheetVolumeParam(); // Function BattlePrototype.RSAtomStatics.GetNonPlayerCueSheetVolumeParam // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12aead0
	float GetCueSheetVolume(struct FString SheetName, bool isForceGet); // Function BattlePrototype.RSAtomStatics.GetCueSheetVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ae9a0
};

// Class BattlePrototype.RSAutoTestBase
// Size: 0x2a0 (Inherited: 0x230)
struct ARSAutoTestBase : AActor {
	struct FMulticastInlineDelegate OnTestPrepare; // 0x230(0x10)
	struct FMulticastInlineDelegate OnTestStart; // 0x240(0x10)
	struct FMulticastInlineDelegate OnTestFinished; // 0x250(0x10)
	enum class ERSAutoTestResult Result; // 0x260(0x01)
	bool bIsDelayGCInTest; // 0x261(0x01)
	char pad_262[0x2]; // 0x262(0x02)
	float PreparationTimeLimit; // 0x264(0x04)
	float timeLimit; // 0x268(0x04)
	char pad_26C[0x4]; // 0x26c(0x04)
	struct FText TimesUpMessage; // 0x270(0x18)
	enum class ERSAutoTestResult TimesUpResult; // 0x288(0x01)
	bool bIsRunning; // 0x289(0x01)
	char pad_28A[0x2]; // 0x28a(0x02)
	float TotalTime; // 0x28c(0x04)
	struct TArray<struct FString> TestArgs; // 0x290(0x10)

	void ReceiveStartTest(); // Function BattlePrototype.RSAutoTestBase.ReceiveStartTest // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void ReceivePrepareTest(); // Function BattlePrototype.RSAutoTestBase.ReceivePrepareTest // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsReady(); // Function BattlePrototype.RSAutoTestBase.IsReady // (Native|Event|Public|BlueprintEvent) // @ game+0x118ac80
	void FinishTest(enum class ERSAutoTestResult TestResult, struct FString Message); // Function BattlePrototype.RSAutoTestBase.FinishTest // (Native|Public|BlueprintCallable) // @ game+0x12ae100
};

// Class BattlePrototype.RSAutoTestMeasurePerfLevel
// Size: 0x2a0 (Inherited: 0x2a0)
struct ARSAutoTestMeasurePerfLevel : ARSAutoTestBase {

	bool WriteErrorCsvFile(struct FString LogFileName, struct FString LocationName, struct FString errorMessage); // Function BattlePrototype.RSAutoTestMeasurePerfLevel.WriteErrorCsvFile // (Final|Native|Public|BlueprintCallable) // @ game+0x12b92f0
	bool WriteCsvFile(struct FString LogFileName); // Function BattlePrototype.RSAutoTestMeasurePerfLevel.WriteCsvFile // (Final|Native|Public|BlueprintCallable) // @ game+0x12b9240
	void EndUnitRecording(); // Function BattlePrototype.RSAutoTestMeasurePerfLevel.EndUnitRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void BeginUnitRecording(struct FString CheckpointName, int32_t Angle); // Function BattlePrototype.RSAutoTestMeasurePerfLevel.BeginUnitRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x12b52c0
	void AddCheckpointRecord(struct FString LocationName); // Function BattlePrototype.RSAutoTestMeasurePerfLevel.AddCheckpointRecord // (Final|Native|Public|BlueprintCallable) // @ game+0x128fe70
};

// Class BattlePrototype.RSBootManager
// Size: 0x290 (Inherited: 0x230)
struct ARSBootManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct FDelegate m_OnEventSaveLoadError; // 0x238(0x10)
	char pad_248[0x9]; // 0x248(0x09)
	enum class EBootLevelFlow m_BootFlow; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
	struct ARSHUDBase* m_pRSHudBase; // 0x258(0x08)
	struct URSSaveGame* m_pSaveGameSystem; // 0x260(0x08)
	struct UUserParamManager* UserParamManager; // 0x268(0x08)
	struct UDatabaseManager* DatabaseManager; // 0x270(0x08)
	struct USaveLoadScreenParamManager* m_pSaveLoadSystemParamManager; // 0x278(0x08)
	char pad_280[0x10]; // 0x280(0x10)

	void SetBootFlow(enum class EBootLevelFlow flow); // Function BattlePrototype.RSBootManager.SetBootFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7a50
	bool IsExistSaveData(); // Function BattlePrototype.RSBootManager.IsExistSaveData // (Final|Native|Public|BlueprintCallable) // @ game+0x12b6a30
	bool isCheckStorageSpace(); // Function BattlePrototype.RSBootManager.isCheckStorageSpace // (Final|Native|Public|BlueprintCallable) // @ game+0x12b9440
	enum class EBootLevelFlow GetBootFlow(); // Function BattlePrototype.RSBootManager.GetBootFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x11f5000
};

// Class BattlePrototype.RSCableAnimInstance
// Size: 0x300 (Inherited: 0x270)
struct URSCableAnimInstance : UAnimInstance {
	struct FVector Gravity; // 0x270(0x0c)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct FAnimNode_RigidBodyRedCustomInterpolateInfo RigidBodyInterplateInfo; // 0x280(0x18)
	float TimeDilation; // 0x298(0x04)
	char pad_29C[0x4]; // 0x29c(0x04)
	struct FCableAdditiveBoneParam AdditiveBoneParam; // 0x2a0(0x28)
	float IdleRigidBlendSpeed; // 0x2c8(0x04)
	float IdleRigidBlendRate; // 0x2cc(0x04)
	struct TArray<struct FRotator> BoneRotator; // 0x2d0(0x10)
	int32_t BoneNum; // 0x2e0(0x04)
	enum class ERSCableAnimationState AnimationState; // 0x2e4(0x01)
	char pad_2E5[0x3]; // 0x2e5(0x03)
	float RigidIdlingSec; // 0x2e8(0x04)
	char pad_2EC[0x14]; // 0x2ec(0x14)

	void Update(float DeltaSeconds); // Function BattlePrototype.RSCableAnimInstance.Update // (Final|Native|Protected|BlueprintCallable) // @ game+0x12b8f70
	void SetState(enum class ERSCableAnimationState State); // Function BattlePrototype.RSCableAnimInstance.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x12b86e0
	void SetBoneParam(struct FCableAdditiveBoneParam Param); // Function BattlePrototype.RSCableAnimInstance.SetBoneParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12b7990
	void SetActive(bool NewActive); // Function BattlePrototype.RSCableAnimInstance.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	bool EndOverrideGravity(enum class ERSCableGravityType Type); // Function BattlePrototype.RSCableAnimInstance.EndOverrideGravity // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool BeginOverrideGravity(enum class ERSCableGravityType Type); // Function BattlePrototype.RSCableAnimInstance.BeginOverrideGravity // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSCameraShake
// Size: 0x160 (Inherited: 0x160)
struct URSCameraShake : UCameraShake {
	bool bNoEffectGlobalTimeDilation; // 0x158(0x01)
};

// Class BattlePrototype.RSCapsuleComponent
// Size: 0x430 (Inherited: 0x430)
struct URSCapsuleComponent : UCapsuleComponent {
};

// Class BattlePrototype.RSCharaAnimationAccessor
// Size: 0x238 (Inherited: 0x230)
struct ARSCharaAnimationAccessor : AActor {
	bool IsSettingFaceAnimation; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)
};

// Class BattlePrototype.RSCharacterAnimInstance
// Size: 0x620 (Inherited: 0x620)
struct URSCharacterAnimInstance : UASAnimInstance {

	float GetCurrentASNodeAssetTime(); // Function BattlePrototype.RSCharacterAnimInstance.GetCurrentASNodeAssetTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6250
	float GetCurrentASNodeAssetPlayRate(); // Function BattlePrototype.RSCharacterAnimInstance.GetCurrentASNodeAssetPlayRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6220
	float GetCurrentASNodeAssetLength(); // Function BattlePrototype.RSCharacterAnimInstance.GetCurrentASNodeAssetLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b61f0
	struct UAnimMontage* GetAnimMontageFromSlot(struct FName SlotName); // Function BattlePrototype.RSCharacterAnimInstance.GetAnimMontageFromSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5c90
	void ForceStopAllMontage(float BlendOut); // Function BattlePrototype.RSCharacterAnimInstance.ForceStopAllMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5b60
	bool DebugIsCurrentASNodeRootMotion(); // Function BattlePrototype.RSCharacterAnimInstance.DebugIsCurrentASNodeRootMotion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	struct FName DebugGetCurrentASNodeAssetName(); // Function BattlePrototype.RSCharacterAnimInstance.DebugGetCurrentASNodeAssetName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b57e0
};

// Class BattlePrototype.RSCharacterBase
// Size: 0x8f0 (Inherited: 0x630)
struct ARSCharacterBase : AASCharacter {
	char pad_630[0x18]; // 0x630(0x18)
	struct FMulticastInlineDelegate DispatchTick; // 0x648(0x10)
	struct FMulticastInlineDelegate DispatchStealth; // 0x658(0x10)
	enum class ECharacterHitPriority CharacterHitPriority; // 0x668(0x01)
	char pad_669[0x3]; // 0x669(0x03)
	int32_t CharacterHitTimeSliceNum; // 0x66c(0x04)
	struct TArray<struct FHCHitResult> DamageDataArray; // 0x670(0x10)
	struct TArray<struct FDirectAttackDamageParam> DirectDamageDataArray; // 0x680(0x10)
	struct TArray<struct FHCHitResult> DamageData_Temp; // 0x690(0x10)
	char pad_6A0[0x20]; // 0x6a0(0x20)
	struct URSUniqueIdComponent* UniqueIdComponent; // 0x6c0(0x08)
	int32_t CharacterItemDropId; // 0x6c8(0x04)
	int32_t CoreDropId; // 0x6cc(0x04)
	bool bTestCurveMoveCharacterMovement; // 0x6d0(0x01)
	bool bUseAnimationCurveMovement; // 0x6d1(0x01)
	char pad_6D2[0x2]; // 0x6d2(0x02)
	struct FName AnimationCurveMovementSlotName; // 0x6d4(0x08)
	char pad_6DC[0x14]; // 0x6dc(0x14)
	struct UFootStepComponent* FootStepComponent; // 0x6f0(0x08)
	struct UDamageArrayComponent* DamageArrayComponent; // 0x6f8(0x08)
	struct UDamageResponseComponent* DamageResponseComponent; // 0x700(0x08)
	char pad_708[0x20]; // 0x708(0x20)
	enum class FHitEffectPriority PriorityHitEffect; // 0x728(0x01)
	char pad_729[0x7]; // 0x729(0x07)
	struct TArray<struct FName> mLoopSeKeyList; // 0x730(0x10)
	char pad_740[0x11]; // 0x740(0x11)
	bool bDisableNpcTarget; // 0x751(0x01)
	bool bLockOnRestrictFlag; // 0x752(0x01)
	bool bEnableLockOnRestrictTarget; // 0x753(0x01)
	char pad_754[0x4]; // 0x754(0x04)
	struct TArray<struct FName> NotTargetableList; // 0x758(0x10)
	char pad_768[0x10]; // 0x768(0x10)
	struct FName mCh0200CvEffect_BoneName; // 0x778(0x08)
	struct FVector mCh0200CvEffect_Scale; // 0x780(0x0c)
	float mCh0200CvEffect_CameraOffset; // 0x78c(0x04)
	struct TArray<struct ARSCharacterBase*> mTargetingList; // 0x790(0x10)
	struct TArray<struct ARSCharacterBase*> mAttackingList; // 0x7a0(0x10)
	enum class EEnemyGrade mEnemyGrade; // 0x7b0(0x01)
	char pad_7B1[0x17]; // 0x7b1(0x17)
	struct TArray<enum class ECharacterAttribute> CharacterAttributeList; // 0x7c8(0x10)
	char pad_7D8[0x2]; // 0x7d8(0x02)
	bool bDeadBrainCrashOnly; // 0x7da(0x01)
	bool bInfinityCrashChance; // 0x7db(0x01)
	bool bNotAbleBrainCrashTarget; // 0x7dc(0x01)
	bool bUseGuts; // 0x7dd(0x01)
	char pad_7DE[0x1]; // 0x7de(0x01)
	bool bDeadPsychicObjComboOnly; // 0x7df(0x01)
	bool bDeadChaseAttackOnly; // 0x7e0(0x01)
	bool bDeadLaunchAttackOnly; // 0x7e1(0x01)
	bool bDeadPhysicsAttackOnly; // 0x7e2(0x01)
	bool bDeadPsychicObjOnly; // 0x7e3(0x01)
	bool bNoDeadTutorial; // 0x7e4(0x01)
	bool bNoDeadEvent; // 0x7e5(0x01)
	bool bNoCrashChanceEvent; // 0x7e6(0x01)
	bool bIsEmphasisCrashGauge; // 0x7e7(0x01)
	float HPPercentOfDamageBefore; // 0x7e8(0x04)
	bool bDisableDamageAddReaction; // 0x7ec(0x01)
	bool bDisableDamageAddShake; // 0x7ed(0x01)
	char pad_7EE[0x1]; // 0x7ee(0x01)
	bool bIsHitInvincibleParts; // 0x7ef(0x01)
	char pad_7F0[0x1]; // 0x7f0(0x01)
	enum class EEnemyAttractType AttractType; // 0x7f1(0x01)
	char pad_7F2[0x2]; // 0x7f2(0x02)
	float PsychicFieldDamageRateToBoss; // 0x7f4(0x04)
	float mDownCapusleInterpSpeed; // 0x7f8(0x04)
	struct FName mDownCapsuleOriginalAttachName; // 0x7fc(0x08)
	struct FName mDownCapsuleInterpAttachName; // 0x804(0x08)
	float mDownCapsuleOriginalHalfHeight; // 0x80c(0x04)
	float mDownCapsuleInterpHalfHeight; // 0x810(0x04)
	float mDownCapsuleOriginalRadius; // 0x814(0x04)
	float mDownCapsuleInterpRadius; // 0x818(0x04)
	struct FVector mDownCapsuleOriginalRelativeLocation; // 0x81c(0x0c)
	struct FVector mDownCapsuleInterpRelativeLocation; // 0x828(0x0c)
	struct FRotator mDownCapsuleOriginalRelativeRotation; // 0x834(0x0c)
	struct FRotator mDownCapsuleInterpRelativeRotation; // 0x840(0x0c)
	char pad_84C[0x18]; // 0x84c(0x18)
	bool bEnableUro; // 0x864(0x01)
	char pad_865[0x3]; // 0x865(0x03)
	struct TArray<float> mUroThesholds; // 0x868(0x10)
	struct TArray<struct URSParticleSystemComponentBase*> mCameraDitherParticlArray; // 0x878(0x10)
	struct TArray<struct UCapsuleComponent*> mCameraDitherCheckComponentArray; // 0x888(0x10)
	struct UCharacterDitherDataAsset* mCameraDitherDataAsset; // 0x898(0x08)
	float mDitherValue; // 0x8a0(0x04)
	char pad_8A4[0x4]; // 0x8a4(0x04)
	struct UPlayerScriptComponent* PlayerScriptCache; // 0x8a8(0x08)
	struct UPlayerAsyncScriptComponent* PlayerAsyncScriptCache; // 0x8b0(0x08)
	struct UPlayerDriveComponent* PlayerDriveCache; // 0x8b8(0x08)
	struct UEnemyScriptComponent* EnemyScriptCache; // 0x8c0(0x08)
	struct UMoveInputComponent* MoveInputCache; // 0x8c8(0x08)
	struct UTargetSearchComponent* TargetSearchCache; // 0x8d0(0x08)
	struct UHateTargetComponent* HateTargetCache; // 0x8d8(0x08)
	struct UHPEventComponent* HPEventCache; // 0x8e0(0x08)
	struct UHitCheckReceiverComponent* HitCheckReceiverCache; // 0x8e8(0x08)

	void UpdateInterpDownCapsule(struct UCapsuleComponent* charaCapsule, float DeltaSec); // Function BattlePrototype.RSCharacterBase.UpdateInterpDownCapsule // (Final|Native|Public|BlueprintCallable) // @ game+0x12b9170
	float UpdateCameraDitherInner(float DeltaSeconds, bool UseDither, struct UCapsuleComponent* checkComponent, float checkDistance); // Function BattlePrototype.RSCharacterBase.UpdateCameraDitherInner // (Final|Native|Public|BlueprintCallable) // @ game+0x12b9010
	void UpdateAnimationCurveMovement(); // Function BattlePrototype.RSCharacterBase.UpdateAnimationCurveMovement // (Final|Native|Private) // @ game+0x12b8ff0
	void UnregisterSignificanceManager(); // Function BattlePrototype.RSCharacterBase.UnregisterSignificanceManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8f50
	void SubTargetingList(struct ARSCharacterBase* subCharacter); // Function BattlePrototype.RSCharacterBase.SubTargetingList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8ed0
	void SubAttackingList(struct ARSCharacterBase* subCharacter); // Function BattlePrototype.RSCharacterBase.SubAttackingList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8e50
	void StopLoopSeAll(float FadeTime, float FadeVolume); // Function BattlePrototype.RSCharacterBase.StopLoopSeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8d90
	bool StopLoopSe(struct FName Name, float FadeTime, float FadeVolume); // Function BattlePrototype.RSCharacterBase.StopLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8c90
	void StartRestoreInterpDownCapsule(float interpSpeed, struct UCapsuleComponent* charaCapsule); // Function BattlePrototype.RSCharacterBase.StartRestoreInterpDownCapsule // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8bc0
	void StartInterpDownCapsule(float interpSpeed, struct FName interpAttachName, float interpHalfHeight, float interpRadius, struct FVector RelativeLocation, struct FRotator RelativeRotation, struct UCapsuleComponent* charaCapsule); // Function BattlePrototype.RSCharacterBase.StartInterpDownCapsule // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12b89a0
	void SetUseGuts(bool bUse); // Function BattlePrototype.RSCharacterBase.SetUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b8910
	void SetUpdateRepop(bool updateRepop); // Function BattlePrototype.RSCharacterBase.SetUpdateRepop // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8880
	void SetTargetAbleStealthActor(bool bSearchAble); // Function BattlePrototype.RSCharacterBase.SetTargetAbleStealthActor // (Final|Native|Public|BlueprintCallable) // @ game+0x12b87f0
	void SetStealthMode(bool bStealth); // Function BattlePrototype.RSCharacterBase.SetStealthMode // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8760
	void SetSkipRecoverHpAnime(bool bEnable); // Function BattlePrototype.RSCharacterBase.SetSkipRecoverHpAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8650
	void SetRootMotionScale(float Scale); // Function BattlePrototype.RSCharacterBase.SetRootMotionScale // (Final|Native|Public|BlueprintCallable) // @ game+0x12b85d0
	void SetNoCrashChanceByUseGuts(bool bEnable); // Function BattlePrototype.RSCharacterBase.SetNoCrashChanceByUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b8540
	void SetNoCollisionAndStopAiFade(bool bNoColAndStopAi, bool dummy); // Function BattlePrototype.RSCharacterBase.SetNoCollisionAndStopAiFade // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x12b8460
	void SetMotionEffect(struct URSParticleSystemComponentBase* Effect); // Function BattlePrototype.RSCharacterBase.SetMotionEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12b83e0
	void SetLockOnRestrict(bool bRestrict); // Function BattlePrototype.RSCharacterBase.SetLockOnRestrict // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8350
	void SetInVisionFog(bool bInFog); // Function BattlePrototype.RSCharacterBase.SetInVisionFog // (Final|Native|Public|BlueprintCallable) // @ game+0x12b81b0
	void SetInterruptTelepoEffect(struct URSParticleSystemComponentBase* Effect); // Function BattlePrototype.RSCharacterBase.SetInterruptTelepoEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12b82d0
	void SetInfinityCrashChance(bool bEnable); // Function BattlePrototype.RSCharacterBase.SetInfinityCrashChance // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b8240
	void SetGaugeDisappearInstantly(bool DisappearInstantly); // Function BattlePrototype.RSCharacterBase.SetGaugeDisappearInstantly // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8120
	void SetEventCondition(bool bEvent); // Function BattlePrototype.RSCharacterBase.SetEventCondition // (Final|Native|Protected|BlueprintCallable) // @ game+0x12b8090
	void SetEnableLockOnRestrictTarget(bool bEnable); // Function BattlePrototype.RSCharacterBase.SetEnableLockOnRestrictTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x12b8000
	void SetDisableTarget(bool bDisable, struct FName ClaimantName); // Function BattlePrototype.RSCharacterBase.SetDisableTarget // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12b7f30
	void SetDisableDamageAddShake(bool bDisable); // Function BattlePrototype.RSCharacterBase.SetDisableDamageAddShake // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7ea0
	void SetDisableDamageAddReaction(bool bDisable); // Function BattlePrototype.RSCharacterBase.SetDisableDamageAddReaction // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7e10
	void SetDeadBrainCrashOnly(bool bEnable); // Function BattlePrototype.RSCharacterBase.SetDeadBrainCrashOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b7d80
	void SetCameraStabilizeParameter(float distLockHz, float distRestoreHz, float distLockVt, float distRestoreVt); // Function BattlePrototype.RSCharacterBase.SetCameraStabilizeParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7c30
	void SetCameraDitherToMeshAndParticles(float DeitherValue, bool bIgnorMesh); // Function BattlePrototype.RSCharacterBase.SetCameraDitherToMeshAndParticles // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7b60
	void SetBrainCrashReceivePossible(bool Flag); // Function BattlePrototype.RSCharacterBase.SetBrainCrashReceivePossible // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7ad0
	void SetAttractSelf(bool bAttract); // Function BattlePrototype.RSCharacterBase.SetAttractSelf // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7900
	bool ResumeLoopSe(struct FName Name, float FadeTime, float FadeVolume); // Function BattlePrototype.RSCharacterBase.ResumeLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7800
	void ResetMotionEffectList(); // Function BattlePrototype.RSCharacterBase.ResetMotionEffectList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b77e0
	void ResetInterruptTelepoEffectList(); // Function BattlePrototype.RSCharacterBase.ResetInterruptTelepoEffectList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b77c0
	void ResetCharacterHitOffset(); // Function BattlePrototype.RSCharacterBase.ResetCharacterHitOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x12b77a0
	void ReserveDamageDirectAttack(bool bUseFixDamage, int32_t fixDamage, struct FHCHitResult HitResult, bool isForceCritical); // Function BattlePrototype.RSCharacterBase.ReserveDamageDirectAttack // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12b75c0
	void RequestApplyCameraDither(bool bMesh, bool bParticle); // Function BattlePrototype.RSCharacterBase.RequestApplyCameraDither // (Final|Native|Public|BlueprintCallable) // @ game+0x12b74f0
	void RegisterSpecialDamageEffect(struct URSParticleSystemComponentBase* Particle); // Function BattlePrototype.RSCharacterBase.RegisterSpecialDamageEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7470
	void RegisterSignificanceManager(); // Function BattlePrototype.RSCharacterBase.RegisterSignificanceManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7450
	void RegistCameraDitherParticlehandle(struct URSParticleSystemComponentBase* Particle); // Function BattlePrototype.RSCharacterBase.RegistCameraDitherParticlehandle // (Final|Native|Public|BlueprintCallable) // @ game+0x12b73d0
	void ProcDamageBefore(); // Function BattlePrototype.RSCharacterBase.ProcDamageBefore // (Event|Public|BlueprintEvent) // @ game+0x1685580
	struct FHCHitResult ProcDamageAssassinAttack(struct FHCHitResult HitResult); // Function BattlePrototype.RSCharacterBase.ProcDamageAssassinAttack // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	void ProcDamageAfter(struct TArray<struct FHCHitResult> Result); // Function BattlePrototype.RSCharacterBase.ProcDamageAfter // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	void ProcDamageActorHit(struct FHCHitResult HitResult); // Function BattlePrototype.RSCharacterBase.ProcDamageActorHit // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	bool PlayLoopSe(struct FName Name, struct USoundAtomCue* AtomCue, struct FVector Location, struct FRotator Rotation, float FadeTime, float FadeVolume, bool forceFirstStart); // Function BattlePrototype.RSCharacterBase.PlayLoopSe // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12b71b0
	bool PauseLoopSe(struct FName Name, float FadeTime, float FadeVolume); // Function BattlePrototype.RSCharacterBase.PauseLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12b70b0
	void OnFinishSpawnWaitDelayTimer(); // Function BattlePrototype.RSCharacterBase.OnFinishSpawnWaitDelayTimer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b7090
	void OnFellOutOfWorld(); // Function BattlePrototype.RSCharacterBase.OnFellOutOfWorld // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void OnDamageCalcArray(); // Function BattlePrototype.RSCharacterBase.OnDamageCalcArray // (Final|Native|Public|BlueprintCallable) // @ game+0x12b7070
	void OnBeLockOn(); // Function BattlePrototype.RSCharacterBase.OnBeLockOn // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b7050
	bool OnAddedBattleMemberFromMenu(); // Function BattlePrototype.RSCharacterBase.OnAddedBattleMemberFromMenu // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b7020
	bool IsUseGuts(); // Function BattlePrototype.RSCharacterBase.IsUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6fe0
	bool IsUpdateRepop(); // Function BattlePrototype.RSCharacterBase.IsUpdateRepop // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6fb0
	bool IsTargetRendered(); // Function BattlePrototype.RSCharacterBase.IsTargetRendered // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b6f50
	bool IsTargetAbleStealthActor(); // Function BattlePrototype.RSCharacterBase.IsTargetAbleStealthActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6f20
	bool IsTargetable(); // Function BattlePrototype.RSCharacterBase.IsTargetable // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6f80
	bool IsStealthMode(); // Function BattlePrototype.RSCharacterBase.IsStealthMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6ef0
	bool IsSkipRecoverHpAnime(); // Function BattlePrototype.RSCharacterBase.IsSkipRecoverHpAnime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6ec0
	bool IsSeeTarget(struct ARSCharacterBase* Target); // Function BattlePrototype.RSCharacterBase.IsSeeTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6e20
	bool IsRivalTeam(struct UTeamComponent* Team); // Function BattlePrototype.RSCharacterBase.IsRivalTeam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6d90
	bool isRegistLoopSe(struct FName Name); // Function BattlePrototype.RSCharacterBase.isRegistLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12b9470
	bool IsNotAbleBrainCrashTarget(); // Function BattlePrototype.RSCharacterBase.IsNotAbleBrainCrashTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6d50
	bool IsNoCrashChanceByUseGuts(); // Function BattlePrototype.RSCharacterBase.IsNoCrashChanceByUseGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6d10
	bool IsInVisionFog(); // Function BattlePrototype.RSCharacterBase.IsInVisionFog // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6ca0
	bool IsInfinityCrashChance(); // Function BattlePrototype.RSCharacterBase.IsInfinityCrashChance // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6cd0
	bool IsIgnoreVisionFog(); // Function BattlePrototype.RSCharacterBase.IsIgnoreVisionFog // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6c70
	bool IsHitInvincibleParts(); // Function BattlePrototype.RSCharacterBase.IsHitInvincibleParts // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6c40
	bool IsGuardBadCondition(enum class HCSkillAttribute attr); // Function BattlePrototype.RSCharacterBase.IsGuardBadCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6bb0
	bool IsGaugeDisappearInstantly(); // Function BattlePrototype.RSCharacterBase.IsGaugeDisappearInstantly // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6b80
	bool IsFriendTeam(struct UTeamComponent* Team); // Function BattlePrototype.RSCharacterBase.IsFriendTeam // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6af0
	bool IsFlyingCPP(); // Function BattlePrototype.RSCharacterBase.IsFlyingCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6ac0
	bool IsFinishActorBeginPlay(); // Function BattlePrototype.RSCharacterBase.IsFinishActorBeginPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6a90
	bool IsFallingCPP(); // Function BattlePrototype.RSCharacterBase.IsFallingCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6a60
	bool IsEventCondition(); // Function BattlePrototype.RSCharacterBase.IsEventCondition // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b69f0
	bool IsEnableMetalMode(); // Function BattlePrototype.RSCharacterBase.IsEnableMetalMode // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b69c0
	bool IsEnableDamageHit(); // Function BattlePrototype.RSCharacterBase.IsEnableDamageHit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b69a0
	bool IsEnableCharacterHit(); // Function BattlePrototype.RSCharacterBase.IsEnableCharacterHit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6980
	bool IsDisableDamageAddShake(); // Function BattlePrototype.RSCharacterBase.IsDisableDamageAddShake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6950
	bool IsDisableDamageAddReaction(); // Function BattlePrototype.RSCharacterBase.IsDisableDamageAddReaction // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6920
	bool IsDeadBrainCrashOnly(); // Function BattlePrototype.RSCharacterBase.IsDeadBrainCrashOnly // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b68e0
	bool IsCrashMaxWithGuts(); // Function BattlePrototype.RSCharacterBase.IsCrashMaxWithGuts // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b68a0
	bool IsCharacterDead(); // Function BattlePrototype.RSCharacterBase.IsCharacterDead // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6870
	bool IsCharacterBadStatusOil(); // Function BattlePrototype.RSCharacterBase.IsCharacterBadStatusOil // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6840
	bool IsCharacterBadStatusFlooded(); // Function BattlePrototype.RSCharacterBase.IsCharacterBadStatusFlooded // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6810
	bool IsCharacterBadStatusFlame(); // Function BattlePrototype.RSCharacterBase.IsCharacterBadStatusFlame // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b67e0
	bool IsCharacterBadStatusElectric(); // Function BattlePrototype.RSCharacterBase.IsCharacterBadStatusElectric // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b67b0
	bool IsCharacterBadStatusConfusion(); // Function BattlePrototype.RSCharacterBase.IsCharacterBadStatusConfusion // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6780
	bool IsCharacterBadStatusAttribute(enum class HCSkillAttribute attr); // Function BattlePrototype.RSCharacterBase.IsCharacterBadStatusAttribute // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b66f0
	bool IsBrainCrashSuccess(); // Function BattlePrototype.RSCharacterBase.IsBrainCrashSuccess // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsBrainCrashReceivePossible(); // Function BattlePrototype.RSCharacterBase.IsBrainCrashReceivePossible // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b66c0
	bool IsBrainCrashAccess(); // Function BattlePrototype.RSCharacterBase.IsBrainCrashAccess // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsAttractSelf(); // Function BattlePrototype.RSCharacterBase.IsAttractSelf // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6690
	bool IsAbsoluteVisibilityTrace(); // Function BattlePrototype.RSCharacterBase.IsAbsoluteVisibilityTrace // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6650
	struct FName GetUniqueName(); // Function BattlePrototype.RSCharacterBase.GetUniqueName // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x12b6610
	int32_t GetUniqueId(); // Function BattlePrototype.RSCharacterBase.GetUniqueId // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x12b65d0
	struct TArray<struct ARSCharacterBase*> GetTargetingList(); // Function BattlePrototype.RSCharacterBase.GetTargetingList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b61c0
	enum class ESpecialDamageTableType GetSpecialDamageTableType(); // Function BattlePrototype.RSCharacterBase.GetSpecialDamageTableType // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b65a0
	struct TArray<struct FName> GetSkeletonSlotNames(); // Function BattlePrototype.RSCharacterBase.GetSkeletonSlotNames // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6520
	float GetSignificanceResult(); // Function BattlePrototype.RSCharacterBase.GetSignificanceResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b64f0
	float GetPsychicFieldDamageRateToBoss(); // Function BattlePrototype.RSCharacterBase.GetPsychicFieldDamageRateToBoss // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12b64c0
	struct TArray<struct FName> GetLoopSeKeyList(); // Function BattlePrototype.RSCharacterBase.GetLoopSeKeyList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b6430
	int32_t GetGroupID(); // Function BattlePrototype.RSCharacterBase.GetGroupID // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetGroundLocationSimple(bool bIncludeObject); // Function BattlePrototype.RSCharacterBase.GetGroundLocationSimple // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6380
	struct FVector GetEyePosition(); // Function BattlePrototype.RSCharacterBase.GetEyePosition // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6340
	struct FEnemyFindChangeParam GetEnemyFindChangeParam(); // Function BattlePrototype.RSCharacterBase.GetEnemyFindChangeParam // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6300
	struct FName GetEnemyDeadReplaceLogName(); // Function BattlePrototype.RSCharacterBase.GetEnemyDeadReplaceLogName // (Native|Event|Public|BlueprintEvent|Const) // @ game+0x12b62c0
	int32_t GetDirectDamageDataArrayNum(); // Function BattlePrototype.RSCharacterBase.GetDirectDamageDataArrayNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b62a0
	int32_t GetDamageDataArrayNum(); // Function BattlePrototype.RSCharacterBase.GetDamageDataArrayNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b6280
	struct TArray<struct ARSCharacterBase*> GetConstTargetingList(); // Function BattlePrototype.RSCharacterBase.GetConstTargetingList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b61c0
	struct TArray<struct ARSCharacterBase*> GetConstAttackingList(); // Function BattlePrototype.RSCharacterBase.GetConstAttackingList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5ee0
	struct UCharactersParameterComponent* GetCharactersParameterComponent(); // Function BattlePrototype.RSCharacterBase.GetCharactersParameterComponent // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetCharacterMovementLocationSimple(); // Function BattlePrototype.RSCharacterBase.GetCharacterMovementLocationSimple // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b6180
	bool GetCharacterMovementGroundInfoSimple(struct FHitResult Result); // Function BattlePrototype.RSCharacterBase.GetCharacterMovementGroundInfoSimple // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b60b0
	struct TArray<enum class ECharacterAttribute> GetCharacterAttribute(); // Function BattlePrototype.RSCharacterBase.GetCharacterAttribute // (Final|Native|Public|BlueprintCallable) // @ game+0x12b6030
	struct FVector GetCh0200CvEffect_Scale(); // Function BattlePrototype.RSCharacterBase.GetCh0200CvEffect_Scale // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5ff0
	float GetCh0200CvEffect_CameraOffset(); // Function BattlePrototype.RSCharacterBase.GetCh0200CvEffect_CameraOffset // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1267c60
	struct FName GetCh0200CvEffect_BoneName(); // Function BattlePrototype.RSCharacterBase.GetCh0200CvEffect_BoneName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5fb0
	struct UPlayerScriptComponent* GetCachedPlayerScript(); // Function BattlePrototype.RSCharacterBase.GetCachedPlayerScript // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5f80
	float GetBrainCrashRange(); // Function BattlePrototype.RSCharacterBase.GetBrainCrashRange // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b5f40
	enum class EEnemyAttractType GetAttractType(); // Function BattlePrototype.RSCharacterBase.GetAttractType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5f10
	struct TArray<struct ARSCharacterBase*> GetAttackingList(); // Function BattlePrototype.RSCharacterBase.GetAttackingList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5ee0
	bool GetAssumptionDataNamesNative(struct UDataTable* DataTable, struct FString LevelName, struct TArray<struct FName> ResultRowNames); // Function BattlePrototype.RSCharacterBase.GetAssumptionDataNamesNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12b5d60
	enum class EAssassinAttackHit GetAssasinAttackHitType(); // Function BattlePrototype.RSCharacterBase.GetAssasinAttackHitType // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12b5d20
	float GetActorDeltaSecondsCPP(); // Function BattlePrototype.RSCharacterBase.GetActorDeltaSecondsCPP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5c60
	struct TArray<struct USkeletalMeshSocket*> GetActiveSocketList(); // Function BattlePrototype.RSCharacterBase.GetActiveSocketList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5be0
	void ForceEndInterpDownCapsule(struct UCapsuleComponent* charaCapsule); // Function BattlePrototype.RSCharacterBase.ForceEndInterpDownCapsule // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5ae0
	void ForceApplyCameraDither(bool bMesh, bool bParticle); // Function BattlePrototype.RSCharacterBase.ForceApplyCameraDither // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5a10
	void EndMotionEffectImmediately(); // Function BattlePrototype.RSCharacterBase.EndMotionEffectImmediately // (Final|Native|Public|BlueprintCallable) // @ game+0x12b59f0
	void EndMotionEffect(); // Function BattlePrototype.RSCharacterBase.EndMotionEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12b59d0
	void EndInterruptTelepoEffectImmediately(); // Function BattlePrototype.RSCharacterBase.EndInterruptTelepoEffectImmediately // (Final|Native|Public|BlueprintCallable) // @ game+0x12b59b0
	void EndInterruptTelepoEffect(); // Function BattlePrototype.RSCharacterBase.EndInterruptTelepoEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5990
	void EnableDamageHit(); // Function BattlePrototype.RSCharacterBase.EnableDamageHit // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5970
	void EnableCharacterHit(float Time); // Function BattlePrototype.RSCharacterBase.EnableCharacterHit // (Final|Native|Public|BlueprintCallable) // @ game+0x12b58f0
	void EnableAbsoluteVisibilityTrace(bool bEnable); // Function BattlePrototype.RSCharacterBase.EnableAbsoluteVisibilityTrace // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12b5860
	void DisableDamageHit(); // Function BattlePrototype.RSCharacterBase.DisableDamageHit // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5840
	void DisableCharacterHit(); // Function BattlePrototype.RSCharacterBase.DisableCharacterHit // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5820
	void ClearLoopSeKeyList(); // Function BattlePrototype.RSCharacterBase.ClearLoopSeKeyList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b57b0
	void ClearDamageDataArray(); // Function BattlePrototype.RSCharacterBase.ClearDamageDataArray // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5790
	bool CheckTargetableCharacterReason(enum class ETargetFailedReason OutReason, struct ARSCharacterBase* chara); // Function BattlePrototype.RSCharacterBase.CheckTargetableCharacterReason // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12b56b0
	bool CheckTargetableCharacter(struct ARSCharacterBase* chara); // Function BattlePrototype.RSCharacterBase.CheckTargetableCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5620
	bool CheckStrongCharacter(struct ARSCharacterBase* CheckCharacter); // Function BattlePrototype.RSCharacterBase.CheckStrongCharacter // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CheckAttractSelf(struct FHCHitResult HitResult); // Function BattlePrototype.RSCharacterBase.CheckAttractSelf // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CanAddTargetingList(struct ARSCharacterBase* newCharacter); // Function BattlePrototype.RSCharacterBase.CanAddTargetingList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5590
	bool CanAddAttackingList(struct ARSCharacterBase* newCharacter); // Function BattlePrototype.RSCharacterBase.CanAddAttackingList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12b5500
	float CalcUniqueDamage(struct FHCHitResult HitResult, float BaseDamage); // Function BattlePrototype.RSCharacterBase.CalcUniqueDamage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x12b53a0
	void AddTargetingList(struct ARSCharacterBase* AddCharacter); // Function BattlePrototype.RSCharacterBase.AddTargetingList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b5240
	void AddAttackingList(struct ARSCharacterBase* AddCharacter); // Function BattlePrototype.RSCharacterBase.AddAttackingList // (Final|Native|Public|BlueprintCallable) // @ game+0x12b51c0
};

// Class BattlePrototype.RSCheatManager
// Size: 0x80 (Inherited: 0x78)
struct URSCheatManager : UCheatManager {
	char pad_78[0x8]; // 0x78(0x08)

	void RSCWarp(struct FString Name); // Function BattlePrototype.RSCheatManager.RSCWarp // (Final|Exec|Native|Public) // @ game+0x12bd680
	void RSCToggleFreeCamera(); // Function BattlePrototype.RSCheatManager.RSCToggleFreeCamera // (Final|Exec|Native|Public) // @ game+0x8518d0
	void RSCSetCombo(struct FString Name); // Function BattlePrototype.RSCheatManager.RSCSetCombo // (Final|Exec|Native|Public) // @ game+0x12bd5e0
	void RSCSetBattlePlayerAIMode(struct FString Name); // Function BattlePrototype.RSCheatManager.RSCSetBattlePlayerAIMode // (Final|Exec|Native|Public) // @ game+0x12bd540
	void RSCSetBarrierInvincible(struct FString Name); // Function BattlePrototype.RSCheatManager.RSCSetBarrierInvincible // (Final|Exec|Native|Public) // @ game+0x12bd4a0
	void RSCSetBarrier(struct FString Name); // Function BattlePrototype.RSCheatManager.RSCSetBarrier // (Final|Exec|Native|Public) // @ game+0x12bd400
	void RSCSetAILevel(struct FString Name); // Function BattlePrototype.RSCheatManager.RSCSetAILevel // (Final|Exec|Native|Public) // @ game+0x12bd360
	void RSCHudInvisibleAll(bool bInvisible); // Function BattlePrototype.RSCheatManager.RSCHudInvisibleAll // (Final|Exec|Native|Public) // @ game+0x11b6870
	void RSCDumpTopLevelWidget(); // Function BattlePrototype.RSCheatManager.RSCDumpTopLevelWidget // (Final|Exec|Native|Public) // @ game+0x8518d0
	void RSCDumpParticleInfo(); // Function BattlePrototype.RSCheatManager.RSCDumpParticleInfo // (Final|Exec|Native|Public) // @ game+0x8518d0
	void RSCDumpLevelActorStat(bool bWarningInvalidActor); // Function BattlePrototype.RSCheatManager.RSCDumpLevelActorStat // (Final|Exec|Native|Public) // @ game+0x11b6870
	void RSCAutoTest(struct FString Args); // Function BattlePrototype.RSCheatManager.RSCAutoTest // (Final|Exec|Native|Public) // @ game+0x128fe70
	bool IsTargetCursorDisp(); // Function BattlePrototype.RSCheatManager.IsTargetCursorDisp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bd160
	bool IsSASParticleDisp(); // Function BattlePrototype.RSCheatManager.IsSASParticleDisp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bd130
	bool IsPerfMeterWithStat(); // Function BattlePrototype.RSCheatManager.IsPerfMeterWithStat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bd100
	bool IsPerfMeterValuePercentage(); // Function BattlePrototype.RSCheatManager.IsPerfMeterValuePercentage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bd0d0
	bool IsPerfMeterDisp(); // Function BattlePrototype.RSCheatManager.IsPerfMeterDisp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bd0a0
	bool IsHudDisp(); // Function BattlePrototype.RSCheatManager.IsHudDisp // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bd070
	int32_t GetWidgetLayoutDispFlag(); // Function BattlePrototype.RSCheatManager.GetWidgetLayoutDispFlag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bcfd0
};

// Class BattlePrototype.RSCheckCollision
// Size: 0x28 (Inherited: 0x28)
struct URSCheckCollision : UBlueprintFunctionLibrary {

	bool CheckCollisionCapsuleByComponent(struct FRSResultCapsule Result, struct UCapsuleComponent* Capsule0, struct UCapsuleComponent* Capsule1); // Function BattlePrototype.RSCheckCollision.CheckCollisionCapsuleByComponent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12bca20
	bool CheckCollisionCapsule(struct FRSResultCapsule Result, struct FVector StartLocation0, struct FVector EndLocation0, float Radius0, struct FVector StartLocation1, struct FVector EndLocation1, float Radius1); // Function BattlePrototype.RSCheckCollision.CheckCollisionCapsule // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12bc7a0
	bool CheckCollisionBoxVsCapsuleByComponent(struct UBoxComponent* Box0, struct UCapsuleComponent* Capsule0); // Function BattlePrototype.RSCheckCollision.CheckCollisionBoxVsCapsuleByComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12bc6e0
	bool CheckCollisionBoxVsBoxByComponent(struct UBoxComponent* Box0, struct UBoxComponent* box1); // Function BattlePrototype.RSCheckCollision.CheckCollisionBoxVsBoxByComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12bc620
};

// Class BattlePrototype.RSClassFinder
// Size: 0x30 (Inherited: 0x28)
struct URSClassFinder : UObject {
	struct AActor* SpawnClass; // 0x28(0x08)

	void SetNextAsset(struct FName ClassName, struct FName AssetName); // Function BattlePrototype.RSClassFinder.SetNextAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12bd990
	struct AActor* GetClass(); // Function BattlePrototype.RSClassFinder.GetClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bcd00
};

// Class BattlePrototype.RSCreditEventManager
// Size: 0x230 (Inherited: 0x230)
struct ARSCreditEventManager : AActor {
};

// Class BattlePrototype.RSCrossSaveManager
// Size: 0xa8 (Inherited: 0x30)
struct URSCrossSaveManager : UGameInstanceSubsystem {
	char pad_30[0x78]; // 0x30(0x78)
};

// Class BattlePrototype.RSCustomOperatorLib
// Size: 0x28 (Inherited: 0x28)
struct URSCustomOperatorLib : UBlueprintFunctionLibrary {

	int32_t BitShiftRight(int32_t Value, int32_t Shift); // Function BattlePrototype.RSCustomOperatorLib.BitShiftRight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bc3c0
	int32_t BitShiftLeft(int32_t Value, int32_t Shift); // Function BattlePrototype.RSCustomOperatorLib.BitShiftLeft // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bc300
};

// Class BattlePrototype.RSCvManager
// Size: 0x150 (Inherited: 0xc0)
struct URSCvManager : UActorComponent {
	struct ARSSoundManager* m_pSoundManager; // 0xc0(0x08)
	struct USoundCueSheetManager* m_pCueSheetManager; // 0xc8(0x08)
	enum class EPlayingEventType m_playingEventType; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)
	struct FString m_playingChapterTag; // 0xd8(0x10)
	struct FString m_lastChapterTag; // 0xe8(0x10)
	struct FString m_playingBondsEpisodeTag; // 0xf8(0x10)
	struct FString m_lastBondsEpisodeTag; // 0x108(0x10)
	struct FString m_standbyTag; // 0x118(0x10)
	struct FString m_lastStandbyTag; // 0x128(0x10)
	struct FString m_voiceLanguage; // 0x138(0x10)
	bool m_isInit; // 0x148(0x01)
	bool m_isTitle; // 0x149(0x01)
	char pad_14A[0x6]; // 0x14a(0x06)

	bool UnLoadCueSheetFromDtRef(struct FString RowName); // Function BattlePrototype.RSCvManager.UnLoadCueSheetFromDtRef // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool UnLoadCueSheetAll(); // Function BattlePrototype.RSCvManager.UnLoadCueSheetAll // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool UnLoadCueSheet(struct USoundAtomCueSheet* CueSheet); // Function BattlePrototype.RSCvManager.UnLoadCueSheet // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetMVarPlayingEventType(); // Function BattlePrototype.RSCvManager.SetMVarPlayingEventType // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct URSAtomComponentBase* PlayVoice(struct USoundAtomCue* Sound, bool isAttache, bool isAutoActivate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSCvManager.PlayVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x12bd190
	void OnStartTitle(); // Function BattlePrototype.RSCvManager.OnStartTitle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnChangeVoiceLanguage(); // Function BattlePrototype.RSCvManager.OnChangeVoiceLanguage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnChangeEventStat(); // Function BattlePrototype.RSCvManager.OnChangeEventStat // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool LoadSenarioCueSheet(); // Function BattlePrototype.RSCvManager.LoadSenarioCueSheet // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool LoadCueSheetFromDtRef(struct FString RowName); // Function BattlePrototype.RSCvManager.LoadCueSheetFromDtRef // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool LoadCueSheet(struct USoundAtomCueSheet* CueSheet); // Function BattlePrototype.RSCvManager.LoadCueSheet // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool LoadCmnCueSheets(); // Function BattlePrototype.RSCvManager.LoadCmnCueSheets // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void Initialize(); // Function BattlePrototype.RSCvManager.Initialize // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct USoundAtomCueSheet* GetFitLanguageCueSheetFromCueSheetManager(struct USoundAtomCue* Sound); // Function BattlePrototype.RSCvManager.GetFitLanguageCueSheetFromCueSheetManager // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bcee0
	struct FString GetCueSheetNameFromCueSheet(struct USoundAtomCueSheet* CueSheet); // Function BattlePrototype.RSCvManager.GetCueSheetNameFromCueSheet // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bce00
	struct FString GetCueSheetName(struct USoundAtomCue* Cue); // Function BattlePrototype.RSCvManager.GetCueSheetName // (Final|Native|Protected|BlueprintCallable) // @ game+0x12bcd20
	struct FString GetChapterStringFromProgressId(int32_t ProgressId); // Function BattlePrototype.RSCvManager.GetChapterStringFromProgressId // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void Finalize(); // Function BattlePrototype.RSCvManager.Finalize // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSDPICustomScalingRule
// Size: 0x28 (Inherited: 0x28)
struct URSDPICustomScalingRule : UDPICustomScalingRule {
};

// Class BattlePrototype.RSEditorCallbackActor
// Size: 0x230 (Inherited: 0x230)
struct ARSEditorCallbackActor : AActor {

	void EventPostEditMove(bool bFinished); // Function BattlePrototype.RSEditorCallbackActor.EventPostEditMove // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EventPostEditChangeProperty(); // Function BattlePrototype.RSEditorCallbackActor.EventPostEditChangeProperty // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSEditorTickedActor
// Size: 0x238 (Inherited: 0x230)
struct ARSEditorTickedActor : AActor {
	bool bEnableEditorTick; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)

	void EventPostEditMove(bool bFinished); // Function BattlePrototype.RSEditorTickedActor.EventPostEditMove // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void EventPostEditChangeProperty(); // Function BattlePrototype.RSEditorTickedActor.EventPostEditChangeProperty // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSEffectFuncLibraryCPP
// Size: 0x28 (Inherited: 0x28)
struct URSEffectFuncLibraryCPP : UBlueprintFunctionLibrary {

	void SpawnDamageHitEffectCPP(struct AActor* Actor, struct FHCHitResult HitResult); // Function BattlePrototype.RSEffectFuncLibraryCPP.SpawnDamageHitEffectCPP // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12bda40
	struct FRotator CalcDamageHitEffectRotation(struct AActor* InActor, struct FHCHitResult InHitResult, struct FVector InEffectSpawnLocation); // Function BattlePrototype.RSEffectFuncLibraryCPP.CalcDamageHitEffectRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12bc480
};

// Class BattlePrototype.RSEnemyAnimInstance
// Size: 0x710 (Inherited: 0x620)
struct URSEnemyAnimInstance : URSCharacterAnimInstance {
	enum class EnemyAliveAnimKind _aliveAnimKind; // 0x620(0x01)
	enum class EnemyMoveAnimKind _MoveAnimKind; // 0x621(0x01)
	enum class EnemyAttackAnimKind _attackAnimKind; // 0x622(0x01)
	enum class EnemyActionAnimKind _actionAnimKind; // 0x623(0x01)
	enum class EnemySwitchAnimKind _switchAnimKind; // 0x624(0x01)
	enum class EnemyDamageAnimKind _damageAnimKind; // 0x625(0x01)
	enum class EnemyDamageDownAnimKind _damageDownAnimKind; // 0x626(0x01)
	enum class EnemyBrainCrashAnimKind _brainCrashAnimKind; // 0x627(0x01)
	enum class EnemyDeadAnimKind _deadAnimKind; // 0x628(0x01)
	enum class EnemyInitLayoutAnimKind _initLayoutAnimKind; // 0x629(0x01)
	enum class EnemyEventAnimKind _eventAnimKind; // 0x62a(0x01)
	enum class EnemyCrashChanceAnimKind _crashChanceAnimKind; // 0x62b(0x01)
	enum class EnemyKind _EnemyKind; // 0x62c(0x01)
	char pad_62D[0x3]; // 0x62d(0x03)
	float _walkSpeed; // 0x630(0x04)
	bool _bBackMove; // 0x634(0x01)
	bool _bExcite; // 0x635(0x01)
	bool _bLanded; // 0x636(0x01)
	bool _bDamageAnimStateB; // 0x637(0x01)
	bool _bDamageAnimLight2; // 0x638(0x01)
	bool _bRequestFaintWakeup; // 0x639(0x01)
	bool _bAttackFlg; // 0x63a(0x01)
	char pad_63B[0x1]; // 0x63b(0x01)
	struct FVector _blendSpaceData; // 0x63c(0x0c)
	float _animRigidBodyIdlingSec; // 0x648(0x04)
	float _animDynamicsIdlingSec; // 0x64c(0x04)
	bool _bEvent; // 0x650(0x01)
	char pad_651[0x3]; // 0x651(0x03)
	float _addDamageBlendWeightDefault; // 0x654(0x04)
	float _addDamageBlendWeightCurrent; // 0x658(0x04)
	char pad_65C[0x4]; // 0x65c(0x04)
	struct FMulticastInlineDelegate DispatchMontageBlendingOut; // 0x660(0x10)
	bool _bEnableLookAt; // 0x670(0x01)
	bool _bFinishLookAtRotateZero; // 0x671(0x01)
	bool _bLookFront; // 0x672(0x01)
	char pad_673[0x1]; // 0x673(0x01)
	float _lrRotateLimit; // 0x674(0x04)
	float _upRotateLimit; // 0x678(0x04)
	float _downRotateLimit; // 0x67c(0x04)
	float _lookAtFollowSpeed; // 0x680(0x04)
	struct FVector _lookAtLocation; // 0x684(0x0c)
	struct FRotator _lookAtRotation; // 0x690(0x0c)
	bool _bEnableIK; // 0x69c(0x01)
	char pad_69D[0x3]; // 0x69d(0x03)
	float _IKAlpha; // 0x6a0(0x04)
	float _IKDstAlpha; // 0x6a4(0x04)
	float _IKAlphaChangeRate; // 0x6a8(0x04)
	char pad_6AC[0x4]; // 0x6ac(0x04)
	struct TArray<struct FTinyIKInfo> _tinyIKArray; // 0x6b0(0x10)
	struct FName LeftFootIKBoneName; // 0x6c0(0x08)
	struct FName RightFootIKBoneName; // 0x6c8(0x08)
	float FootIKBlendRate; // 0x6d0(0x04)
	struct FVector FootIKOffset_Left; // 0x6d4(0x0c)
	struct FVector FootIKOffset_Right; // 0x6e0(0x0c)
	struct FVector FootIKJointTargetLocation_Left; // 0x6ec(0x0c)
	struct FVector FootIKJointTargetLocation_Right; // 0x6f8(0x0c)
	bool _bEnableBrainCrashEvent; // 0x704(0x01)
	char pad_705[0xb]; // 0x705(0x0b)

	void UpdateSpineRotateNative(struct FRotator SpineRot, bool UpdateSpineRot, bool EnableSpineRot, struct ARSCharacterBase* TargetCharacter, struct ARSCharacterBase* Owner, float RotateUpDownMin, float RotateUpDownMax, float RotateLRMax, float DeltaSeconds, float RotateSpeed); // Function BattlePrototype.RSEnemyAnimInstance.UpdateSpineRotateNative // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12bdc00
	void StartLookAt(bool bResetRotate); // Function BattlePrototype.RSEnemyAnimInstance.StartLookAt // (Final|Native|Public|BlueprintCallable) // @ game+0x12bdb70
	void SetIKDstAlpha(float Value); // Function BattlePrototype.RSEnemyAnimInstance.SetIKDstAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x12bd910
	void SetIKAlpha(float Value); // Function BattlePrototype.RSEnemyAnimInstance.SetIKAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x12bd890
	void SetAddDamageBlendWeight(float Value); // Function BattlePrototype.RSEnemyAnimInstance.SetAddDamageBlendWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x12bd810
	void ResetDefaultAddDamageBlendWeight(); // Function BattlePrototype.RSEnemyAnimInstance.ResetDefaultAddDamageBlendWeight // (Final|Native|Public|BlueprintCallable) // @ game+0x12bd7f0
	void RecvOnMontageBlendingOut(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.RSEnemyAnimInstance.RecvOnMontageBlendingOut // (Final|Native|Private) // @ game+0x12bd720
	bool IsEnableLookAt(); // Function BattlePrototype.RSEnemyAnimInstance.IsEnableLookAt // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bd040
	bool IsEnableEnemyIK(); // Function BattlePrototype.RSEnemyAnimInstance.IsEnableEnemyIK // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bd020
	bool IsEnableBrainCrashEvent(); // Function BattlePrototype.RSEnemyAnimInstance.IsEnableBrainCrashEvent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bd000
	float GetIKDstAlpha(); // Function BattlePrototype.RSEnemyAnimInstance.GetIKDstAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bcfa0
	float GetIKAlpha(); // Function BattlePrototype.RSEnemyAnimInstance.GetIKAlpha // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bcf70
	float GetAddDamageBlendWeight(); // Function BattlePrototype.RSEnemyAnimInstance.GetAddDamageBlendWeight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bccd0
	void FinishLookAt(bool bRotateZero); // Function BattlePrototype.RSEnemyAnimInstance.FinishLookAt // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcc40
	void EnableEnemyIK(); // Function BattlePrototype.RSEnemyAnimInstance.EnableEnemyIK // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcc20
	void EnableBrainCrashEvent(); // Function BattlePrototype.RSEnemyAnimInstance.EnableBrainCrashEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcc00
	void DisableEnemyIK(); // Function BattlePrototype.RSEnemyAnimInstance.DisableEnemyIK // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcbe0
	void DisableBrainCrashEvent(); // Function BattlePrototype.RSEnemyAnimInstance.DisableBrainCrashEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcbc0
	bool CheckGoToIdleMove(bool bEndAnim); // Function BattlePrototype.RSEnemyAnimInstance.CheckGoToIdleMove // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12bcb30
	void AttackEnd(enum class EnemyAttackAnimKind Attack); // Function BattlePrototype.RSEnemyAnimInstance.AttackEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x12bc280
};

// Class BattlePrototype.RSEnemyNavArea
// Size: 0xc8 (Inherited: 0xc8)
struct URSEnemyNavArea : UNavAreaMeta_SwitchByAgent {
};

// Class BattlePrototype.RSEnemyNavModifierVolume
// Size: 0x278 (Inherited: 0x278)
struct ARSEnemyNavModifierVolume : ANavModifierVolume {
};

// Class BattlePrototype.RSFishSplineBase
// Size: 0x2c0 (Inherited: 0x230)
struct ARSFishSplineBase : AActor {
	struct TArray<struct UStaticMeshComponent*> FishMeshes; // 0x230(0x10)
	struct TArray<struct UMaterialInstanceDynamic*> FishMaterials; // 0x240(0x10)
	struct TArray<struct FVector> Offset; // 0x250(0x10)
	struct TArray<struct FVector> OffsetStart; // 0x260(0x10)
	struct TArray<struct FVector> OffsetEnd; // 0x270(0x10)
	struct TArray<float> TailRandom; // 0x280(0x10)
	struct TArray<float> PositionRandom; // 0x290(0x10)
	bool bEnableHalfUpdate; // 0x2a0(0x01)
	char pad_2A1[0x1f]; // 0x2a1(0x1f)

	void UpdatePositionLoopCPP(float Lerp, float Tail, bool bForceUpdateAll); // Function BattlePrototype.RSFishSplineBase.UpdatePositionLoopCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1d40
	void UpdateOffsetCPP(float Lerp); // Function BattlePrototype.RSFishSplineBase.UpdateOffsetCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1cc0
	void UpdateFishCPP(float Position, int32_t FishIndex); // Function BattlePrototype.RSFishSplineBase.UpdateFishCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1bf0
	void RandomiseOffsetsCPP(); // Function BattlePrototype.RSFishSplineBase.RandomiseOffsetsCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x12c17f0
	struct USplineComponent* GetSplineComponent(); // Function BattlePrototype.RSFishSplineBase.GetSplineComponent // (Event|Public|BlueprintEvent|Const) // @ game+0x1685580
	void CopyParamBPtoCPP(int32_t LoopsPerMinute, float TailSpeed, float FishScale, float RandomiseOffset, int32_t NumberOfFish); // Function BattlePrototype.RSFishSplineBase.CopyParamBPtoCPP // (Final|Native|Public|BlueprintCallable) // @ game+0x12c06b0
};

// Class BattlePrototype.RSFrameGrabberActor
// Size: 0x238 (Inherited: 0x230)
struct ARSFrameGrabberActor : AActor {
	struct URSFrameGrabberComponent* FrameGrabberComponent; // 0x230(0x08)
};

// Class BattlePrototype.RSFrameGrabberComponent
// Size: 0xd0 (Inherited: 0xc0)
struct URSFrameGrabberComponent : UActorComponent {
	struct UTextureRenderTarget2D* TextureTarget; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	void StartGrab(enum class EFrameGrabType Type); // Function BattlePrototype.RSFrameGrabberComponent.StartGrab // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1ad0
	void SetTextureTarget(struct UTextureRenderTarget2D* Target); // Function BattlePrototype.RSFrameGrabberComponent.SetTextureTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1a50
	void GrabFrame(enum class EFrameGrabType Type); // Function BattlePrototype.RSFrameGrabberComponent.GrabFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1400
	struct UTextureRenderTarget2D* GetTextureTarget(); // Function BattlePrototype.RSFrameGrabberComponent.GetTextureTarget // (Final|Native|Public|BlueprintCallable) // @ game+0xae0120
	void EndGrab(); // Function BattlePrototype.RSFrameGrabberComponent.EndGrab // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0920
};

// Class BattlePrototype.RSAutomationPerformaceHelper
// Size: 0x60 (Inherited: 0x28)
struct URSAutomationPerformaceHelper : UObject {
	char pad_28[0x38]; // 0x28(0x38)

	void WriteLogFile(struct FString CaptureDir, struct FString CaptureExtension); // Function BattlePrototype.RSAutomationPerformaceHelper.WriteLogFile // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1e50
	void TriggerGPUTraceIfRecordFallsBelowBudget(); // Function BattlePrototype.RSAutomationPerformaceHelper.TriggerGPUTraceIfRecordFallsBelowBudget // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1bd0
	void Tick(float DeltaSeconds); // Function BattlePrototype.RSAutomationPerformaceHelper.Tick // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1b50
	void StopCPUProfiling(); // Function BattlePrototype.RSAutomationPerformaceHelper.StopCPUProfiling // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void StartCPUProfiling(); // Function BattlePrototype.RSAutomationPerformaceHelper.StartCPUProfiling // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void Sample(float DeltaSeconds); // Function BattlePrototype.RSAutomationPerformaceHelper.Sample // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1850
	void OnBeginTests(); // Function BattlePrototype.RSAutomationPerformaceHelper.OnBeginTests // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1730
	void OnAllTestsComplete(); // Function BattlePrototype.RSAutomationPerformaceHelper.OnAllTestsComplete // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1710
	bool IsRecording(); // Function BattlePrototype.RSAutomationPerformaceHelper.IsRecording // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1640
	bool IsCurrentRecordWithinRenderThreadBudget(); // Function BattlePrototype.RSAutomationPerformaceHelper.IsCurrentRecordWithinRenderThreadBudget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c15f0
	bool IsCurrentRecordWithinGPUBudget(); // Function BattlePrototype.RSAutomationPerformaceHelper.IsCurrentRecordWithinGPUBudget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1590
	bool IsCurrentRecordWithinGameThreadBudget(); // Function BattlePrototype.RSAutomationPerformaceHelper.IsCurrentRecordWithinGameThreadBudget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c15c0
	void EndStatsFile(); // Function BattlePrototype.RSAutomationPerformaceHelper.EndStatsFile // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0a40
	void EndRecordingBaseline(); // Function BattlePrototype.RSAutomationPerformaceHelper.EndRecordingBaseline // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0a20
	void EndRecording(); // Function BattlePrototype.RSAutomationPerformaceHelper.EndRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0a00
	void BeginStatsFile(struct FString RecordName); // Function BattlePrototype.RSAutomationPerformaceHelper.BeginStatsFile // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0610
	void BeginRecordingBaseline(struct FString RecordName); // Function BattlePrototype.RSAutomationPerformaceHelper.BeginRecordingBaseline // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0530
	void BeginRecording(struct FString RecordName, float InGPUBudget, float InRenderThreadBudget, float InGameThreadBudget); // Function BattlePrototype.RSAutomationPerformaceHelper.BeginRecording // (Final|Native|Public|BlueprintCallable) // @ game+0x12c03a0
};

// Class BattlePrototype.RSGameAccountManager
// Size: 0x50 (Inherited: 0x30)
struct URSGameAccountManager : UGameInstanceSubsystem {
	char pad_30[0x20]; // 0x30(0x20)
};

// Class BattlePrototype.RSGameInstance
// Size: 0x418 (Inherited: 0x198)
struct URSGameInstance : UGameInstance {
	char pad_198[0x28]; // 0x198(0x28)
	struct ARSCharacterBase* _mainPlayerClass; // 0x1c0(0x08)
	struct ARSCharacterBase* _leftPlayerClass; // 0x1c8(0x08)
	struct ARSCharacterBase* _rightPlayerClass; // 0x1d0(0x08)
	struct AActor* _hitManagerClass; // 0x1d8(0x08)
	struct ABrainCrashManager* _brainCrashManagerClass; // 0x1e0(0x08)
	struct ASASManager* _sasManagerClass; // 0x1e8(0x08)
	struct APsychicObjectManager* _psychicObjectManagerClass; // 0x1f0(0x08)
	struct URSAccountManager* _accountManagerClass; // 0x1f8(0x08)
	struct ARSSoundManager* _soundManagerClass; // 0x200(0x08)
	struct ARSParticleSystemManager* _particleManagerClass; // 0x208(0x08)
	struct ABlendableVolumeManager* _StageSettingVolumeManagerClass; // 0x210(0x08)
	struct AEnemyManager* _enemyManagerClass; // 0x218(0x08)
	struct AActor* _postProcessManagerClass; // 0x220(0x08)
	struct AActor* _renderTargetManagerClass; // 0x228(0x08)
	struct AActor* _brainFieldManagerClass; // 0x230(0x08)
	struct AActor* _radialBlurManagerClass; // 0x238(0x08)
	struct AActor* _eventManagerClass; // 0x240(0x08)
	struct APlayerManager* _playerManagerClass; // 0x248(0x08)
	struct AActor* _sceneManagerClass; // 0x250(0x08)
	struct AActor* _levelManagerClass; // 0x258(0x08)
	struct AActor* _resourceManagerClass; // 0x260(0x08)
	struct ABattleManager* _battleManagerClass; // 0x268(0x08)
	struct ABattlefieldManager* _battlefieldManagerClass; // 0x270(0x08)
	struct AStageManager* _stageManagerClass; // 0x278(0x08)
	struct ARSMovieManager* _movieManagerClass; // 0x280(0x08)
	struct AInputManager* _inputManagerClass; // 0x288(0x08)
	struct ABrainTalkManager* _brainTalkManagerClass; // 0x290(0x08)
	struct AGameMainManager* _GameMainManagerClass; // 0x298(0x08)
	struct AActor* _gameSystemManagerClass; // 0x2a0(0x08)
	struct AActor* _inGameFlowClass; // 0x2a8(0x08)
	struct AMapGimmickManager* _mapGimmickManagerClass; // 0x2b0(0x08)
	struct ALC21MapGimmickManager* _lc21MapGimmickManagerClass; // 0x2b8(0x08)
	struct AActor* _cosmosWebManagerClass; // 0x2c0(0x08)
	struct AActor* _triggerEffectManagerClass; // 0x2c8(0x08)
	struct AActor* _debuggingGameActivityManagerClass; // 0x2d0(0x08)
	struct TArray<struct UObject*> _Managers; // 0x2d8(0x10)
	char pad_2E8[0x18]; // 0x2e8(0x18)
	struct AActor* _finishMoveActorManager; // 0x300(0x08)
	struct FName m_ReloadLevelName; // 0x308(0x08)
	bool m_isUsesSteam; // 0x310(0x01)
	char pad_311[0x7]; // 0x311(0x07)
	struct FInfoAtRetry m_retryParam; // 0x318(0x20)
	char pad_338[0x50]; // 0x338(0x50)
	struct TArray<struct AActor*> m_PlBPClassList; // 0x388(0x10)
	struct AActor* _debuggingManagerClass; // 0x398(0x08)
	struct AActor* _OutgameDebuggingManagerClass; // 0x3a0(0x08)
	struct AModelViewerBase* _ModelViewerClass; // 0x3a8(0x08)
	struct AActor* _phychicObjectBaseClass; // 0x3b0(0x08)
	struct URevisionData* _RevisionData; // 0x3b8(0x08)
	bool m_isForceCrcCheckError; // 0x3c0(0x01)
	char pad_3C1[0x7]; // 0x3c1(0x07)
	struct FString CosmosBaseURLBody; // 0x3c8(0x10)
	bool IsCosmosGetBaseURL; // 0x3d8(0x01)
	bool IsCosmosTimeout; // 0x3d9(0x01)
	char pad_3DA[0x6]; // 0x3da(0x06)
	struct FString CosmosUserID; // 0x3e0(0x10)
	struct FString CosmosSessionID; // 0x3f0(0x10)
	struct TArray<struct FCosmosSysKpiParam> CosmosSysKpiParam; // 0x400(0x10)
	bool IsCosmosEnvInitialized; // 0x410(0x01)
	bool IsCosmosAgreeKpi; // 0x411(0x01)
	bool IsCosmosSendAgreeKpi; // 0x412(0x01)
	enum class EInputDeviceType _inputDeviceType; // 0x413(0x01)
	char pad_414[0x4]; // 0x414(0x04)

	void StartGameFlow(); // Function BattlePrototype.RSGameInstance.StartGameFlow // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x694110
	void SetIsUsesSteam(bool Flag); // Function BattlePrototype.RSGameInstance.SetIsUsesSteam // (Final|Native|Public) // @ game+0x12c19d0
	void SetIsForceCrcCheckError(bool Flag); // Function BattlePrototype.RSGameInstance.SetIsForceCrcCheckError // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1950
	void SetIntroTutorialManager(struct AIntroTutorialManager* pManager); // Function BattlePrototype.RSGameInstance.SetIntroTutorialManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c18d0
	void ResetRenderTarget(); // Function BattlePrototype.RSGameInstance.ResetRenderTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x694cd0
	void ResetIntroTutorialManager(); // Function BattlePrototype.RSGameInstance.ResetIntroTutorialManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1830
	void ReloadLevel(); // Function BattlePrototype.RSGameInstance.ReloadLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1810
	void PrintLogBlueprintCallstack(); // Function BattlePrototype.RSGameInstance.PrintLogBlueprintCallstack // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c17d0
	void OnLoadLevelCompleteUnloadLevel(struct UObject* WorldContext); // Function BattlePrototype.RSGameInstance.OnLoadLevelCompleteUnloadLevel // (Final|Native|Public) // @ game+0x12c1750
	void LoadLevel(struct FName LevelName); // Function BattlePrototype.RSGameInstance.LoadLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1690
	bool IsUsesSteam(); // Function BattlePrototype.RSGameInstance.IsUsesSteam // (Final|Native|Public) // @ game+0x12c1670
	bool IsReadyManagers(); // Function BattlePrototype.RSGameInstance.IsReadyManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x11d1180
	bool IsForceCrcCheckError(); // Function BattlePrototype.RSGameInstance.IsForceCrcCheckError // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1620
	bool IsCreatedSystem(); // Function BattlePrototype.RSGameInstance.IsCreatedSystem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xad4510
	bool IsCreatedResidentSystem(); // Function BattlePrototype.RSGameInstance.IsCreatedResidentSystem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xad4510
	bool IsCreatedResidentManagers(); // Function BattlePrototype.RSGameInstance.IsCreatedResidentManagers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ac7b0
	bool IsCreatedManagers(); // Function BattlePrototype.RSGameInstance.IsCreatedManagers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ac7b0
	bool IsCreatedGameManagers(); // Function BattlePrototype.RSGameInstance.IsCreatedGameManagers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ac7b0
	void InitializeManagers(enum class EManagerProcTiming Timing); // Function BattlePrototype.RSGameInstance.InitializeManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1510
	void InitializeAllManagersForPersistentLevel(); // Function BattlePrototype.RSGameInstance.InitializeAllManagersForPersistentLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool InitializeAllManagers(enum class EManagerProcTiming Timing); // Function BattlePrototype.RSGameInstance.InitializeAllManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1480
	struct UXGameStreamingManager* GetXGameStreamingManager(); // Function BattlePrototype.RSGameInstance.GetXGameStreamingManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c13d0
	struct UUserParamManager* GetUserParamManager(); // Function BattlePrototype.RSGameInstance.GetUserParamManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c13a0
	struct ATriggerEffectManager* GetTriggerEffectManager(); // Function BattlePrototype.RSGameInstance.GetTriggerEffectManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1370
	struct ABlendableVolumeManager* GetStageSettingVolumeManager(); // Function BattlePrototype.RSGameInstance.GetStageSettingVolumeManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1340
	struct AStageManager* GetStageManagerConst(); // Function BattlePrototype.RSGameInstance.GetStageManagerConst // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1310
	struct AStageManager* GetStageManager(); // Function BattlePrototype.RSGameInstance.GetStageManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1310
	struct ARSSoundManager* GetSoundManager(); // Function BattlePrototype.RSGameInstance.GetSoundManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c12e0
	struct AActor* GetSceneManager(); // Function BattlePrototype.RSGameInstance.GetSceneManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c12b0
	struct USaveLoadParamClassManager* GetSaveLoadParamClassManager(); // Function BattlePrototype.RSGameInstance.GetSaveLoadParamClassManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1280
	struct ASASManager* GetSASManager(); // Function BattlePrototype.RSGameInstance.GetSASManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1250
	struct ARSInGameFlow* GetRSInGameFlow(); // Function BattlePrototype.RSGameInstance.GetRSInGameFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1170
	struct URSAccountManager* GetRSAccountManager(); // Function BattlePrototype.RSGameInstance.GetRSAccountManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1140
	struct URevisionData* GetRevisionData(); // Function BattlePrototype.RSGameInstance.GetRevisionData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1230
	struct AActor* GetResourceManager(); // Function BattlePrototype.RSGameInstance.GetResourceManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1200
	struct AActor* GetRenderTargetManager(); // Function BattlePrototype.RSGameInstance.GetRenderTargetManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c11d0
	struct AActor* GetRadialBlurManager(); // Function BattlePrototype.RSGameInstance.GetRadialBlurManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c11a0
	struct APsychicObjectManager* GetPsychicObjectManager(); // Function BattlePrototype.RSGameInstance.GetPsychicObjectManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1110
	struct AActor* GetPostProcessManager(); // Function BattlePrototype.RSGameInstance.GetPostProcessManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c10e0
	struct APlayerManager* GetPlayerManager(); // Function BattlePrototype.RSGameInstance.GetPlayerManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c10b0
	struct ARSParticleSystemManager* GetParticleManager(); // Function BattlePrototype.RSGameInstance.GetParticleManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1080
	struct ARSParallelObjectManager* GetParallelObjectManager(); // Function BattlePrototype.RSGameInstance.GetParallelObjectManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1050
	struct AActor* GetOutgameDebuggingManager(); // Function BattlePrototype.RSGameInstance.GetOutgameDebuggingManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x8519c0
	struct AActor* GetMovieManager(); // Function BattlePrototype.RSGameInstance.GetMovieManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1020
	struct AModelViewerBase* GetModelViewerBase(); // Function BattlePrototype.RSGameInstance.GetModelViewerBase // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x8519c0
	struct AMessageHudManager* GetMessageHudManager(); // Function BattlePrototype.RSGameInstance.GetMessageHudManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0ff0
	struct AMapGimmickManager* GetMapGimmickManager(); // Function BattlePrototype.RSGameInstance.GetMapGimmickManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0fc0
	struct AActor* GetLevelManager(); // Function BattlePrototype.RSGameInstance.GetLevelManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0f90
	struct ALC21MapGimmickManager* GetLC21MapGimmickManager(); // Function BattlePrototype.RSGameInstance.GetLC21MapGimmickManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0f60
	struct AIntroTutorialManager* GetIntroTutorialManager(); // Function BattlePrototype.RSGameInstance.GetIntroTutorialManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0f30
	struct AActor* GetInputManager(); // Function BattlePrototype.RSGameInstance.GetInputManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0f00
	struct AActor* GetHitManager(); // Function BattlePrototype.RSGameInstance.GetHitManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0ed0
	struct AActor* GetGameSystemManager(); // Function BattlePrototype.RSGameInstance.GetGameSystemManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0ea0
	struct AGameMainManager* GetGameMainManager(); // Function BattlePrototype.RSGameInstance.GetGameMainManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0e70
	struct UFlagManager* GetFlagManager(); // Function BattlePrototype.RSGameInstance.GetFlagManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0e40
	struct AActor* GetFinishMoveActorManager(); // Function BattlePrototype.RSGameInstance.GetFinishMoveActorManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0e10
	struct AActor* GetEventManager(); // Function BattlePrototype.RSGameInstance.GetEventManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0de0
	struct AEnemyManager* GetEnemyManager(); // Function BattlePrototype.RSGameInstance.GetEnemyManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0db0
	struct ADropItemManager* GetDropItemManager(); // Function BattlePrototype.RSGameInstance.GetDropItemManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0d80
	struct AActor* GetDebuggingManager(); // Function BattlePrototype.RSGameInstance.GetDebuggingManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x8519c0
	struct ADebuggingGameActivityManager* GetDebuggingGameActivityManager(); // Function BattlePrototype.RSGameInstance.GetDebuggingGameActivityManager // (Final|Native|Public|BlueprintCallable) // @ game+0x8519c0
	struct UDatabaseManager* GetDatabaseManagerConst(); // Function BattlePrototype.RSGameInstance.GetDatabaseManagerConst // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0d50
	struct UDatabaseManager* GetDatabaseManager(); // Function BattlePrototype.RSGameInstance.GetDatabaseManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0d50
	struct AActor* GetCosmosWebManager(); // Function BattlePrototype.RSGameInstance.GetCosmosWebManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0d20
	struct UClearGetterManager* GetClearGetterManager(); // Function BattlePrototype.RSGameInstance.GetClearGetterManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0cf0
	struct UCalcMemoryManager* GetCalcMemoryManager(); // Function BattlePrototype.RSGameInstance.GetCalcMemoryManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x8519c0
	struct ABrainTalkManager* GetBrainTalkManager(); // Function BattlePrototype.RSGameInstance.GetBrainTalkManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0cc0
	struct AActor* GetBrainFieldManager(); // Function BattlePrototype.RSGameInstance.GetBrainFieldManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0c90
	struct ABrainCrashManager* GetBrainCrashManager(); // Function BattlePrototype.RSGameInstance.GetBrainCrashManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0c60
	struct ABattleManager* GetBattleManager(); // Function BattlePrototype.RSGameInstance.GetBattleManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0c00
	struct ABattlefieldManager* GetBattlefieldManager(); // Function BattlePrototype.RSGameInstance.GetBattlefieldManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0c30
	struct AArrangeItemManager* GetArrangeItemManager(); // Function BattlePrototype.RSGameInstance.GetArrangeItemManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0bd0
	struct UAnimeInterlockingManager* GetAnimeInterlockingManagerConst(); // Function BattlePrototype.RSGameInstance.GetAnimeInterlockingManagerConst // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0ba0
	struct UAnimeInterlockingManager* GetAnimeInterlockingManager(); // Function BattlePrototype.RSGameInstance.GetAnimeInterlockingManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0ba0
	struct UAddContentManager* GetAddContentManagerConst(); // Function BattlePrototype.RSGameInstance.GetAddContentManagerConst // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0b70
	struct UAddContentManager* GetAddContentManager(); // Function BattlePrototype.RSGameInstance.GetAddContentManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0b70
	struct UActivityManager* GetActivityManager(); // Function BattlePrototype.RSGameInstance.GetActivityManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0b40
	struct AActionManager* GetActionManager(); // Function BattlePrototype.RSGameInstance.GetActionManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0b10
	struct UAchievementManager* GetAchievementManager(); // Function BattlePrototype.RSGameInstance.GetAchievementManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c0ae0
	void FinalizeManagers(enum class EManagerProcTiming Timing); // Function BattlePrototype.RSGameInstance.FinalizeManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0a60
	void FinalizeAllManagers(enum class EManagerProcTiming Timing); // Function BattlePrototype.RSGameInstance.FinalizeAllManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x11c1590
	void EndInitializeCallback(enum class EManagerTypeID ID, enum class EManagerProcTiming Timing); // Function BattlePrototype.RSGameInstance.EndInitializeCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x12c0940
	void DestroySystem(); // Function BattlePrototype.RSGameInstance.DestroySystem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c0900
	void DestroyResidentSystem(); // Function BattlePrototype.RSGameInstance.DestroyResidentSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void DestroyResidentManagers(); // Function BattlePrototype.RSGameInstance.DestroyResidentManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c08e0
	void DestroyOutGameManagers(); // Function BattlePrototype.RSGameInstance.DestroyOutGameManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c08c0
	void DestroyModelViewerManagers(); // Function BattlePrototype.RSGameInstance.DestroyModelViewerManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void DestroyGameManagers(); // Function BattlePrototype.RSGameInstance.DestroyGameManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x6941b0
	void DestroyAllManagers(); // Function BattlePrototype.RSGameInstance.DestroyAllManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x694cf0
	void CreateSystemGameManager(); // Function BattlePrototype.RSGameInstance.CreateSystemGameManager // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c08a0
	void CreateSystem(); // Function BattlePrototype.RSGameInstance.CreateSystem // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c0880
	void CreateResidentSystem(); // Function BattlePrototype.RSGameInstance.CreateResidentSystem // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CreateResidentManagers(); // Function BattlePrototype.RSGameInstance.CreateResidentManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c0860
	void CreateOutGameManagers(); // Function BattlePrototype.RSGameInstance.CreateOutGameManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c0840
	void CreateModelViewerManagers(); // Function BattlePrototype.RSGameInstance.CreateModelViewerManagers // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CreateGameManagers(); // Function BattlePrototype.RSGameInstance.CreateGameManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x694010
	void CreateEnemyManager(); // Function BattlePrototype.RSGameInstance.CreateEnemyManager // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void CreateAllManagers(); // Function BattlePrototype.RSGameInstance.CreateAllManagers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x694d30
};

// Class BattlePrototype.RSGameModeBase
// Size: 0x328 (Inherited: 0x318)
struct ARSGameModeBase : AGameMode {
	char pad_318[0x10]; // 0x318(0x10)

	void OnPreStartPlay(struct FString currentLevelName); // Function BattlePrototype.RSGameModeBase.OnPreStartPlay // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c2df0
	void OnPostInitGame(struct FString currentLevelName); // Function BattlePrototype.RSGameModeBase.OnPostInitGame // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c2d50
	void LogFlowCheck_IsValid(bool IsValid, struct FString ValidString, struct FString InvalidString); // Function BattlePrototype.RSGameModeBase.LogFlowCheck_IsValid // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c2c20
	void LogFlowCheck(struct FString logString); // Function BattlePrototype.RSGameModeBase.LogFlowCheck // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c2b90
	bool IsGameFlowLevel(struct UObject* WorldContextObject); // Function BattlePrototype.RSGameModeBase.IsGameFlowLevel // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12c2af0
	bool IsDevelopment(); // Function BattlePrototype.RSGameModeBase.IsDevelopment // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c2ad0
	struct AActor* FindPlayerStartByName(struct FString TagName); // Function BattlePrototype.RSGameModeBase.FindPlayerStartByName // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2990
};

// Class BattlePrototype.RSGameMode
// Size: 0x338 (Inherited: 0x328)
struct ARSGameMode : ARSGameModeBase {
	char pad_328[0x10]; // 0x328(0x10)

	void OnTimerReleaseLoadingScreen(); // Function BattlePrototype.RSGameMode.OnTimerReleaseLoadingScreen // (Final|Native|Public) // @ game+0x12c2e90
};

// Class BattlePrototype.RSGamepadEvent
// Size: 0x48 (Inherited: 0x28)
struct URSGamepadEvent : UObject {
	char pad_28[0x2]; // 0x28(0x02)
	bool RawOn; // 0x2a(0x01)
	bool IsOn; // 0x2b(0x01)
	bool IsOnTrigger; // 0x2c(0x01)
	bool IsOnRepTrigger; // 0x2d(0x01)
	bool IsOffTrigger; // 0x2e(0x01)
	char pad_2F[0x1]; // 0x2f(0x01)
	float AxisValue; // 0x30(0x04)
	float AxisMouseWheelValue; // 0x34(0x04)
	float Timer; // 0x38(0x04)
	float RepeatSec; // 0x3c(0x04)
	float FirstRepeatSec; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class BattlePrototype.RSGamepadLayout
// Size: 0x21f8 (Inherited: 0x28)
struct URSGamepadLayout : UObject {
	enum class ERSGamepadLayoutType layout; // 0x28(0x01)
	char pad_29[0x57]; // 0x29(0x57)
	bool Enabled; // 0x80(0x01)
	char pad_81[0xd27]; // 0x81(0xd27)
	struct FMulticastInlineDelegate UEOnPushR1Event; // 0xda8(0x10)
	struct FMulticastInlineDelegate UEOnPushR2Event; // 0xdb8(0x10)
	struct FMulticastInlineDelegate UEOnPushR3Event; // 0xdc8(0x10)
	struct FMulticastInlineDelegate UEOnPushL1Event; // 0xdd8(0x10)
	struct FMulticastInlineDelegate UEOnPushL2Event; // 0xde8(0x10)
	struct FMulticastInlineDelegate UEOnPushL3Event; // 0xdf8(0x10)
	struct FMulticastInlineDelegate UEOnPushRUPEvent; // 0xe08(0x10)
	struct FMulticastInlineDelegate UEOnPushRDOWNEvent; // 0xe18(0x10)
	struct FMulticastInlineDelegate UEOnPushRLEFTEvent; // 0xe28(0x10)
	struct FMulticastInlineDelegate UEOnPushRRIGHTEvent; // 0xe38(0x10)
	struct FMulticastInlineDelegate UEOnPushDPAD_UPEvent; // 0xe48(0x10)
	struct FMulticastInlineDelegate UEOnPushDPAD_DOWNEvent; // 0xe58(0x10)
	struct FMulticastInlineDelegate UEOnPushDPAD_LEFTEvent; // 0xe68(0x10)
	struct FMulticastInlineDelegate UEOnPushDPAD_RIGHTEvent; // 0xe78(0x10)
	struct FMulticastInlineDelegate UEOnPushDPADEMU_UPEvent; // 0xe88(0x10)
	struct FMulticastInlineDelegate UEOnPushDPADEMU_DOWNEvent; // 0xe98(0x10)
	struct FMulticastInlineDelegate UEOnPushDPADEMU_LEFTEvent; // 0xea8(0x10)
	struct FMulticastInlineDelegate UEOnPushDPADEMU_RIGHTEvent; // 0xeb8(0x10)
	struct FMulticastInlineDelegate UEOnPushSELECTEvent; // 0xec8(0x10)
	struct FMulticastInlineDelegate UEOnPushSTARTEvent; // 0xed8(0x10)
	struct FMulticastInlineDelegate UEOnPushDECIDEEvent; // 0xee8(0x10)
	struct FMulticastInlineDelegate UEOnPushCANCELEvent; // 0xef8(0x10)
	struct FMulticastInlineDelegate UEOnPushMOUSELEFTEvent; // 0xf08(0x10)
	struct FMulticastInlineDelegate UEOnPushMOUSERIGHTEvent; // 0xf18(0x10)
	struct FMulticastInlineDelegate UEOnPushMOUSEMIDDLEEvent; // 0xf28(0x10)
	struct FMulticastInlineDelegate UEOnPushMOUSEWHEELUPEvent; // 0xf38(0x10)
	struct FMulticastInlineDelegate UEOnPushMOUSEWHEELDOWNEvent; // 0xf48(0x10)
	struct FMulticastInlineDelegate UEOnPushMOVE_FORWARDEvent; // 0xf58(0x10)
	struct FMulticastInlineDelegate UEOnPushMOVE_BACKWARDEvent; // 0xf68(0x10)
	struct FMulticastInlineDelegate UEOnPushMOVE_LEFTEvent; // 0xf78(0x10)
	struct FMulticastInlineDelegate UEOnPushMOVE_RIGHTEvent; // 0xf88(0x10)
	struct FMulticastInlineDelegate UEOnPushACTIONEvent; // 0xf98(0x10)
	struct FMulticastInlineDelegate UEOnPushSTEP_DASHEvent; // 0xfa8(0x10)
	struct FMulticastInlineDelegate UEOnPushWEAPON_ATTACKEvent; // 0xfb8(0x10)
	struct FMulticastInlineDelegate UEOnPushWEAPON_ATTACK_SUBEvent; // 0xfc8(0x10)
	struct FMulticastInlineDelegate UEOnPushJUMPEvent; // 0xfd8(0x10)
	struct FMulticastInlineDelegate UEOnPushPSYCHICEvent; // 0xfe8(0x10)
	struct FMulticastInlineDelegate UEOnPushPSYCHIC_SPECIALEvent; // 0xff8(0x10)
	struct FMulticastInlineDelegate UEOnPushBRAINFIELDEvent; // 0x1008(0x10)
	struct FMulticastInlineDelegate UEOnPushPSYCHICFIELDEvent; // 0x1018(0x10)
	struct FMulticastInlineDelegate UEOnPushCAMERA_RESETEvent; // 0x1028(0x10)
	struct FMulticastInlineDelegate UEOnPushLOCK_ONEvent; // 0x1038(0x10)
	struct FMulticastInlineDelegate UEOnPushLOCK_ON_SWITCH_LEvent; // 0x1048(0x10)
	struct FMulticastInlineDelegate UEOnPushLOCK_ON_SWITCH_REvent; // 0x1058(0x10)
	struct FMulticastInlineDelegate UEOnPushASSAULT_VISIONEvent; // 0x1068(0x10)
	struct FMulticastInlineDelegate UEOnPushSASMENU_PAGESWITCHEvent; // 0x1078(0x10)
	struct FMulticastInlineDelegate UEOnPushSASMENU_OPENCLOSEEvent; // 0x1088(0x10)
	struct FMulticastInlineDelegate UEOnPushSAS_ACTION_UEvent; // 0x1098(0x10)
	struct FMulticastInlineDelegate UEOnPushSAS_ACTION_DEvent; // 0x10a8(0x10)
	struct FMulticastInlineDelegate UEOnPushSAS_ACTION_LEvent; // 0x10b8(0x10)
	struct FMulticastInlineDelegate UEOnPushSAS_ACTION_REvent; // 0x10c8(0x10)
	struct FMulticastInlineDelegate UEOnPushSTOP_SASEvent; // 0x10d8(0x10)
	struct FMulticastInlineDelegate UEOnPushCVMENU_OPENCLOSEEvent; // 0x10e8(0x10)
	struct FMulticastInlineDelegate UEOnPushCV_ACTION_UEvent; // 0x10f8(0x10)
	struct FMulticastInlineDelegate UEOnPushCV_ACTION_DEvent; // 0x1108(0x10)
	struct FMulticastInlineDelegate UEOnPushCV_ACTION_LEvent; // 0x1118(0x10)
	struct FMulticastInlineDelegate UEOnPushCV_ACTION_REvent; // 0x1128(0x10)
	struct FMulticastInlineDelegate UEOnPushITEM_SELECT_LEvent; // 0x1138(0x10)
	struct FMulticastInlineDelegate UEOnPushITEM_SELECT_REvent; // 0x1148(0x10)
	struct FMulticastInlineDelegate UEOnPushITEM_USEEvent; // 0x1158(0x10)
	struct FMulticastInlineDelegate UEOnPushOPEN_MENUEvent; // 0x1168(0x10)
	struct FMulticastInlineDelegate UEOnPushOPEN_DETAILMAPEvent; // 0x1178(0x10)
	struct FMulticastInlineDelegate UEOnPushOPEN_WORLDMAPEvent; // 0x1188(0x10)
	struct FMulticastInlineDelegate UEOnPushACTION2Event; // 0x1198(0x10)
	struct FMulticastInlineDelegate UEOnPushOPEN_BRAIN_MESSAGEEvent; // 0x11a8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseR1Event; // 0x11b8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseR2Event; // 0x11c8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseR3Event; // 0x11d8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseL1Event; // 0x11e8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseL2Event; // 0x11f8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseL3Event; // 0x1208(0x10)
	struct FMulticastInlineDelegate UEOnReleaseRUPEvent; // 0x1218(0x10)
	struct FMulticastInlineDelegate UEOnReleaseRDOWNEvent; // 0x1228(0x10)
	struct FMulticastInlineDelegate UEOnReleaseRLEFTEvent; // 0x1238(0x10)
	struct FMulticastInlineDelegate UEOnReleaseRRIGHTEvent; // 0x1248(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPAD_UPEvent; // 0x1258(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPAD_DOWNEvent; // 0x1268(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPAD_LEFTEvent; // 0x1278(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPAD_RIGHTEvent; // 0x1288(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPADEMU_UPEvent; // 0x1298(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPADEMU_DOWNEvent; // 0x12a8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPADEMU_LEFTEvent; // 0x12b8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDPADEMU_RIGHTEvent; // 0x12c8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSELECTEvent; // 0x12d8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSTARTEvent; // 0x12e8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseDECIDEEvent; // 0x12f8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCANCELEvent; // 0x1308(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOUSELEFTEvent; // 0x1318(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOUSERIGHTEvent; // 0x1328(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOUSEMIDDLEEvent; // 0x1338(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOUSEWHEELUPEvent; // 0x1348(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOUSEWHEELDOWNEvent; // 0x1358(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOVE_FORWARDEvent; // 0x1368(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOVE_BACKWARDEvent; // 0x1378(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOVE_LEFTEvent; // 0x1388(0x10)
	struct FMulticastInlineDelegate UEOnReleaseMOVE_RIGHTEvent; // 0x1398(0x10)
	struct FMulticastInlineDelegate UEOnReleaseACTIONEvent; // 0x13a8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSTEP_DASHEvent; // 0x13b8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseWEAPON_ATTACKEvent; // 0x13c8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseWEAPON_ATTACK_SUBEvent; // 0x13d8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseJUMPEvent; // 0x13e8(0x10)
	struct FMulticastInlineDelegate UEOnReleasePSYCHICEvent; // 0x13f8(0x10)
	struct FMulticastInlineDelegate UEOnReleasePSYCHIC_SPECIALEvent; // 0x1408(0x10)
	struct FMulticastInlineDelegate UEOnReleaseBRAINFIELDEvent; // 0x1418(0x10)
	struct FMulticastInlineDelegate UEOnReleasePSYCHICFIELDEvent; // 0x1428(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCAMERA_RESETEvent; // 0x1438(0x10)
	struct FMulticastInlineDelegate UEOnReleaseLOCK_ONEvent; // 0x1448(0x10)
	struct FMulticastInlineDelegate UEOnReleaseLOCK_ON_SWITCH_LEvent; // 0x1458(0x10)
	struct FMulticastInlineDelegate UEOnReleaseLOCK_ON_SWITCH_REvent; // 0x1468(0x10)
	struct FMulticastInlineDelegate UEOnReleaseASSAULT_VISIONEvent; // 0x1478(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSASMENU_PAGESWITCHEvent; // 0x1488(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSASMENU_OPENCLOSEEvent; // 0x1498(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSAS_ACTION_UEvent; // 0x14a8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSAS_ACTION_DEvent; // 0x14b8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSAS_ACTION_LEvent; // 0x14c8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSAS_ACTION_REvent; // 0x14d8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseSTOP_SASEvent; // 0x14e8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCVMENU_OPENCLOSEEvent; // 0x14f8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCV_ACTION_UEvent; // 0x1508(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCV_ACTION_DEvent; // 0x1518(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCV_ACTION_LEvent; // 0x1528(0x10)
	struct FMulticastInlineDelegate UEOnReleaseCV_ACTION_REvent; // 0x1538(0x10)
	struct FMulticastInlineDelegate UEOnReleaseITEM_SELECT_LEvent; // 0x1548(0x10)
	struct FMulticastInlineDelegate UEOnReleaseITEM_SELECT_REvent; // 0x1558(0x10)
	struct FMulticastInlineDelegate UEOnReleaseITEM_USEEvent; // 0x1568(0x10)
	struct FMulticastInlineDelegate UEOnReleaseOPEN_MENUEvent; // 0x1578(0x10)
	struct FMulticastInlineDelegate UEOnReleaseOPEN_DETAILMAPEvent; // 0x1588(0x10)
	struct FMulticastInlineDelegate UEOnReleaseOPEN_WORLDMAPEvent; // 0x1598(0x10)
	struct FMulticastInlineDelegate UEOnReleaseACTION2Event; // 0x15a8(0x10)
	struct FMulticastInlineDelegate UEOnReleaseOPEN_BRAIN_MESSAGEEvent; // 0x15b8(0x10)
	struct FMulticastInlineDelegate OnPressR1Event; // 0x15c8(0x10)
	struct FMulticastInlineDelegate OnPressR2Event; // 0x15d8(0x10)
	struct FMulticastInlineDelegate OnPressR3Event; // 0x15e8(0x10)
	struct FMulticastInlineDelegate OnPressL1Event; // 0x15f8(0x10)
	struct FMulticastInlineDelegate OnPressL2Event; // 0x1608(0x10)
	struct FMulticastInlineDelegate OnPressL3Event; // 0x1618(0x10)
	struct FMulticastInlineDelegate OnPressRUPEvent; // 0x1628(0x10)
	struct FMulticastInlineDelegate OnPressRDOWNEvent; // 0x1638(0x10)
	struct FMulticastInlineDelegate OnPressRLEFTEvent; // 0x1648(0x10)
	struct FMulticastInlineDelegate OnPressRRIGHTEvent; // 0x1658(0x10)
	struct FMulticastInlineDelegate OnPressDPAD_UPEvent; // 0x1668(0x10)
	struct FMulticastInlineDelegate OnPressDPAD_DOWNEvent; // 0x1678(0x10)
	struct FMulticastInlineDelegate OnPressDPAD_LEFTEvent; // 0x1688(0x10)
	struct FMulticastInlineDelegate OnPressDPAD_RIGHTEvent; // 0x1698(0x10)
	struct FMulticastInlineDelegate OnPressDPADEMU_UPEvent; // 0x16a8(0x10)
	struct FMulticastInlineDelegate OnPressDPADEMU_DOWNEvent; // 0x16b8(0x10)
	struct FMulticastInlineDelegate OnPressDPADEMU_LEFTEvent; // 0x16c8(0x10)
	struct FMulticastInlineDelegate OnPressDPADEMU_RIGHTEvent; // 0x16d8(0x10)
	struct FMulticastInlineDelegate OnPressSELECTEvent; // 0x16e8(0x10)
	struct FMulticastInlineDelegate OnPressSTARTEvent; // 0x16f8(0x10)
	struct FMulticastInlineDelegate OnPressDECIDEEvent; // 0x1708(0x10)
	struct FMulticastInlineDelegate OnPressCANCELEvent; // 0x1718(0x10)
	struct FMulticastInlineDelegate OnPressMOUSELEFTEvent; // 0x1728(0x10)
	struct FMulticastInlineDelegate OnPressMOUSERIGHTEvent; // 0x1738(0x10)
	struct FMulticastInlineDelegate OnPressMOUSEMIDDLEEvent; // 0x1748(0x10)
	struct FMulticastInlineDelegate OnPressMOUSEWHEELUPEvent; // 0x1758(0x10)
	struct FMulticastInlineDelegate OnPressMOUSEWHEELDOWNEvent; // 0x1768(0x10)
	struct FMulticastInlineDelegate OnPressMOVE_FORWARDEvent; // 0x1778(0x10)
	struct FMulticastInlineDelegate OnPressMOVE_BACKWARDEvent; // 0x1788(0x10)
	struct FMulticastInlineDelegate OnPressMOVE_LEFTEvent; // 0x1798(0x10)
	struct FMulticastInlineDelegate OnPressMOVE_RIGHTEvent; // 0x17a8(0x10)
	struct FMulticastInlineDelegate OnPressACTIONEvent; // 0x17b8(0x10)
	struct FMulticastInlineDelegate OnPressSTEP_DASHEvent; // 0x17c8(0x10)
	struct FMulticastInlineDelegate OnPressWEAPON_ATTACKEvent; // 0x17d8(0x10)
	struct FMulticastInlineDelegate OnPressWEAPON_ATTACK_SUBEvent; // 0x17e8(0x10)
	struct FMulticastInlineDelegate OnPressJUMPEvent; // 0x17f8(0x10)
	struct FMulticastInlineDelegate OnPressPSYCHICEvent; // 0x1808(0x10)
	struct FMulticastInlineDelegate OnPressPSYCHIC_SPECIALEvent; // 0x1818(0x10)
	struct FMulticastInlineDelegate OnPressBRAINFIELDEvent; // 0x1828(0x10)
	struct FMulticastInlineDelegate OnPressPSYCHICFIELDEvent; // 0x1838(0x10)
	struct FMulticastInlineDelegate OnPressCAMERA_RESETEvent; // 0x1848(0x10)
	struct FMulticastInlineDelegate OnPressLOCK_ONEvent; // 0x1858(0x10)
	struct FMulticastInlineDelegate OnPressLOCK_ON_SWITCH_LEvent; // 0x1868(0x10)
	struct FMulticastInlineDelegate OnPressLOCK_ON_SWITCH_REvent; // 0x1878(0x10)
	struct FMulticastInlineDelegate OnPressASSAULT_VISIONEvent; // 0x1888(0x10)
	struct FMulticastInlineDelegate OnPressSASMENU_PAGESWITCHEvent; // 0x1898(0x10)
	struct FMulticastInlineDelegate OnPressSASMENU_OPENCLOSEEvent; // 0x18a8(0x10)
	struct FMulticastInlineDelegate OnPressSAS_ACTION_UEvent; // 0x18b8(0x10)
	struct FMulticastInlineDelegate OnPressSAS_ACTION_DEvent; // 0x18c8(0x10)
	struct FMulticastInlineDelegate OnPressSAS_ACTION_LEvent; // 0x18d8(0x10)
	struct FMulticastInlineDelegate OnPressSAS_ACTION_REvent; // 0x18e8(0x10)
	struct FMulticastInlineDelegate OnPressSTOP_SASEvent; // 0x18f8(0x10)
	struct FMulticastInlineDelegate OnPressCVMENU_OPENCLOSEEvent; // 0x1908(0x10)
	struct FMulticastInlineDelegate OnPressCV_ACTION_UEvent; // 0x1918(0x10)
	struct FMulticastInlineDelegate OnPressCV_ACTION_DEvent; // 0x1928(0x10)
	struct FMulticastInlineDelegate OnPressCV_ACTION_LEvent; // 0x1938(0x10)
	struct FMulticastInlineDelegate OnPressCV_ACTION_REvent; // 0x1948(0x10)
	struct FMulticastInlineDelegate OnPressITEM_SELECT_LEvent; // 0x1958(0x10)
	struct FMulticastInlineDelegate OnPressITEM_SELECT_REvent; // 0x1968(0x10)
	struct FMulticastInlineDelegate OnPressITEM_USEEvent; // 0x1978(0x10)
	struct FMulticastInlineDelegate OnPressOPEN_MENUEvent; // 0x1988(0x10)
	struct FMulticastInlineDelegate OnPressOPEN_DETAILMAPEvent; // 0x1998(0x10)
	struct FMulticastInlineDelegate OnPressOPEN_WORLDMAPEvent; // 0x19a8(0x10)
	struct FMulticastInlineDelegate OnPressACTION2Event; // 0x19b8(0x10)
	struct FMulticastInlineDelegate OnPressOPEN_BRAIN_MESSAGEEvent; // 0x19c8(0x10)
	struct FMulticastInlineDelegate OnTriggerR1Event; // 0x19d8(0x10)
	struct FMulticastInlineDelegate OnTriggerR2Event; // 0x19e8(0x10)
	struct FMulticastInlineDelegate OnTriggerR3Event; // 0x19f8(0x10)
	struct FMulticastInlineDelegate OnTriggerL1Event; // 0x1a08(0x10)
	struct FMulticastInlineDelegate OnTriggerL2Event; // 0x1a18(0x10)
	struct FMulticastInlineDelegate OnTriggerL3Event; // 0x1a28(0x10)
	struct FMulticastInlineDelegate OnTriggerRUPEvent; // 0x1a38(0x10)
	struct FMulticastInlineDelegate OnTriggerRDOWNEvent; // 0x1a48(0x10)
	struct FMulticastInlineDelegate OnTriggerRLEFTEvent; // 0x1a58(0x10)
	struct FMulticastInlineDelegate OnTriggerRRIGHTEvent; // 0x1a68(0x10)
	struct FMulticastInlineDelegate OnTriggerDPAD_UPEvent; // 0x1a78(0x10)
	struct FMulticastInlineDelegate OnTriggerDPAD_DOWNEvent; // 0x1a88(0x10)
	struct FMulticastInlineDelegate OnTriggerDPAD_LEFTEvent; // 0x1a98(0x10)
	struct FMulticastInlineDelegate OnTriggerDPAD_RIGHTEvent; // 0x1aa8(0x10)
	struct FMulticastInlineDelegate OnTriggerDPADEMU_UPEvent; // 0x1ab8(0x10)
	struct FMulticastInlineDelegate OnTriggerDPADEMU_DOWNEvent; // 0x1ac8(0x10)
	struct FMulticastInlineDelegate OnTriggerDPADEMU_LEFTEvent; // 0x1ad8(0x10)
	struct FMulticastInlineDelegate OnTriggerDPADEMU_RIGHTEvent; // 0x1ae8(0x10)
	struct FMulticastInlineDelegate OnTriggerSELECTEvent; // 0x1af8(0x10)
	struct FMulticastInlineDelegate OnTriggerSTARTEvent; // 0x1b08(0x10)
	struct FMulticastInlineDelegate OnTriggerDECIDEEvent; // 0x1b18(0x10)
	struct FMulticastInlineDelegate OnTriggerCANCELEvent; // 0x1b28(0x10)
	struct FMulticastInlineDelegate OnTriggerMOUSELEFTEvent; // 0x1b38(0x10)
	struct FMulticastInlineDelegate OnTriggerMOUSERIGHTEvent; // 0x1b48(0x10)
	struct FMulticastInlineDelegate OnTriggerMOUSEMIDDLEEvent; // 0x1b58(0x10)
	struct FMulticastInlineDelegate OnTriggerMOUSEWHEELUPEvent; // 0x1b68(0x10)
	struct FMulticastInlineDelegate OnTriggerMOUSEWHEELDOWNEvent; // 0x1b78(0x10)
	struct FMulticastInlineDelegate OnTriggerMOVE_FORWARDEvent; // 0x1b88(0x10)
	struct FMulticastInlineDelegate OnTriggerMOVE_BACKWARDEvent; // 0x1b98(0x10)
	struct FMulticastInlineDelegate OnTriggerMOVE_LEFTEvent; // 0x1ba8(0x10)
	struct FMulticastInlineDelegate OnTriggerMOVE_RIGHTEvent; // 0x1bb8(0x10)
	struct FMulticastInlineDelegate OnTriggerACTIONEvent; // 0x1bc8(0x10)
	struct FMulticastInlineDelegate OnTriggerSTEP_DASHEvent; // 0x1bd8(0x10)
	struct FMulticastInlineDelegate OnTriggerWEAPON_ATTACKEvent; // 0x1be8(0x10)
	struct FMulticastInlineDelegate OnTriggerWEAPON_ATTACK_SUBEvent; // 0x1bf8(0x10)
	struct FMulticastInlineDelegate OnTriggerJUMPEvent; // 0x1c08(0x10)
	struct FMulticastInlineDelegate OnTriggerPSYCHICEvent; // 0x1c18(0x10)
	struct FMulticastInlineDelegate OnTriggerPSYCHIC_SPECIALEvent; // 0x1c28(0x10)
	struct FMulticastInlineDelegate OnTriggerBRAINFIELDEvent; // 0x1c38(0x10)
	struct FMulticastInlineDelegate OnTriggerPSYCHICFIELDEvent; // 0x1c48(0x10)
	struct FMulticastInlineDelegate OnTriggerCAMERA_RESETEvent; // 0x1c58(0x10)
	struct FMulticastInlineDelegate OnTriggerLOCK_ONEvent; // 0x1c68(0x10)
	struct FMulticastInlineDelegate OnTriggerLOCK_ON_SWITCH_LEvent; // 0x1c78(0x10)
	struct FMulticastInlineDelegate OnTriggerLOCK_ON_SWITCH_REvent; // 0x1c88(0x10)
	struct FMulticastInlineDelegate OnTriggerASSAULT_VISIONEvent; // 0x1c98(0x10)
	struct FMulticastInlineDelegate OnTriggerSASMENU_PAGESWITCHEvent; // 0x1ca8(0x10)
	struct FMulticastInlineDelegate OnTriggerSASMENU_OPENCLOSEEvent; // 0x1cb8(0x10)
	struct FMulticastInlineDelegate OnTriggerSAS_ACTION_UEvent; // 0x1cc8(0x10)
	struct FMulticastInlineDelegate OnTriggerSAS_ACTION_DEvent; // 0x1cd8(0x10)
	struct FMulticastInlineDelegate OnTriggerSAS_ACTION_LEvent; // 0x1ce8(0x10)
	struct FMulticastInlineDelegate OnTriggerSAS_ACTION_REvent; // 0x1cf8(0x10)
	struct FMulticastInlineDelegate OnTriggerSTOP_SASEvent; // 0x1d08(0x10)
	struct FMulticastInlineDelegate OnTriggerCVMENU_OPENCLOSEEvent; // 0x1d18(0x10)
	struct FMulticastInlineDelegate OnTriggerCV_ACTION_UEvent; // 0x1d28(0x10)
	struct FMulticastInlineDelegate OnTriggerCV_ACTION_DEvent; // 0x1d38(0x10)
	struct FMulticastInlineDelegate OnTriggerCV_ACTION_LEvent; // 0x1d48(0x10)
	struct FMulticastInlineDelegate OnTriggerCV_ACTION_REvent; // 0x1d58(0x10)
	struct FMulticastInlineDelegate OnTriggerITEM_SELECT_LEvent; // 0x1d68(0x10)
	struct FMulticastInlineDelegate OnTriggerITEM_SELECT_REvent; // 0x1d78(0x10)
	struct FMulticastInlineDelegate OnTriggerITEM_USEEvent; // 0x1d88(0x10)
	struct FMulticastInlineDelegate OnTriggerOPEN_MENUEvent; // 0x1d98(0x10)
	struct FMulticastInlineDelegate OnTriggerOPEN_DETAILMAPEvent; // 0x1da8(0x10)
	struct FMulticastInlineDelegate OnTriggerOPEN_WORLDMAPEvent; // 0x1db8(0x10)
	struct FMulticastInlineDelegate OnTriggerACTION2Event; // 0x1dc8(0x10)
	struct FMulticastInlineDelegate OnTriggerOPEN_BRAIN_MESSAGEEvent; // 0x1dd8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerR1Event; // 0x1de8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerR2Event; // 0x1df8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerR3Event; // 0x1e08(0x10)
	struct FMulticastInlineDelegate OnRepTriggerL1Event; // 0x1e18(0x10)
	struct FMulticastInlineDelegate OnRepTriggerL2Event; // 0x1e28(0x10)
	struct FMulticastInlineDelegate OnRepTriggerL3Event; // 0x1e38(0x10)
	struct FMulticastInlineDelegate OnRepTriggerRUPEvent; // 0x1e48(0x10)
	struct FMulticastInlineDelegate OnRepTriggerRDOWNEvent; // 0x1e58(0x10)
	struct FMulticastInlineDelegate OnRepTriggerRLEFTEvent; // 0x1e68(0x10)
	struct FMulticastInlineDelegate OnRepTriggerRRIGHTEvent; // 0x1e78(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPAD_UPEvent; // 0x1e88(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPAD_DOWNEvent; // 0x1e98(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPAD_LEFTEvent; // 0x1ea8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPAD_RIGHTEvent; // 0x1eb8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPADEMU_UPEvent; // 0x1ec8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPADEMU_DOWNEvent; // 0x1ed8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPADEMU_LEFTEvent; // 0x1ee8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDPADEMU_RIGHTEvent; // 0x1ef8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSELECTEvent; // 0x1f08(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSTARTEvent; // 0x1f18(0x10)
	struct FMulticastInlineDelegate OnRepTriggerDECIDEEvent; // 0x1f28(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCANCELEvent; // 0x1f38(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOUSELEFTEvent; // 0x1f48(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOUSERIGHTEvent; // 0x1f58(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOUSEMIDDLEEvent; // 0x1f68(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOUSEWHEELUPEvent; // 0x1f78(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOUSEWHEELDOWNEvent; // 0x1f88(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOVE_FORWARDEvent; // 0x1f98(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOVE_BACKWARDEvent; // 0x1fa8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOVE_LEFTEvent; // 0x1fb8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerMOVE_RIGHTEvent; // 0x1fc8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerACTIONEvent; // 0x1fd8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSTEP_DASHEvent; // 0x1fe8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerWEAPON_ATTACKEvent; // 0x1ff8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerWEAPON_ATTACK_SUBEvent; // 0x2008(0x10)
	struct FMulticastInlineDelegate OnRepTriggerJUMPEvent; // 0x2018(0x10)
	struct FMulticastInlineDelegate OnRepTriggerPSYCHICEvent; // 0x2028(0x10)
	struct FMulticastInlineDelegate OnRepTriggerPSYCHIC_SPECIALEvent; // 0x2038(0x10)
	struct FMulticastInlineDelegate OnRepTriggerBRAINFIELDEvent; // 0x2048(0x10)
	struct FMulticastInlineDelegate OnRepTriggerPSYCHICFIELDEvent; // 0x2058(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCAMERA_RESETEvent; // 0x2068(0x10)
	struct FMulticastInlineDelegate OnRepTriggerLOCK_ONEvent; // 0x2078(0x10)
	struct FMulticastInlineDelegate OnRepTriggerLOCK_ON_SWITCH_LEvent; // 0x2088(0x10)
	struct FMulticastInlineDelegate OnRepTriggerLOCK_ON_SWITCH_REvent; // 0x2098(0x10)
	struct FMulticastInlineDelegate OnRepTriggerASSAULT_VISIONEvent; // 0x20a8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSASMENU_PAGESWITCHEvent; // 0x20b8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSASMENU_OPENCLOSEEvent; // 0x20c8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSAS_ACTION_UEvent; // 0x20d8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSAS_ACTION_DEvent; // 0x20e8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSAS_ACTION_LEvent; // 0x20f8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSAS_ACTION_REvent; // 0x2108(0x10)
	struct FMulticastInlineDelegate OnRepTriggerSTOP_SASEvent; // 0x2118(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCVMENU_OPENCLOSEEvent; // 0x2128(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCV_ACTION_UEvent; // 0x2138(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCV_ACTION_DEvent; // 0x2148(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCV_ACTION_LEvent; // 0x2158(0x10)
	struct FMulticastInlineDelegate OnRepTriggerCV_ACTION_REvent; // 0x2168(0x10)
	struct FMulticastInlineDelegate OnRepTriggerITEM_SELECT_LEvent; // 0x2178(0x10)
	struct FMulticastInlineDelegate OnRepTriggerITEM_SELECT_REvent; // 0x2188(0x10)
	struct FMulticastInlineDelegate OnRepTriggerITEM_USEEvent; // 0x2198(0x10)
	struct FMulticastInlineDelegate OnRepTriggerOPEN_MENUEvent; // 0x21a8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerOPEN_DETAILMAPEvent; // 0x21b8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerOPEN_WORLDMAPEvent; // 0x21c8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerACTION2Event; // 0x21d8(0x10)
	struct FMulticastInlineDelegate OnRepTriggerOPEN_BRAIN_MESSAGEEvent; // 0x21e8(0x10)

	void SetEnable(); // Function BattlePrototype.RSGamepadLayout.SetEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2ed0
	void SetDisable(); // Function BattlePrototype.RSGamepadLayout.SetDisable // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2eb0
	struct URSGamepadEvent* GetKeyEvent(enum class ERSGamepadInputName InputName); // Function BattlePrototype.RSGamepadLayout.GetKeyEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12c2a40
};

// Class BattlePrototype.RSGameViewportClient
// Size: 0x330 (Inherited: 0x330)
struct URSGameViewportClient : UGameViewportClient {
};

// Class BattlePrototype.RSGeneralFuncLib
// Size: 0x28 (Inherited: 0x28)
struct URSGeneralFuncLib : UBlueprintFunctionLibrary {

	void WorldPhysicsIdling(struct UObject* WorldContextObject, float IdlingSec); // Function BattlePrototype.RSGeneralFuncLib.WorldPhysicsIdling // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ce1c0
	void ShrinkActorArray(struct TArray<struct AActor*> InActors, struct TArray<struct AActor*> OutActors); // Function BattlePrototype.RSGeneralFuncLib.ShrinkActorArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cd1c0
	void SetVisibleMaterialFromSlotName(struct USkinnedMeshComponent* Mesh, struct FString Name, bool bShow, int32_t LODIndex, bool IsCaseCheck); // Function BattlePrototype.RSGeneralFuncLib.SetVisibleMaterialFromSlotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ccf20
	void SetVisibleMaterialAllLODsFromSlotName(struct USkinnedMeshComponent* Mesh, struct FString Name, bool bShow, bool IsCaseCheck); // Function BattlePrototype.RSGeneralFuncLib.SetVisibleMaterialAllLODsFromSlotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ccd90
	void SetVisibleMaterialAllLODs(struct USkinnedMeshComponent* Mesh, int32_t MaterialID, bool bShow); // Function BattlePrototype.RSGeneralFuncLib.SetVisibleMaterialAllLODs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ccca0
	void SetVisibleMaterialAll(struct USkinnedMeshComponent* Mesh, bool bShow); // Function BattlePrototype.RSGeneralFuncLib.SetVisibleMaterialAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ccbe0
	void SetVisibleMaterial(struct USkinnedMeshComponent* Mesh, int32_t MaterialID, bool bShow, int32_t LODIndex); // Function BattlePrototype.RSGeneralFuncLib.SetVisibleMaterial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ccaa0
	void SetVectorParameterArrayFromSlotName(struct UMeshComponent* Mesh, struct FName SlotName, bool IsCaseCheck, struct TArray<struct FName> ParameterName, struct TArray<struct FLinearColor> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetVectorParameterArrayFromSlotName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cc810
	void SetVectorParameterArrayFromIndexList(struct UMeshComponent* Mesh, struct TArray<int32_t> MaterialSlotIndexList, struct TArray<struct FName> ParameterName, struct TArray<struct FLinearColor> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetVectorParameterArrayFromIndexList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cc630
	void SetVectorParameterArrayExcludeSlotName(struct UMeshComponent* Mesh, struct FName SlotName, bool IsCaseCheck, struct TArray<struct FName> ParameterName, struct TArray<struct FLinearColor> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetVectorParameterArrayExcludeSlotName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cc430
	void SetVectorParameterAllArray(struct UMeshComponent* Mesh, struct TArray<struct FName> ParameterName, struct TArray<struct FLinearColor> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetVectorParameterAllArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cc2b0
	void SetVectorParameterAll(struct UMeshComponent* Mesh, struct FName ParameterName, struct FLinearColor Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetVectorParameterAll // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12cc170
	void SetTextureParameterAllArray(struct UMeshComponent* Mesh, struct TArray<struct FName> ParameterName, struct TArray<struct UTexture*> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetTextureParameterAllArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cbff0
	void SetTextureParameterAll(struct UMeshComponent* Mesh, struct FName ParameterName, struct UTexture* Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetTextureParameterAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12cbec0
	void SetScalarParameterFromSlotName(struct USkinnedMeshComponent* Mesh, struct FString SlotName, struct FName ParameterName, float Value, bool IsCaseCheck, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameterFromSlotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12cbcb0
	void SetScalarParameterArrayFromSlotName(struct UMeshComponent* Mesh, struct FName SlotName, bool IsCaseCheck, struct TArray<struct FName> ParameterName, struct TArray<float> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameterArrayFromSlotName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cbab0
	void SetScalarParameterArrayFromIndexList(struct UMeshComponent* Mesh, struct TArray<int32_t> MaterialSlotIndexList, struct TArray<struct FName> ParameterName, struct TArray<float> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameterArrayFromIndexList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cb8d0
	void SetScalarParameterArrayExcludeSlotName(struct UMeshComponent* Mesh, struct FName SlotName, bool IsCaseCheck, struct TArray<struct FName> ParameterName, struct TArray<float> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameterArrayExcludeSlotName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cb6d0
	void SetScalarParameterAllArray(struct UMeshComponent* Mesh, struct TArray<struct FName> ParameterName, struct TArray<float> Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameterAllArray // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12cb550
	void SetScalarParameterAll(struct UMeshComponent* Mesh, struct FName ParameterName, float Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameterAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12cb410
	void SetScalarParameter(struct USkinnedMeshComponent* Mesh, int32_t MaterialIndex, struct FName ParameterName, float Value, bool CreateDynamicMaterial); // Function BattlePrototype.RSGeneralFuncLib.SetScalarParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12cb290
	void SetEnableFrameRateSmoothing(struct UObject* WorldContextObject, bool bEnable); // Function BattlePrototype.RSGeneralFuncLib.SetEnableFrameRateSmoothing // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12cabb0
	void SetCellLightingParamter(float LightPower, float LightSunnyMax); // Function BattlePrototype.RSGeneralFuncLib.SetCellLightingParamter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12cab00
	struct TArray<int32_t> SearchMeshMaterialFromSlotName(struct USkinnedMeshComponent* Mesh, struct FString Name, bool IsCaseCheck); // Function BattlePrototype.RSGeneralFuncLib.SearchMeshMaterialFromSlotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ca630
	struct TArray<int32_t> SearchMeshCompMaterialFromSlotName(struct UMeshComponent* Mesh, struct FString Name, bool IsCaseCheck); // Function BattlePrototype.RSGeneralFuncLib.SearchMeshCompMaterialFromSlotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ca630
	struct TArray<int32_t> SearchMeshCompMaterialExcludeSlotName(struct UMeshComponent* Mesh, struct FString Name, bool IsCaseCheck); // Function BattlePrototype.RSGeneralFuncLib.SearchMeshCompMaterialExcludeSlotName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ca4a0
	bool IsVisibleMaterial(struct USkinnedMeshComponent* Mesh, int32_t MaterialID); // Function BattlePrototype.RSGeneralFuncLib.IsVisibleMaterial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9b60
	bool IsPlaySimulate(); // Function BattlePrototype.RSGeneralFuncLib.IsPlaySimulate // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7b7230
	bool IsPlayMovieCapture(); // Function BattlePrototype.RSGeneralFuncLib.IsPlayMovieCapture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7b7230
	bool IsInDisplayScreen(struct APlayerController* PC, struct FVector targetPos); // Function BattlePrototype.RSGeneralFuncLib.IsInDisplayScreen // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12c9a60
	bool IsEditor(); // Function BattlePrototype.RSGeneralFuncLib.IsEditor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7b7230
	bool IsBodySimulatingPhysics(struct UPrimitiveComponent* Primitive); // Function BattlePrototype.RSGeneralFuncLib.IsBodySimulatingPhysics // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9750
	bool HasRedEnemyMaterialComponent(struct UMeshComponent* Mesh); // Function BattlePrototype.RSGeneralFuncLib.HasRedEnemyMaterialComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9680
	bool HasRedEnemyMaterialActor(struct AActor* Actor); // Function BattlePrototype.RSGeneralFuncLib.HasRedEnemyMaterialActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9600
	bool HasMaterialParent(struct UMaterialInterface* TestMaterial, struct UMaterialInterface* CheckMaterial); // Function BattlePrototype.RSGeneralFuncLib.HasMaterialParent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9540
	bool HasCelLookMaterialComponent(struct UMeshComponent* Mesh); // Function BattlePrototype.RSGeneralFuncLib.HasCelLookMaterialComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c94c0
	bool HasCelLookMaterialActor(struct AActor* Actor); // Function BattlePrototype.RSGeneralFuncLib.HasCelLookMaterialActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9440
	struct FString GetRedSettingPurpose(); // Function BattlePrototype.RSGeneralFuncLib.GetRedSettingPurpose // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c93a0
	float GetPrimitiveBoundsScale(struct UPrimitiveComponent* Primitive); // Function BattlePrototype.RSGeneralFuncLib.GetPrimitiveBoundsScale // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c9310
	void GetChildrenMeshComponents(struct TArray<struct UMeshComponent*> OutMeshComps, struct USceneComponent* TargetComponent, bool IncludeAllDescendants); // Function BattlePrototype.RSGeneralFuncLib.GetChildrenMeshComponents // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12c9110
	void ClearViewStateMIDPool(struct UObject* WorldContextObject); // Function BattlePrototype.RSGeneralFuncLib.ClearViewStateMIDPool // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c8100
	void ClearUnusedRenderTargets(struct UObject* WorldContextObject); // Function BattlePrototype.RSGeneralFuncLib.ClearUnusedRenderTargets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c8090
	void CharacterMoveSmooth(struct ACharacter* InCharacter, struct FVector InVelocity, float DeltaSeconds); // Function BattlePrototype.RSGeneralFuncLib.CharacterMoveSmooth // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12c7dc0
	struct UActorComponent* AddActorComponent(struct AActor* Actor, struct UObject* ComponentClass); // Function BattlePrototype.RSGeneralFuncLib.AddActorComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12c7c80
};

// Class BattlePrototype.RSGoalActorBase
// Size: 0x230 (Inherited: 0x230)
struct ARSGoalActorBase : AActor {
};

// Class BattlePrototype.RSHUDBase
// Size: 0x7a0 (Inherited: 0x320)
struct ARSHUDBase : AHUD {
	char pad_320[0x30]; // 0x320(0x30)
	struct TArray<struct USoundAtomCue*> SEArray; // 0x350(0x10)
	struct UObject* m_pAtomComponentClass; // 0x360(0x08)
	struct UObject* m_pUILetterBoxMaskClass; // 0x368(0x08)
	struct UUILetterBoxMask* UILetterBoxMask; // 0x370(0x08)
	struct UObject* m_pUIFadeClass; // 0x378(0x08)
	struct UUIFade* UIFadeArray[0x2]; // 0x380(0x10)
	struct UObject* m_pUIGeneralChoiceClass; // 0x390(0x08)
	struct UUIGeneralChoice* UIGeneralChoice; // 0x398(0x08)
	struct UObject* m_pUISystemNoticeChoiceClass; // 0x3a0(0x08)
	struct UUIGeneralChoice* UISystemNoticeChoice; // 0x3a8(0x08)
	struct UObject* m_pUITipsClass; // 0x3b0(0x08)
	struct UUITips* UITips; // 0x3b8(0x08)
	struct UObject* m_pUISystemMessageClass; // 0x3c0(0x08)
	struct UUIInfoWindow* UISystemMessage; // 0x3c8(0x08)
	struct TArray<struct UUIActionIcon*> ActionIconArray; // 0x3d0(0x10)
	bool InitFlag; // 0x3e0(0x01)
	char pad_3E1[0x9]; // 0x3e1(0x09)
	bool DebugDrawMessageFlag; // 0x3ea(0x01)
	char pad_3EB[0x5]; // 0x3eb(0x05)
	struct UObject* m_pUIMouseClass; // 0x3f0(0x08)
	struct UUIMouse* UIMouse; // 0x3f8(0x08)
	struct UObject* m_pUIScarletLogoClsss; // 0x400(0x08)
	struct UUIScarletLogo* m_pUIScarletLogo; // 0x408(0x08)
	struct TArray<struct UUIBase*> ManageWidgetList; // 0x410(0x10)
	int32_t CurrentTickUnit; // 0x420(0x04)
	char pad_424[0x4]; // 0x424(0x04)
	struct UUINoticeQuest* NoticeQuest; // 0x428(0x08)
	struct UUINoticeQuestReward* NoticeQuestReward; // 0x430(0x08)
	char pad_438[0x17c]; // 0x438(0x17c)
	int32_t inputLevel; // 0x5b4(0x04)
	char pad_5B8[0x30]; // 0x5b8(0x30)
	struct UUIMenuBattleControl* HUD_battle_menu; // 0x5e8(0x08)
	enum class ESubMenuType CurrentSubMenu; // 0x5f0(0x01)
	char pad_5F1[0x1]; // 0x5f1(0x01)
	enum class ERSGamepadLayoutType PrevInputManagerLayoutType; // 0x5f2(0x01)
	char PrevGameViewRenderLayer; // 0x5f3(0x01)
	int32_t StateSubMenu; // 0x5f4(0x04)
	struct TArray<struct FName> RestrictOpenMenuClaimantList; // 0x5f8(0x10)
	struct TArray<struct FName> RestrictOpenTipsClaimantList; // 0x608(0x10)
	char pad_618[0x18]; // 0x618(0x18)
	struct UUIDetailMap* WidgetDetailMap; // 0x630(0x08)
	struct UUIWorldMap* WidgetWorldMap; // 0x638(0x08)
	int32_t WorldMapStartParam; // 0x640(0x04)
	bool WorldMapOpenFlag; // 0x644(0x01)
	char pad_645[0x3]; // 0x645(0x03)
	struct UUIShop* WidgetShop; // 0x648(0x08)
	struct UUICode* WidgetCode; // 0x650(0x08)
	struct UUIMainContents* WidgetParty; // 0x658(0x08)
	struct UUISaveLoad* WidgetSaveLoad; // 0x660(0x08)
	struct UUIPresent* WidgetPresent; // 0x668(0x08)
	struct UUIPresentNext* WidgetPresentNext; // 0x670(0x08)
	struct UUIAreaHere* WidgetAreaHere; // 0x678(0x08)
	struct UUIAreaNext* WidgetAreaNext; // 0x680(0x08)
	struct UUICredit* WidgetCredit; // 0x688(0x08)
	struct UUITutoOperation* WidgetOperation; // 0x690(0x08)
	struct UUIBrainTalk* WidgetBrainTalk; // 0x698(0x08)
	char pad_6A0[0x10]; // 0x6a0(0x10)
	struct TArray<struct FString> ActiveResurrectIconList; // 0x6b0(0x10)
	bool IsTitleOutGame; // 0x6c0(0x01)
	char pad_6C1[0x7]; // 0x6c1(0x07)
	struct UUIConfigBrightness* m_pConfigClassBrightness; // 0x6c8(0x08)
	struct UUIConfigChoice* m_pConfigClassChoice; // 0x6d0(0x08)
	struct UUIConfigController* m_pConfigClassController; // 0x6d8(0x08)
	struct UUIConfigSelect2* m_pConfigClassSelect2; // 0x6e0(0x08)
	struct UUIConfigSelect3* m_pConfigClassSelect3; // 0x6e8(0x08)
	struct UUIConfigSelect5* m_pConfigClassSelect5; // 0x6f0(0x08)
	struct UUIConfigSelectMulti* m_pConfigClassSelectMulti; // 0x6f8(0x08)
	struct UUIConfigSelectSlider* m_pConfigClassSelectSlider; // 0x700(0x08)
	struct UUIBase* m_pTabClassParts4; // 0x708(0x08)
	struct UUIBase* m_pTabClassParts5; // 0x710(0x08)
	struct UUIBase* m_pTabClassParts6; // 0x718(0x08)
	struct UUIConfigBrightness* m_pConfigBrightness; // 0x720(0x08)
	struct UUIConfigChoice* m_pConfigChoice; // 0x728(0x08)
	struct UUIConfigController* m_pConfigController; // 0x730(0x08)
	struct UUIConfigSelect2* m_pConfigSelect2; // 0x738(0x08)
	struct UUIConfigSelect3* m_pConfigSelect3; // 0x740(0x08)
	struct UUIConfigSelect5* m_pSConfigelect5; // 0x748(0x08)
	struct UUIConfigSelectMulti* m_pConfigSelectMulti; // 0x750(0x08)
	struct UUIConfigSelectSlider* m_pConfigSelectSlider; // 0x758(0x08)
	struct UUIBase* m_pTabParts4; // 0x760(0x08)
	struct UUIBase* m_pTabParts5; // 0x768(0x08)
	struct UUIBase* m_pTabParts6; // 0x770(0x08)
	char pad_778[0x8]; // 0x778(0x08)
	struct FMulticastInlineDelegate ReturnFromPartyMenu; // 0x780(0x10)
	char pad_790[0x3]; // 0x790(0x03)
	bool DebugIsDrawInvalidationInfo; // 0x793(0x01)
	char pad_794[0x4]; // 0x794(0x04)
	struct UObject* m_pDebugDrawClass; // 0x798(0x08)

	bool UpdateItemMenuUI(); // Function BattlePrototype.RSHUDBase.UpdateItemMenuUI // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void UnLockInputSubMenu(); // Function BattlePrototype.RSHUDBase.UnLockInputSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce1a0
	void UnloadResidentWidget(); // Function BattlePrototype.RSHUDBase.UnloadResidentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce180
	void TDebugDrawWidgetLayout(); // Function BattlePrototype.RSHUDBase.TDebugDrawWidgetLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void StopBrainTalkVoiceFromNative(); // Function BattlePrototype.RSHUDBase.StopBrainTalkVoiceFromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool StopAutoSaveIcon(); // Function BattlePrototype.RSHUDBase.StopAutoSaveIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartTutoTips(enum class EHelpTutorial TutoID, bool notPauseControll, bool notCloseOfPause, bool IsFade); // Function BattlePrototype.RSHUDBase.StartTutoTips // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce010
	bool StartTutoOperation(struct FName helpTutoID); // Function BattlePrototype.RSHUDBase.StartTutoOperation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartTownName(int32_t LocationId); // Function BattlePrototype.RSHUDBase.StartTownName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartSubQuestReward(struct FName SubQuestID); // Function BattlePrototype.RSHUDBase.StartSubQuestReward // (Final|Native|Public|BlueprintCallable) // @ game+0x12cdf80
	void StartSubMenu(enum class ESubMenuType SubMenuType, int32_t Parameter, int32_t parameter2); // Function BattlePrototype.RSHUDBase.StartSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12cde80
	void StartStaffRoll(float Speed); // Function BattlePrototype.RSHUDBase.StartStaffRoll // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12cde00
	bool StartSasWindowNative(enum class EPlayerID Target); // Function BattlePrototype.RSHUDBase.StartSasWindowNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartMinimapBrainField(); // Function BattlePrototype.RSHUDBase.StartMinimapBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartMessageGuide(bool FlagSkip, bool FlagDecide, bool FlagCancel); // Function BattlePrototype.RSHUDBase.StartMessageGuide // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartKeyword(); // Function BattlePrototype.RSHUDBase.StartKeyword // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartGeneralChoice4(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, struct FString textIndex3, struct FString textIndex4, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.RSHUDBase.StartGeneralChoice4 // (Final|Native|Public|BlueprintCallable) // @ game+0x12cdb20
	void StartGeneralChoice3(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, struct FString textIndex3, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.RSHUDBase.StartGeneralChoice3 // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd890
	void StartGeneralChoice2(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.RSHUDBase.StartGeneralChoice2 // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd650
	void StartGeneralChoice1(struct FString TextMain, struct FString textIndex, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.RSHUDBase.StartGeneralChoice1 // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd4a0
	void StartEventFinishWaitMode_AfterCounter(); // Function BattlePrototype.RSHUDBase.StartEventFinishWaitMode_AfterCounter // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd480
	bool StartCode(); // Function BattlePrototype.RSHUDBase.StartCode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartCharaName(struct FString CharaID); // Function BattlePrototype.RSHUDBase.StartCharaName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartBrainMessageMenu(bool IsAutoMode); // Function BattlePrototype.RSHUDBase.StartBrainMessageMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd3f0
	void StartBossName(struct FString bossId, enum class EBossNameMode Mode, float freeFixedDrawSecond); // Function BattlePrototype.RSHUDBase.StartBossName // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd2d0
	bool StartAutoSaveIcon(); // Function BattlePrototype.RSHUDBase.StartAutoSaveIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartAreaNext(int32_t LocationId, int32_t areaId, int32_t PortalID, bool isWorldMap); // Function BattlePrototype.RSHUDBase.StartAreaNext // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StartAreaHere(int32_t LocationId, int32_t areaId, int32_t PortalID); // Function BattlePrototype.RSHUDBase.StartAreaHere // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SkipMessage(); // Function BattlePrototype.RSHUDBase.SkipMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetWeaponMenuDefaultCursor(enum class EPlayerID CharaID, bool IsVisual); // Function BattlePrototype.RSHUDBase.SetWeaponMenuDefaultCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x12cd0f0
	void SetVisibleActionUI(bool FlagVisible); // Function BattlePrototype.RSHUDBase.SetVisibleActionUI // (Final|Native|Public|BlueprintCallable) // @ game+0x12cca10
	void SetTDebugInvisibleAll(bool IsInvisible); // Function BattlePrototype.RSHUDBase.SetTDebugInvisibleAll // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetReserveShopMenu(bool isReserve); // Function BattlePrototype.RSHUDBase.SetReserveShopMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12cb210
	void SetPlayBattleUI(bool FlagPlay); // Function BattlePrototype.RSHUDBase.SetPlayBattleUI // (Final|Native|Public|BlueprintCallable) // @ game+0x12cb180
	void SetPartyMenuViewerMode(bool IsViewerMode); // Function BattlePrototype.RSHUDBase.SetPartyMenuViewerMode // (Final|Native|Public|BlueprintCallable) // @ game+0x12cb0f0
	void SetOverlapEventInvalidFlag(bool Enable); // Function BattlePrototype.RSHUDBase.SetOverlapEventInvalidFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12cb070
	void SetOutGame(bool isOutGame); // Function BattlePrototype.RSHUDBase.SetOutGame // (Final|Native|Public|BlueprintCallable) // @ game+0x12caff0
	void SetOpenWorldMap(); // Function BattlePrototype.RSHUDBase.SetOpenWorldMap // (Final|Native|Public|BlueprintCallable) // @ game+0x12cafd0
	void SetOpenMainMenu(); // Function BattlePrototype.RSHUDBase.SetOpenMainMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12cafb0
	void SetOpenDetailMap(); // Function BattlePrototype.RSHUDBase.SetOpenDetailMap // (Final|Native|Public|BlueprintCallable) // @ game+0x12caf90
	void SetOpenBrainMessage(); // Function BattlePrototype.RSHUDBase.SetOpenBrainMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x12caf70
	void SetMouseEnableMainTab(bool Flag); // Function BattlePrototype.RSHUDBase.SetMouseEnableMainTab // (Final|Native|Public|BlueprintCallable) // @ game+0x12caee0
	void SetMouseDispRectangle(bool dispflag); // Function BattlePrototype.RSHUDBase.SetMouseDispRectangle // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetMouseDispIcon(bool icondisp); // Function BattlePrototype.RSHUDBase.SetMouseDispIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetMouseCursorUse(bool useflag); // Function BattlePrototype.RSHUDBase.SetMouseCursorUse // (Final|Native|Public|BlueprintCallable) // @ game+0x12cae50
	void SetMouseCursorShow(bool showflag, bool foceshow); // Function BattlePrototype.RSHUDBase.SetMouseCursorShow // (Final|Native|Public|BlueprintCallable) // @ game+0x12cad80
	bool SetLogUpdateGoal(); // Function BattlePrototype.RSHUDBase.SetLogUpdateGoal // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetLogItemOverFlow(struct FString ItemName); // Function BattlePrototype.RSHUDBase.SetLogItemOverFlow // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetLogGetMoneyFromNative(int32_t GetMoney); // Function BattlePrototype.RSHUDBase.SetLogGetMoneyFromNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetLogGetItem(struct FString ItemName, int32_t itemNum); // Function BattlePrototype.RSHUDBase.SetLogGetItem // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetLogBrainFieldAddTime(); // Function BattlePrototype.RSHUDBase.SetLogBrainFieldAddTime // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetGuideVisibleSysMess(bool isGuide); // Function BattlePrototype.RSHUDBase.SetGuideVisibleSysMess // (Final|Native|Public|BlueprintCallable) // @ game+0x12cacf0
	void SetEnablePartyMenu(bool enableFlag); // Function BattlePrototype.RSHUDBase.SetEnablePartyMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12cac70
	void setDebugWorldmapUnlockFlag(bool UnlockFlag); // Function BattlePrototype.RSHUDBase.setDebugWorldmapUnlockFlag // (Final|Native|Public|BlueprintCallable) // @ game+0xad5970
	void setDebugSaveLoadMenuSetting(int32_t settingIndex); // Function BattlePrototype.RSHUDBase.setDebugSaveLoadMenuSetting // (Final|Native|Public|BlueprintCallable) // @ game+0xad5970
	void setDebugMinimapAreaSetting(struct FString settingAreaName); // Function BattlePrototype.RSHUDBase.setDebugMinimapAreaSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x116a560
	void setDebugKeyboard(bool IsEnable); // Function BattlePrototype.RSHUDBase.setDebugKeyboard // (Final|Native|Public|BlueprintCallable) // @ game+0xad5970
	void SetDebugDispUserTag(bool dispflag); // Function BattlePrototype.RSHUDBase.SetDebugDispUserTag // (Final|Native|Public|BlueprintCallable) // @ game+0xad5970
	void SetCustomTimeDilation_FromNative(struct FString Name, float CurrentCustomTimeDilation); // Function BattlePrototype.RSHUDBase.SetCustomTimeDilation_FromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetBrainMessageDefaultThread(struct FName ThreadTitle); // Function BattlePrototype.RSHUDBase.SetBrainMessageDefaultThread // (Final|Native|Public|BlueprintCallable) // @ game+0x12caa70
	void SetBrainMapCursorSpeed(float Speed); // Function BattlePrototype.RSHUDBase.SetBrainMapCursorSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca9a0
	void SetBrainMapCursorCorrectSpeed(float Speed); // Function BattlePrototype.RSHUDBase.SetBrainMapCursorCorrectSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca8d0
	void SetBrainMapCursorCorrectArea(float Area); // Function BattlePrototype.RSHUDBase.SetBrainMapCursorCorrectArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca800
	void SetBPUnFoucusMouse(); // Function BattlePrototype.RSHUDBase.SetBPUnFoucusMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca7e0
	void SetBPFoucusMouse(); // Function BattlePrototype.RSHUDBase.SetBPFoucusMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca7c0
	void SasSetChangePageReady(bool ReadyFlagL, bool ReadyFlagR); // Function BattlePrototype.RSHUDBase.SasSetChangePageReady // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca390
	void ResumeTutoOperation(); // Function BattlePrototype.RSHUDBase.ResumeTutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca370
	void RestrictOpenTips(bool bRestrict, struct FName ClaimantName); // Function BattlePrototype.RSHUDBase.RestrictOpenTips // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca2b0
	void RestrictOpenMenu(bool bRestrict, struct FName ClaimantName); // Function BattlePrototype.RSHUDBase.RestrictOpenMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca1f0
	void ResetWeaponMenuDefaultCursor(); // Function BattlePrototype.RSHUDBase.ResetWeaponMenuDefaultCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca1c0
	void ResetCustomTimeDilationAccelerateInValidSettings(); // Function BattlePrototype.RSHUDBase.ResetCustomTimeDilationAccelerateInValidSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca1a0
	void RemoveFromManageWidget(struct UUIBase* Widget); // Function BattlePrototype.RSHUDBase.RemoveFromManageWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca120
	void RemoveDiscoverIndexList(int32_t Index); // Function BattlePrototype.RSHUDBase.RemoveDiscoverIndexList // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca0a0
	void RemoveCustomTimeDilation_FromNative(struct FString Name); // Function BattlePrototype.RSHUDBase.RemoveCustomTimeDilation_FromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool RemoveActionIcon(struct UUIActionIcon* ActionIcon); // Function BattlePrototype.RSHUDBase.RemoveActionIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ProcBattleMenu(); // Function BattlePrototype.RSHUDBase.ProcBattleMenu // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlayDecideAnimeBrainTuto(); // Function BattlePrototype.RSHUDBase.PlayDecideAnimeBrainTuto // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca070
	void PauseTutoOperation(); // Function BattlePrototype.RSHUDBase.PauseTutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca050
	void PauseBrainTalkForEventFromNative(bool IsPause); // Function BattlePrototype.RSHUDBase.PauseBrainTalkForEventFromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void OpenWorldMap(); // Function BattlePrototype.RSHUDBase.OpenWorldMap // (Final|Native|Public|BlueprintCallable) // @ game+0x12ca030
	void OpenSystemMessage(struct FString SystemMessage, bool isWarning, bool isGuide, bool IsFade); // Function BattlePrototype.RSHUDBase.OpenSystemMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9e80
	bool OpenStartSubQuest(struct FName SubQuestID); // Function BattlePrototype.RSHUDBase.OpenStartSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9df0
	bool OpenStartBondsQuest(struct FName bondsQuestId); // Function BattlePrototype.RSHUDBase.OpenStartBondsQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9d60
	void OpenScarletLogo(); // Function BattlePrototype.RSHUDBase.OpenScarletLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9d40
	bool OpenMinimap(bool Force); // Function BattlePrototype.RSHUDBase.OpenMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9cb0
	bool OpenBrainTuto(); // Function BattlePrototype.RSHUDBase.OpenBrainTuto // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9c80
	void OpenBrainTalkFromNative(int32_t characterId, int32_t ExpressionID, struct FString messageID, float DrawSecond); // Function BattlePrototype.RSHUDBase.OpenBrainTalkFromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool OnTitleBack(); // Function BattlePrototype.RSHUDBase.OnTitleBack // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnInitialized(); // Function BattlePrototype.RSHUDBase.OnInitialized // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void OnAvoid(); // Function BattlePrototype.RSHUDBase.OnAvoid // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9c60
	bool NextBrainTalkMessage(int32_t Index); // Function BattlePrototype.RSHUDBase.NextBrainTalkMessage // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool MiniTipsSuccessStopDraw(); // Function BattlePrototype.RSHUDBase.MiniTipsSuccessStopDraw // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool MiniTipsSuccessStartDraw(); // Function BattlePrototype.RSHUDBase.MiniTipsSuccessStartDraw // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool MiniTipsStopDraw(enum class EHelpTutorial TipsID); // Function BattlePrototype.RSHUDBase.MiniTipsStopDraw // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	float MiniTipsStartDraw(enum class EHelpTutorial TipsID); // Function BattlePrototype.RSHUDBase.MiniTipsStartDraw // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void LockInputSubMenu(); // Function BattlePrototype.RSHUDBase.LockInputSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9c40
	void LoadResidentWidget(); // Function BattlePrototype.RSHUDBase.LoadResidentWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9c20
	bool IsValidMessageVoiceToMessageBuffer(); // Function BattlePrototype.RSHUDBase.IsValidMessageVoiceToMessageBuffer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isTutoTips(); // Function BattlePrototype.RSHUDBase.isTutoTips // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce530
	bool isTutoOperation(); // Function BattlePrototype.RSHUDBase.isTutoOperation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsTDebugInvisibleAll(); // Function BattlePrototype.RSHUDBase.IsTDebugInvisibleAll // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11b48c0
	bool isSavedSaveLoadMenuError(); // Function BattlePrototype.RSHUDBase.isSavedSaveLoadMenuError // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b48c0
	bool isSavedSaveLoadMenu(); // Function BattlePrototype.RSHUDBase.isSavedSaveLoadMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ce500
	bool IsPlaySasWindowNative(); // Function BattlePrototype.RSHUDBase.IsPlaySasWindowNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPlayMessageOpenAnimationNative(); // Function BattlePrototype.RSHUDBase.IsPlayMessageOpenAnimationNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool isPlayBrainTuto(); // Function BattlePrototype.RSHUDBase.isPlayBrainTuto // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ce4d0
	bool IsPartyMenuViewerMode(); // Function BattlePrototype.RSHUDBase.IsPartyMenuViewerMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9b30
	bool isOutGameHudMain(); // Function BattlePrototype.RSHUDBase.isOutGameHudMain // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce4a0
	bool isOpenSubMenu(); // Function BattlePrototype.RSHUDBase.isOpenSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce470
	bool IsOpenLoadingUI(); // Function BattlePrototype.RSHUDBase.IsOpenLoadingUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsLogMessageEmpty(); // Function BattlePrototype.RSHUDBase.IsLogMessageEmpty // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool islockInputSubMenu(); // Function BattlePrototype.RSHUDBase.islockInputSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce560
	void IsFoundCustomTimeDilationRegistName_FromNative(struct FString RegistName, bool isFound, float CurrentCustomTimeDilation); // Function BattlePrototype.RSHUDBase.IsFoundCustomTimeDilationRegistName_FromNative // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	bool isFoucusMouse(); // Function BattlePrototype.RSHUDBase.isFoucusMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce440
	bool IsFadeAnimation(); // Function BattlePrototype.RSHUDBase.IsFadeAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9a30
	bool IsFade(); // Function BattlePrototype.RSHUDBase.IsFade // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9a00
	bool IsEventFinishWaitMode_AfterCounter(); // Function BattlePrototype.RSHUDBase.IsEventFinishWaitMode_AfterCounter // (Final|Native|Public|BlueprintCallable) // @ game+0x12c99d0
	bool isEndSystemMessage(); // Function BattlePrototype.RSHUDBase.isEndSystemMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce410
	bool IsEndSubMenu(enum class ESubMenuType SubMenuType); // Function BattlePrototype.RSHUDBase.IsEndSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9940
	bool IsEndStaffRoll(); // Function BattlePrototype.RSHUDBase.IsEndStaffRoll // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9910
	bool isEndKeyword(); // Function BattlePrototype.RSHUDBase.isEndKeyword // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsEndGeneralChoice(); // Function BattlePrototype.RSHUDBase.IsEndGeneralChoice // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c98e0
	bool IsEndGameOverFromNative(); // Function BattlePrototype.RSHUDBase.IsEndGameOverFromNative // (Final|Native|Public|BlueprintCallable) // @ game+0x12c98b0
	bool isEndCode(); // Function BattlePrototype.RSHUDBase.isEndCode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ce3e0
	bool IsEnableOpenTips(); // Function BattlePrototype.RSHUDBase.IsEnableOpenTips // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsEnableOpenMenu(); // Function BattlePrototype.RSHUDBase.IsEnableOpenMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsDrawMiniTipsSuccess(); // Function BattlePrototype.RSHUDBase.IsDrawMiniTipsSuccess // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsDrawMessageGuide(); // Function BattlePrototype.RSHUDBase.IsDrawMessageGuide // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsCustomTimeDilationAccelerate(float CurrentCustomTimeDilation); // Function BattlePrototype.RSHUDBase.IsCustomTimeDilationAccelerate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12c9800
	bool IsCurrentMessageWithVoice(); // Function BattlePrototype.RSHUDBase.IsCurrentMessageWithVoice // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsCurrentMessageWithChoices(); // Function BattlePrototype.RSHUDBase.IsCurrentMessageWithChoices // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isChangedIconDeviceType(); // Function BattlePrototype.RSHUDBase.isChangedIconDeviceType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ce3c0
	bool isCancelKeyword(); // Function BattlePrototype.RSHUDBase.isCancelKeyword // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsCancelGeneralChoice(); // Function BattlePrototype.RSHUDBase.IsCancelGeneralChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x12c97d0
	bool isCanceledCode(); // Function BattlePrototype.RSHUDBase.isCanceledCode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ce390
	bool IsBrainTalkFinishedWait(); // Function BattlePrototype.RSHUDBase.IsBrainTalkFinishedWait // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsBrainField(); // Function BattlePrototype.RSHUDBase.IsBrainField // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsBattleMenuInitialized(); // Function BattlePrototype.RSHUDBase.IsBattleMenuInitialized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9720
	void initMouseCursor(); // Function BattlePrototype.RSHUDBase.initMouseCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce370
	void InitFade(); // Function BattlePrototype.RSHUDBase.InitFade // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9700
	void initCreateScarletLogo(); // Function BattlePrototype.RSHUDBase.initCreateScarletLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce350
	bool Init(); // Function BattlePrototype.RSHUDBase.Init // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FString getResultKeyword(); // Function BattlePrototype.RSHUDBase.getResultKeyword // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FName getResultCode(); // Function BattlePrototype.RSHUDBase.getResultCode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ce310
	bool GetReserveShopMenu(); // Function BattlePrototype.RSHUDBase.GetReserveShopMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c9420
	bool GetOverlapEventInvalidFlag(); // Function BattlePrototype.RSHUDBase.GetOverlapEventInvalidFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12c92f0
	bool GetMouseDispRectangle(); // Function BattlePrototype.RSHUDBase.GetMouseDispRectangle // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool GetMouseDispIcon(); // Function BattlePrototype.RSHUDBase.GetMouseDispIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x1228190
	struct URSAtomComponentBase* GetMessageVoice(); // Function BattlePrototype.RSHUDBase.GetMessageVoice // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetLastChoiceResult(int32_t Result); // Function BattlePrototype.RSHUDBase.GetLastChoiceResult // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	int32_t GetInputLevel(); // Function BattlePrototype.RSHUDBase.GetInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x12c92d0
	enum class EInputDeviceType getIconDeviceType(); // Function BattlePrototype.RSHUDBase.getIconDeviceType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ce2f0
	int32_t GetGeneralChoiceResult(); // Function BattlePrototype.RSHUDBase.GetGeneralChoiceResult // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12c92a0
	bool GetEnablePartyMenu(); // Function BattlePrototype.RSHUDBase.GetEnablePartyMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12c9280
	bool getDebugWorldmapUnlockFlag(); // Function BattlePrototype.RSHUDBase.getDebugWorldmapUnlockFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xad4510
	struct FVector2D GetDebugViewportSize(); // Function BattlePrototype.RSHUDBase.GetDebugViewportSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12c9240
	int32_t getDebugSaveLoadMenuSetting(); // Function BattlePrototype.RSHUDBase.getDebugSaveLoadMenuSetting // (Final|Native|Public|BlueprintCallable) // @ game+0xcdd570
	bool getDebugMinimapTraceTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapTraceTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapMaterialTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapMaterialTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapIconUpdateAdjust(); // Function BattlePrototype.RSHUDBase.getDebugMinimapIconUpdateAdjust // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapIconTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapIconTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapIconNpcTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapIconNpcTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapIconFootTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapIconFootTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapIconEnemyTickDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapIconEnemyTickDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool getDebugMinimapCreateMapDisable(); // Function BattlePrototype.RSHUDBase.getDebugMinimapCreateMapDisable // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	struct FString getDebugMinimapAreaSetting(); // Function BattlePrototype.RSHUDBase.getDebugMinimapAreaSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x12ce2a0
	bool getDebugKeyboard(); // Function BattlePrototype.RSHUDBase.getDebugKeyboard // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xad4510
	struct UObject* getDebugDrawClass(); // Function BattlePrototype.RSHUDBase.getDebugDrawClass // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ce280
	bool GetDebugDispUserTag(); // Function BattlePrototype.RSHUDBase.GetDebugDispUserTag // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	void GetChoiceResult(int32_t MessageIndex, int32_t Result); // Function BattlePrototype.RSHUDBase.GetChoiceResult // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	float GetBrainMapCursorSpeed(); // Function BattlePrototype.RSHUDBase.GetBrainMapCursorSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9080
	float GetBrainMapCursorCorrectSpeed(); // Function BattlePrototype.RSHUDBase.GetBrainMapCursorCorrectSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8ff0
	float GetBrainMapCursorCorrectArea(); // Function BattlePrototype.RSHUDBase.GetBrainMapCursorCorrectArea // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c8f60
	struct FVector2D GetAnalogStickR(struct UUIBase* Widget); // Function BattlePrototype.RSHUDBase.GetAnalogStickR // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12c8ed0
	struct FVector2D GetAnalogStickL(struct UUIBase* Widget); // Function BattlePrototype.RSHUDBase.GetAnalogStickL // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12c8e40
	void ForceEndGeneralChoice(); // Function BattlePrototype.RSHUDBase.ForceEndGeneralChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8e20
	void FadeOutWhite(bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeOutWhite // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8d50
	void FadeOutFreeColor(struct FLinearColor Color, bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeOutFreeColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c8c40
	void FadeOutDefineColor(enum class EUIFadeColorType Color, bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeOutDefineColor // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8b30
	void FadeOutBlack(bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeOutBlack // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8a60
	void FadeInWhite(bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeInWhite // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8990
	void FadeInFreeColor(struct FLinearColor Color, bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeInFreeColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12c8880
	void FadeInDefineColor(enum class EUIFadeColorType Color, bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeInDefineColor // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8770
	void FadeInBlack(bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeInBlack // (Final|Native|Public|BlueprintCallable) // @ game+0x12c86a0
	void FadeIn(bool isUnderCaption, float second); // Function BattlePrototype.RSHUDBase.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x12c85d0
	void EndSubMenu(); // Function BattlePrototype.RSHUDBase.EndSubMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x12c85b0
	void EndStaffRoll(); // Function BattlePrototype.RSHUDBase.EndStaffRoll // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8590
	bool EndMinimapBrainField(); // Function BattlePrototype.RSHUDBase.EndMinimapBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t DrawMessage(struct FString Talker, struct FString Message, int32_t windowType, float DrawSecond, bool isEnableSkip, struct URSAtomComponentBase* Voice, bool isSkipVoiceEnd); // Function BattlePrototype.RSHUDBase.DrawMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t DrawChoiceMessage(int32_t ChoiceNum, struct FString Choice0, struct FString Choice1, struct FString Choice2, struct FString Choice3, struct FString Choice4, int32_t DefaultIndex, int32_t CancelIndex, float DrawSecond, bool isEnableCancel); // Function BattlePrototype.RSHUDBase.DrawChoiceMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void DebugDrawInvalidationWidget(); // Function BattlePrototype.RSHUDBase.DebugDrawInvalidationWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void DebugChangeVisible(bool visibleflag); // Function BattlePrototype.RSHUDBase.DebugChangeVisible // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void DEBUG_PRINT(struct FText Message, float posX, float posY, struct FLinearColor Color, struct FVector2D Scale); // Function BattlePrototype.RSHUDBase.DEBUG_PRINT // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12c8390
	bool CloseTutoTips(); // Function BattlePrototype.RSHUDBase.CloseTutoTips // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8360
	bool CloseTutoOperation(); // Function BattlePrototype.RSHUDBase.CloseTutoOperation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CloseSystemMessage(); // Function BattlePrototype.RSHUDBase.CloseSystemMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8340
	bool CloseStartSubQuest(struct FName SubQuestID); // Function BattlePrototype.RSHUDBase.CloseStartSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x12c82b0
	bool CloseStartBondsQuest(struct FName bondsQuestId); // Function BattlePrototype.RSHUDBase.CloseStartBondsQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8220
	void CloseScarletLogo(); // Function BattlePrototype.RSHUDBase.CloseScarletLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8200
	bool CloseMinimap(bool Force); // Function BattlePrototype.RSHUDBase.CloseMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8170
	bool CloseMessageGuide(); // Function BattlePrototype.RSHUDBase.CloseMessageGuide // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CloseBrainTalkFromNative(); // Function BattlePrototype.RSHUDBase.CloseBrainTalkFromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	int32_t CheckSubQuestRewardResult(); // Function BattlePrototype.RSHUDBase.CheckSubQuestRewardResult // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8060
	bool CheckSubQuestReward(); // Function BattlePrototype.RSHUDBase.CheckSubQuestReward // (Final|Native|Public|BlueprintCallable) // @ game+0x12c8030
	void CheckInput(struct UUIBase* Widget, enum class EUIInputButton ButtonType, enum class EUIInputType InputType, bool IsInput); // Function BattlePrototype.RSHUDBase.CheckInput // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12c7ed0
	void CheckEndMessage(int32_t MessageIndex, bool IsEnd); // Function BattlePrototype.RSHUDBase.CheckEndMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool CheckEndChoiceMessage(); // Function BattlePrototype.RSHUDBase.CheckEndChoiceMessage // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void CheckEndAllMessage(bool IsEnd); // Function BattlePrototype.RSHUDBase.CheckEndAllMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void ChangeStaffRollSpeed(float Speed); // Function BattlePrototype.RSHUDBase.ChangeStaffRollSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x12c7d40
	bool ChangeSoundState(enum class ESoundState State); // Function BattlePrototype.RSHUDBase.ChangeSoundState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CanPlayCutScene_FromNative(bool IsTipsCheck); // Function BattlePrototype.RSHUDBase.CanPlayCutScene_FromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	struct UUIActionIcon* AddActionIcon(); // Function BattlePrototype.RSHUDBase.AddActionIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSInGameFlow
// Size: 0x248 (Inherited: 0x230)
struct ARSInGameFlow : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct URSGameInstance* _gameInstance; // 0x238(0x08)
	enum class EInGameFlowType _currentType; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)

	void SetCurrentFlowType(enum class EInGameFlowType Type); // Function BattlePrototype.RSInGameFlow.SetCurrentFlowType // (Final|Native|Protected|BlueprintCallable) // @ game+0x12d5ce0
	void Initialize(struct URSGameInstance* gameInst); // Function BattlePrototype.RSInGameFlow.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x11eda90
	enum class EInGameFlowType GetCurrentFlowType(); // Function BattlePrototype.RSInGameFlow.GetCurrentFlowType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1274c10
};

// Class BattlePrototype.InputManager
// Size: 0x4b8 (Inherited: 0x230)
struct AInputManager : ARSActorSystemBase {
	char pad_230[0x8]; // 0x230(0x08)
	enum class ERSGamepadLayoutType CurrentLayout; // 0x238(0x01)
	char pad_239[0x3]; // 0x239(0x03)
	float ThresholdStickAnalogToDigital; // 0x23c(0x04)
	bool IsCrossButtonDecide; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct FMulticastInlineDelegate KeyboardPressEvent; // 0x248(0x10)
	struct FMulticastInlineDelegate KeyboardReleasedEvent; // 0x258(0x10)
	struct FMulticastInlineDelegate ChangeInputTypeEvent; // 0x268(0x10)
	struct FMulticastInlineDelegate ChangeInputTypeWithMouseEvent; // 0x278(0x10)
	char pad_288[0x18]; // 0x288(0x18)
	float deltaMouseX; // 0x2a0(0x04)
	float deltaMouseY; // 0x2a4(0x04)
	bool bMouseControll; // 0x2a8(0x01)
	bool bPreMouseControll; // 0x2a9(0x01)
	char pad_2AA[0x2]; // 0x2aa(0x02)
	float RawRStickX; // 0x2ac(0x04)
	float RawRStickY; // 0x2b0(0x04)
	char pad_2B4[0x204]; // 0x2b4(0x204)

	void StopSimpleController(); // Function BattlePrototype.InputManager.StopSimpleController // (Final|Native|Public|BlueprintCallable) // @ game+0x12d6a10
	bool ShowVirtualKeyboard(struct FString text, struct FString HintText, int32_t KeyboardType); // Function BattlePrototype.InputManager.ShowVirtualKeyboard // (Final|Native|Public|BlueprintCallable) // @ game+0x12d6840
	void SetDisableChangeInputModeFlag(bool flg); // Function BattlePrototype.InputManager.SetDisableChangeInputModeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5ea0
	void SetDeltaMouseMoveRaw(float xDelta, float yDelta); // Function BattlePrototype.InputManager.SetDeltaMouseMoveRaw // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5de0
	void SetCurrentLayoutType(enum class ERSGamepadLayoutType layout); // Function BattlePrototype.InputManager.SetCurrentLayoutType // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5d60
	void ResetCurrentLayout(); // Function BattlePrototype.InputManager.ResetCurrentLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x12d53c0
	void OnReleaseAction(enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.OnReleaseAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5260
	void OnPressAction(enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.OnPressAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d51e0
	void OnMouseInputConvertAction(struct FKey Key, bool actflag); // Function BattlePrototype.InputManager.OnMouseInputConvertAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d50c0
	void OnInputMouseAxisAction(float Value, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.OnInputMouseAxisAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5000
	void OnInputAxisAction(float Value, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.OnInputAxisAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4f40
	void OnConfigedPadActionAndKey(enum class ERSGamepadInputName Pad, bool isPress, struct FKey Key); // Function BattlePrototype.InputManager.OnConfigedPadActionAndKey // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4dd0
	void OnConfigedPadAction(enum class ERSGamepadInputName Pad, bool isPress, bool IsDInput); // Function BattlePrototype.InputManager.OnConfigedPadAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4cc0
	void OnConfigedKeyboardAction(struct FKey Key, bool isPress); // Function BattlePrototype.InputManager.OnConfigedKeyboardAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4ba0
	void OnConfigedAxisAction(enum class ERSGamepadInputName Pad, float Value); // Function BattlePrototype.InputManager.OnConfigedAxisAction // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4ae0
	void MouseCursorOnOff(); // Function BattlePrototype.InputManager.MouseCursorOnOff // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsSteamInBigPictureMode(); // Function BattlePrototype.InputManager.IsSteamInBigPictureMode // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4ab0
	void IsScreenOutMouse(bool isOut); // Function BattlePrototype.InputManager.IsScreenOutMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4a20
	bool IsMouseInputRightStick(); // Function BattlePrototype.InputManager.IsMouseInputRightStick // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d49f0
	bool IsDInput(enum class ERSGamepadInputName InputName); // Function BattlePrototype.InputManager.IsDInput // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d4960
	void Initialize(); // Function BattlePrototype.InputManager.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4940
	struct FString GetVirtualKeyboardText(); // Function BattlePrototype.InputManager.GetVirtualKeyboardText // (Final|Native|Public|BlueprintCallable) // @ game+0x12d4820
	bool GetUseKey(enum class ERSGamepadInputName InputName, enum class ERSInputDeviceType useKey, enum class ERSGamepadInputName padInputName, struct FName keyInputName); // Function BattlePrototype.InputManager.GetUseKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d4460
	void GetRightStickAxisRawValue(float RStickX, float RStickY); // Function BattlePrototype.InputManager.GetRightStickAxisRawValue // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12d3360
	bool GetOnTrigger(enum class ERSGamepadLayoutType layout, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.GetOnTrigger // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d3290
	bool GetOnRepeatTrigger(enum class ERSGamepadLayoutType layout, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.GetOnRepeatTrigger // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d31c0
	bool GetOnPress(enum class ERSGamepadLayoutType layout, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.GetOnPress // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d30f0
	float GetMouseWheelAxisValue(enum class ERSGamepadLayoutType layout, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.GetMouseWheelAxisValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d3020
	struct FVector2D GetMouseMove(); // Function BattlePrototype.InputManager.GetMouseMove // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x129e1c0
	enum class EInputDeviceType GetInputDeviceType(); // Function BattlePrototype.InputManager.GetInputDeviceType // (Final|Native|Public|BlueprintCallable) // @ game+0x12d2730
	struct URSGamepadLayout* GetGamepadLayout(enum class ERSGamepadLayoutType layout); // Function BattlePrototype.InputManager.GetGamepadLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x12d26a0
	enum class ERSGamepadLayoutType GetCurrentLayoutType(); // Function BattlePrototype.InputManager.GetCurrentLayoutType // (Final|Native|Public|BlueprintCallable) // @ game+0x12d2400
	float GetAxisValue(enum class ERSGamepadLayoutType layout, enum class ERSGamepadInputName Pad); // Function BattlePrototype.InputManager.GetAxisValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12d2330
	void Finalize(); // Function BattlePrototype.InputManager.Finalize // (Final|Native|Public|BlueprintCallable) // @ game+0x12d2290
	void DetectionDeltaMouseMove(float xPos, float yPos); // Function BattlePrototype.InputManager.DetectionDeltaMouseMove // (Final|Native|Public|BlueprintCallable) // @ game+0x12d1ea0
};

// Class BattlePrototype.RSLevelSequenceActor
// Size: 0x2c0 (Inherited: 0x2c0)
struct ARSLevelSequenceActor : ALevelSequenceActor {

	void SetupParticleBinding(struct TArray<struct FMovieSceneObjectBindingID> BindingIDList, struct TArray<struct ASequencerParticle*> ParticleList); // Function BattlePrototype.RSLevelSequenceActor.SetupParticleBinding // (Final|Native|Public|BlueprintCallable) // @ game+0x12d66d0
	void SetShotSequence(struct UMovieSceneSequence* Sequence, struct FText ShotName); // Function BattlePrototype.RSLevelSequenceActor.SetShotSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x12d6490
	void SetPlaybackHead(); // Function BattlePrototype.RSLevelSequenceActor.SetPlaybackHead // (Final|Native|Public|BlueprintCallable) // @ game+0x12d6370
	float SetEventSkipEndTimeForEventName(struct FName SkipName, struct FName EventName, bool IsSuccess); // Function BattlePrototype.RSLevelSequenceActor.SetEventSkipEndTimeForEventName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d5f20
	void SetBindingByObject(struct FMovieSceneObjectBindingID Binding, struct TArray<struct UObject*> Objects, bool bAllowBindingsFromAsset); // Function BattlePrototype.RSLevelSequenceActor.SetBindingByObject // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d5b90
	void SetAnimationSlotNameToInString(struct FName SlotName, struct FString inString, struct FString ExclusionInString); // Function BattlePrototype.RSLevelSequenceActor.SetAnimationSlotNameToInString // (Final|Native|Public|BlueprintCallable) // @ game+0x12d59f0
	int32_t SetActiveFromShotName(struct FText ShotName, bool IsActive, bool IsContainName); // Function BattlePrototype.RSLevelSequenceActor.SetActiveFromShotName // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5860
	void SetActiveCameraCutSection(bool IsActive); // Function BattlePrototype.RSLevelSequenceActor.SetActiveCameraCutSection // (Final|Native|Public|BlueprintCallable) // @ game+0x12d57d0
	void RestartParticle(struct TArray<struct FMovieSceneObjectBindingID> BindingIDList, struct TArray<struct ASequencerParticle*> ParticleList); // Function BattlePrototype.RSLevelSequenceActor.RestartParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x12d5660
	void RemoveIsActiveSectionForShotName(struct FText ShotName); // Function BattlePrototype.RSLevelSequenceActor.RemoveIsActiveSectionForShotName // (Final|Native|Public|BlueprintCallable) // @ game+0x12d52e0
	void GetSequenceObjectBindingIDListFromClassAndMatchTexts(struct AActor* ObjClass, struct TArray<struct FText> PerfectMatchTexts, struct TArray<struct FText> SuffixTexts, struct TArray<struct FMovieSceneObjectBindingID> OutMatchBindingIDList, struct TArray<struct FString> OutMatchNameList, bool IsFind); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceObjectBindingIDListFromClassAndMatchTexts // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d41d0
	void GetSequenceObjectBindingIDListFromClass(struct AActor* ObjClass, struct TArray<struct FMovieSceneObjectBindingID> OutBindingIDList, struct TArray<struct FString> OutNameList, bool IsFind); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceObjectBindingIDListFromClass // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d4010
	void GetSequenceObjectBindingIDList(struct TArray<struct FText> ObjNames, struct TArray<struct FName> ObjTags, struct TArray<struct FMovieSceneObjectBindingID> OutBindingIDList, bool IsFind); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceObjectBindingIDList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d3dc0
	struct FMovieSceneObjectBindingID GetSequenceObjectBindingID(struct FText ObjName, struct TArray<struct FName> ObjTags, bool IsFind); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceObjectBindingID // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d3bd0
	void GetSequenceInSpawnedObjectList(struct TArray<struct UObject*> SpawnedObjects); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceInSpawnedObjectList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d3b20
	struct TArray<struct AActor*> GetSequenceInSpawnedActorListFromClass(struct AActor* ObjClass); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceInSpawnedActorListFromClass // (Final|Native|Public|BlueprintCallable) // @ game+0x12d3a40
	struct TArray<struct AActor*> GetSequenceInSpawnedActorList(); // Function BattlePrototype.RSLevelSequenceActor.GetSequenceInSpawnedActorList // (Final|Native|Public|BlueprintCallable) // @ game+0x12d39c0
	void ForceUpdate(float DeltaTime); // Function BattlePrototype.RSLevelSequenceActor.ForceUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x12d22b0
	void ChangeForceOwnerShipInnerSequenceFromTagNames(struct TArray<struct FName> TagNames); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipInnerSequenceFromTagNames // (Final|Native|Public|BlueprintCallable) // @ game+0x12d19b0
	void ChangeForceOwnerShipInnerSequenceFromBinding(struct TArray<struct FMovieSceneObjectBindingID> ObjBindings); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipInnerSequenceFromBinding // (Final|Native|Public|BlueprintCallable) // @ game+0x12d18c0
	void ChangeForceOwnerShipInnerSequenceALL(); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipInnerSequenceALL // (Final|Native|Public|BlueprintCallable) // @ game+0x12d18a0
	void ChangeForceOwnerShipInnerSequence(struct TArray<struct FText> ObjNames); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipInnerSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x12d1790
	void ChangeForceOwnerShipExternalFromTagNames(struct TArray<struct FName> TagNames); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipExternalFromTagNames // (Final|Native|Public|BlueprintCallable) // @ game+0x12d16b0
	void ChangeForceOwnerShipExternalFromBinding(struct TArray<struct FMovieSceneObjectBindingID> ObjBindings); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipExternalFromBinding // (Final|Native|Public|BlueprintCallable) // @ game+0x12d15c0
	void ChangeForceOwnerShipExternal(struct TArray<struct FText> ObjNames); // Function BattlePrototype.RSLevelSequenceActor.ChangeForceOwnerShipExternal // (Final|Native|Public|BlueprintCallable) // @ game+0x12d14b0
	void AddSpawnableTemplateTag(struct TArray<struct FName> AddTags); // Function BattlePrototype.RSLevelSequenceActor.AddSpawnableTemplateTag // (Final|Native|Public|BlueprintCallable) // @ game+0x12d0e80
};

// Class BattlePrototype.RSManaComponent
// Size: 0x250 (Inherited: 0x250)
struct URSManaComponent : UManaComponent {

	void StopMovie(); // Function BattlePrototype.RSManaComponent.StopMovie // (Final|Native|Public|BlueprintCallable) // @ game+0x12d69f0
	bool IsInitialized(); // Function BattlePrototype.RSManaComponent.IsInitialized // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0xae01e0
};

// Class BattlePrototype.RSMaterialLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSMaterialLibrary : UBlueprintFunctionLibrary {

	void UpdateMaterialPreSkinFacialNormalToSlotsNative(struct UObject* WorldContextObject, struct USkeletalMeshComponent* SkelMeshComp, bool bIsEvent, struct TArray<int32_t> MaterialSlots); // Function BattlePrototype.RSMaterialLibrary.UpdateMaterialPreSkinFacialNormalToSlotsNative // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d6a30
	bool SetVectorParameterByIndex(struct UMaterialInstanceDynamic* DynamicMaterial, int32_t ParameterIndex, struct FLinearColor Value); // Function BattlePrototype.RSMaterialLibrary.SetVectorParameterByIndex // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12d65c0
	bool SetScalarParameterByIndex(struct UMaterialInstanceDynamic* DynamicMaterial, int32_t ParameterIndex, float Value); // Function BattlePrototype.RSMaterialLibrary.SetScalarParameterByIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d6390
	void SetMeshMaterialOverrideParameters(struct UMeshComponent* Mesh, struct FMeshMaterialOverrideParameters OverrideParam, bool ClearParam); // Function BattlePrototype.RSMaterialLibrary.SetMeshMaterialOverrideParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d6190
	void SetMaterialOverrideParameters(struct UMaterialInstanceDynamic* MaterialInstanceDynamic, struct FMaterialOverrideParameters OutParam, bool ClearParam); // Function BattlePrototype.RSMaterialLibrary.SetMaterialOverrideParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d6030
	void ResetMIDScalarParameterValueFromDefault(struct TArray<struct UMeshComponent*> MeshComps, struct TArray<struct FName> ParameterNames); // Function BattlePrototype.RSMaterialLibrary.ResetMIDScalarParameterValueFromDefault // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d5520
	void ResetMIDScalarParameterValue(struct TArray<struct UMeshComponent*> MeshComps, struct TArray<struct FName> ParameterNames); // Function BattlePrototype.RSMaterialLibrary.ResetMIDScalarParameterValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d53e0
	bool GetVectorParameterIndex(struct UMaterialInstanceDynamic* DynamicMaterial, struct FName ParameterName, int32_t OutParameterIndex); // Function BattlePrototype.RSMaterialLibrary.GetVectorParameterIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d4700
	bool GetVectorParameterByIndex(struct UMaterialInstanceDynamic* DynamicMaterial, int32_t ParameterIndex, struct FLinearColor outValue); // Function BattlePrototype.RSMaterialLibrary.GetVectorParameterByIndex // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d45f0
	bool GetScalarParameterIndex(struct UMaterialInstanceDynamic* DynamicMaterial, struct FName ParameterName, int32_t OutParameterIndex); // Function BattlePrototype.RSMaterialLibrary.GetScalarParameterIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d38a0
	bool GetScalarParameterByIndex(struct UMaterialInstanceDynamic* DynamicMaterial, int32_t ParameterIndex, float outValue); // Function BattlePrototype.RSMaterialLibrary.GetScalarParameterByIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d37a0
	bool GetRsVectorParameterValue(struct UMaterialInstance* MaterialInstance, struct FName ParameterName, struct FLinearColor outValue); // Function BattlePrototype.RSMaterialLibrary.GetRsVectorParameterValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d3680
	bool GetRsTextureParameterValue(struct UMaterialInstance* MaterialInstance, struct FName ParameterName, struct UTexture2D* outValue); // Function BattlePrototype.RSMaterialLibrary.GetRsTextureParameterValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d3560
	bool GetRsScalarParameterValue(struct UMaterialInstance* MaterialInstance, struct FName ParameterName, float outValue); // Function BattlePrototype.RSMaterialLibrary.GetRsScalarParameterValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d3440
	void GetMeshMaterialOverrideParameters(struct UMeshComponent* Mesh, struct FMeshMaterialOverrideParameters OutParam); // Function BattlePrototype.RSMaterialLibrary.GetMeshMaterialOverrideParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2e90
	bool GetMaterialStaticSwitch(struct UMaterialInterface* Material, struct FName ParameterName, bool StaticSwitch); // Function BattlePrototype.RSMaterialLibrary.GetMaterialStaticSwitch // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2d70
	void GetMaterialOverrideParametersALLHierarchy(struct UMaterialInstance* MaterialInstance, struct FMaterialOverrideParameters OutParam); // Function BattlePrototype.RSMaterialLibrary.GetMaterialOverrideParametersALLHierarchy // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2c60
	void GetMaterialOverrideParameters(struct UMaterialInstance* MaterialInstance, struct FMaterialOverrideParameters OutParam); // Function BattlePrototype.RSMaterialLibrary.GetMaterialOverrideParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2b50
	bool GetMaterialInstanceParameterGroupName(struct UMaterialInstance* MaterialInstance, struct FMaterialParameterInfo ParameterInfo, struct FName OutGroup); // Function BattlePrototype.RSMaterialLibrary.GetMaterialInstanceParameterGroupName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2a20
	bool GetMaterialInstanceAllVectorParameterInfo(struct UMaterialInstance* MaterialInstance, struct TArray<struct FMaterialParameterInfo> Info); // Function BattlePrototype.RSMaterialLibrary.GetMaterialInstanceAllVectorParameterInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2930
	bool GetMaterialInstanceAllScalarParameterInfo(struct UMaterialInstance* MaterialInstance, struct TArray<struct FMaterialParameterInfo> Info); // Function BattlePrototype.RSMaterialLibrary.GetMaterialInstanceAllScalarParameterInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2840
	struct UMaterialInterface* GetMaterialFromPath(struct FString Path, bool Load); // Function BattlePrototype.RSMaterialLibrary.GetMaterialFromPath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d2760
	bool GetDefaultVectorParameterValue(struct UObject* WorldContextObject, struct UMaterialParameterCollection* Collection, struct FName ParameterName, struct FLinearColor ParameterValue); // Function BattlePrototype.RSMaterialLibrary.GetDefaultVectorParameterValue // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d2560
	bool GetDefaultScalarParameterValue(struct UObject* WorldContextObject, struct UMaterialParameterCollection* Collection, struct FName ParameterName, float ParameterValue); // Function BattlePrototype.RSMaterialLibrary.GetDefaultScalarParameterValue // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12d2420
	void EnableMaterialPreSkinFacialNormalNPCNative(struct UObject* WorldContextObject, struct ANpcSkeletalMeshActor* NPCActor, bool bEnabled, bool bIsEvent); // Function BattlePrototype.RSMaterialLibrary.EnableMaterialPreSkinFacialNormalNPCNative // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d2010
	void EnableMaterialPreSkinFacialNormalNative(struct UObject* WorldContextObject, struct USkeletalMeshComponent* SkelMeshComp, bool bEnabled, bool bIsEvent); // Function BattlePrototype.RSMaterialLibrary.EnableMaterialPreSkinFacialNormalNative // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d2150
	void DumpMaterialParameterCollection(struct UObject* WorldContextObject, struct UObject* Collection); // Function BattlePrototype.RSMaterialLibrary.DumpMaterialParameterCollection // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d1f60
	struct UMaterialInstanceDynamic* CopyNeonWireDepthParameterNative2(struct UObject* WorldContextObject, int32_t WireMaterialIndex, struct USkeletalMeshComponent* WireDepthComp, struct UMaterialInstanceDynamic* WireMaterial, struct USkeletalMeshComponent* TargetMeshComp, struct UMaterialInterface* HologramWireMaterial, struct UMaterialInterface* WireDepthMaterial, struct UMaterialInterface* HologramWireDepthMaterial); // Function BattlePrototype.RSMaterialLibrary.CopyNeonWireDepthParameterNative2 // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d1b00
	void CopyNeonWireDepthParameterNative(struct UObject* WorldContextObject, int32_t WireMaterialIndex, struct USkeletalMeshComponent* WireDepthComp, struct UMaterialInstanceDynamic* WireMaterial, struct USkeletalMeshComponent* TargetMeshComp); // Function BattlePrototype.RSMaterialLibrary.CopyNeonWireDepthParameterNative // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d1d30
	void ClearOverrideMaterials(struct UMeshComponent* Mesh); // Function BattlePrototype.RSMaterialLibrary.ClearOverrideMaterials // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d1a90
	void ChangeCharacterMaterial(struct UMeshComponent* MeshComp, struct UMaterialInterface* BodyMat, struct UMaterialInterface* BodyLUTMat, struct UMaterialInterface* EyeMat, struct UMaterialInterface* EyeLUTMat, struct UMaterialInterface* HairMat, struct UMaterialInterface* HairLUTMat, struct UMaterialInterface* SkinMat, struct UMaterialInterface* SkinLUTMat, struct UMaterialInterface* OutlineMat, struct UMaterialInterface* OutlineLUTMat, struct UMaterialInterface* MaskMat, struct UMaterialInterface* MaskLUTMat, struct UMaterialInterface* Wire0Mat, struct UMaterialInterface* Wire1Mat, struct UMaterialInterface* HologramMat, struct UMaterialInterface* OtherMat, struct UMaterialInterface* OtherLUTMat, struct TArray<struct UMaterialInterface*> BaseLUTMaterials); // Function BattlePrototype.RSMaterialLibrary.ChangeCharacterMaterial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12d0f60
};

// Class BattlePrototype.RSMaterialStaticMeshComponent
// Size: 0x4a0 (Inherited: 0x4a0)
struct URSMaterialStaticMeshComponent : UStaticMeshComponent {

	void SetupMaterial(); // Function BattlePrototype.RSMaterialStaticMeshComponent.SetupMaterial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetMaterialMeshVector(struct FName ParameterName, struct FLinearColor Value); // Function BattlePrototype.RSMaterialStaticMeshComponent.SetMaterialMeshVector // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12da970
	void SetMaterialMeshScalar(struct FName ParameterName, float Value); // Function BattlePrototype.RSMaterialStaticMeshComponent.SetMaterialMeshScalar // (Final|Native|Public|BlueprintCallable) // @ game+0x12da8a0
};

// Class BattlePrototype.RSMathFuncLib
// Size: 0x28 (Inherited: 0x28)
struct URSMathFuncLib : UBlueprintFunctionLibrary {

	struct FVector2D RandomLocationInCircle(float Radius, int32_t retrayMax); // Function BattlePrototype.RSMathFuncLib.RandomLocationInCircle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12d9e50
	float PointDistToLine(struct FVector Point, struct FVector Direction, struct FVector Origin, struct FVector OutClosestPoint); // Function BattlePrototype.RSMathFuncLib.PointDistToLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d9cc0
	bool LineBoxIntersection(struct FBox InBox, struct FVector Start, struct FVector End, struct FVector HitLocation, struct FVector HitNormal, float HitLength); // Function BattlePrototype.RSMathFuncLib.LineBoxIntersection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d99a0
	struct FVector ClosestPointOnLine(struct FVector LineStart, struct FVector LineEnd, struct FVector Point); // Function BattlePrototype.RSMathFuncLib.ClosestPointOnLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d90b0
	struct FVector ClosestPointOnInfiniteLine(struct FVector LineStart, struct FVector LineEnd, struct FVector Point); // Function BattlePrototype.RSMathFuncLib.ClosestPointOnInfiniteLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12d8f60
};

// Class BattlePrototype.RSMovieManager
// Size: 0x288 (Inherited: 0x230)
struct ARSMovieManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct TMap<struct UManaTexture*, int32_t> ReleaseManaTextures; // 0x238(0x50)

	void TextureRelease(); // Function BattlePrototype.RSMovieManager.TextureRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x12dc070
	void SetMovieTextureNative(struct UManaTexture* movieTexture, struct UMaterialInstanceDynamic* manaMaterial); // Function BattlePrototype.RSMovieManager.SetMovieTextureNative // (Final|Native|Public|BlueprintCallable) // @ game+0x12daa40
	void SetMovieTextureAndPrepare(struct UManaTexture* movieTexture); // Function BattlePrototype.RSMovieManager.SetMovieTextureAndPrepare // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetMoviePrepareSetting(); // Function BattlePrototype.RSMovieManager.SetMoviePrepareSetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetMovieImageTexture(struct UImage* Image); // Function BattlePrototype.RSMovieManager.SetMovieImageTexture // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetIndividualSetting(bool Flag); // Function BattlePrototype.RSMovieManager.SetIndividualSetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetManaComponentOtherNative(); // Function BattlePrototype.RSMovieManager.ResetManaComponentOtherNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ResetFlags(struct UManaTexture* mana); // Function BattlePrototype.RSMovieManager.ResetFlags // (Final|Native|Public|BlueprintCallable) // @ game+0x12d9fa0
	bool LoadMovieTexture(struct FString Path); // Function BattlePrototype.RSMovieManager.LoadMovieTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x12d9bf0
	enum class EManaComponentStatus GetStatusNative(); // Function BattlePrototype.RSMovieManager.GetStatusNative // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct UManaTexture* GetManaTextureNative(); // Function BattlePrototype.RSMovieManager.GetManaTextureNative // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d97a0
};

// Class BattlePrototype.RSNavLinkProxy
// Size: 0x280 (Inherited: 0x280)
struct ARSNavLinkProxy : ANavLinkProxy {
};

// Class BattlePrototype.RSNewStaticNodeActor
// Size: 0x230 (Inherited: 0x230)
struct ARSNewStaticNodeActor : AActor {
};

// Class BattlePrototype.RSNpcAnimInstance
// Size: 0x680 (Inherited: 0x620)
struct URSNpcAnimInstance : UASAnimInstance {
	bool IsNewTownPeople; // 0x620(0x01)
	char pad_621[0x7]; // 0x621(0x07)
	struct FString WaitMotionType; // 0x628(0x10)
	struct UASAnimationSet* AnimationSet; // 0x638(0x08)
	struct UAnimSequenceBase* FacialAnimation; // 0x640(0x08)
	enum class ENpcAnimationKind NpcAnimKind; // 0x648(0x01)
	bool IsLookAt; // 0x649(0x01)
	bool IsSit; // 0x64a(0x01)
	char pad_64B[0x1]; // 0x64b(0x01)
	struct FVector LookAtPoint; // 0x64c(0x0c)
	bool UseKawaiiPhysics; // 0x658(0x01)
	char pad_659[0x3]; // 0x659(0x03)
	float EyeXAxisValue; // 0x65c(0x04)
	float EyeYAxisValue; // 0x660(0x04)
	struct FRotator HeadRot; // 0x664(0x0c)
	float StartTime; // 0x670(0x04)
	char pad_674[0xc]; // 0x674(0x0c)

	void SetNpcIdleAnimation(struct UAnimSequenceBase* IdleAnimation); // Function BattlePrototype.RSNpcAnimInstance.SetNpcIdleAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x12dab00
	void SetIsLookAt(bool IsLookAt); // Function BattlePrototype.RSNpcAnimInstance.SetIsLookAt // (Final|Native|Public|BlueprintCallable) // @ game+0x12da790
	void SetAnimationForce(enum class ENpcAnimationKind AnimKind); // Function BattlePrototype.RSNpcAnimInstance.SetAnimationForce // (Native|Event|Public|BlueprintEvent) // @ game+0x12da170
	void SetAnimation(enum class ENpcAnimationKind AnimKind); // Function BattlePrototype.RSNpcAnimInstance.SetAnimation // (Native|Event|Public|BlueprintEvent) // @ game+0x12da0f0
	struct UAnimSequenceBase* GetAnimSequenceFromAnimationSet(struct FName Key); // Function BattlePrototype.RSNpcAnimInstance.GetAnimSequenceFromAnimationSet // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12d9200
};

// Class BattlePrototype.RSOutGameMode
// Size: 0x328 (Inherited: 0x328)
struct ARSOutGameMode : ARSGameModeBase {
};

// Class BattlePrototype.RSParallelObjectInterface
// Size: 0x28 (Inherited: 0x28)
struct URSParallelObjectInterface : UInterface {

	void PreParallelTick(); // Function BattlePrototype.RSParallelObjectInterface.PreParallelTick // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void PostParallelTick(); // Function BattlePrototype.RSParallelObjectInterface.PostParallelTick // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void ParallelTick(float DeltaTime); // Function BattlePrototype.RSParallelObjectInterface.ParallelTick // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsEnableParallelTick(); // Function BattlePrototype.RSParallelObjectInterface.IsEnableParallelTick // (Event|Public|BlueprintEvent) // @ game+0x1685580
	enum class ERSParallelTiming GetParallelTiming(); // Function BattlePrototype.RSParallelObjectInterface.GetParallelTiming // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSParallelObjectManageComponent
// Size: 0x128 (Inherited: 0xc0)
struct URSParallelObjectManageComponent : UActorComponent {
	struct TMap<enum class ERSParallelTiming, struct FParallelData> _ParallelTimingMap; // 0xc0(0x50)
	struct TArray<struct TWeakObjectPtr<struct UObject>> _ReserveUnregisterObjectArray; // 0x110(0x10)
	char pad_120[0x8]; // 0x120(0x08)
};

// Class BattlePrototype.RSParallelObjectManager
// Size: 0x248 (Inherited: 0x230)
struct ARSParallelObjectManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct URSParallelObjectManageComponent* _AfterPrePhysicsManageComponent; // 0x238(0x08)
	struct URSParallelObjectManageComponent* _AfterDuringPhysicsManageComponent; // 0x240(0x08)

	void UnregisterObject(struct UObject* Object); // Function BattlePrototype.RSParallelObjectManager.UnregisterObject // (Final|Native|Public|BlueprintCallable) // @ game+0x12dc090
	void SetSingleThread(bool bSet); // Function BattlePrototype.RSParallelObjectManager.SetSingleThread // (Final|Native|Public|BlueprintCallable) // @ game+0x12dab80
	bool RegisterObject(struct UObject* Object); // Function BattlePrototype.RSParallelObjectManager.RegisterObject // (Final|Native|Public|BlueprintCallable) // @ game+0x12d9f10
};

// Class BattlePrototype.RSParticleStatics
// Size: 0x28 (Inherited: 0x28)
struct URSParticleStatics : UBlueprintFunctionLibrary {

	void StartEmitterForSpawnedComponent(struct URSParticleSystemComponentBase* pPSC, struct UObject* WorldContextObject, struct UParticleSystem* EmitterTemplate, struct FVector SpawnLocation, struct FRotator SpawnRotation, struct FVector SpawnScale, bool isActiveSystem, struct UObject* Creator, enum class ESequencerDilationOwner DilationOwner); // Function BattlePrototype.RSParticleStatics.StartEmitterForSpawnedComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12dbdd0
	void SpawnEmitterAttachedNoReturnComponent(struct URSParticleSystemComponentBase* ComponentClass, struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, struct FVector Scale, enum class EAttachLocation LocationType, bool isActiveSystem, bool bAutoDestroy, struct UObject* Creator, bool bForceConnectWorld, struct URSParticleSystemComponentBase* pTurnUsePSC, enum class ESequencerDilationOwner DilationOwner); // Function BattlePrototype.RSParticleStatics.SpawnEmitterAttachedNoReturnComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12db9e0
	struct URSParticleSystemComponentBase* SpawnEmitterAttached(struct URSParticleSystemComponentBase* ComponentClass, struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, struct FVector Scale, enum class EAttachLocation LocationType, bool isActiveSystem, bool bAutoDestroy, struct UObject* Creator, bool bForceConnectWorld, struct URSParticleSystemComponentBase* pTurnUsePSC, bool bAttachLocationOnly, enum class ESequencerDilationOwner DilationOwner); // Function BattlePrototype.RSParticleStatics.SpawnEmitterAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12db5b0
	struct URSParticleSystemComponentBase* SpawnEmitterAtLocationOptional(struct UObject* WorldContextObject, struct URSParticleSystemComponentBase* ComponentClass, struct UParticleSystem* EmitterTemplate, struct TArray<struct FParticleSysParam> InstanceParameters, struct FVector Location, struct FRotator Rotation, struct FVector Scale, bool isActiveSystem, bool bAutoDestroy, struct UObject* Creator, enum class ESequencerDilationOwner DilationOwner); // Function BattlePrototype.RSParticleStatics.SpawnEmitterAtLocationOptional // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12db260
	void SpawnEmitterAtLocationNoReturnComponent(struct UObject* WorldContextObject, struct URSParticleSystemComponentBase* ComponentClass, struct UParticleSystem* EmitterTemplate, struct FVector Location, struct FRotator Rotation, struct FVector Scale, bool isActiveSystem, bool bAutoDestroy, struct UObject* Creator, enum class ESequencerDilationOwner DilationOwner); // Function BattlePrototype.RSParticleStatics.SpawnEmitterAtLocationNoReturnComponent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12daf70
	struct URSParticleSystemComponentBase* SpawnEmitterAtLocation(struct UObject* WorldContextObject, struct URSParticleSystemComponentBase* ComponentClass, struct UParticleSystem* EmitterTemplate, struct FVector Location, struct FRotator Rotation, struct FVector Scale, bool isActiveSystem, bool bAutoDestroy, struct UObject* Creator, enum class ESequencerDilationOwner DilationOwner); // Function BattlePrototype.RSParticleStatics.SpawnEmitterAtLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12dac80
	void SpawnEmitteDeactiveSystem(struct URSParticleSystemComponentBase* PSC); // Function BattlePrototype.RSParticleStatics.SpawnEmitteDeactiveSystem // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12dac10
};

// Class BattlePrototype.RSParticleSystemComponentBase
// Size: 0x6f0 (Inherited: 0x670)
struct URSParticleSystemComponentBase : UParticleSystemComponent {
	struct AActor* CreatorActor; // 0x668(0x08)
	float TrailTime; // 0x670(0x04)
	bool isApplyStageSetting; // 0x674(0x01)
	char pad_67D[0x73]; // 0x67d(0x73)

	bool UseStageSetting_Native(); // Function BattlePrototype.RSParticleSystemComponentBase.UseStageSetting_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x12dc140
	bool UseForceLOD(); // Function BattlePrototype.RSParticleSystemComponentBase.UseForceLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dc110
	void StopParticleImplements(); // Function BattlePrototype.RSParticleSystemComponentBase.StopParticleImplements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StopAndHideParticleImplements(); // Function BattlePrototype.RSParticleSystemComponentBase.StopAndHideParticleImplements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetLocalTimeDilation(float Dilation); // Function BattlePrototype.RSParticleSystemComponentBase.SetLocalTimeDilation // (Final|Native|Public|BlueprintCallable) // @ game+0x12da820
	void SetHideDebuggingInfoScreen(bool Hide); // Function BattlePrototype.RSParticleSystemComponentBase.SetHideDebuggingInfoScreen // (Final|Native|Public|BlueprintCallable) // @ game+0x12da700
	void SetForceLOD(int32_t InLODLevel); // Function BattlePrototype.RSParticleSystemComponentBase.SetForceLOD // (Final|Native|Public|BlueprintCallable) // @ game+0x12da680
	void SetEnableDistanceCulling(bool UseCulling); // Function BattlePrototype.RSParticleSystemComponentBase.SetEnableDistanceCulling // (Final|Native|Public|BlueprintCallable) // @ game+0x12da5f0
	void SetDilationOwner(enum class ESequencerDilationOwner InDilationOwner); // Function BattlePrototype.RSParticleSystemComponentBase.SetDilationOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x12da570
	void SetCulling(bool InCulling); // Function BattlePrototype.RSParticleSystemComponentBase.SetCulling // (Final|Native|Public|BlueprintCallable) // @ game+0x12da4e0
	void SetAttachedOption(bool InAttachLocationX, bool InAttachLocationY, bool InAttachLocationZ, bool InAttachRotationX, bool InAttachRotationY, bool InAttachRotationZ, bool InAttachScaleX, bool InAttachScaleY, bool InAttachScaleZ, enum class ERSParticleSystemAttachRotationOffMode InAttachRotationOffMode); // Function BattlePrototype.RSParticleSystemComponentBase.SetAttachedOption // (Final|Native|Public|BlueprintCallable) // @ game+0x12da1f0
	void SetAllEmitterEnable(bool bNewEnableState); // Function BattlePrototype.RSParticleSystemComponentBase.SetAllEmitterEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x12da060
	void RestartParticle(); // Function BattlePrototype.RSParticleSystemComponentBase.RestartParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x12da040
	void ResetParticleBP(); // Function BattlePrototype.RSParticleSystemComponentBase.ResetParticleBP // (Final|Native|Public|BlueprintCallable) // @ game+0x12da020
	void PlayParticleImplements(); // Function BattlePrototype.RSParticleSystemComponentBase.PlayParticleImplements // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PlayCheckFlags(); // Function BattlePrototype.RSParticleSystemComponentBase.PlayCheckFlags // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12d9ca0
	bool IsHideDebuggingInfoScreen(); // Function BattlePrototype.RSParticleSystemComponentBase.IsHideDebuggingInfoScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d9970
	bool IsEnableDistanceCulling(); // Function BattlePrototype.RSParticleSystemComponentBase.IsEnableDistanceCulling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d9940
	bool IsCulling(); // Function BattlePrototype.RSParticleSystemComponentBase.IsCulling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d9910
	bool IsAutoDestroy(); // Function BattlePrototype.RSParticleSystemComponentBase.IsAutoDestroy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d98e0
	void Initialize(); // Function BattlePrototype.RSParticleSystemComponentBase.Initialize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12d98c0
	bool HasTranslucencyOrAdditiveMaterial(); // Function BattlePrototype.RSParticleSystemComponentBase.HasTranslucencyOrAdditiveMaterial // (Native|Public|BlueprintCallable) // @ game+0x12d9890
	bool HasTranslucencyMaterial(); // Function BattlePrototype.RSParticleSystemComponentBase.HasTranslucencyMaterial // (Native|Public|BlueprintCallable) // @ game+0x12d9860
	int32_t GetMaterialIndexFromEmitterName(struct FName EmitterName); // Function BattlePrototype.RSParticleSystemComponentBase.GetMaterialIndexFromEmitterName // (Final|Native|Public|BlueprintCallable) // @ game+0x12d97d0
	int32_t GetForceLOD(); // Function BattlePrototype.RSParticleSystemComponentBase.GetForceLOD // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d9770
	struct FName GetEmitterName(int32_t Index); // Function BattlePrototype.RSParticleSystemComponentBase.GetEmitterName // (Final|Native|Public|BlueprintCallable) // @ game+0x12d96e0
	struct TArray<struct UMaterialInstanceDynamic*> GetDynamicMaterialInstanceALL(); // Function BattlePrototype.RSParticleSystemComponentBase.GetDynamicMaterialInstanceALL // (Native|Public|BlueprintCallable) // @ game+0x12d9660
	void GetAttachedOptionScale(bool OutAttachScaleX, bool OutAttachScaleY, bool OutAttachScaleZ); // Function BattlePrototype.RSParticleSystemComponentBase.GetAttachedOptionScale // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d9520
	void GetAttachedOptionRotation(bool OutAttachRotationX, bool OutAttachRotationY, bool OutAttachRotationZ); // Function BattlePrototype.RSParticleSystemComponentBase.GetAttachedOptionRotation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d93e0
	void GetAttachedOptionLocation(bool OutAttachLocationX, bool OutAttachLocationY, bool OutAttachLocationZ); // Function BattlePrototype.RSParticleSystemComponentBase.GetAttachedOptionLocation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x12d92a0
};

// Class BattlePrototype.RSParticleSystemManager
// Size: 0x2a20 (Inherited: 0x230)
struct ARSParticleSystemManager : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	struct UDataTable* FootStepDataTable; // 0x240(0x08)
	struct TMap<struct FName, struct UCharacterPhysicalSurfaceActionEffectResource*> MapFootStep; // 0x248(0x50)
	struct TMap<struct FName, struct FGeneralPhysicalSurfaceActionEffectResourceArray> MapGeneralPhysicalActions; // 0x298(0x50)
	struct TArray<struct URSParticleSystemComponentBase*> Components; // 0x2e8(0x10)
	struct TArray<struct FHitParticle> HitParticles; // 0x2f8(0x10)
	struct TArray<struct FDamageParticle> DamageParticles; // 0x308(0x10)
	struct TArray<struct FSpecialDamageParticle> SpecialDamageParticles; // 0x318(0x10)
	struct TArray<struct UParticleComponentListManager*> ParticleComponentListManagers; // 0x328(0x10)
	struct TMap<struct FString, struct UParticleComponentListManager*> m_AnimNotifyParticleCompListMngMap; // 0x338(0x50)
	float SeeThroughRate; // 0x388(0x04)
	char pad_38C[0x14]; // 0x38c(0x14)
	struct TArray<struct ACullDistanceEffectBackgroundVolume*> CullDistanceBGVolumes; // 0x3a0(0x10)
	float CullDistanceBG; // 0x3b0(0x04)
	char pad_3B4[0x2650]; // 0x3b4(0x2650)
	int32_t ManageHitEffectNum; // 0x2a04(0x04)
	bool bManageEffectStopEndTrail; // 0x2a08(0x01)
	char pad_2A09[0x7]; // 0x2a09(0x07)
	struct TArray<struct TWeakObjectPtr<struct URSParticleSystemComponentBase>> PlayHitEffectManageList; // 0x2a10(0x10)

	void UnregisterSeeThroughParticle(struct URSParticleSystemComponentBase* Particle); // Function BattlePrototype.RSParticleSystemManager.UnregisterSeeThroughParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x12deba0
	void UnregisterComponentAll(); // Function BattlePrototype.RSParticleSystemManager.UnregisterComponentAll // (Native|Public|BlueprintCallable) // @ game+0x11d9280
	void UnregisterComponent(struct URSParticleSystemComponentBase* Component); // Function BattlePrototype.RSParticleSystemManager.UnregisterComponent // (Native|Public|BlueprintCallable) // @ game+0x11d2520
	bool UnloadFootStep(struct FName nameId); // Function BattlePrototype.RSParticleSystemManager.UnloadFootStep // (Final|Native|Public|BlueprintCallable) // @ game+0x12deb10
	void StartCheckBackgroundCull(struct FVector CheckLocation, bool OneFrameUpdate); // Function BattlePrototype.RSParticleSystemManager.StartCheckBackgroundCull // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12dea30
	void SetSeeThroughRate(float Rate); // Function BattlePrototype.RSParticleSystemManager.SetSeeThroughRate // (Final|Native|Public|BlueprintCallable) // @ game+0x12de930
	void SetDebugBackgroundInformation(bool bDebug); // Function BattlePrototype.RSParticleSystemManager.SetDebugBackgroundInformation // (Final|Native|Public|BlueprintCallable) // @ game+0x12de5c0
	void SetBackgroundParameter(struct FParticleSystemBackGroundParameter Parameter); // Function BattlePrototype.RSParticleSystemManager.SetBackgroundParameter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12de3f0
	void ResetDebrisMaterial(struct UParticleSystemComponent* PSystem); // Function BattlePrototype.RSParticleSystemManager.ResetDebrisMaterial // (Final|Native|Public) // @ game+0x12de070
	void RemoveBackGroundParticle(struct URSParticleSystemComponentBase* EffectBG); // Function BattlePrototype.RSParticleSystemManager.RemoveBackGroundParticle // (Final|Native|Protected|BlueprintCallable) // @ game+0x12ddfd0
	void RegisterSeeThroughParticle(struct URSParticleSystemComponentBase* Particle); // Function BattlePrototype.RSParticleSystemManager.RegisterSeeThroughParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x12ddf50
	void RegisterComponent(struct URSParticleSystemComponentBase* Component); // Function BattlePrototype.RSParticleSystemManager.RegisterComponent // (Native|Public|BlueprintCallable) // @ game+0x12ddec0
	void PlayHitDamage(struct FHitDamageInfo Info); // Function BattlePrototype.RSParticleSystemManager.PlayHitDamage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12dda40
	void ParticleOnSystemFinished(struct UParticleSystemComponent* pPSC); // Function BattlePrototype.RSParticleSystemManager.ParticleOnSystemFinished // (Final|Native|Public) // @ game+0x12dd9c0
	struct UCharacterPhysicalSurfaceActionEffectResource* LoadFootStep(struct FName nameId); // Function BattlePrototype.RSParticleSystemManager.LoadFootStep // (Final|Native|Public|BlueprintCallable) // @ game+0x12dd910
	struct UParticleSystem* GetGeneralPhysicalSurfaceActionResource(enum class EGamePhysicalSurfaceType PhysicsType, struct FName ActionType); // Function BattlePrototype.RSParticleSystemManager.GetGeneralPhysicalSurfaceActionResource // (Final|Native|Public|BlueprintCallable) // @ game+0x12dd740
	void EventOnSystemFinishedSeeThroughParticle(struct UParticleSystemComponent* PSystem); // Function BattlePrototype.RSParticleSystemManager.EventOnSystemFinishedSeeThroughParticle // (Final|Native|Public) // @ game+0x12dd5e0
	void DumpManagedParticles(); // Function BattlePrototype.RSParticleSystemManager.DumpManagedParticles // (Final|Native|Public|BlueprintCallable|Const) // @ game+0x12dd5c0
	void DumpBackgroundCellList(); // Function BattlePrototype.RSParticleSystemManager.DumpBackgroundCellList // (Final|Native|Public|BlueprintCallable) // @ game+0x12dd5a0
	void DeactivateAllParticles(); // Function BattlePrototype.RSParticleSystemManager.DeactivateAllParticles // (Final|Native|Public|BlueprintCallable) // @ game+0x12dd580
	void CullEffectAtStaticEvent(struct FVector CameraLocation); // Function BattlePrototype.RSParticleSystemManager.CullEffectAtStaticEvent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12dd4f0
	void ClearBackGroundParticle(); // Function BattlePrototype.RSParticleSystemManager.ClearBackGroundParticle // (Final|Native|Protected|BlueprintCallable) // @ game+0x12dd4b0
	void AddBackGroundParticle(struct URSParticleSystemComponentBase* EffectBG); // Function BattlePrototype.RSParticleSystemManager.AddBackGroundParticle // (Final|Native|Protected|BlueprintCallable) // @ game+0x12dd430
	void ActivateAllParticles(bool isReset); // Function BattlePrototype.RSParticleSystemManager.ActivateAllParticles // (Final|Native|Public|BlueprintCallable) // @ game+0x12dd3a0
};

// Class BattlePrototype.RSParticleTrailSystemComponent
// Size: 0x710 (Inherited: 0x6f0)
struct URSParticleTrailSystemComponent : URSParticleSystemComponentBase {
	struct FName FirstSocketName; // 0x6e8(0x08)
	struct FName SecondSocketName; // 0x6f0(0x08)
	enum class ETrailWidthMode WidthScaleMode; // 0x6f8(0x01)
	float WidthScale; // 0x6fc(0x04)
	float FadeRate; // 0x700(0x04)
	struct FName FadeOutMaterialScalarName; // 0x704(0x08)
};

// Class BattlePrototype.RSPlayerAnimInstance
// Size: 0x820 (Inherited: 0x620)
struct URSPlayerAnimInstance : URSCharacterAnimInstance {
	enum class PlayerAnimKind RequestAnimKind; // 0x620(0x01)
	char pad_621[0x3]; // 0x621(0x03)
	int32_t RequestAnimParam; // 0x624(0x04)
	bool bSkipPhysics; // 0x628(0x01)
	bool bIgnoreSkipPhysics; // 0x629(0x01)
	char pad_62A[0x2]; // 0x62a(0x02)
	float LeftStickPower; // 0x62c(0x04)
	float LeftStickPrevDiff; // 0x630(0x04)
	enum class PlayerWalkRunStateKind WalkRunStateKind; // 0x634(0x01)
	char pad_635[0x3]; // 0x635(0x03)
	float WalkSpeed; // 0x638(0x04)
	float WalkDir; // 0x63c(0x04)
	bool bWalkStopAble; // 0x640(0x01)
	char pad_641[0x3]; // 0x641(0x03)
	struct FVector StepDirection; // 0x644(0x0c)
	enum class EPlayerAnimDir AnimParamDir; // 0x650(0x01)
	char pad_651[0x3]; // 0x651(0x03)
	struct FVector SprintBank; // 0x654(0x0c)
	struct FRotator HeadRot; // 0x660(0x0c)
	struct FRotator SpineAimRot; // 0x66c(0x0c)
	bool bUniquePsychicAimFlag; // 0x678(0x01)
	bool bBattling; // 0x679(0x01)
	bool bTalkMode; // 0x67a(0x01)
	bool bAjitoFlag; // 0x67b(0x01)
	bool bFlyingAnimation; // 0x67c(0x01)
	bool bUseCaptureBlend; // 0x67d(0x01)
	bool bCaptureBlendRateBack; // 0x67e(0x01)
	char pad_67F[0x1]; // 0x67f(0x01)
	float CaptureBlendRate; // 0x680(0x04)
	bool UseKawaiiPhysics; // 0x684(0x01)
	enum class RSCharaRestrictionState restrictionState; // 0x685(0x01)
	char pad_686[0x2]; // 0x686(0x02)
	struct FMulticastInlineDelegate DispatchChangeNowAnimKind; // 0x688(0x10)
	struct FMulticastInlineDelegate DispatchChangeWalkRunStateKind; // 0x698(0x10)
	struct FMulticastInlineDelegate DispatchMontageStarted; // 0x6a8(0x10)
	struct FMulticastInlineDelegate DispatchMontageBlendingOut; // 0x6b8(0x10)
	struct FMulticastInlineDelegate DispatchMontageEnded; // 0x6c8(0x10)
	struct FVector HandIK_Offset; // 0x6d8(0x0c)
	struct FVector CharacterIK_Offset; // 0x6e4(0x0c)
	float HandIK_Alpha; // 0x6f0(0x04)
	float RigidbodyAlpha; // 0x6f4(0x04)
	float RigidIdlingSec; // 0x6f8(0x04)
	float AnimDynamicsIdlingSec; // 0x6fc(0x04)
	float AddDamageBlendRate; // 0x700(0x04)
	bool bDispDebugLog; // 0x704(0x01)
	enum class PlayerAnimKind NowAnimKind; // 0x705(0x01)
	enum class PlayerAnimKind OldAnimKind; // 0x706(0x01)
	bool bSubstateLastMotion; // 0x707(0x01)
	struct FTimerHandle DelayTimerHandle; // 0x708(0x08)
	enum class PlayerAnimTransitionKind DelayTransition; // 0x710(0x01)
	char pad_711[0x3]; // 0x711(0x03)
	float fDelayActorDilation; // 0x714(0x04)
	float EyeHorizontal; // 0x718(0x04)
	float EyeVertical; // 0x71c(0x04)
	float EyeBlendRate; // 0x720(0x04)
	char pad_724[0x4]; // 0x724(0x04)
	struct TArray<struct FName> _bEnableEyeControl; // 0x728(0x10)
	float FloorCheckAngle; // 0x738(0x04)
	float FootIKFootInterpSpeed; // 0x73c(0x04)
	float FootIKFootInterpSpeedUnderGround; // 0x740(0x04)
	float FootIKFootInterpSpeedFloaingFoot; // 0x744(0x04)
	float FootIKFootInterpSpeedCheckGroundOffset; // 0x748(0x04)
	float FootIKMeshInterpSpeed; // 0x74c(0x04)
	float FootIKMeshFloatingInterpSpeed; // 0x750(0x04)
	float GroundCheckHeightTop; // 0x754(0x04)
	float GroundCheckHeightBottom; // 0x758(0x04)
	float MaxFootUpperHeight; // 0x75c(0x04)
	float MaxFootUpperHeightRun; // 0x760(0x04)
	float MaxFootUpperHeightSprint; // 0x764(0x04)
	float MaxFootUnderHeight; // 0x768(0x04)
	float MaxFootUnderHeightRun; // 0x76c(0x04)
	float MaxFootUnderHeightSprint; // 0x770(0x04)
	float MaxFootUnderHeightAjito; // 0x774(0x04)
	float MaxFootHeightDiff; // 0x778(0x04)
	float MaxFootHeightDiffSlopeUp; // 0x77c(0x04)
	float MaxFootHeightDiffSlopeDown; // 0x780(0x04)
	float IgnoreInterpFootRange; // 0x784(0x04)
	float FootIKBlendRate; // 0x788(0x04)
	struct FVector FootIKOffset_Left; // 0x78c(0x0c)
	struct FVector FootIKOffset_Right; // 0x798(0x0c)
	struct FVector FootIKJointTargetLocation_Left; // 0x7a4(0x0c)
	struct FVector FootIKJointTargetLocation_Right; // 0x7b0(0x0c)
	float _MeshOffset; // 0x7bc(0x04)
	char pad_7C0[0x60]; // 0x7c0(0x60)

	void SetWalkRunStateKind(enum class PlayerWalkRunStateKind kind); // Function BattlePrototype.RSPlayerAnimInstance.SetWalkRunStateKind // (Final|Native|Public|BlueprintCallable) // @ game+0x12de9b0
	void SetEyeControlParameter(float Horizontal, float Vertical); // Function BattlePrototype.RSPlayerAnimInstance.SetEyeControlParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12de870
	void SetEyeControlEnable(bool bEnable, struct FName ClaimantName); // Function BattlePrototype.RSPlayerAnimInstance.SetEyeControlEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x12de7b0
	void SetEnableFootIK(bool bEnable, float BlendTime); // Function BattlePrototype.RSPlayerAnimInstance.SetEnableFootIK // (Final|Native|Public|BlueprintCallable) // @ game+0x12de6e0
	void SetCaptureBlend(bool bUse, bool bBack, float BlendRate); // Function BattlePrototype.RSPlayerAnimInstance.SetCaptureBlend // (Final|Native|Public|BlueprintCallable) // @ game+0x12de4a0
	void SetAttackMaxFootUpperHeight(bool bUse, float Height, float SlopeDownHeight); // Function BattlePrototype.RSPlayerAnimInstance.SetAttackMaxFootUpperHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x12de2f0
	void SetAttackMaxFootUnderHeight(bool bUse, float Height, float SlopeDownHeight); // Function BattlePrototype.RSPlayerAnimInstance.SetAttackMaxFootUnderHeight // (Final|Native|Public|BlueprintCallable) // @ game+0x12de1f0
	void SetAttackFootHeightDiff(bool bUse, float Diff, float SlopeDownDiff); // Function BattlePrototype.RSPlayerAnimInstance.SetAttackFootHeightDiff // (Final|Native|Public|BlueprintCallable) // @ game+0x12de0f0
	void ReregistReceiveTransitionNotifyDelay(); // Function BattlePrototype.RSPlayerAnimInstance.ReregistReceiveTransitionNotifyDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x12de050
	void RecvOnMontageStarted(struct UAnimMontage* Montage); // Function BattlePrototype.RSPlayerAnimInstance.RecvOnMontageStarted // (Final|Native|Private) // @ game+0x12dde40
	void RecvOnMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.RSPlayerAnimInstance.RecvOnMontageEnded // (Final|Native|Private) // @ game+0x12ddd70
	void RecvOnMontageBlendingOut(struct UAnimMontage* Montage, bool bInterrupted); // Function BattlePrototype.RSPlayerAnimInstance.RecvOnMontageBlendingOut // (Final|Native|Private) // @ game+0x12ddca0
	void ReceiveTransitionNotifyDelay(enum class PlayerAnimTransitionKind Transition, float DelayTime); // Function BattlePrototype.RSPlayerAnimInstance.ReceiveTransitionNotifyDelay // (Final|Native|Public|BlueprintCallable) // @ game+0x12ddbe0
	void ReceiveTransitionNotify(enum class PlayerAnimTransitionKind Transition); // Function BattlePrototype.RSPlayerAnimInstance.ReceiveTransitionNotify // (Final|Native|Public|BlueprintCallable) // @ game+0x12ddb60
	void OnChangeAnimKind(); // Function BattlePrototype.RSPlayerAnimInstance.OnChangeAnimKind // (Final|Native|Protected|BlueprintCallable) // @ game+0x12dd9a0
	bool IsRequestKind(enum class PlayerAnimKind kind); // Function BattlePrototype.RSPlayerAnimInstance.IsRequestKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dd880
	bool IsExistRequest(); // Function BattlePrototype.RSPlayerAnimInstance.IsExistRequest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dd850
	bool IsCheckIdle(); // Function BattlePrototype.RSPlayerAnimInstance.IsCheckIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dd820
	enum class PlayerAnimKind GetNowAnimKind(); // Function BattlePrototype.RSPlayerAnimInstance.GetNowAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12dd800
	void GetFootIKGroundLocation(struct FVector OutFootLeft, struct FVector OutFootRight); // Function BattlePrototype.RSPlayerAnimInstance.GetFootIKGroundLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12dd660
};

// Class BattlePrototype.RSPlayerCameraManager
// Size: 0x34d0 (Inherited: 0x34d0)
struct ARSPlayerCameraManager : APlayerCameraManager {

	void ClearCameraShakeCache(); // Function BattlePrototype.RSPlayerCameraManager.ClearCameraShakeCache // (Final|Native|Public|BlueprintCallable) // @ game+0x12dd4d0
};

// Class BattlePrototype.RSPlayerController
// Size: 0x5a0 (Inherited: 0x598)
struct ARSPlayerController : APlayerController {
	char pad_598[0x8]; // 0x598(0x08)

	void SetDisableForceFeedback(bool bDisable); // Function BattlePrototype.RSPlayerController.SetDisableForceFeedback // (Final|Native|Public|BlueprintCallable) // @ game+0x12de650
};

// Class BattlePrototype.RSPlayerHologramAnimInstance
// Size: 0x2a0 (Inherited: 0x270)
struct URSPlayerHologramAnimInstance : UAnimInstance {
	char pad_270[0x8]; // 0x270(0x08)
	bool _bUseMontage; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	struct FRotator SpineAimRot; // 0x27c(0x0c)
	bool bUseWeaponRoot; // 0x288(0x01)
	char pad_289[0x3]; // 0x289(0x03)
	struct FVector WeaponRootLocation; // 0x28c(0x0c)
	char pad_298[0x8]; // 0x298(0x08)
};

// Class BattlePrototype.RSPlayerHologramAnimInstanceInterface
// Size: 0x28 (Inherited: 0x28)
struct URSPlayerHologramAnimInstanceInterface : UInterface {

	void SetWeaponRootLocation(bool bUse, struct FVector Location); // Function BattlePrototype.RSPlayerHologramAnimInstanceInterface.SetWeaponRootLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x12e3120
	void SetUseMontage(bool bUse); // Function BattlePrototype.RSPlayerHologramAnimInstanceInterface.SetUseMontage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12e2f70
	void SetAimRotator(struct FRotator Rotator); // Function BattlePrototype.RSPlayerHologramAnimInstanceInterface.SetAimRotator // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x12e2520
	void RequestAnim(enum class EPlayerHologramAnimKind kind); // Function BattlePrototype.RSPlayerHologramAnimInstanceInterface.RequestAnim // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12e2260
	bool IsRequestAnimKind(enum class EPlayerHologramAnimKind kind); // Function BattlePrototype.RSPlayerHologramAnimInstanceInterface.IsRequestAnimKind // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12e1e20
};

// Class BattlePrototype.RSPlayerSubAnimInstance
// Size: 0x280 (Inherited: 0x270)
struct URSPlayerSubAnimInstance : UAnimInstance {
	float PhysicsAlpha; // 0x270(0x04)
	float PhysicsIdlingSec; // 0x274(0x04)
	bool bKawaiiPhysics; // 0x278(0x01)
	char pad_279[0x7]; // 0x279(0x07)
};

// Class BattlePrototype.RSSaveGame
// Size: 0xd0 (Inherited: 0x28)
struct URSSaveGame : UObject {
	struct URSGameInstance* m_gameInst; // 0x28(0x08)
	enum class ERSSaveGameSaveType m_saveType; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TMap<uint32_t, struct FSaveDataParameter> m_saveParam; // 0x38(0x50)
	uint32_t m_MasterVersion; // 0x88(0x04)
	char pad_8C[0x4]; // 0x8c(0x04)
	struct TArray<struct FSaveDataSlotBuffer> m_slotBufferList; // 0x90(0x10)
	struct FSaveDataSlotBuffer m_systemBuffer; // 0xa0(0x10)
	struct USaveLoadScreenParamManager* m_SaveLoadScreenParamManager; // 0xb0(0x08)
	enum class ERedSaveExistsResult m_SaveExistsResult; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct URSSaveGameInternal* m_pAsyncAutoSaveRSSaveGameInternal; // 0xc0(0x08)
	char pad_C8[0x8]; // 0xc8(0x08)

	bool SystemSave(); // Function BattlePrototype.RSSaveGame.SystemSave // (Final|Native|Public|BlueprintCallable) // @ game+0x12e3570
	bool SystemLoad(); // Function BattlePrototype.RSSaveGame.SystemLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x12e3490
	bool SystemDataDelete(int32_t slotNo, bool isFileDelete); // Function BattlePrototype.RSSaveGame.SystemDataDelete // (Final|Native|Public|BlueprintCallable) // @ game+0x12e33d0
	bool SaveRetryData(); // Function BattlePrototype.RSSaveGame.SaveRetryData // (Final|Native|Public|BlueprintCallable) // @ game+0x12e24f0
	bool SaveNormalOnly(int32_t dataNo); // Function BattlePrototype.RSSaveGame.SaveNormalOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2460
	bool Save(int32_t dataNo); // Function BattlePrototype.RSSaveGame.Save // (Final|Native|Public|BlueprintCallable) // @ game+0x12e22e0
	bool PreLoadNormalOnly(); // Function BattlePrototype.RSSaveGame.PreLoadNormalOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2110
	bool PreLoad(); // Function BattlePrototype.RSSaveGame.PreLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x12e20e0
	bool LoadTrial(); // Function BattlePrototype.RSSaveGame.LoadTrial // (Final|Native|Public|BlueprintCallable) // @ game+0x12e20b0
	bool LoadRetryData(); // Function BattlePrototype.RSSaveGame.LoadRetryData // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2080
	bool LoadNormalOnly(int32_t slotNo); // Function BattlePrototype.RSSaveGame.LoadNormalOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1ff0
	bool Load(int32_t slotNo); // Function BattlePrototype.RSSaveGame.Load // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1eb0
	bool IsExistSaveData(enum class ERSSaveGameSaveType Type); // Function BattlePrototype.RSSaveGame.IsExistSaveData // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1ca0
	void Initialize(struct URSGameInstance* gameInst, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGame.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1be0
	bool GetSaveLoadScreenParam(struct FSaveLoadScreenParam slotParam, int32_t slotNo); // Function BattlePrototype.RSSaveGame.GetSaveLoadScreenParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e1a00
	enum class ERedSaveExistsResult GetSaveExistsResult(); // Function BattlePrototype.RSSaveGame.GetSaveExistsResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1252320
	bool DeleteData(enum class ERSSaveGameSaveType Type, struct FString Filename, int32_t UserIndex); // Function BattlePrototype.RSSaveGame.DeleteData // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1840
	bool Delete(int32_t slotNo, bool isFileDelete); // Function BattlePrototype.RSSaveGame.Delete // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1780
	bool DebugTimeSave(); // Function BattlePrototype.RSSaveGame.DebugTimeSave // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1750
	bool DebugSave(int32_t dataNo); // Function BattlePrototype.RSSaveGame.DebugSave // (Final|Native|Public|BlueprintCallable) // @ game+0x12e16c0
	bool DebugLoad_DirectName(struct FString Filename); // Function BattlePrototype.RSSaveGame.DebugLoad_DirectName // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1610
	bool DebugLoad(int32_t dataNo); // Function BattlePrototype.RSSaveGame.DebugLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1580
	void Clear(); // Function BattlePrototype.RSSaveGame.Clear // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1450
	bool AutoSave(); // Function BattlePrototype.RSSaveGame.AutoSave // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1110
	bool AutoPreLoad(); // Function BattlePrototype.RSSaveGame.AutoPreLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1030
	bool AutoLoad(); // Function BattlePrototype.RSSaveGame.AutoLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0f50
	bool AutoDelete(int32_t slotNo, bool isFileDelete); // Function BattlePrototype.RSSaveGame.AutoDelete // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0e90
	bool AsyncAutoSave(); // Function BattlePrototype.RSSaveGame.AsyncAutoSave // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0e60
};

// Class BattlePrototype.RSSaveGameUtility
// Size: 0x28 (Inherited: 0x28)
struct URSSaveGameUtility : UBlueprintFunctionLibrary {

	void SystemSaveGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGameUtility.SystemSaveGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e35a0
	void SystemLoadGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGameUtility.SystemLoadGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e34c0
	void SaveGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager, int32_t no); // Function BattlePrototype.RSSaveGameUtility.SaveGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e2370
	void LoadGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGameUtility.LoadGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e1f40
	bool IsExistSaveData(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager, enum class ERSSaveGameSaveType Type); // Function BattlePrototype.RSSaveGameUtility.IsExistSaveData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e1d30
	bool CheckStorageSpace(struct UObject* WorldContextObject); // Function BattlePrototype.RSSaveGameUtility.CheckStorageSpace // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e13d0
	void AutoSaveGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGameUtility.AutoSaveGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e1140
	void AutoPreLoadGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGameUtility.AutoPreLoadGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e1060
	void AutoLoadGame(struct UObject* WorldContextObject, struct USaveLoadScreenParamManager* pSaveLoadScreenParamManager); // Function BattlePrototype.RSSaveGameUtility.AutoLoadGame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e0f80
};

// Class BattlePrototype.RSSaveGameInterface
// Size: 0x28 (Inherited: 0x28)
struct URSSaveGameInterface : UInterface {
};

// Class BattlePrototype.RSSaveGameInternal
// Size: 0x38 (Inherited: 0x28)
struct URSSaveGameInternal : USaveGame {
	struct TArray<char> buf; // 0x28(0x10)
};

// Class BattlePrototype.RSSceneCaptureComponent2D
// Size: 0xb40 (Inherited: 0xb30)
struct URSSceneCaptureComponent2D : USceneCaptureComponent2D {
	bool bUseTextureStreaming; // 0xb30(0x01)
	char pad_B31[0x3]; // 0xb31(0x03)
	float TextureStreamingBoostFactor; // 0xb34(0x04)
	bool bSeparateTranslucency; // 0xb38(0x01)
	char pad_B39[0x7]; // 0xb39(0x07)

	void SetUseTAA(bool UseTAA); // Function BattlePrototype.RSSceneCaptureComponent2D.SetUseTAA // (Final|Native|Public|BlueprintCallable) // @ game+0x12e3090
	void SetUseScreenPercentage(bool bShow); // Function BattlePrototype.RSSceneCaptureComponent2D.SetUseScreenPercentage // (Final|Native|Public|BlueprintCallable) // @ game+0x12e3000
	void SetShowSkeletalMeshes(bool bShow); // Function BattlePrototype.RSSceneCaptureComponent2D.SetShowSkeletalMeshes // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2ee0
	void SetShowDynamicShadows(bool bShow); // Function BattlePrototype.RSSceneCaptureComponent2D.SetShowDynamicShadows // (Final|Native|Public|BlueprintCallable) // @ game+0xad5cb0
	void DebugTest(); // Function BattlePrototype.RSSceneCaptureComponent2D.DebugTest // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ClearTemporary(); // Function BattlePrototype.RSSceneCaptureComponent2D.ClearTemporary // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1470
	void CaptureSceneSafe2Pass(); // Function BattlePrototype.RSSceneCaptureComponent2D.CaptureSceneSafe2Pass // (Native|Public|BlueprintCallable) // @ game+0x12e1390
	void CaptureSceneSafe(); // Function BattlePrototype.RSSceneCaptureComponent2D.CaptureSceneSafe // (Native|Public|BlueprintCallable) // @ game+0x12e13b0
	struct FMatrix CalcProjectionMatrix(float ScreenOffsetX, float ScreenOffsetY, float ScaleX, float ScaleY); // Function BattlePrototype.RSSceneCaptureComponent2D.CalcProjectionMatrix // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12e11f0
};

// Class BattlePrototype.RSSequencerComponent
// Size: 0x120 (Inherited: 0xc0)
struct URSSequencerComponent : UActorComponent {
	struct TMap<int32_t, struct URSSequencerValueBase*> MapValue; // 0xc0(0x50)
	struct TArray<int32_t> DelList; // 0x110(0x10)

	int32_t RegisterSequenceValue(struct FString HashName, struct URSSequencerValueBase* Value, bool Override); // Function BattlePrototype.RSSequencerComponent.RegisterSequenceValue // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12e2140
	struct URSSequencerValueBase* GetSequenceValue(int32_t ID); // Function BattlePrototype.RSSequencerComponent.GetSequenceValue // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1b50
	bool DestroySequenceValue(int32_t ID); // Function BattlePrototype.RSSequencerComponent.DestroySequenceValue // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12e1960
	int32_t ConvertNameToId(struct FString Name); // Function BattlePrototype.RSSequencerComponent.ConvertNameToId // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1490
	void AllDestroySequenceValue(); // Function BattlePrototype.RSSequencerComponent.AllDestroySequenceValue // (Final|Native|Public|BlueprintCallable) // @ game+0x12e0e40
};

// Class BattlePrototype.RSSequencerValueBase
// Size: 0x50 (Inherited: 0x28)
struct URSSequencerValueBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct UCurveFloat* Curve; // 0x30(0x08)
	struct URSSequencerComponent* SeqParent; // 0x38(0x08)
	char pad_40[0x10]; // 0x40(0x10)

	void StoreParameter(float Rate); // Function BattlePrototype.RSSequencerValueBase.StoreParameter // (Native|Event|Protected|BlueprintEvent) // @ game+0x12e3350
	void SetupTimer(float Time, struct UCurveFloat* CurveData, bool LoopFlag, bool AutoDestroyFlag); // Function BattlePrototype.RSSequencerValueBase.SetupTimer // (Final|Native|Protected|BlueprintCallable) // @ game+0x12e3200
	void SetSeqParent(struct URSSequencerComponent* Parent); // Function BattlePrototype.RSSequencerValueBase.SetSeqParent // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2e60
	bool IsLoop(); // Function BattlePrototype.RSSequencerValueBase.IsLoop // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1252660
	bool IsFinished(); // Function BattlePrototype.RSSequencerValueBase.IsFinished // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x8513b0
	struct URSSequencerComponent* GetSeqParent(); // Function BattlePrototype.RSSequencerValueBase.GetSeqParent // (Final|Native|Public|BlueprintCallable) // @ game+0x12e1b30
};

// Class BattlePrototype.RSSequencerValueAisac
// Size: 0x70 (Inherited: 0x50)
struct URSSequencerValueAisac : URSSequencerValueBase {
	struct UAtomComponent* Component; // 0x50(0x08)
	struct FString ParameterName; // 0x58(0x10)
	float StartValue; // 0x68(0x04)
	float EndValue; // 0x6c(0x04)

	void SetParameter(struct UAtomComponent* AtomComponent, struct FString Name, float Start, float End, float Timer); // Function BattlePrototype.RSSequencerValueAisac.SetParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e25b0
};

// Class BattlePrototype.RSSequencerValueMaterialScalarParameter
// Size: 0x68 (Inherited: 0x50)
struct URSSequencerValueMaterialScalarParameter : URSSequencerValueBase {
	struct UMeshComponent* Component; // 0x50(0x08)
	struct FName ParameterName; // 0x58(0x08)
	float StartValue; // 0x60(0x04)
	float EndValue; // 0x64(0x04)

	void SetParameter(struct UMeshComponent* MeshComponent, struct FName Name, float Start, float End, float Timer, struct UCurveFloat* CurveData, bool bLoop, bool bAutoDestroy); // Function BattlePrototype.RSSequencerValueMaterialScalarParameter.SetParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2980
};

// Class BattlePrototype.RSSequencerValueMaterialVectorParameter
// Size: 0x80 (Inherited: 0x50)
struct URSSequencerValueMaterialVectorParameter : URSSequencerValueBase {
	struct UMeshComponent* Component; // 0x50(0x08)
	struct FName ParameterName; // 0x58(0x08)
	struct FVector4 StartValue; // 0x60(0x10)
	struct FVector4 EndValue; // 0x70(0x10)

	void SetParameter(struct UMeshComponent* MeshComponent, struct FName Name, struct FVector4 Start, struct FVector4 End, float Timer, struct UCurveFloat* CurveData, bool bLoop, bool bAutoDestroy); // Function BattlePrototype.RSSequencerValueMaterialVectorParameter.SetParameter // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12e2bd0
};

// Class BattlePrototype.RSSequencerValueDebugging
// Size: 0x60 (Inherited: 0x50)
struct URSSequencerValueDebugging : URSSequencerValueBase {
	struct FString Name; // 0x50(0x10)

	void SetParameter(struct FString InName, float Timer, struct UCurveFloat* CurveData, bool LoopFlag, bool AutoDestroyFlag); // Function BattlePrototype.RSSequencerValueDebugging.SetParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e2780
};

// Class BattlePrototype.RSSequencerValueInterface
// Size: 0x28 (Inherited: 0x28)
struct URSSequencerValueInterface : UInterface {

	bool UpdateSequencer(float DeltaTime); // Function BattlePrototype.RSSequencerValueInterface.UpdateSequencer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12e9870
	void OnRegisterSequencer(); // Function BattlePrototype.RSSequencerValueInterface.OnRegisterSequencer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211ab0
	void OnDestroySequencer(); // Function BattlePrototype.RSSequencerValueInterface.OnDestroySequencer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1211a70
};

// Class BattlePrototype.RSSkeletalMeshMerger
// Size: 0x28 (Inherited: 0x28)
struct URSSkeletalMeshMerger : UBlueprintFunctionLibrary {

	struct USkeletalMesh* MergeSkeletalMeshes(struct FRSSkeletalMeshMergeParams Params); // Function BattlePrototype.RSSkeletalMeshMerger.MergeSkeletalMeshes // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12e7ea0
};

// Class BattlePrototype.RSSoundManager
// Size: 0x4d8 (Inherited: 0x230)
struct ARSSoundManager : AActor {
	char pad_230[0x10]; // 0x230(0x10)
	struct TArray<struct URSAtomComponentBase*> Components; // 0x240(0x10)
	struct TArray<struct URSAtomComponentBase*> DestroyReserveList; // 0x250(0x10)
	struct UDataTable* FootStepDataTable; // 0x260(0x08)
	struct TMap<struct FName, struct UCharacterPhysicalSurfaceActionSoundResource*> MapFootStep; // 0x268(0x50)
	struct TMap<struct FName, struct FGeneralPhysicalSurfaceActionSoundResourceArray> MapGeneralPhysicalActions; // 0x2b8(0x50)
	struct TArray<struct USoundAtomCue*> SoundEffectAttackPly; // 0x308(0x10)
	struct TArray<struct USoundAtomCue*> SoundEffectAttackEmnNormal; // 0x318(0x10)
	struct TArray<struct USoundAtomCue*> SoundEffectAttackEmnMetal; // 0x328(0x10)
	struct TArray<struct FSoundEffectAttribute> SoundEffectAttribute; // 0x338(0x10)
	struct TArray<struct FSoundEffectDamage> SoundEffectDamage; // 0x348(0x10)
	float HitSoundIntervalWork; // 0x358(0x04)
	float HitSoundInterval; // 0x35c(0x04)
	struct UCurveFloat* CurveBgmTransEffect; // 0x360(0x08)
	struct TArray<struct FLoopSeParam> LoopSeList; // 0x368(0x10)
	struct TArray<struct URSAtomComponentBase*> BgmList; // 0x378(0x10)
	struct USoundCueSheetManager* CueSheetManager; // 0x388(0x08)
	struct USoundPoolManager* PoolManager; // 0x390(0x08)
	struct TArray<struct TWeakObjectPtr<struct AActor>> SoundEmitterList; // 0x398(0x10)
	struct TArray<struct USoundAtomCueSheet*> LoadedVoiceSheet; // 0x3a8(0x10)
	struct FString BeforeStageName; // 0x3b8(0x10)
	struct TArray<struct FString> ScenarioVoiceCueSheetNames; // 0x3c8(0x10)
	struct TArray<struct FString> BondsVoiceCueSheetNames; // 0x3d8(0x10)
	struct TArray<struct USoundAtomCueSheet*> LoadedScenarioVoiceSheet; // 0x3e8(0x10)
	struct TArray<struct USoundAtomCueSheet*> LoadedBondsVoiceSheet; // 0x3f8(0x10)
	struct TArray<struct FNotifyPlaySoundReplaceParam> EnBrainField_DataTableList; // 0x408(0x10)
	struct TArray<struct FNotifyPlaySoundReplaceProgressIdData> ProgressID_DataTableList; // 0x418(0x10)
	enum class ENotifySoundReplace_EnStr m_NotifySoundReplace_EnStr; // 0x428(0x01)
	char pad_429[0x7]; // 0x429(0x07)
	struct TArray<struct FNotifyPlaySoundReplaceProgressIdData> ReplaceEnStr_Mid_DataTableList; // 0x430(0x10)
	struct TArray<struct FNotifyPlaySoundReplaceProgressIdData> ReplaceEnStr_High_DataTableList; // 0x440(0x10)
	char pad_450[0x8]; // 0x450(0x08)
	struct USoundVolumeController* SoundVolumeController; // 0x458(0x08)
	enum class ESoundState SoundState; // 0x460(0x01)
	char pad_461[0x3]; // 0x461(0x03)
	float MenuVolumeRate; // 0x464(0x04)
	struct TMap<struct FString, struct USoundAtomCue*> adlibCue; // 0x468(0x50)
	struct TArray<struct URSAtomComponentBase*> playingAdlibVoices_; // 0x4b8(0x10)
	struct TArray<struct USoundAtomCueSheet*> SequencerSoundCueSheets; // 0x4c8(0x10)

	void UnregistLoopSe(struct FName Name); // Function BattlePrototype.RSSoundManager.UnregistLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12e96c0
	void UnregisterSoundEmitterAll(); // Function BattlePrototype.RSSoundManager.UnregisterSoundEmitterAll // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9850
	void UnregisterSoundEmitter(struct AActor* soundEmitter); // Function BattlePrototype.RSSoundManager.UnregisterSoundEmitter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e97d0
	bool UnregisterCueSheet(struct USoundAtomCueSheet* Sheet); // Function BattlePrototype.RSSoundManager.UnregisterCueSheet // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9740
	void UnregisterComponentAll(); // Function BattlePrototype.RSSoundManager.UnregisterComponentAll // (Native|Public|BlueprintCallable) // @ game+0x11d9280
	void UnregisterComponent(struct URSAtomComponentBase* Component); // Function BattlePrototype.RSSoundManager.UnregisterComponent // (Native|Public|BlueprintCallable) // @ game+0x11d2520
	void UnregistAllLoopSe(bool isStopSound); // Function BattlePrototype.RSSoundManager.UnregistAllLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9630
	void UnLoadSequencerSeCueSheet(); // Function BattlePrototype.RSSoundManager.UnLoadSequencerSeCueSheet // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9580
	bool UnloadFootStep(struct FName nameId); // Function BattlePrototype.RSSoundManager.UnloadFootStep // (Final|Native|Public|BlueprintCallable) // @ game+0x12e95a0
	bool StopME(float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.StopME // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StopLoopSe(struct FName Name, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.StopLoopSe // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StopEnv(float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.StopEnv // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool StopBgm(enum class EBgmCategory Category, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.StopBgm // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StopAllSound(); // Function BattlePrototype.RSSoundManager.StopAllSound // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9560
	void StopAllAdlibVoice(); // Function BattlePrototype.RSSoundManager.StopAllAdlibVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9540
	void SetSoundLevelSnapshot(struct FSoundSnapshot Snapshot); // Function BattlePrototype.RSSoundManager.SetSoundLevelSnapshot // (Final|Native|Public|BlueprintCallable) // @ game+0x12e94c0
	void SetSoundLevelParam(struct FSoundLevelParam SoundLevelParam, struct UAtomComponent* AtomCom); // Function BattlePrototype.RSSoundManager.SetSoundLevelParam // (Final|Native|Public|BlueprintCallable) // @ game+0x12e92c0
	void SetSoundBusBypass(enum class EDspBus DspBus, bool Bypass); // Function BattlePrototype.RSSoundManager.SetSoundBusBypass // (Final|Native|Public|BlueprintCallable) // @ game+0x12e91f0
	bool SetResumeFromMuteAll(); // Function BattlePrototype.RSSoundManager.SetResumeFromMuteAll // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetNotifySoundReplace_EnStr(enum class ENotifySoundReplace_EnStr Param); // Function BattlePrototype.RSSoundManager.SetNotifySoundReplace_EnStr // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9170
	void SetNonPlayerCueSheetVolume(); // Function BattlePrototype.RSSoundManager.SetNonPlayerCueSheetVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9150
	bool SetMuteAll(); // Function BattlePrototype.RSSoundManager.SetMuteAll // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetLoopSEVolume(float Volume); // Function BattlePrototype.RSSoundManager.SetLoopSEVolume // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetInGameVolumeByCategoryName(enum class ESoundCategory Category, float DestVol); // Function BattlePrototype.RSSoundManager.SetInGameVolumeByCategoryName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetInGameVolumeAll(float DestVol); // Function BattlePrototype.RSSoundManager.SetInGameVolumeAll // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetFadeByCategoryName(enum class ESoundCategory Category, float FadeTime, float DestVol); // Function BattlePrototype.RSSoundManager.SetFadeByCategoryName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetFadeAllCategory(float FadeTime, float DestVol); // Function BattlePrototype.RSSoundManager.SetFadeAllCategory // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetConfigVolumeByCategoryName(enum class ESoundCategory soundCategory, float DestVolume); // Function BattlePrototype.RSSoundManager.SetConfigVolumeByCategoryName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetCharacterCueSheetVolume(struct FString CharaID); // Function BattlePrototype.RSSoundManager.SetCharacterCueSheetVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9070
	bool SetBGMVolume(float Volume); // Function BattlePrototype.RSSoundManager.SetBGMVolume // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetBgmTransEffectValue(float Rate, bool isDirect); // Function BattlePrototype.RSSoundManager.SetBgmTransEffectValue // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8fa0
	bool SetBaseSoundVolume(enum class ESoundCategory soundCategory, struct FString ParamName, float Volume); // Function BattlePrototype.RSSoundManager.SetBaseSoundVolume // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetAisacValue(struct UAtomComponent* AtomCom, enum class ESoundCategory Category, enum class ESoundAisacControlId Control, float ControlValue); // Function BattlePrototype.RSSoundManager.SetAisacValue // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8e50
	struct URSAtomComponentBase* RSAtomCuePlay_AnimNotify_Native(struct AActor* OwnerPlayer, struct USoundAtomCue* Sound, bool UseWeaponLocation, enum class EGetPlayerWeaponType WeaponType, struct URSAtomComponentBase* ComponentClass, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct USoundAttenuation* AttenuationSettings, bool isInvalidProgressIdCheck); // Function BattlePrototype.RSSoundManager.RSAtomCuePlay_AnimNotify_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x12e87d0
	bool ResumeME(float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.ResumeME // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResumeLoopSe(struct FName Name, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.ResumeLoopSe // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResumeFromPauseAllSound(); // Function BattlePrototype.RSSoundManager.ResumeFromPauseAllSound // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResumeEnv(float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.ResumeEnv // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResumeBgm(enum class EBgmCategory Category, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.ResumeBgm // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ResetNonPlayerCueSheetVolume(); // Function BattlePrototype.RSSoundManager.ResetNonPlayerCueSheetVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8e30
	void ResetCharacterCueSheetVolume(struct FString CharaID); // Function BattlePrototype.RSSoundManager.ResetCharacterCueSheetVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8d50
	void ResetAllBusBypass(bool Bypass); // Function BattlePrototype.RSSoundManager.ResetAllBusBypass // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8cc0
	struct USoundAtomCue* ReplaceNotifySound_Native(struct USoundAtomCue* InputSound); // Function BattlePrototype.RSSoundManager.ReplaceNotifySound_Native // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8c30
	bool ReplacedVoiceSheet(bool isJapanese); // Function BattlePrototype.RSSoundManager.ReplacedVoiceSheet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void RegistLoopSe(struct FName Name, struct URSAtomComponentBase* pSound); // Function BattlePrototype.RSSoundManager.RegistLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8a60
	void RegisterSoundEmitter(struct AActor* soundEmitter); // Function BattlePrototype.RSSoundManager.RegisterSoundEmitter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8bb0
	bool RegisterCueSheet(struct USoundAtomCueSheet* Sheet); // Function BattlePrototype.RSSoundManager.RegisterCueSheet // (Final|Native|Public|BlueprintCallable) // @ game+0x12e8b20
	void RegisterComponent(struct URSAtomComponentBase* Component); // Function BattlePrototype.RSSoundManager.RegisterComponent // (Native|Public|BlueprintCallable) // @ game+0x12ddec0
	void PlayVoiceAtCueName(struct UObject* WorldContextObject, struct FString CueName, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy); // Function BattlePrototype.RSSoundManager.PlayVoiceAtCueName // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12e8490
	void PlayVoiceAtCue(struct UObject* WorldContextObject, struct USoundAtomCue* SoundCue, struct FVector Location, struct FRotator Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, struct USoundAttenuation* AttenuationSettings, struct USoundConcurrency* ConcurrencySettings, bool bAutoDestroy); // Function BattlePrototype.RSSoundManager.PlayVoiceAtCue // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12e81b0
	struct URSAtomComponentBase* PlayVoice(struct USoundAtomCue* Sound, bool isAttache, bool isAutoActivate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, enum class EFilterCallbackType filterCallbackType); // Function BattlePrototype.RSSoundManager.PlayVoice // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlayME(struct USoundAtomCue* AtomCue, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.PlayME // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlayLoopSe(struct FName Name, struct USoundAtomCue* AtomCue, struct FVector Location, struct FRotator Rotation, float FadeTime, float FadeVolume, bool forceFirstStart); // Function BattlePrototype.RSSoundManager.PlayLoopSe // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PlayHitSoundEffect(struct FHitDamageInfo Info); // Function BattlePrototype.RSSoundManager.PlayHitSoundEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e8090
	bool PlayEnv(struct USoundAtomCue* AtomCue, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.PlayEnv // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct URSAtomComponentBase* PlayCueWeaponLocation(struct AActor* OwnerPlayer, struct USoundAtomCue* Sound, enum class EGetPlayerWeaponType WeaponType, struct URSAtomComponentBase* ComponentClass, struct USoundAttenuation* AttenuationSettings); // Function BattlePrototype.RSSoundManager.PlayCueWeaponLocation // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool PlayBgm(enum class EBgmCategory Category, struct USoundAtomCue* AtomCue, float FadeTime, float FadeVolume, bool forceFirstStart); // Function BattlePrototype.RSSoundManager.PlayBgm // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void PlayAdlibVoiceFromLoadedAsset(struct FString voiceName); // Function BattlePrototype.RSSoundManager.PlayAdlibVoiceFromLoadedAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7ff0
	bool PauseME(float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.PauseME // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PauseLoopSe(struct FName Name, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.PauseLoopSe // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PauseEnv(float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.PauseEnv // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PauseBgm(enum class EBgmCategory Category, float FadeTime, float FadeVolume); // Function BattlePrototype.RSSoundManager.PauseBgm // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PauseAllSound(); // Function BattlePrototype.RSSoundManager.PauseAllSound // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OnSkipEvent(); // Function BattlePrototype.RSSoundManager.OnSkipEvent // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void OnMessageSkipSePlay(); // Function BattlePrototype.RSSoundManager.OnMessageSkipSePlay // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void OnEDBrainFieldBattleEndNativeEvent(enum class EBrainFieldEndType EndType); // Function BattlePrototype.RSSoundManager.OnEDBrainFieldBattleEndNativeEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7f70
	void OnBrainFieldCloseFromNative(); // Function BattlePrototype.RSSoundManager.OnBrainFieldCloseFromNative // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void OnBrainCrashOn(); // Function BattlePrototype.RSSoundManager.OnBrainCrashOn // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FString MakeCueSheetPath(struct FString BaseName); // Function BattlePrototype.RSSoundManager.MakeCueSheetPath // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7db0
	void MakeBondsChueSheetName(enum class EPlayerID heroID, enum class EPlayerID partnerId, struct FString makedName); // Function BattlePrototype.RSSoundManager.MakeBondsChueSheetName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e7c80
	bool Macro_IsSpCostume(enum class RSPartyPlayerKind kind); // Function BattlePrototype.RSSoundManager.Macro_IsSpCostume // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7bf0
	bool Macro_GetPlayer(enum class RSPartyPlayerKind kind, struct USkeletalMeshComponent* Mesh, enum class EPlayerID playerId); // Function BattlePrototype.RSSoundManager.Macro_GetPlayer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e7ad0
	int32_t Macro_GetPartyTotalExp(); // Function BattlePrototype.RSSoundManager.Macro_GetPartyTotalExp // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7aa0
	bool LoadVoiceCueSheetPlayStage(struct FString seName); // Function BattlePrototype.RSSoundManager.LoadVoiceCueSheetPlayStage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void LoadUseAdlibVoicePath(struct ULevelSequence* seq, struct TArray<struct FString> adlibVoiceNames, bool bCueReset); // Function BattlePrototype.RSSoundManager.LoadUseAdlibVoicePath // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e7950
	void LoadSequencerSeCueSheet(struct ARSLevelSequenceActor* seqActor); // Function BattlePrototype.RSSoundManager.LoadSequencerSeCueSheet // (Final|Native|Public|BlueprintCallable) // @ game+0x12e78d0
	bool LoadScenarioCueSheet(); // Function BattlePrototype.RSSoundManager.LoadScenarioCueSheet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct UCharacterPhysicalSurfaceActionSoundResource* LoadFootStep(struct FName nameId); // Function BattlePrototype.RSSoundManager.LoadFootStep // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7840
	bool LoadBondsCueSheet(enum class EPlayerID heroID, enum class EPlayerID partnerId); // Function BattlePrototype.RSSoundManager.LoadBondsCueSheet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isRegistLoopSe(struct FName Name); // Function BattlePrototype.RSSoundManager.isRegistLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x12e9900
	struct FString GetSoundSelectorString(enum class ESoundSelector Selector); // Function BattlePrototype.RSSoundManager.GetSoundSelectorString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e7780
	struct FString GetSoundSelectorLabelString(enum class ESoundSelectorLabel Label); // Function BattlePrototype.RSSoundManager.GetSoundSelectorLabelString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12e76c0
	int32_t GetSoundEmitterListCount(); // Function BattlePrototype.RSSoundManager.GetSoundEmitterListCount // (Final|Native|Public|BlueprintCallable) // @ game+0x12e76a0
	struct AActor* GetSoundEmitter(int32_t Index); // Function BattlePrototype.RSSoundManager.GetSoundEmitter // (Final|Native|Public|BlueprintCallable) // @ game+0x12e75d0
	struct USoundAtomCueSheet* GetSoundCueSheet(struct FString SheetName); // Function BattlePrototype.RSSoundManager.GetSoundCueSheet // (Final|Native|Public|BlueprintCallable) // @ game+0x12e74e0
	struct TArray<struct FNotifyPlaySoundReplaceProgressIdData> GetReplaceEnStrDataTableList(); // Function BattlePrototype.RSSoundManager.GetReplaceEnStrDataTableList // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7410
	bool GetPlayerWeaponActorListFromNative(struct AActor* OwnerPlayer, enum class EGetPlayerWeaponType Type, struct TArray<struct AActor*> WeaponList); // Function BattlePrototype.RSSoundManager.GetPlayerWeaponActorListFromNative // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12e72e0
	struct FString GetLanguageSettingString(); // Function BattlePrototype.RSSoundManager.GetLanguageSettingString // (Final|Native|Public|BlueprintCallable) // @ game+0x12e7260
	struct USoundAtomCue* GetGeneralPhysicalSurfaceActionResource(enum class EGamePhysicalSurfaceType PhysicsType, struct FName ActionType); // Function BattlePrototype.RSSoundManager.GetGeneralPhysicalSurfaceActionResource // (Final|Native|Public|BlueprintCallable) // @ game+0x12e71a0
	struct FString GetCueSheetName(struct USoundAtomCue* Cue); // Function BattlePrototype.RSSoundManager.GetCueSheetName // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcd20
	struct USoundCueSheetManager* GetCueSheetManager(); // Function BattlePrototype.RSSoundManager.GetCueSheetManager // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12e7180
	float GetBaseSoundVolume(enum class ESoundCategory soundCategory, struct FString ParamName); // Function BattlePrototype.RSSoundManager.GetBaseSoundVolume // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct URSAtomComponentBase* DoIsVoiceToSpawnSoundAttachedLoadedSheetRS(struct UObject* WorldContextObject, struct URSAtomComponentBase* ComponentClass, struct USoundAtomCue* Sound, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct USoundAttenuation* AttenuationSettings, struct UObject* Creator); // Function BattlePrototype.RSSoundManager.DoIsVoiceToSpawnSoundAttachedLoadedSheetRS // (Final|Native|Public|BlueprintCallable) // @ game+0x12e6f80
	bool ChangeSoundState(enum class ESoundState sndState); // Function BattlePrototype.RSSoundManager.ChangeSoundState // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ChangeLanguageVoiceSheet(bool isJapanese); // Function BattlePrototype.RSSoundManager.ChangeLanguageVoiceSheet // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSSplineMeshComponent
// Size: 0x550 (Inherited: 0x530)
struct URSSplineMeshComponent : USplineMeshComponent {
	bool bRsCastDynamicShadow; // 0x530(0x01)
	bool bRsCastStaticShadow; // 0x531(0x01)
	bool bRsCanEverAffectNavigation; // 0x532(0x01)
	bool bRsOverrideLightMapRes; // 0x533(0x01)
	bool bRsUseTwoSidedLighting; // 0x534(0x01)
	bool bRsCastShadowAsTwoSided; // 0x535(0x01)
	char pad_536[0x2]; // 0x536(0x02)
	int32_t RsOverriddenLightMapRes; // 0x538(0x04)
	bool bRsLightmapTypeForceVolumetric; // 0x53c(0x01)
	bool bRsVisibleInReflectionCaptures; // 0x53d(0x01)
	char pad_53E[0x2]; // 0x53e(0x02)
	float RsMinDrawDistance; // 0x540(0x04)
	float RsLDMaxDrawDistance; // 0x544(0x04)
	bool bRsAllowCullDistanceVolume; // 0x548(0x01)
	char pad_549[0x7]; // 0x549(0x07)
};

// Class BattlePrototype.RSStateComponent
// Size: 0xd0 (Inherited: 0xc0)
struct URSStateComponent : UActorComponent {
	char pad_C0[0x10]; // 0xc0(0x10)

	int32_t Update(); // Function BattlePrototype.RSStateComponent.Update // (Native|Event|Public|BlueprintEvent) // @ game+0x12ed0b0
	bool Transition(); // Function BattlePrototype.RSStateComponent.Transition // (Native|Event|Public|BlueprintEvent) // @ game+0x11739c0
	void SetState(int32_t StateIndex, int32_t Param); // Function BattlePrototype.RSStateComponent.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecdd0
	void SetProcess(int32_t NextProcess); // Function BattlePrototype.RSStateComponent.SetProcess // (Final|Native|Protected|BlueprintCallable) // @ game+0x12ecc10
	void NextProcess(); // Function BattlePrototype.RSStateComponent.NextProcess // (Final|Native|Protected|BlueprintCallable) // @ game+0x12ecb60
	int32_t GetProcess(); // Function BattlePrototype.RSStateComponent.GetProcess // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ec8f0
	int32_t Exit(int32_t NextStateIndex); // Function BattlePrototype.RSStateComponent.Exit // (Native|Event|Public|BlueprintEvent) // @ game+0x12ec5e0
	int32_t Enter(int32_t Param); // Function BattlePrototype.RSStateComponent.Enter // (Native|Event|Public|BlueprintEvent) // @ game+0x12ec540
	void EndProcess(); // Function BattlePrototype.RSStateComponent.EndProcess // (Final|Native|Protected|BlueprintCallable) // @ game+0x12ec520
};

// Class BattlePrototype.RSStateManageComponent
// Size: 0xe8 (Inherited: 0xc0)
struct URSStateManageComponent : UActorComponent {
	struct FMulticastInlineDelegate DispatchEnterState; // 0xc0(0x10)
	char pad_D0[0x18]; // 0xd0(0x18)

	void Update(); // Function BattlePrototype.RSStateManageComponent.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed0e0
	void SetState(int32_t StateIndex, int32_t Param); // Function BattlePrototype.RSStateManageComponent.SetState // (Final|Native|Public|BlueprintCallable) // @ game+0x12ece90
	void Initialize(struct TArray<struct URSStateComponent*> StateList); // Function BattlePrototype.RSStateManageComponent.Initialize // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12eca40
	int32_t GetPrevStateIndex(); // Function BattlePrototype.RSStateManageComponent.GetPrevStateIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x128bd00
	int32_t GetCurrentStateIndex(); // Function BattlePrototype.RSStateManageComponent.GetCurrentStateIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1215ee0
};

// Class BattlePrototype.RSStaticEventCharaAnimInstance
// Size: 0x280 (Inherited: 0x270)
struct URSStaticEventCharaAnimInstance : UAnimInstance {
	float EyeXAxisValue; // 0x270(0x04)
	float EyeYAxisValue; // 0x274(0x04)
	float EyeBlendWeight; // 0x278(0x04)
	char pad_27C[0x4]; // 0x27c(0x04)
};

// Class BattlePrototype.RSStaticMeshComponent
// Size: 0x4c0 (Inherited: 0x4a0)
struct URSStaticMeshComponent : UStaticMeshComponent {
	bool bRsCastDynamicShadow; // 0x498(0x01)
	bool bRsCastStaticShadow; // 0x499(0x01)
	bool bRsCanEverAffectNavigation; // 0x49a(0x01)
	bool bRsOverrideLightMapRes; // 0x49b(0x01)
	bool bRsUseTwoSidedLighting; // 0x49c(0x01)
	bool bRsCastShadowAsTwoSided; // 0x49d(0x01)
	int32_t RsOverriddenLightMapRes; // 0x4a0(0x04)
	bool bRsLightmapTypeForceVolumetric; // 0x4a4(0x01)
	bool bRsVisibleInReflectionCaptures; // 0x4a5(0x01)
	float RsMinDrawDistance; // 0x4a8(0x04)
	float RsLDMaxDrawDistance; // 0x4ac(0x04)
	char bRsAllowCullDistanceVolume : 1; // 0x4b0(0x01)
	char pad_4B4_1 : 7; // 0x4b4(0x01)
	char pad_4B5[0xb]; // 0x4b5(0x0b)
};

// Class BattlePrototype.RSTimeManager
// Size: 0x28 (Inherited: 0x28)
struct URSTimeManager : UBlueprintFunctionLibrary {

	float GetWorldNormalDeltaSeconds(struct AActor* Actor); // Function BattlePrototype.RSTimeManager.GetWorldNormalDeltaSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ec9b0
	float GetSystemDeltaSeconds(struct UObject* Object); // Function BattlePrototype.RSTimeManager.GetSystemDeltaSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ec920
	float GetActorIgnoreHitStop(float HitStopRate); // Function BattlePrototype.RSTimeManager.GetActorIgnoreHitStop // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ec710
	float GetActorDeltaSeconds(struct AActor* Actor); // Function BattlePrototype.RSTimeManager.GetActorDeltaSeconds // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ec680
};

// Class BattlePrototype.RSTitleAnimInstance
// Size: 0x630 (Inherited: 0x620)
struct URSTitleAnimInstance : URSCharacterAnimInstance {
	enum class ETitleAnime NowAnimKind; // 0x620(0x01)
	enum class ETitleAnime RequestAnimKind; // 0x621(0x01)
	char pad_622[0xe]; // 0x622(0x0e)

	void SetRequestAnimKind(enum class ETitleAnime Type); // Function BattlePrototype.RSTitleAnimInstance.SetRequestAnimKind // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecc90
	bool IsExistRequest(); // Function BattlePrototype.RSTitleAnimInstance.IsExistRequest // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ecb30
	enum class ETitleAnime GetNowAnimKind(); // Function BattlePrototype.RSTitleAnimInstance.GetNowAnimKind // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c9420
};

// Class BattlePrototype.RSTitleManager
// Size: 0x2e8 (Inherited: 0x230)
struct ARSTitleManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct FDelegate m_OnTitleEventSaveLoadError; // 0x238(0x10)
	struct FDelegate m_OnTitleEventSoundEnd; // 0x248(0x10)
	struct FDelegate m_OnTitleEventSoundStart; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)
	struct UObject* m_paFirstFlowFonts[0x4]; // 0x270(0x20)
	struct UMultiLanguageTextData* m_pMultiLanguageTextData; // 0x290(0x08)
	struct UUserParamManager* UserParamManager; // 0x298(0x08)
	struct ARSHUDBase* m_pRSHudBase; // 0x2a0(0x08)
	struct UDatabaseManager* DatabaseManager; // 0x2a8(0x08)
	struct URSGameInstance* m_pGameInstance; // 0x2b0(0x08)
	struct URSSaveGame* m_pSaveSystem; // 0x2b8(0x08)
	struct URSSaveGame* m_pSaveGame; // 0x2c0(0x08)
	struct URSSaveGame* m_pAutoSave; // 0x2c8(0x08)
	struct USaveLoadScreenParamManager* m_pSaveLoadParamManager; // 0x2d0(0x08)
	struct USaveLoadScreenParamManager* m_pAutoSaveLoadParamManager; // 0x2d8(0x08)
	struct USaveLoadScreenParamManager* m_pSaveLoadSystemParamManager; // 0x2e0(0x08)

	void TitleToLogojump(); // Function BattlePrototype.RSTitleManager.TitleToLogojump // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed090
	void TitleLSResetBindings(); // Function BattlePrototype.RSTitleManager.TitleLSResetBindings // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SystemSaveDataErrorCheck(); // Function BattlePrototype.RSTitleManager.SystemSaveDataErrorCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed060
	bool StopMovie(); // Function BattlePrototype.RSTitleManager.StopMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetYuitoEffect(); // Function BattlePrototype.RSTitleManager.SetYuitoEffect // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SettingMovie(); // Function BattlePrototype.RSTitleManager.SettingMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetSaveLoadScreenParam(struct USaveLoadScreenParamManager* SaveLoad, struct USaveLoadScreenParamManager* AutoSave); // Function BattlePrototype.RSTitleManager.SetSaveLoadScreenParam // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecd10
	void SetPlaySequencerType(); // Function BattlePrototype.RSTitleManager.SetPlaySequencerType // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetMaterialEffectKill(); // Function BattlePrototype.RSTitleManager.SetMaterialEffectKill // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetKasaneEffect(); // Function BattlePrototype.RSTitleManager.SetKasaneEffect // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetEffectKill(struct FName chName); // Function BattlePrototype.RSTitleManager.SetEffectKill // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SaveDataErrorCheck(enum class ETitleSaveCheck CheckType); // Function BattlePrototype.RSTitleManager.SaveDataErrorCheck // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecb80
	bool PlaySequencerType(enum class EUITitleSequencer Type, struct FText bindPlayName); // Function BattlePrototype.RSTitleManager.PlaySequencerType // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlaySequencer(struct FText bindPlayName); // Function BattlePrototype.RSTitleManager.PlaySequencer // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlayMovie(); // Function BattlePrototype.RSTitleManager.PlayMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool Pause(bool Flag); // Function BattlePrototype.RSTitleManager.Pause // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isValidUser(); // Function BattlePrototype.RSTitleManager.isValidUser // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ac7b0
	bool isTitleBackStatic(); // Function BattlePrototype.RSTitleManager.isTitleBackStatic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12ed3a0
	bool isStreamingLevelLoaded(); // Function BattlePrototype.RSTitleManager.isStreamingLevelLoaded // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isStopMovie(); // Function BattlePrototype.RSTitleManager.isStopMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isSaveData(); // Function BattlePrototype.RSTitleManager.isSaveData // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed370
	bool isReadyMovie(); // Function BattlePrototype.RSTitleManager.isReadyMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isPlaySequencer(); // Function BattlePrototype.RSTitleManager.isPlaySequencer // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isPlayMovie(); // Function BattlePrototype.RSTitleManager.isPlayMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isGameClearData(); // Function BattlePrototype.RSTitleManager.isGameClearData // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed340
	bool isFirstFlow(); // Function BattlePrototype.RSTitleManager.isFirstFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ed310
	bool isEnding(); // Function BattlePrototype.RSTitleManager.isEnding // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x12ed2e0
	bool IsEndGeneralChoice(); // Function BattlePrototype.RSTitleManager.IsEndGeneralChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed2b0
	bool isClearEXNewRelease(); // Function BattlePrototype.RSTitleManager.isClearEXNewRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed280
	bool isClearData(); // Function BattlePrototype.RSTitleManager.isClearData // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed250
	bool isClearChara(int32_t slotNo, bool yuito, bool kasane); // Function BattlePrototype.RSTitleManager.isClearChara // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12ed130
	bool isChapterZeroCrear(); // Function BattlePrototype.RSTitleManager.isChapterZeroCrear // (Final|Native|Public|BlueprintCallable) // @ game+0x12ed100
	void InitializeSaveSlotSetting(); // Function BattlePrototype.RSTitleManager.InitializeSaveSlotSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecb10
	void InitializeAutoSaveSlotSetting(); // Function BattlePrototype.RSTitleManager.InitializeAutoSaveSlotSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x12ecaf0
	struct ASkeletalMeshActor* GetYuitoMesh(); // Function BattlePrototype.RSTitleManager.GetYuitoMesh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct URSTitleAnimInstance* GetYuitoAnimInstance(); // Function BattlePrototype.RSTitleManager.GetYuitoAnimInstance // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct ASkeletalMeshActor* GetKasaneMesh(); // Function BattlePrototype.RSTitleManager.GetKasaneMesh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct URSTitleAnimInstance* GetKasaneAnimInstance(); // Function BattlePrototype.RSTitleManager.GetKasaneAnimInstance // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.RSToolFuncLib
// Size: 0x28 (Inherited: 0x28)
struct URSToolFuncLib : UBlueprintFunctionLibrary {

	void StartCaptureMovie(struct FString OutputFileName, int32_t RecordSeconds); // Function BattlePrototype.RSToolFuncLib.StartCaptureMovie // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ecf50
	void SetupDrawEvents(struct UObject* WorldContextObject, bool Enable); // Function BattlePrototype.RSToolFuncLib.SetupDrawEvents // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void GetDevelopUObjectCount(struct TArray<struct UObject*> ClassList, struct TArray<int32_t> CountList, bool ChildClass); // Function BattlePrototype.RSToolFuncLib.GetDevelopUObjectCount // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12ec790
	void EndCaptureMovie(); // Function BattlePrototype.RSToolFuncLib.EndCaptureMovie // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7bc3d0
	void EditorSetComponentStaticShadow(struct UPrimitiveComponent* Component, bool Enable); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentStaticShadow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void EditorSetComponentStartAwake(struct UPrimitiveComponent* Component, bool Enable); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentStartAwake // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void EditorSetComponentMobility(struct USceneComponent* Component, enum class EEditorMobility Mobility); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentMobility // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec470
	void EditorSetComponentLightmapResolution(struct UPrimitiveComponent* Component, bool Enable, int32_t resolution); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentLightmapResolution // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec370
	void EditorSetComponentEmissiveForStaticLighting(struct UPrimitiveComponent* Component, bool Enable); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentEmissiveForStaticLighting // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void EditorSetComponentEmissiveBoost(struct UPrimitiveComponent* Component, float Value); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentEmissiveBoost // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec2b0
	void EditorSetComponentDynamicShadow(struct UPrimitiveComponent* Component, bool Enable); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentDynamicShadow // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void EditorSetComponentDiffuseBoost(struct UPrimitiveComponent* Component, float Value); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentDiffuseBoost // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec2b0
	void EditorSetComponentAttachParentBound(struct USceneComponent* Component, bool Enable); // Function BattlePrototype.RSToolFuncLib.EditorSetComponentAttachParentBound // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void EditorSetCanEverAffectNavigation(struct UActorComponent* Component, bool Enable); // Function BattlePrototype.RSToolFuncLib.EditorSetCanEverAffectNavigation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec1f0
	void EditorSearchReferencerAsset(struct UObject* Target, struct TArray<struct UObject*> SearchList); // Function BattlePrototype.RSToolFuncLib.EditorSearchReferencerAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec0e0
	void EditorSearchReferenceFromClassList(struct UObject* Target, struct TArray<struct UObject*> SearchList); // Function BattlePrototype.RSToolFuncLib.EditorSearchReferenceFromClassList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec0e0
	void EditorSearchReferenceAsset(struct UObject* Target, struct TArray<struct UObject*> SearchList); // Function BattlePrototype.RSToolFuncLib.EditorSearchReferenceAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec0e0
	bool EditorRemoveActorComponent(struct AActor* Actor, struct UActorComponent* Component); // Function BattlePrototype.RSToolFuncLib.EditorRemoveActorComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ec020
	void EditorRefreshMaterial(struct UMaterialInterface* Material); // Function BattlePrototype.RSToolFuncLib.EditorRefreshMaterial // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xae5190
	void EditorLogInstancedStaticMesh(struct UInstancedStaticMeshComponent* Component); // Function BattlePrototype.RSToolFuncLib.EditorLogInstancedStaticMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xae5190
	void EditorFlushInstancedStaticMesh(struct UInstancedStaticMeshComponent* Component, bool HasError); // Function BattlePrototype.RSToolFuncLib.EditorFlushInstancedStaticMesh // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12ebf60
	void EditorDumpReferencerAsset(struct UObject* Target); // Function BattlePrototype.RSToolFuncLib.EditorDumpReferencerAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xae5190
	void EditorDumpReferenceAsset(struct UObject* Target); // Function BattlePrototype.RSToolFuncLib.EditorDumpReferenceAsset // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xae5190
	void EditorClipboardCopy(struct FString text); // Function BattlePrototype.RSToolFuncLib.EditorClipboardCopy // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ebd90
	void EditorCallConstructionScript(struct AActor* ActorInstance); // Function BattlePrototype.RSToolFuncLib.EditorCallConstructionScript // (Final|Native|Static|Public|BlueprintCallable) // @ game+0xae5190
	struct UActorComponent* EditorAddActorComponent(struct AActor* ActorInstance, struct UObject* ComponentClass, bool IsMovable); // Function BattlePrototype.RSToolFuncLib.EditorAddActorComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ebe60
	void CheckCaptureMovie(); // Function BattlePrototype.RSToolFuncLib.CheckCaptureMovie // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7bc3d0
	void CaptureProfileGPU(struct FString OutputFileName); // Function BattlePrototype.RSToolFuncLib.CaptureProfileGPU // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ebd90
};

// Class BattlePrototype.RSUniqueIdInterface
// Size: 0x28 (Inherited: 0x28)
struct URSUniqueIdInterface : UInterface {

	struct FName GetUniqueName(); // Function BattlePrototype.RSUniqueIdInterface.GetUniqueName // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12f35a0
	int32_t GetUniqueId(); // Function BattlePrototype.RSUniqueIdInterface.GetUniqueId // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12f3570
	struct FName GetEnemyDeadReplaceLogName(); // Function BattlePrototype.RSUniqueIdInterface.GetEnemyDeadReplaceLogName // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x12f2830
};

// Class BattlePrototype.RSUniqueIdComponent
// Size: 0xd0 (Inherited: 0xc0)
struct URSUniqueIdComponent : UActorComponent {
	int32_t ID; // 0xc0(0x04)
	struct FName Name; // 0xc4(0x08)
	char pad_CC[0x4]; // 0xcc(0x04)

	void SetName(struct FName InName); // Function BattlePrototype.RSUniqueIdComponent.SetName // (Final|Native|Public|BlueprintCallable) // @ game+0x12f6740
	void SetId(int32_t InId); // Function BattlePrototype.RSUniqueIdComponent.SetId // (Final|Native|Public|BlueprintCallable) // @ game+0x12f64c0
	struct FName GetName(); // Function BattlePrototype.RSUniqueIdComponent.GetName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12f2ae0
	int32_t GetId(); // Function BattlePrototype.RSUniqueIdComponent.GetId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1209290
};

// Class BattlePrototype.RSUniqueIdFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSUniqueIdFunctionLibrary : UBlueprintFunctionLibrary {

	struct FName UniqueNameFromId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.UniqueNameFromId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6ef0
	int32_t UniqueIdFromName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.UniqueIdFromName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6e70
	bool IsWeaponFromUniqueName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsWeaponFromUniqueName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4a70
	bool IsWeaponFromUniqueId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsWeaponFromUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f49e0
	bool IsPlayerFromUniqueName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsPlayerFromUniqueName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f48d0
	bool IsPlayerFromUniqueId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsPlayerFromUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4850
	bool IsItemFromUniqueName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsItemFromUniqueName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4550
	bool IsItemFromUniqueId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsItemFromUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f44c0
	bool IsENPCFromUniqueName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsENPCFromUniqueName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4030
	bool IsENPCFromUniqueId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsENPCFromUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3fa0
	bool IsEnemyFromUniqueName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsEnemyFromUniqueName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4150
	bool IsEnemyFromUniqueId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsEnemyFromUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f40c0
	bool IsCharacterFromUniqueName(struct FName Name); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsCharacterFromUniqueName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3ca0
	bool IsCharacterFromUniqueId(int32_t ID); // Function BattlePrototype.RSUniqueIdFunctionLibrary.IsCharacterFromUniqueId // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3c20
};

// Class BattlePrototype.RSUtilityEventFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSUtilityEventFunctionLibrary : UBlueprintFunctionLibrary {

	void SetupCutsceneHideDitherSaveShop(struct UObject* WorldContextObject, float DitherRate); // Function BattlePrototype.RSUtilityEventFunctionLibrary.SetupCutsceneHideDitherSaveShop // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6ae0
	struct TArray<struct FName> GetTextureNameListFromMakeEventActor(struct AActor* MakeEventActorClass); // Function BattlePrototype.RSUtilityEventFunctionLibrary.GetTextureNameListFromMakeEventActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3410
	struct FString GetStandbyPhaseFromProgressID(int32_t ProgressId); // Function BattlePrototype.RSUtilityEventFunctionLibrary.GetStandbyPhaseFromProgressID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2f30
	struct TArray<struct FName> GetPresetNameListFromMakeEventActor(struct AActor* MakeEventActorClass); // Function BattlePrototype.RSUtilityEventFunctionLibrary.GetPresetNameListFromMakeEventActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2be0
	struct TArray<struct FName> GetMovieTextureNameListFromMakeEventActor(struct AActor* MakeEventActorClass); // Function BattlePrototype.RSUtilityEventFunctionLibrary.GetMovieTextureNameListFromMakeEventActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2a10
};

// Class BattlePrototype.RSUtilityLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSUtilityLibrary : UBlueprintFunctionLibrary {

	void UpdateDLCInfo(struct UObject* WorldContextObject, struct TArray<struct FName> entitledContentsList, struct TArray<struct FName> invalidContentsList, bool isInvalidDLCInvalidation); // Function BattlePrototype.RSUtilityLibrary.UpdateDLCInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f70a0
	void UpdateBoundsComponent(struct USceneComponent* Component); // Function BattlePrototype.RSUtilityLibrary.UpdateBoundsComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f7030
	void UnloadLevelInstance(struct UObject* WorldContextObject, struct ULevelStreamingDynamic* LevelStreaming); // Function BattlePrototype.RSUtilityLibrary.UnloadLevelInstance // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6f80
	void StartDeadGameOverPreWork(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.StartDeadGameOverPreWork // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6e00
	struct AActor* SpawnActorFromBPFilePath(struct UObject* WorldContextObject, struct FString Path); // Function BattlePrototype.RSUtilityLibrary.SpawnActorFromBPFilePath // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6d20
	void ShippingDebugString(struct FString outString); // Function BattlePrototype.RSUtilityLibrary.ShippingDebugString // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12ebd90
	void SetUROParameter(struct USkinnedMeshComponent* Mesh, struct TArray<float> Thesholds, int32_t MaxEvalRateForInterpolation, int32_t BaseNonRenderedUpdateRate); // Function BattlePrototype.RSUtilityLibrary.SetUROParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6970
	void SetupPPMaskParticlenative(struct UObject* WorldContextObject, struct TArray<struct ASequencerParticle*> SequencerParticles, struct TArray<int32_t> RestoreCustomStencil, bool Enable); // Function BattlePrototype.RSUtilityLibrary.SetupPPMaskParticlenative // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f6ba0
	void SetShadowMapAtlasTargetsEnabled(bool Enabled); // Function BattlePrototype.RSUtilityLibrary.SetShadowMapAtlasTargetsEnabled // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f68f0
	void SetRenderAfterDOF(struct UMaterial* Material, bool IsEnable); // Function BattlePrototype.RSUtilityLibrary.SetRenderAfterDOF // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6830
	void SetPicturizeQuality(int32_t Quality); // Function BattlePrototype.RSUtilityLibrary.SetPicturizeQuality // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f67c0
	void SetMainViewOverrideAA(bool bOverride, int32_t AAMethod); // Function BattlePrototype.RSUtilityLibrary.SetMainViewOverrideAA // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6680
	void SetLightChannnel(struct UPrimitiveComponent* Primitive, bool Channel0, bool Channel1, bool Channel2); // Function BattlePrototype.RSUtilityLibrary.SetLightChannnel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6540
	void SetGameViewRenderLayer(char RenderLayer); // Function BattlePrototype.RSUtilityLibrary.SetGameViewRenderLayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6450
	void SetEnableURO(struct USkinnedMeshComponent* Mesh, bool bEnable); // Function BattlePrototype.RSUtilityLibrary.SetEnableURO // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6390
	void SetDisplayBrightnessNative(struct UObject* WorldContextObject, int32_t Brightness); // Function BattlePrototype.RSUtilityLibrary.SetDisplayBrightnessNative // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f62e0
	void SetCelLookLightDirection(struct FVector LightDirection); // Function BattlePrototype.RSUtilityLibrary.SetCelLookLightDirection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f6260
	void SetBgEdgeDriveParameter(float Length, float Smooth, float ColorShift, float Parameter4, float EdgeThresholdNomrmal, float EdgeThresholdLuminance, float Parameter7, float Parameter8); // Function BattlePrototype.RSUtilityLibrary.SetBgEdgeDriveParameter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f6010
	void SetBgEdgeDriveLocation(struct FVector Location); // Function BattlePrototype.RSUtilityLibrary.SetBgEdgeDriveLocation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f5f90
	void SetBgEdgeDriveColor(struct FLinearColor InnerColor, struct FLinearColor OuterColor); // Function BattlePrototype.RSUtilityLibrary.SetBgEdgeDriveColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f5ed0
	void SetAddContentsNewFlag(struct UObject* WorldContextObject, struct FName contentsName, bool Flag); // Function BattlePrototype.RSUtilityLibrary.SetAddContentsNewFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5dd0
	void SaveDataLoadAfterParamAdjust(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.SaveDataLoadAfterParamAdjust // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5d60
	void RestorePPMaskParticlenative(struct UObject* WorldContextObject, struct TArray<struct ASequencerParticle*> SequencerParticles, struct TArray<int32_t> RestoreCustomStencil); // Function BattlePrototype.RSUtilityLibrary.RestorePPMaskParticlenative // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f5c10
	void ResetRenderTargets(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.ResetRenderTargets // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5ba0
	void ReplaceMaterialInstancePlatformTexture(struct UMaterialInstanceDynamic* MaterialInstance); // Function BattlePrototype.RSUtilityLibrary.ReplaceMaterialInstancePlatformTexture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5b30
	void ReplaceMaterialInstanceFromImagePlatformTexture(struct UImage* Image); // Function BattlePrototype.RSUtilityLibrary.ReplaceMaterialInstanceFromImagePlatformTexture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5ac0
	struct FPostProcessSettings RemovePostProcessMaterialFromPPS(struct FPostProcessSettings BaseSettings, struct UMaterialInterface* RemoveMaterial); // Function BattlePrototype.RSUtilityLibrary.RemovePostProcessMaterialFromPPS // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f5990
	void RemovePostProcessMaterialFromComponent(struct UPostProcessComponent* PPComponent, struct UMaterialInterface* RemoveMaterial); // Function BattlePrototype.RSUtilityLibrary.RemovePostProcessMaterialFromComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f58e0
	void RefreshSkinMesh(struct USkinnedMeshComponent* SkinMesh); // Function BattlePrototype.RSUtilityLibrary.RefreshSkinMesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5870
	void RedUnImplement(); // Function BattlePrototype.RSUtilityLibrary.RedUnImplement // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x7bc3d0
	void RedEnsure(bool isCheck, struct FString Message); // Function BattlePrototype.RSUtilityLibrary.RedEnsure // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5750
	void RedAssert(bool isCheck, struct FString Message); // Function BattlePrototype.RSUtilityLibrary.RedAssert // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5630
	void OutputNowTime(struct FString LogText); // Function BattlePrototype.RSUtilityLibrary.OutputNowTime // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5560
	void OnAssetLoaded__DelegateSignature(struct UObject* Loaded); // DelegateFunction BattlePrototype.RSUtilityLibrary.OnAssetLoaded__DelegateSignature // (Public|Delegate) // @ game+0x1685580
	struct AActor* LoadSoftObjectActor(struct TSoftObjectPtr<AActor> Target); // Function BattlePrototype.RSUtilityLibrary.LoadSoftObjectActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5440
	struct UObject* LoadSoftObject(struct TSoftObjectPtr<UObject> Target); // Function BattlePrototype.RSUtilityLibrary.LoadSoftObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f5320
	struct AActor* LoadSoftClassActor(struct TSoftClassPtr<UObject> Target); // Function BattlePrototype.RSUtilityLibrary.LoadSoftClassActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f51e0
	struct UObject* LoadSoftClass(struct TSoftClassPtr<UObject> Target); // Function BattlePrototype.RSUtilityLibrary.LoadSoftClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f50a0
	struct UObject* LoadObjectGeneric(struct FString FilePath); // Function BattlePrototype.RSUtilityLibrary.LoadObjectGeneric // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f4ef0
	struct UDataTable* LoadDataTable(struct FString FilePath); // Function BattlePrototype.RSUtilityLibrary.LoadDataTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f4d40
	void LoadAssetFromStringAssetReference(struct UObject* WorldContextObject, struct FSoftObjectPath StringAsset, struct FDelegate OnLoaded, struct FLatentActionInfo LatentInfo, bool NoFindCheck); // Function BattlePrototype.RSUtilityLibrary.LoadAssetFromStringAssetReference // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f4b70
	void LevelChangeBeforeWorkFromIngame(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.LevelChangeBeforeWorkFromIngame // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4b00
	bool IsRootMotionAnimMontage(struct UAnimMontage* anim); // Function BattlePrototype.RSUtilityLibrary.IsRootMotionAnimMontage // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f4960
	bool IsNotAppliedDLCAndReceiveBrainMessage(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.IsNotAppliedDLCAndReceiveBrainMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f47d0
	bool IsNotAppliedDLC(struct UObject* WorldContextObject, struct TArray<struct FName> notAppliedAddContentsNameList, bool isPurchasedOnly); // Function BattlePrototype.RSUtilityLibrary.IsNotAppliedDLC // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f46a0
	bool IsNewDLC(struct UObject* WorldContextObject, bool isParamUpdate); // Function BattlePrototype.RSUtilityLibrary.IsNewDLC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f45e0
	bool IsGameClearThisPlay(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.IsGameClearThisPlay // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f4440
	bool IsExistNotInformPurchasedAddContents(struct UObject* WorldContextObject, struct TArray<struct FName> addContentsNameList, bool isUpdateSystemSave); // Function BattlePrototype.RSUtilityLibrary.IsExistNotInformPurchasedAddContents // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f4310
	bool IsExistNotInformNewAddContents(struct UObject* WorldContextObject, struct TArray<struct FName> addContentsNameList, bool isUpdateSystemSave); // Function BattlePrototype.RSUtilityLibrary.IsExistNotInformNewAddContents // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f41e0
	bool IsDLCOverPossession(struct UObject* WorldContextObject, struct FName contentsName); // Function BattlePrototype.RSUtilityLibrary.IsDLCOverPossession // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3e50
	bool IsDLCHaveNoRightsInApplied(struct UObject* WorldContextObject, struct TArray<struct FName> appliedAddContentsNameList); // Function BattlePrototype.RSUtilityLibrary.IsDLCHaveNoRightsInApplied // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3d30
	bool IsDisplayVertical(bool IsVertical); // Function BattlePrototype.RSUtilityLibrary.IsDisplayVertical // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f3f10
	bool IsAppliedDLC(struct UObject* WorldContextObject, struct FName contentsName); // Function BattlePrototype.RSUtilityLibrary.IsAppliedDLC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3b60
	bool IsApplicationActive(); // Function BattlePrototype.RSUtilityLibrary.IsApplicationActive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f3b30
	bool IsAnimMontageStoped(struct UAnimInstance* AnimInstance, struct UAnimSequenceBase* anim); // Function BattlePrototype.RSUtilityLibrary.IsAnimMontageStoped // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f3a70
	bool IsAllSlotNotAppliedAndNotNotifiedDLC(struct UObject* WorldContextObject, struct TArray<struct FName> resultAddContentsNameList); // Function BattlePrototype.RSUtilityLibrary.IsAllSlotNotAppliedAndNotNotifiedDLC // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f3980
	bool IsAddContentsNewFlag(struct UObject* WorldContextObject, struct FName contentsName); // Function BattlePrototype.RSUtilityLibrary.IsAddContentsNewFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f38c0
	void InvalidDLCInvalidation(struct UObject* WorldContextObject, struct TArray<struct FName> invalidContentsList); // Function BattlePrototype.RSUtilityLibrary.InvalidDLCInvalidation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f37b0
	bool HasWorldEndOfFrameUpdates(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.HasWorldEndOfFrameUpdates // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f3730
	bool HasSimpleCollision(struct UPrimitiveComponent* Primitive); // Function BattlePrototype.RSUtilityLibrary.HasSimpleCollision // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f36b0
	void GeWorldPostProcesstEnabledMaterials(struct UObject* WorldContextObject, struct FVector Location, struct TArray<struct UMaterialInterface*> OutMaterials, struct TArray<struct FString> OutMaterialNames); // Function BattlePrototype.RSUtilityLibrary.GeWorldPostProcesstEnabledMaterials // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f1e50
	struct TArray<struct APostProcessVolume*> GetWorldPostProcessVolume(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.GetWorldPostProcessVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f35e0
	float GetUROUpdateRate(struct USkinnedMeshComponent* Mesh); // Function BattlePrototype.RSUtilityLibrary.GetUROUpdateRate // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f34e0
	bool GetSystemAvailableWindowedResolutions(struct TArray<struct FScreenResolutionSetting> InResolutions, struct TArray<struct FScreenResolutionSetting> OutResolutions, bool bIgnoreRefreshRate); // Function BattlePrototype.RSUtilityLibrary.GetSystemAvailableWindowedResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f3280
	bool GetSystemAvailableResolutions(struct TArray<struct FScreenResolutionSetting> Resolutions, bool bIgnoreRefreshRate); // Function BattlePrototype.RSUtilityLibrary.GetSystemAvailableResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f3180
	bool GetSystemAvailableFullscreenResolutions(struct TArray<struct FScreenResolutionSetting> InResolutions, struct TArray<struct FScreenResolutionSetting> OutResolutions, bool bIgnoreRefreshRate); // Function BattlePrototype.RSUtilityLibrary.GetSystemAvailableFullscreenResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f2ff0
	struct USkeletalMeshComponent* GetSkeletalMeshFromActor(struct AActor* Actor); // Function BattlePrototype.RSUtilityLibrary.GetSkeletalMeshFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f2eb0
	bool GetScreenResolution(struct FVector2D resolution, bool IsVertical); // Function BattlePrototype.RSUtilityLibrary.GetScreenResolution // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f2dd0
	struct URSGameInstance* GetRSGameInstance(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.GetRSGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f2d50
	struct FName GetPrimaryAssetTypeName(struct FPrimaryAssetType assetType); // Function BattlePrototype.RSUtilityLibrary.GetPrimaryAssetTypeName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x12f2cb0
	bool GetNativeScreenResolution(struct FVector2D resolution, bool IsVertical); // Function BattlePrototype.RSUtilityLibrary.GetNativeScreenResolution // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f2b00
	float GetMaxDistanceFactor(struct USkinnedMeshComponent* Mesh); // Function BattlePrototype.RSUtilityLibrary.GetMaxDistanceFactor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2980
	bool GetInitialScreenResolution(struct FVector2D resolution, bool IsVertical); // Function BattlePrototype.RSUtilityLibrary.GetInitialScreenResolution // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f28a0
	char GetGameViewRenderLayer(); // Function BattlePrototype.RSUtilityLibrary.GetGameViewRenderLayer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2870
	struct FRotator GetCurrentCameraRotation(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.GetCurrentCameraRotation // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f27a0
	struct FTransform GetComposedRefPoseTransform(struct USkeletalMesh* SkeletalMesh, struct FName BoneName); // Function BattlePrototype.RSUtilityLibrary.GetComposedRefPoseTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f26a0
	struct FVector GetCelLookLightDirection(); // Function BattlePrototype.RSUtilityLibrary.GetCelLookLightDirection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f2660
	void GetCelLookAmbientReplaceParam(struct FLinearColor OutColor, float OutRate); // Function BattlePrototype.RSUtilityLibrary.GetCelLookAmbientReplaceParam // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f2580
	struct AActor* GetAssetUClass(struct FName ClassName, struct FName AssetName); // Function BattlePrototype.RSUtilityLibrary.GetAssetUClass // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f24c0
	bool GetAppropriateSystemAvailableResolutions(struct FScreenResolutionSetting resolution, int32_t Width, int32_t Height, bool bIgnoreRefreshRate); // Function BattlePrototype.RSUtilityLibrary.GetAppropriateSystemAvailableResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f2350
	struct TArray<struct AActor*> GetActorsFromLevelStreaming(struct ULevelStreaming* Level); // Function BattlePrototype.RSUtilityLibrary.GetActorsFromLevelStreaming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2280
	struct AActor* GetActorFromTagForLevelName(struct UObject* WorldContextObject, struct FName Tag, struct FName LevelName); // Function BattlePrototype.RSUtilityLibrary.GetActorFromTagForLevelName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f2190
	struct AActor* GetActorFromTagConst(struct UObject* WorldObject, struct FName Tag); // Function BattlePrototype.RSUtilityLibrary.GetActorFromTagConst // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x12f20c0
	struct AActor* GetActorFromTag(struct UObject* WorldObject, struct FName Tag); // Function BattlePrototype.RSUtilityLibrary.GetActorFromTag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f2000
	void GameOverActorStopFunc(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.GameOverActorStopFunc // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1de0
	void GameClearSaveParamAdjust(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.GameClearSaveParamAdjust // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1d70
	void ForceUploadGPUScene(); // Function BattlePrototype.RSUtilityLibrary.ForceUploadGPUScene // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1d50
	void ForceGC_NoEditor(bool bFullPurge); // Function BattlePrototype.RSUtilityLibrary.ForceGC_NoEditor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1cd0
	void ForceGC(bool bFullPurge); // Function BattlePrototype.RSUtilityLibrary.ForceGC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1cd0
	void ExNewGameParamAdjust(struct UObject* WorldContextObject, bool isTakeOverPlayerLv, bool isTakeOverBrainMap); // Function BattlePrototype.RSUtilityLibrary.ExNewGameParamAdjust // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1bc0
	void DebugLogWarning(struct FText warningText); // Function BattlePrototype.RSUtilityLibrary.DebugLogWarning // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1ae0
	void DebugDisplayURO(struct USkinnedMeshComponent* Mesh, bool bDisplay); // Function BattlePrototype.RSUtilityLibrary.DebugDisplayURO // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1a20
	struct UTextureRenderTarget2D* CreateRenderTarget2DCustom(struct UObject* WorldContextObject, int32_t Width, int32_t Height, enum class ERenderTargetCustomFormat Format, enum class TextureAddress AddressX, enum class TextureAddress AddressY, bool LinearGamma); // Function BattlePrototype.RSUtilityLibrary.CreateRenderTarget2DCustom // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1830
	struct UMaterialInstanceDynamic* CreateDynamicMaterialInstanceFromName_Particle(struct URSParticleSystemComponentBase* RSParticleComponent, struct FName EmitterName, struct UMaterialInterface* SourceMaterial); // Function BattlePrototype.RSUtilityLibrary.CreateDynamicMaterialInstanceFromName_Particle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1740
	struct UMaterialInstanceDynamic* CreateDynamicMaterialInstanceFromName_Mesh(struct UMeshComponent* MeshComponent, struct FName MaterialName, struct UMaterialInterface* SourceMaterial); // Function BattlePrototype.RSUtilityLibrary.CreateDynamicMaterialInstanceFromName_Mesh // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1650
	void CopySequencerTemplateToCineCamera(struct ARSLevelSequenceActor* Sequencer, struct FMovieSceneObjectBindingID BindingID, struct UCineCameraComponent* CineCamera); // Function BattlePrototype.RSUtilityLibrary.CopySequencerTemplateToCineCamera // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1530
	void CopyBaseCineCameraToCineCamera(struct UCineCameraComponent* BaseCineCamera, struct UCineCameraComponent* ToCineCamera); // Function BattlePrototype.RSUtilityLibrary.CopyBaseCineCameraToCineCamera // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1480
	enum class EPlayerID ConvertSAStoPlayerID(enum class E_SASKindNative SasKind); // Function BattlePrototype.RSUtilityLibrary.ConvertSAStoPlayerID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1400
	enum class E_SASKindNative ConvertPlayerIDtoSAS(enum class EPlayerID playerId); // Function BattlePrototype.RSUtilityLibrary.ConvertPlayerIDtoSAS // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1380
	struct FString ConvertAssetPathPlatformName(struct FString Path); // Function BattlePrototype.RSUtilityLibrary.ConvertAssetPathPlatformName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f12a0
	bool ConstructLocalEntitleData(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.ConstructLocalEntitleData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1220
	bool CompareSkeleton(struct UAnimSequence* AnimSequence, struct USkeletalMeshComponent* SkelMeshComp); // Function BattlePrototype.RSUtilityLibrary.CompareSkeleton // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f1160
	void ClearPlayerOverlapEvent(struct UObject* WorldContextObject); // Function BattlePrototype.RSUtilityLibrary.ClearPlayerOverlapEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f10f0
	void ClearMainViewTemporalBuffer(); // Function BattlePrototype.RSUtilityLibrary.ClearMainViewTemporalBuffer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f10d0
	struct FPostProcessSettings CalcStaticCapturePostProcessSettings(struct USceneCaptureComponent2D* SceneCapture, struct TArray<struct APostProcessVolume*> PostProcessLists, struct TArray<struct FPostProcessSettings> AddPPSs, struct FVector Location, float AddPPSPriority, bool CheckEnable); // Function BattlePrototype.RSUtilityLibrary.CalcStaticCapturePostProcessSettings // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f0da0
	struct FPostProcessSettings CalcScenePostProcessVolume(struct UObject* WorldContextObject, struct FVector Location, bool CheckEnable); // Function BattlePrototype.RSUtilityLibrary.CalcScenePostProcessVolume // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f0c40
	struct FPostProcessSettings CalcSceneCapturePostProcessSettings(struct USceneCaptureComponent2D* SceneCapture, struct TArray<struct APostProcessVolume*> PostProcessLists, struct FVector Location, bool CheckEnable); // Function BattlePrototype.RSUtilityLibrary.CalcSceneCapturePostProcessSettings // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f0a40
	struct FTransform CalcRootMotionTransform(struct USkeletalMeshComponent* Mesh, bool bWorld); // Function BattlePrototype.RSUtilityLibrary.CalcRootMotionTransform // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f0940
	struct FPostProcessSettings CalcPostProcessVolume(struct TArray<struct APostProcessVolume*> PostProcessLists, struct FVector Location, bool CheckEnable); // Function BattlePrototype.RSUtilityLibrary.CalcPostProcessVolume // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f0780
	int32_t BitFlagOn(int32_t Flag, int32_t bitIndex); // Function BattlePrototype.RSUtilityLibrary.BitFlagOn // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f06c0
	int32_t BitFlagOff(int32_t Flag, int32_t bitIndex); // Function BattlePrototype.RSUtilityLibrary.BitFlagOff // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f0600
	bool BitFlagCheck(int32_t Flag, int32_t bitIndex); // Function BattlePrototype.RSUtilityLibrary.BitFlagCheck // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f0540
	void BackToTitle(struct UObject* WorldContextObject, bool bAccountReset); // Function BattlePrototype.RSUtilityLibrary.BackToTitle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f0480
	bool ApplyDLC(struct UObject* WorldContextObject, struct FName contentsName, bool isForceApply); // Function BattlePrototype.RSUtilityLibrary.ApplyDLC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12f0390
	void AddStageParameterSettings(struct FStageParameterSettings BaseSetting, struct FStageParameterSettings OverrideSetting, float Weight, struct FStageParameterSettings OutSettings); // Function BattlePrototype.RSUtilityLibrary.AddStageParameterSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f0190
	struct FPostProcessSettings AddPostProcessSettingsCamera(struct FPostProcessSettings BaseSettings, struct UCineCameraComponent* OverrideCamera); // Function BattlePrototype.RSUtilityLibrary.AddPostProcessSettingsCamera // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12f0060
	struct FPostProcessSettings AddPostProcessSettings(struct FPostProcessSettings BaseSettings, struct FPostProcessSettings OverrideSettings, float Weight); // Function BattlePrototype.RSUtilityLibrary.AddPostProcessSettings // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12efea0
	struct FWeightedBlendables AddPostProcessMaterials(struct FWeightedBlendables BaseMaterials, struct FWeightedBlendables OverrideMaterials, float Weight); // Function BattlePrototype.RSUtilityLibrary.AddPostProcessMaterials // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12efd00
	struct FString AddAssetPathSuffix(struct FString Path, struct FString Suffix, int32_t LastIndex); // Function BattlePrototype.RSUtilityLibrary.AddAssetPathSuffix // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12efb90
	struct FString AddAssetPathPrefix(struct FString Path, struct FString Prefix, int32_t Index); // Function BattlePrototype.RSUtilityLibrary.AddAssetPathPrefix // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12efa20
};

// Class BattlePrototype.RSUtilityMathFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct URSUtilityMathFunctionLibrary : UBlueprintFunctionLibrary {

	struct FVector UpDownVector(struct FVector Src, float Angle); // Function BattlePrototype.RSUtilityMathFunctionLibrary.UpDownVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12fac60
	float UpdateTimer(float Timer, float DeltaSeconds); // Function BattlePrototype.RSUtilityMathFunctionLibrary.UpdateTimer // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12fad40
	struct FVector TurnToTargetVector(struct FVector srcVec, struct FVector dstVec, float Angle); // Function BattlePrototype.RSUtilityMathFunctionLibrary.TurnToTargetVector // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12fab20
	bool IsNearlyAngle(float A, float B, float Angle); // Function BattlePrototype.RSUtilityMathFunctionLibrary.IsNearlyAngle // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12fa090
	float GetTargetRangeAngle(struct FVector baseDist, struct FVector targetDist); // Function BattlePrototype.RSUtilityMathFunctionLibrary.GetTargetRangeAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f9fb0
	float GetTargetAngle(struct FVector baseDist, struct FVector targetDist); // Function BattlePrototype.RSUtilityMathFunctionLibrary.GetTargetAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f9ed0
	void GetSearchBaseParam(struct UObject* WorldContextObject, struct FVector outPlayerLocation, struct FVector outCameraDirH); // Function BattlePrototype.RSUtilityMathFunctionLibrary.GetSearchBaseParam // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f9dc0
	struct FVector GetDamageReactionDir(struct AActor* Owner, struct FHCHitResult HitResult); // Function BattlePrototype.RSUtilityMathFunctionLibrary.GetDamageReactionDir // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f9b10
	struct FVector GetBulletDirection(struct FVector FireLocation, struct FVector TargetLocation, struct FVector FireForwardVector, float MaxAngleXY, float MaxAngleZ); // Function BattlePrototype.RSUtilityMathFunctionLibrary.GetBulletDirection // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f9950
	struct FVector ClampVectorLimitAngle(struct FVector baseDist, struct FVector checkDist, float limitDegree); // Function BattlePrototype.RSUtilityMathFunctionLibrary.ClampVectorLimitAngle // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x12f9810
	bool CalcMeshSocketRotation(struct FVector OutLocation, struct FRotator outRotator, struct AActor* rotateActor, struct UMeshComponent* Mesh, struct FName SocketName, float Angle); // Function BattlePrototype.RSUtilityMathFunctionLibrary.CalcMeshSocketRotation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x12f95f0
};

// Class BattlePrototype.RSWidgetComponent
// Size: 0x550 (Inherited: 0x550)
struct URSWidgetComponent : UWidgetComponent {

	void CallUpdateWidget(); // Function BattlePrototype.RSWidgetComponent.CallUpdateWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x12f97f0
};

// Class BattlePrototype.SASManager
// Size: 0x238 (Inherited: 0x230)
struct ASASManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)

	void ResetHudCustomTimeDilationAccelerateSettings(); // Function BattlePrototype.SASManager.ResetHudCustomTimeDilationAccelerateSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x12fa4c0
	bool IsPlayingCutinExtra(); // Function BattlePrototype.SASManager.IsPlayingCutinExtra // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118ac80
	bool IsCutinPlayingNative(); // Function BattlePrototype.SASManager.IsCutinPlayingNative // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x118a6d0
	bool GetSASEffectFixParam(enum class E_SASKindNative InKind, struct TArray<struct F_SASParamNative> OutFixParam); // Function BattlePrototype.SASManager.GetSASEffectFixParam // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.SASVisionComponent
// Size: 0x178 (Inherited: 0xc0)
struct USASVisionComponent : UActorComponent {
	struct AActor* _maskActorClass; // 0xc0(0x08)
	struct UCurveVector* _curveMaskAppearLocation; // 0xc8(0x08)
	struct UCurveVector* _curveMaskDisappearLocation; // 0xd0(0x08)
	struct UCurveVector* _curveMaskRotation; // 0xd8(0x08)
	struct UCurveVector* _curveMaskScale; // 0xe0(0x08)
	bool _bDebugDispMask; // 0xe8(0x01)
	char pad_E9[0x3]; // 0xe9(0x03)
	struct FVector _meshShakeOffsetMax; // 0xec(0x0c)
	float _meshShakeSpanShort; // 0xf8(0x04)
	float _meshShakeSpanLongMin; // 0xfc(0x04)
	float _meshShakeSpanLongMax; // 0x100(0x04)
	int32_t _meshShakeSmallContinueMin; // 0x104(0x04)
	int32_t _meshShakeSmallContinueMax; // 0x108(0x04)
	bool _bShakeLinear; // 0x10c(0x01)
	char pad_10D[0x6b]; // 0x10d(0x6b)

	void StartDisappear(); // Function BattlePrototype.SASVisionComponent.StartDisappear // (Final|Native|Public|BlueprintCallable) // @ game+0x12faa40
	bool OnStartDisappear(); // Function BattlePrototype.SASVisionComponent.OnStartDisappear // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	struct USASVisionComponent* GetSASVisionComponent(struct AActor* Actor); // Function BattlePrototype.SASVisionComponent.GetSASVisionComponent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x12f9ca0
	struct USkeletalMeshComponent* GetMainMesh(); // Function BattlePrototype.SASVisionComponent.GetMainMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12f9c80
	struct AActor* GetMainActor(); // Function BattlePrototype.SASVisionComponent.GetMainActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12f9c60
};

// Class BattlePrototype.SaveIntermediary
// Size: 0x230 (Inherited: 0x230)
struct ASaveIntermediary : AActor {

	char TestBuffer(int32_t Num, int32_t Index); // Function BattlePrototype.SaveIntermediary.TestBuffer // (Final|Native|Public|BlueprintCallable) // @ game+0x12faa60
	void Save(struct FString SlotName, int32_t testInt, float testFloat, struct FName testName, struct TArray<int32_t> testArrayInt, struct FSaveTestStruct testStruct, struct TArray<struct FSaveTestStruct> testArrayStruct); // Function BattlePrototype.SaveIntermediary.Save // (Final|Native|Public|BlueprintCallable) // @ game+0x12fa4e0
	void Load(struct FString saveSlotName, int32_t testInt, float testFloat, struct FName testName, struct TArray<int32_t> testArrayInt, struct FSaveTestStruct testStruct, struct TArray<struct FSaveTestStruct> testArrayStruct); // Function BattlePrototype.SaveIntermediary.Load // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12fa1a0
};

// Class BattlePrototype.SaveLoadArrangeItemManager
// Size: 0x60 (Inherited: 0x28)
struct USaveLoadArrangeItemManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TArray<struct FArrangeItemListForSaveData> m_allArrangeItemList; // 0x38(0x10)
	struct TArray<struct FRandomArrangeItemIDInfo> m_allRandomArrangeItemIDInfo; // 0x48(0x10)
	double m_timerCount; // 0x58(0x08)
};

// Class BattlePrototype.SaveLoadEnemyParamManager
// Size: 0xd8 (Inherited: 0x28)
struct USaveLoadEnemyParamManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TMap<struct FName, struct FEnemyRepopLevelInfo> m_EnemyRepopLevelInfoList; // 0x38(0x50)
	struct TMap<struct FName, bool> m_UniqueBrainCrashPlayedList; // 0x88(0x50)
};

// Class BattlePrototype.SaveLoadExSystemParamManager
// Size: 0xa8 (Inherited: 0x28)
struct USaveLoadExSystemParamManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TArray<char> m_AdditionalSystemSave; // 0x38(0x10)
	struct FPatch01Param Patch01Param; // 0x48(0x58)
	char pad_A0[0x8]; // 0xa0(0x08)
};

// Class BattlePrototype.SaveLoadParamClassManager
// Size: 0x88 (Inherited: 0x28)
struct USaveLoadParamClassManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	bool m_isLoadExecution; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct TArray<char> m_RetryData; // 0x38(0x10)
	struct TArray<char> m_AsyncAutoSaveData; // 0x48(0x10)
	struct USaveLoadSystemParamManager* m_pSaveLoadSystemParamManager; // 0x58(0x08)
	struct USaveLoadPlayerParamManager* m_pSaveLoadPlayerParamManager; // 0x60(0x08)
	struct USaveLoadEnemyParamManager* m_pSaveLoadEnemyParamManager; // 0x68(0x08)
	struct USaveLoadArrangeItemManager* m_pSaveLoadArrangeItemManager; // 0x70(0x08)
	struct USaveLoadExSystemParamManager* m_pSaveLoadExSystemParamManager; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)

	void SetSaveParamToGameParam_ScenarioFlag(struct URSGameInstance* gameInst); // Function BattlePrototype.SaveLoadParamClassManager.SetSaveParamToGameParam_ScenarioFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fa9c0
	void SetSaveParamToGameParam(struct URSGameInstance* gameInst); // Function BattlePrototype.SaveLoadParamClassManager.SetSaveParamToGameParam // (Final|Native|Public|BlueprintCallable) // @ game+0x12fa940
	void SetIsLoadExecution(bool Flag); // Function BattlePrototype.SaveLoadParamClassManager.SetIsLoadExecution // (Final|Native|Public|BlueprintCallable) // @ game+0x12fa8c0
	void SetGameInstance(struct URSGameInstance* gameInst); // Function BattlePrototype.SaveLoadParamClassManager.SetGameInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x12fa840
	bool IsLoadExecution(); // Function BattlePrototype.SaveLoadParamClassManager.IsLoadExecution // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1252640
	struct USaveLoadSystemParamManager* GetSaveLoadSystemParamManager(); // Function BattlePrototype.SaveLoadParamClassManager.GetSaveLoadSystemParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12f9da0
	struct USaveLoadPlayerParamManager* GetSaveLoadPlayerParamManager(); // Function BattlePrototype.SaveLoadParamClassManager.GetSaveLoadPlayerParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12f9d80
	struct USaveLoadExSystemParamManager* GetSaveLoadExSystemParamManager(); // Function BattlePrototype.SaveLoadParamClassManager.GetSaveLoadExSystemParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12f9d60
	struct USaveLoadEnemyParamManager* GetSaveLoadEnemyParamManager(); // Function BattlePrototype.SaveLoadParamClassManager.GetSaveLoadEnemyParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12f9d40
	struct USaveLoadArrangeItemManager* GetSaveLoadArrangeItemManager(); // Function BattlePrototype.SaveLoadParamClassManager.GetSaveLoadArrangeItemManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12f9d20
};

// Class BattlePrototype.SaveLoadPlayerParamManager
// Size: 0x60 (Inherited: 0x28)
struct USaveLoadPlayerParamManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	enum class EPlayerID m_BattleMemberMain; // 0x38(0x01)
	enum class EPlayerID m_BattleMemberLeft; // 0x39(0x01)
	enum class EPlayerID m_BattleMemberRight; // 0x3a(0x01)
	char pad_3B[0x5]; // 0x3b(0x05)
	struct TArray<struct FSaveLoadPlayerParam> m_saveLoadPlayerParamList; // 0x40(0x10)
	int32_t m_NpcAssistCountHP; // 0x50(0x04)
	int32_t m_NpcAssistCountBadStatus; // 0x54(0x04)
	int32_t m_NpcAssistCountRevive; // 0x58(0x04)
	bool m_bDriveUsedFlag; // 0x5c(0x01)
	char pad_5D[0x3]; // 0x5d(0x03)
};

// Class BattlePrototype.SaveLoadPsychicObjectManager
// Size: 0x48 (Inherited: 0x28)
struct USaveLoadPsychicObjectManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TArray<struct FSaveLoadPsychicObjectParam> m_saveLoadPsychicObjectParamList; // 0x38(0x10)
};

// Class BattlePrototype.SaveLoadScreenParamManager
// Size: 0x50 (Inherited: 0x28)
struct USaveLoadScreenParamManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TArray<struct FSaveLoadScreenParam> m_saveLoadScreenParamList; // 0x38(0x10)
	char pad_48[0x8]; // 0x48(0x08)
};

// Class BattlePrototype.SaveLoadSystemParamManager
// Size: 0xc8 (Inherited: 0x28)
struct USaveLoadSystemParamManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	int32_t m_LastSaveSlotNo; // 0x38(0x04)
	char pad_3C[0x4]; // 0x3c(0x04)
	struct TArray<uint32_t> m_ScenarioFlags; // 0x40(0x10)
	int32_t m_ProgressID; // 0x50(0x04)
	int32_t m_LocationID; // 0x54(0x04)
	int32_t m_AreaID; // 0x58(0x04)
	int32_t m_VariationID; // 0x5c(0x04)
	int32_t m_PortalID; // 0x60(0x04)
	char pad_64[0x4]; // 0x64(0x04)
	struct TArray<char> m_LiftFloorList; // 0x68(0x10)
	struct TArray<struct FString> m_LoadMakeEventPathList; // 0x78(0x10)
	char pad_88[0x40]; // 0x88(0x40)

	void SetLastSaveSlotNo(int32_t slotNo); // Function BattlePrototype.SaveLoadSystemParamManager.SetLastSaveSlotNo // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe300
	int32_t GetLastSaveSlotNo(); // Function BattlePrototype.SaveLoadSystemParamManager.GetLastSaveSlotNo // (Final|Native|Public|BlueprintCallable) // @ game+0x6b8f00
};

// Class BattlePrototype.SavePointBase
// Size: 0x2c8 (Inherited: 0x230)
struct ASavePointBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct USkeletalMeshComponent* SkeletalMeshComponent; // 0x238(0x08)
	struct UBoxComponent* ShowBoxComponent; // 0x240(0x08)
	struct UCapsuleComponent* CollisionCapsuleComponent; // 0x248(0x08)
	struct UBoxComponent* EventBoxComponent; // 0x250(0x08)
	struct AMakeEventActor* MakeEventActorClass; // 0x258(0x08)
	struct AMakeEventActor* MakeEventActor; // 0x260(0x08)
	struct UChildActorComponent* ChildActionIcon; // 0x268(0x08)
	struct FVector ActionIconWorldPositionOffset; // 0x270(0x0c)
	enum class EActionIconType actionIconType; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	struct FUIMapIconAdjust MapIconAdjust; // 0x280(0x24)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct ANpcShopBase* PairActor; // 0x2a8(0x08)
	bool IsFitGround; // 0x2b0(0x01)
	char pad_2B1[0x17]; // 0x2b1(0x17)

	void RegisterPairActor(); // Function BattlePrototype.SavePointBase.RegisterPairActor // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe160
	struct UChildActorComponent* GetChildActionIcon(); // Function BattlePrototype.SavePointBase.GetChildActionIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x124aa90
};

// Class BattlePrototype.ScarParam
// Size: 0x100 (Inherited: 0x30)
struct UScarParam : UDataAsset {
	float LengthStroke; // 0x30(0x04)
	float LengthThick; // 0x34(0x04)
	float LengthFront; // 0x38(0x04)
	struct FScarColorParam ColorNormal; // 0x3c(0x40)
	struct FScarColorParam ColorFlame; // 0x7c(0x40)
	struct FScarColorParam ColorElectric; // 0xbc(0x40)
	char pad_FC[0x4]; // 0xfc(0x04)
};

// Class BattlePrototype.SceneManager
// Size: 0x2c0 (Inherited: 0x230)
struct ASceneManager : ARSActorSystemBase {
	char pad_230[0x10]; // 0x230(0x10)
	bool IsAreaChanging; // 0x240(0x01)
	char pad_241[0x7]; // 0x241(0x07)
	struct FMulticastInlineDelegate OnBeforeChangeScenarioFlag; // 0x248(0x10)
	struct FMulticastInlineDelegate OnAfterChangeScenarioFlag; // 0x258(0x10)
	struct FMulticastInlineDelegate OnChangeAreaLoadStatus; // 0x268(0x10)
	bool IsCheckTextureLoadAtStartScene; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	int32_t TextureLoadPercentAtStartScene; // 0x27c(0x04)
	struct TArray<struct AJumpAreaBase*> CurrentEnabledJumpAreas; // 0x280(0x10)
	struct TArray<uint32_t> m_flags; // 0x290(0x10)
	struct UDataTable* m_FlagTable; // 0x2a0(0x08)
	struct UBlueprintFunctionLibrary* FunctionLibrary; // 0x2a8(0x08)
	struct AActor* m_FunctionLibraryActor; // 0x2b0(0x08)
	bool m_isSaveDataLoadFlow_ArrangeItemManager; // 0x2b8(0x01)
	bool m_isAreaChangeRetrySaveFlag; // 0x2b9(0x01)
	char pad_2BA[0x6]; // 0x2ba(0x06)

	void ToggleScenarioFlag(struct FName RowName); // Function BattlePrototype.SceneManager.ToggleScenarioFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe460
	void SetIsSaveDataLoadFlow_ArrangeItemManager(bool Flag); // Function BattlePrototype.SceneManager.SetIsSaveDataLoadFlow_ArrangeItemManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe280
	void SetIsAreaChangeRetrySaveFlag(bool Flag); // Function BattlePrototype.SceneManager.SetIsAreaChangeRetrySaveFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe200
	void RequestChangeSceneBattleSimulator(struct FName BattleSimulatorRowName); // Function BattlePrototype.SceneManager.RequestChangeSceneBattleSimulator // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void RequestChangeScene(int32_t LocationId, int32_t areaId, int32_t PortalID, struct TArray<struct FName> SceneArgs, bool NoFade, bool Error, enum class ELoadingScreenType LoadingScreenType, int32_t LoadingScreenParam, bool IsAutoSaveEnable, struct FName BattleSimulatorLevelInfosName); // Function BattlePrototype.SceneManager.RequestChangeScene // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void RemoveCurrentJumpArea(struct AJumpAreaBase* Actor); // Function BattlePrototype.SceneManager.RemoveCurrentJumpArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe180
	void OnScenarioFlag(struct FName RowName); // Function BattlePrototype.SceneManager.OnScenarioFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe0e0
	bool OnEndGameMenu(); // Function BattlePrototype.SceneManager.OnEndGameMenu // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0xad4510
	void OffScenarioFlag(struct FName RowName); // Function BattlePrototype.SceneManager.OffScenarioFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fdf90
	bool IsSaveDataLoadFlow_ArrangeItemManager(); // Function BattlePrototype.SceneManager.IsSaveDataLoadFlow_ArrangeItemManager // (Final|Native|Public|BlueprintCallable) // @ game+0x12fdcf0
	bool IsAreaChangeRetrySaveFlag(); // Function BattlePrototype.SceneManager.IsAreaChangeRetrySaveFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fda60
	enum class EMainScenarioType GetMainScenarioType(); // Function BattlePrototype.SceneManager.GetMainScenarioType // (Final|Native|Public|BlueprintCallable) // @ game+0x12fda30
	struct FName GetCurrentLocationName(); // Function BattlePrototype.SceneManager.GetCurrentLocationName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12fd8c0
	void GetCurrentLocationInfo(int32_t LocationId, int32_t areaId, int32_t VariationID, int32_t PortalID); // Function BattlePrototype.SceneManager.GetCurrentLocationInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetCurrentLocationAndArea(int32_t LocationId, int32_t areaId); // Function BattlePrototype.SceneManager.GetCurrentLocationAndArea // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct FName GetBeforeLocationName(); // Function BattlePrototype.SceneManager.GetBeforeLocationName // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x12fd8c0
	void GetBeforeLocationAndArea(int32_t LocationId, int32_t areaId); // Function BattlePrototype.SceneManager.GetBeforeLocationAndArea // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void FlushPhysicsSimulation(); // Function BattlePrototype.SceneManager.FlushPhysicsSimulation // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd880
	void ClearCurrentJumpArea(); // Function BattlePrototype.SceneManager.ClearCurrentJumpArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd860
	bool CheckScenarioFlag(struct FName RowName); // Function BattlePrototype.SceneManager.CheckScenarioFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd7d0
	void CallPortalFunction(int32_t LocationId, int32_t areaId, int32_t PortalID, int32_t NextLocationID, int32_t NextAreaID, struct FName PortalName); // Function BattlePrototype.SceneManager.CallPortalFunction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x12fd5e0
	void CallOnChangeAreaLoadStatus(enum class EChangeAreaStatus Status, bool IsChangeLocation); // Function BattlePrototype.SceneManager.CallOnChangeAreaLoadStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd510
	void CallFuncFromCode_UpdateAllTownPeopleState(); // Function BattlePrototype.SceneManager.CallFuncFromCode_UpdateAllTownPeopleState // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void AddCurrentJumpArea(struct AJumpAreaBase* Actor); // Function BattlePrototype.SceneManager.AddCurrentJumpArea // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd490
};

// Class BattlePrototype.SearchingComponent
// Size: 0xc0 (Inherited: 0xc0)
struct USearchingComponent : UActorComponent {

	bool IsSearch(struct FVector vecStart, struct FVector vecEnd, struct FVector vecForward, float Distance, float Range); // Function BattlePrototype.SearchingComponent.IsSearch // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x12fdd10
	bool IsDistanceAngleCheck(struct AActor* Target, struct FVector TargetLocation, float Range, float Angle, struct FRotator Rot, bool noHeight, struct FVector selfLocation, bool selfLocationOn); // Function BattlePrototype.SearchingComponent.IsDistanceAngleCheck // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x12fda80
};

// Class BattlePrototype.SeqAnimInstance
// Size: 0x270 (Inherited: 0x270)
struct USeqAnimInstance : UAnimInstance {
};

// Class BattlePrototype.SequencerCharacterDummy
// Size: 0x238 (Inherited: 0x230)
struct ASequencerCharacterDummy : ARSActorSystemBase {
	struct USkeletalMeshComponent* Mesh; // 0x230(0x08)
};

// Class BattlePrototype.SequencerEventUtility
// Size: 0x230 (Inherited: 0x230)
struct ASequencerEventUtility : AActor {
};

// Class BattlePrototype.SequencerFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct USequencerFunctionLibrary : UBlueprintFunctionLibrary {

	bool IsSequencerSpawner(struct ARSLevelSequenceActor* Sequencer, struct UObject* Object); // Function BattlePrototype.SequencerFunctionLibrary.IsSequencerSpawner // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x12fded0
	bool GetGhostTrailInfo(struct ARSLevelSequenceActor* Sequencer, struct UObject* GhostTrailObject, struct TArray<struct FGhostTrailInfo> GhostTrailInfo); // Function BattlePrototype.SequencerFunctionLibrary.GetGhostTrailInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x12fd910
};

// Class BattlePrototype.SequencerMovieManagerController
// Size: 0x240 (Inherited: 0x230)
struct ASequencerMovieManagerController : AActor {
	struct TArray<struct UManaTexture*> ManaTextureArray; // 0x230(0x10)
};

// Class BattlePrototype.SequencerParticle
// Size: 0x268 (Inherited: 0x230)
struct ASequencerParticle : AActor {
	float WarmupTime; // 0x230(0x04)
	struct FBoolVector AttachSocketLocation; // 0x234(0x03)
	struct FBoolVector AttachSocketRotation; // 0x237(0x03)
	enum class ERSParticleSystemAttachRotationOffMode AttachSocketRotationOffMode; // 0x23a(0x01)
	struct FBoolVector AttachSocketScale; // 0x23b(0x03)
	enum class ESequencerDilationOwner DilationOwner; // 0x23e(0x01)
	char pad_23F[0x1]; // 0x23f(0x01)
	struct URSParticleSystemComponentBase* ParticleSystemComponent; // 0x240(0x08)
	char pad_248[0x20]; // 0x248(0x20)

	void SetupAttachInstanceParameter(); // Function BattlePrototype.SequencerParticle.SetupAttachInstanceParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe380
	void OnActivated(struct UActorComponent* Component, bool bReset); // Function BattlePrototype.SequencerParticle.OnActivated // (Final|Native|Protected) // @ game+0x12fe010
};

// Class BattlePrototype.SequencerParticleTrail
// Size: 0x290 (Inherited: 0x268)
struct ASequencerParticleTrail : ASequencerParticle {
	struct FName FirstSocketName; // 0x268(0x08)
	struct FName SecondSocketName; // 0x270(0x08)
	enum class ETrailWidthMode WidthScaleMode; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	float WidthScale; // 0x27c(0x04)
	float FadeRate; // 0x280(0x04)
	struct FName FadeOutMaterialScalarName; // 0x284(0x08)
	char pad_28C[0x4]; // 0x28c(0x04)
};

// Class BattlePrototype.SequencerSound
// Size: 0x240 (Inherited: 0x230)
struct ASequencerSound : AActor {
	struct URSAtomComponentBase* AtomComponent; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)

	void StopSequenceSound(float FadeTime, float FadeVolume); // Function BattlePrototype.SequencerSound.StopSequenceSound // (Final|Native|Public|BlueprintCallable) // @ game+0x12fe3a0
	struct URSAtomComponentBase* GetAtomComponent(); // Function BattlePrototype.SequencerSound.GetAtomComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x12fd8a0
};

// Class BattlePrototype.SequencerSoundManagerController
// Size: 0x240 (Inherited: 0x230)
struct ASequencerSoundManagerController : AActor {
	struct TArray<struct USoundAtomCue*> BgmCueArray; // 0x230(0x10)
};

// Class BattlePrototype.ShowDestinationActor
// Size: 0x230 (Inherited: 0x230)
struct AShowDestinationActor : AActor {
};

// Class BattlePrototype.ShowDestinationData
// Size: 0x30 (Inherited: 0x28)
struct UShowDestinationData : UObject {
	struct UShowDestinationDBAsset* showDestinationAsset_; // 0x28(0x08)

	bool LoadDataAsset(struct FString dtPath); // Function BattlePrototype.ShowDestinationData.LoadDataAsset // (Final|Native|Public|BlueprintCallable) // @ game+0x1301880
	struct TMap<struct FName, struct FShowDestinationDBDataCell> GetDB(); // Function BattlePrototype.ShowDestinationData.GetDB // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13015d0
	void GetDataCellFromActorName(struct FName ActorName, struct FShowDestinationDBDataCell cell); // Function BattlePrototype.ShowDestinationData.GetDataCellFromActorName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1301670
};

// Class BattlePrototype.ShowDestinationDBAsset
// Size: 0x78 (Inherited: 0x28)
struct UShowDestinationDBAsset : UObject {
	struct TMap<struct FName, struct FShowDestinationDBDataCell> DBMap; // 0x28(0x50)

	void Convert(); // Function BattlePrototype.ShowDestinationDBAsset.Convert // (Final|Native|Public) // @ game+0x8518d0
};

// Class BattlePrototype.ShowDestinationExporter
// Size: 0x2c8 (Inherited: 0x230)
struct AShowDestinationExporter : AActor {
	char pad_230[0x98]; // 0x230(0x98)

	void RegistSortData(struct FString ActorName, struct FString LocationName, struct FString AreaName, struct FVector actorPosition, int32_t CheckType, int32_t ProgressId, int32_t nanka, struct TArray<int32_t> cType, struct TArray<struct FString> cName, struct TArray<bool> cIsCheck); // Function BattlePrototype.ShowDestinationExporter.RegistSortData // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1301f70
	void RegistData(struct FString ActorName, struct FVector actorPosition, int32_t CheckType, int32_t ProgressId, int32_t nanka, struct TArray<int32_t> cType, struct TArray<struct FString> cName, struct TArray<bool> cIsCheck, struct FString LocationName, struct FString AreaName); // Function BattlePrototype.ShowDestinationExporter.RegistData // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1301970
	void GetAllActorsOfAllLevels(struct UObject* WorldContextObject, struct TArray<struct AActor*> Actors); // Function BattlePrototype.ShowDestinationExporter.GetAllActorsOfAllLevels // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1301090
	void ExportData(); // Function BattlePrototype.ShowDestinationExporter.ExportData // (Final|Native|Public|BlueprintCallable) // @ game+0x1300df0
	void ConvertString(); // Function BattlePrototype.ShowDestinationExporter.ConvertString // (Final|Native|Private) // @ game+0x1300d70
};

// Class BattlePrototype.ShowDestinationTableExporter
// Size: 0x270 (Inherited: 0x230)
struct AShowDestinationTableExporter : AActor {
	char pad_230[0x20]; // 0x230(0x20)
	struct TArray<struct ULevel*> loadedLevels_; // 0x250(0x10)
	struct TArray<struct FShowDestinationActorData> pickedUpActor_; // 0x260(0x10)

	void StartupAtLoadBeginDoOnce(); // Function BattlePrototype.ShowDestinationTableExporter.StartupAtLoadBeginDoOnce // (Final|Native|Public|BlueprintCallable) // @ game+0x1302900
	void SearchLoadedLevels(); // Function BattlePrototype.ShowDestinationTableExporter.SearchLoadedLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x1302720
	void RegistExportDatas(struct TArray<struct FShowDestinationActorData> exportDatas); // Function BattlePrototype.ShowDestinationTableExporter.RegistExportDatas // (Final|Native|Public|BlueprintCallable) // @ game+0x1301e50
	bool RegistDataAtLoadedLevel(int32_t LocationId, int32_t areaId); // Function BattlePrototype.ShowDestinationTableExporter.RegistDataAtLoadedLevel // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void GetAllActorsOfAllLevels(struct UObject* WorldContextObject, struct TArray<struct AActor*> pickedUpActor, int32_t LocationId, int32_t areaId); // Function BattlePrototype.ShowDestinationTableExporter.GetAllActorsOfAllLevels // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1301180
	void ExportCSVData(); // Function BattlePrototype.ShowDestinationTableExporter.ExportCSVData // (Final|Native|Public|BlueprintCallable) // @ game+0x1300dd0
};

// Class BattlePrototype.SIWBlock
// Size: 0x238 (Inherited: 0x230)
struct ASIWBlock : AActor {
	float AttenuationRate; // 0x230(0x04)
	char pad_234[0x4]; // 0x234(0x04)
};

// Class BattlePrototype.SIWManager
// Size: 0x140 (Inherited: 0xc0)
struct USIWManager : UActorComponent {
	float WithoutCalcAttenuationNearDistance; // 0xc0(0x04)
	float WithoutCalcAttenuationFarDistance; // 0xc4(0x04)
	char pad_C8[0x78]; // 0xc8(0x78)
};

// Class BattlePrototype.SnowCaptureBase
// Size: 0x338 (Inherited: 0x230)
struct ASnowCaptureBase : AActor {
	struct USceneComponent* rootComponent_; // 0x230(0x08)
	struct URSSceneCaptureComponent2D* sceneCaptureComponent_; // 0x238(0x08)
	struct UStaticMeshComponent* simpleMeshComponentCenter_; // 0x240(0x08)
	struct UStaticMeshComponent* simpleMeshComponentLeft_; // 0x248(0x08)
	struct UStaticMeshComponent* simpleMeshComponentRight_; // 0x250(0x08)
	struct UStaticMeshComponent* simpleMeshFootComponentCenter_; // 0x258(0x08)
	struct UStaticMeshComponent* simpleMeshFootComponentLeft_; // 0x260(0x08)
	struct UStaticMeshComponent* simpleMeshFootComponentRight_; // 0x268(0x08)
	struct UStaticMeshComponent* simpleBodyMeshComponentCenter_; // 0x270(0x08)
	struct UStaticMeshComponent* simpleBodyMeshComponentLeft_; // 0x278(0x08)
	struct UStaticMeshComponent* simpleBodyMeshComponentRight_; // 0x280(0x08)
	struct TArray<struct ALandscapeProxy*> landscapes_; // 0x288(0x10)
	struct TArray<struct FSnowDepthData> depthDatas_; // 0x298(0x10)
	struct UMaterialInterface* depthMaterialBase_; // 0x2a8(0x08)
	float addDepthValue_; // 0x2b0(0x04)
	int32_t textureSize_; // 0x2b4(0x04)
	int32_t blurLevel_; // 0x2b8(0x04)
	bool useBlurBeforeFrameTex_; // 0x2bc(0x01)
	char pad_2BD[0x3]; // 0x2bd(0x03)
	float blurSpeedMulti_; // 0x2c0(0x04)
	float beforeCaptureDecayValue_; // 0x2c4(0x04)
	bool useSimpleMesh_; // 0x2c8(0x01)
	bool useBothFeetSimpleMesh_; // 0x2c9(0x01)
	char pad_2CA[0x6]; // 0x2ca(0x06)
	struct UStaticMesh* simpleMesh_; // 0x2d0(0x08)
	struct FVector simpleMeshScale_; // 0x2d8(0x0c)
	char pad_2E4[0x4]; // 0x2e4(0x04)
	struct UStaticMesh* simpleBodyMesh_; // 0x2e8(0x08)
	struct FVector simpleBodyMeshScale_; // 0x2f0(0x0c)
	char pad_2FC[0x4]; // 0x2fc(0x04)
	struct ARSCharacterBase* playerData_; // 0x300(0x08)
	bool isOddFrame_; // 0x308(0x01)
	char pad_309[0x3]; // 0x309(0x03)
	struct FVector beforeActorEven_; // 0x30c(0x0c)
	struct FVector beforeActorOdd_; // 0x318(0x0c)
	char pad_324[0x4]; // 0x324(0x04)
	struct UMaterialParameterCollection* mpcSnowCapture_; // 0x328(0x08)
	char pad_330[0x8]; // 0x330(0x08)

	void SetLandscapematerialParam(struct FSnowDepthData depthData, struct FVector beforeLocation); // Function BattlePrototype.SnowCaptureBase.SetLandscapematerialParam // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1685580
	void RegistShowOnlyActorComponent(); // Function BattlePrototype.SnowCaptureBase.RegistShowOnlyActorComponent // (Final|Native|Protected|BlueprintCallable) // @ game+0x1301f50
	void CreateSnowMaterialInstance(); // Function BattlePrototype.SnowCaptureBase.CreateSnowMaterialInstance // (Final|Native|Protected|BlueprintCallable) // @ game+0x1300db0
	void CreateRenderTargets(); // Function BattlePrototype.SnowCaptureBase.CreateRenderTargets // (Final|Native|Protected|BlueprintCallable) // @ game+0x1300d90
};

// Class BattlePrototype.SoundBackground
// Size: 0x238 (Inherited: 0x230)
struct ASoundBackground : ARSActorBackgroundBase {
	struct URSAtomComponentBase* AtomComponent; // 0x230(0x08)
};

// Class BattlePrototype.SoundCategoryComponent
// Size: 0x190 (Inherited: 0xc0)
struct USoundCategoryComponent : UActorComponent {
	char pad_C0[0xd0]; // 0xc0(0xd0)

	void SetSoundVolumeCategoryScale(enum class ESoundCategory Category, float Scale); // Function BattlePrototype.SoundCategoryComponent.SetSoundVolumeCategoryScale // (Final|Native|Public|BlueprintCallable) // @ game+0x1302840
	void SetFadeParam(enum class ESoundCategory Category, float FadeTime, float FadeFinishScale); // Function BattlePrototype.SoundCategoryComponent.SetFadeParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1302740
	void ResetSoundVolumeCategoryScale(); // Function BattlePrototype.SoundCategoryComponent.ResetSoundVolumeCategoryScale // (Final|Native|Public|BlueprintCallable) // @ game+0x1302700
	float GetSoundVolumeCategoryScaleCalc(enum class ESoundCategory Category); // Function BattlePrototype.SoundCategoryComponent.GetSoundVolumeCategoryScaleCalc // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13017f0
	float GetSoundBaseVolumeCategoryScale(enum class ESoundCategory Category); // Function BattlePrototype.SoundCategoryComponent.GetSoundBaseVolumeCategoryScale // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1301760
	void FadeOut(enum class ESoundCategory Category, float FadeTime, float FadeScale); // Function BattlePrototype.SoundCategoryComponent.FadeOut // (Final|Native|Public|BlueprintCallable) // @ game+0x1300f90
	void FadeIn(enum class ESoundCategory Category, float FadeTime, float FadeScale); // Function BattlePrototype.SoundCategoryComponent.FadeIn // (Final|Native|Public|BlueprintCallable) // @ game+0x1300e90
	void Fade(float DeltaTime); // Function BattlePrototype.SoundCategoryComponent.Fade // (Final|Native|Public|BlueprintCallable) // @ game+0x1300e10
};

// Class BattlePrototype.SoundCueSheetManager
// Size: 0xd0 (Inherited: 0xc0)
struct USoundCueSheetManager : UActorComponent {
	struct TArray<struct FSoundCueSheet> DynamicCueSheet; // 0xc0(0x10)

	bool UnregisterFromSoftRef(struct TSoftObjectPtr<USoundAtomCueSheet> SheetSoftRef); // Function BattlePrototype.SoundCueSheetManager.UnregisterFromSoftRef // (Final|Native|Public|BlueprintCallable) // @ game+0x1302a60
	bool UnregisterFromPath(struct FString Path); // Function BattlePrototype.SoundCueSheetManager.UnregisterFromPath // (Final|Native|Public|BlueprintCallable) // @ game+0x13029b0
	bool Unregister(struct USoundAtomCueSheet* Sheet); // Function BattlePrototype.SoundCueSheetManager.Unregister // (Final|Native|Public|BlueprintCallable) // @ game+0x1302920
	bool RegisterFromSoftRef(struct TSoftObjectPtr<USoundAtomCueSheet> SheetSoftRef); // Function BattlePrototype.SoundCueSheetManager.RegisterFromSoftRef // (Final|Native|Public|BlueprintCallable) // @ game+0x1302610
	bool RegisterFromPath(struct FString Path); // Function BattlePrototype.SoundCueSheetManager.RegisterFromPath // (Final|Native|Public|BlueprintCallable) // @ game+0x1302560
	bool Register(struct USoundAtomCueSheet* Sheet); // Function BattlePrototype.SoundCueSheetManager.Register // (Final|Native|Public|BlueprintCallable) // @ game+0x13024d0
	struct USoundAtomCueSheet* GetCueSheetByName(struct FString CueSheetName); // Function BattlePrototype.SoundCueSheetManager.GetCueSheetByName // (Final|Native|Public|BlueprintCallable) // @ game+0x1301520
	struct USoundAtomCue* GetAtomCueByLoadedCueSheetFromString(struct FString CueName); // Function BattlePrototype.SoundCueSheetManager.GetAtomCueByLoadedCueSheetFromString // (Final|Native|Public|BlueprintCallable) // @ game+0x1301470
	struct USoundAtomCue* GetAtomCueByLoadedCueSheet(struct TSoftObjectPtr<USoundAtomCue> AtomCueSoftRef, struct TSoftObjectPtr<USoundAtomCueSheet> PreferenceCueSheetSoftRef); // Function BattlePrototype.SoundCueSheetManager.GetAtomCueByLoadedCueSheet // (Final|Native|Public|BlueprintCallable) // @ game+0x13012f0
};

// Class BattlePrototype.SoundPoolObject
// Size: 0x38 (Inherited: 0x28)
struct USoundPoolObject : UObject {
	struct URSAtomComponentBase* Component; // 0x28(0x08)
	bool Used; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)

	struct URSAtomComponentBase* Get(); // Function BattlePrototype.SoundPoolObject.Get // (Final|Native|Public|BlueprintCallable) // @ game+0x12bcd00
};

// Class BattlePrototype.SoundPoolManager
// Size: 0x48 (Inherited: 0x28)
struct USoundPoolManager : UObject {
	struct UObject* Class; // 0x28(0x08)
	struct TArray<struct USoundPoolObject*> Heap; // 0x30(0x10)
	int32_t Num; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
};

// Class BattlePrototype.SoundVolumeController
// Size: 0x238 (Inherited: 0xc0)
struct USoundVolumeController : UActorComponent {
	float m_MasterVolume; // 0xc0(0x04)
	struct FSoundVolumeSetting m_SoundVolumeSetting[0x7]; // 0xc4(0x16c)
	bool m_IsFadeExitting; // 0x230(0x01)
	char pad_231[0x7]; // 0x231(0x07)

	void SetResumeFromMuteAll(); // Function BattlePrototype.SoundVolumeController.SetResumeFromMuteAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1305ec0
	void SetRestertFadeAll(); // Function BattlePrototype.SoundVolumeController.SetRestertFadeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1305ea0
	void SetMuteAll(); // Function BattlePrototype.SoundVolumeController.SetMuteAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1305e80
	void SetInGameVolumeByCategoryName(enum class ESoundCategory Category, float DestVol); // Function BattlePrototype.SoundVolumeController.SetInGameVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1305da0
	void SetInGameVolumeAll(float DestVol); // Function BattlePrototype.SoundVolumeController.SetInGameVolumeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1305d20
	void SetFadeByCategoryName(enum class ESoundCategory Category, float FadeTime, float DestVol); // Function BattlePrototype.SoundVolumeController.SetFadeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1305c20
	void SetFadeAllCategory(float FadeTime, float DestVol); // Function BattlePrototype.SoundVolumeController.SetFadeAllCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x1305b60
	void SetExitFadeAll(); // Function BattlePrototype.SoundVolumeController.SetExitFadeAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1305b40
	void SetConfigVolumeByCategoryName(enum class ESoundCategory Category, float DestVol); // Function BattlePrototype.SoundVolumeController.SetConfigVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x13059f0
	void Initialize(); // Function BattlePrototype.SoundVolumeController.Initialize // (Final|Native|Public|BlueprintCallable) // @ game+0x13058b0
	void Finalize(); // Function BattlePrototype.SoundVolumeController.Finalize // (Final|Native|Public|BlueprintCallable) // @ game+0x13056b0
	float _GetPassedTimeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetPassedTimeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x13069f0
	float _GetNowVolumeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetNowVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1306970
	bool _GetIsTick(); // Function BattlePrototype.SoundVolumeController._GetIsTick // (Final|Native|Public|BlueprintCallable) // @ game+0x1306940
	bool _GetIsFadeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetIsFadeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x13068b0
	float _GetInGameVolumeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetInGameVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1306820
	float _GetFadeTimeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetFadeTimeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1306790
	float _GetDestVolumeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetDestVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1306700
	float _GetConfigVolumeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetConfigVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x1306670
	float _GetAcfVolumeByCategoryName(enum class ESoundCategory Category); // Function BattlePrototype.SoundVolumeController._GetAcfVolumeByCategoryName // (Final|Native|Public|BlueprintCallable) // @ game+0x13065e0
};

// Class BattlePrototype.SplineLooperBase
// Size: 0x2a0 (Inherited: 0x230)
struct ASplineLooperBase : AActor {
	struct USplineComponent* SpawnSplineNv; // 0x230(0x08)
	struct TArray<struct AActor*> SplineActorsNv; // 0x238(0x10)
	char pad_248[0x58]; // 0x248(0x58)

	void Update(float DeltaSeconds); // Function BattlePrototype.SplineLooperBase.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x1306560
	void SetupParameters(struct USplineComponent* InSpawnSpline, struct TArray<struct AActor*> InSplineActors, struct TArray<float> InInitialSplineLocations, struct FTransform InAdditonalTransform, float InSpeed, float InDirectionRotationSpeed, bool bInRotateAlongSpline, bool bInFlipToSpeedDirection, bool bInUpdateScale, bool bInUseScaleToSpeedRotation); // Function BattlePrototype.SplineLooperBase.SetupParameters // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1306130
};

// Class BattlePrototype.SprintComponent
// Size: 0x130 (Inherited: 0xc0)
struct USprintComponent : UActorComponent {
	float _fWalkableFloorAngle; // 0xc0(0x04)
	bool _isSprinting; // 0xc4(0x01)
	bool _isEndSprinting; // 0xc5(0x01)
	char pad_C6[0x2]; // 0xc6(0x02)
	struct FMulticastInlineDelegate OnStartSprint; // 0xc8(0x10)
	struct FMulticastInlineDelegate OnEndSprint; // 0xd8(0x10)
	float _sprintStartSec; // 0xe8(0x04)
	float _walkStartTime; // 0xec(0x04)
	struct FName _sprintClaimantName; // 0xf0(0x08)
	float _maxWalkSpeedRateBySprint; // 0xf8(0x04)
	float _maxWalkSpeedRateByBattleSprint; // 0xfc(0x04)
	float _sprintCurveAngle; // 0x100(0x04)
	float _sprintBankPow; // 0x104(0x04)
	float _sprintBankBackPow; // 0x108(0x04)
	char pad_10C[0x24]; // 0x10c(0x24)

	void StartSprint(bool bBattle); // Function BattlePrototype.SprintComponent.StartSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x13064d0
	void SetSprintSpeedRate(float Rate, float BattleRate); // Function BattlePrototype.SprintComponent.SetSprintSpeedRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1305ee0
	void SetMaxWalkSpeedRate(); // Function BattlePrototype.SprintComponent.SetMaxWalkSpeedRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1305e60
	void SetEventSprint(bool bEnable); // Function BattlePrototype.SprintComponent.SetEventSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x1305ab0
	void ProcessSprint(float DeltaTime); // Function BattlePrototype.SprintComponent.ProcessSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x13058d0
	void EndSprint(); // Function BattlePrototype.SprintComponent.EndSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x1305690
	void ChangeBattleSprint(bool bBattle); // Function BattlePrototype.SprintComponent.ChangeBattleSprint // (Final|Native|Public|BlueprintCallable) // @ game+0x13050a0
};

// Class BattlePrototype.StageEffectParameterSettingVolume
// Size: 0x2a0 (Inherited: 0x288)
struct AStageEffectParameterSettingVolume : ABlendableVolume {
	struct FStageEffectParameterSettings Settings; // 0x288(0x14)
	char pad_29C[0x4]; // 0x29c(0x04)
};

// Class BattlePrototype.StageEffectParameterSettingVolumeManager
// Size: 0x260 (Inherited: 0x248)
struct AStageEffectParameterSettingVolumeManager : ABlendableVolumeManager {
	struct FStageEffectParameterSettings Parameter; // 0x248(0x14)
	char pad_25C[0x4]; // 0x25c(0x04)

	struct FStageEffectParameterSettings CalcParameter(struct FVector Location); // Function BattlePrototype.StageEffectParameterSettingVolumeManager.CalcParameter // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1304dc0
};

// Class BattlePrototype.StageManager
// Size: 0x258 (Inherited: 0x230)
struct AStageManager : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct UArrangeObjectManager* ArrangeObjectManager; // 0x238(0x08)
	struct UArrangeItemStageManager* ArrangeItemStageManager; // 0x240(0x08)
	struct UNpcManager* NpcManager; // 0x248(0x08)
	struct UGimmickManager* GimmickManager; // 0x250(0x08)

	struct UNpcManager* GetNpcManager(); // Function BattlePrototype.StageManager.GetNpcManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1242fb0
	struct UGimmickManager* GetGimmickManager(); // Function BattlePrototype.StageManager.GetGimmickManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1242fd0
	struct UArrangeObjectManager* GetArrangeObjectManager(); // Function BattlePrototype.StageManager.GetArrangeObjectManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1242f90
	struct UArrangeItemStageManager* GetArrangeItemStageManager(); // Function BattlePrototype.StageManager.GetArrangeItemStageManager // (Final|Native|Public|BlueprintCallable) // @ game+0x120dd30
};

// Class BattlePrototype.StageParameterSettingLightVector
// Size: 0x258 (Inherited: 0x230)
struct AStageParameterSettingLightVector : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	struct UArrowComponent* AmbientLightVector; // 0x238(0x08)
	float Priority; // 0x240(0x04)
	bool bEnabled; // 0x244(0x01)
	char pad_245[0x13]; // 0x245(0x13)
};

// Class BattlePrototype.StageParameterSettingVolume
// Size: 0x368 (Inherited: 0x288)
struct AStageParameterSettingVolume : ABlendableVolume {
	struct FStageParameterSettings Settings; // 0x288(0xe0)
};

// Class BattlePrototype.StageParameterSettingVolumeManager
// Size: 0xa80 (Inherited: 0x248)
struct AStageParameterSettingVolumeManager : ABlendableVolumeManager {
	struct FStageParameterSettings Parameter; // 0x248(0xe0)
	char pad_328[0x50]; // 0x328(0x50)
	struct AStageEffectParameterSettingVolumeManager* EffectManager; // 0x378(0x08)
	char pad_380[0x700]; // 0x380(0x700)

	void SetUseReferenceLocationMode(bool Use); // Function BattlePrototype.StageParameterSettingVolumeManager.SetUseReferenceLocationMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1305fa0
	void SetupMPC(struct UMaterialParameterCollection* Collection, struct FStageParameterSettings Settings); // Function BattlePrototype.StageParameterSettingVolumeManager.SetupMPC // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1306030
	void SetupActorInternal(struct AActor* Actor, struct FVector Location, struct TArray<struct FName> ParamScalarNames, struct TArray<float> ParamScalars, struct TArray<struct FName> ParamVectorNames, struct TArray<struct FLinearColor> ParamVectors); // Function BattlePrototype.StageParameterSettingVolumeManager.SetupActorInternal // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x1685580
	void SetDebugDisableCache(bool DisableCache); // Function BattlePrototype.StageParameterSettingVolumeManager.SetDebugDisableCache // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void RemoveAppendActor(struct AActor* Actor); // Function BattlePrototype.StageParameterSettingVolumeManager.RemoveAppendActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1305970
	void RecalcSceneLightVector(); // Function BattlePrototype.StageParameterSettingVolumeManager.RecalcSceneLightVector // (Final|Native|Public|BlueprintCallable) // @ game+0x1305950
	struct AStageEffectParameterSettingVolumeManager* GetEffectManager(); // Function BattlePrototype.StageParameterSettingVolumeManager.GetEffectManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1305890
	void ForceUpdateActor(struct AActor* Actor, struct FVector Location); // Function BattlePrototype.StageParameterSettingVolumeManager.ForceUpdateActor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x13057c0
	void ForceAllUpdateOption(bool bUpdatePlayer, bool bUpdateAppendActor); // Function BattlePrototype.StageParameterSettingVolumeManager.ForceAllUpdateOption // (Final|Native|Public|BlueprintCallable) // @ game+0x13056f0
	void ForceAllUpdate(); // Function BattlePrototype.StageParameterSettingVolumeManager.ForceAllUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x13056d0
	void ConvertSettingToParameters(struct FStageParameterSettings Settings, struct TArray<struct FName> ParamScalarNames, struct TArray<float> ParamScalars, struct TArray<struct FName> ParamVectorNames, struct TArray<struct FLinearColor> ParamVectors); // Function BattlePrototype.StageParameterSettingVolumeManager.ConvertSettingToParameters // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13051b0
	void ClearParameter(struct AActor* Actor); // Function BattlePrototype.StageParameterSettingVolumeManager.ClearParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1305130
	struct FStageParameterSettings CalcParameterEffect(struct FVector Location); // Function BattlePrototype.StageParameterSettingVolumeManager.CalcParameterEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1304f80
	struct FStageParameterSettings CalcParameter(struct FVector Location); // Function BattlePrototype.StageParameterSettingVolumeManager.CalcParameter // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1304e70
	void AddAppendActor(struct AActor* Actor); // Function BattlePrototype.StageParameterSettingVolumeManager.AddAppendActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1304d40
};

// Class BattlePrototype.StageParameterSettingFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UStageParameterSettingFunctionLibrary : UBlueprintFunctionLibrary {

	void ConvertStageSettingToMaterialParameters(struct FStageParameterSettings Settings, struct TArray<struct FName> ParamScalarNames, struct TArray<float> ParamScalars, struct TArray<struct FName> ParamVectorNames, struct TArray<struct FLinearColor> ParamVectors); // Function BattlePrototype.StageParameterSettingFunctionLibrary.ConvertStageSettingToMaterialParameters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1305420
};

// Class BattlePrototype.StepComponent
// Size: 0xf8 (Inherited: 0xc0)
struct UStepComponent : UActorComponent {
	struct FMulticastInlineDelegate OnStartStep; // 0xc0(0x10)
	struct FVector _stepInputDirection; // 0xd0(0x0c)
	float _stepDistanceScale; // 0xdc(0x04)
	float _sprintMoveDuration; // 0xe0(0x04)
	float _sprintMoveDistance; // 0xe4(0x04)
	char pad_E8[0x10]; // 0xe8(0x10)

	void StartStep(struct FVector StepDirection, float stepDistanceRate, bool bEnableSprintMomentum); // Function BattlePrototype.StepComponent.StartStep // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x130a5f0
	void InputStep(struct FVector StepDirection, float stepDistanceRate, bool bEnableSprintMomentum); // Function BattlePrototype.StepComponent.InputStep // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1309760
	void EndStep(); // Function BattlePrototype.StepComponent.EndStep // (Final|Native|Public|BlueprintCallable) // @ game+0x1309250
	struct FVector CalcDirectionWorldToActor(struct FVector worldDir); // Function BattlePrototype.StepComponent.CalcDirectionWorldToActor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1308f50
};

// Class BattlePrototype.TargetableObjectInterface
// Size: 0x28 (Inherited: 0x28)
struct UTargetableObjectInterface : UInterface {

	bool IsPsychicObjectShieldActive(); // Function BattlePrototype.TargetableObjectInterface.IsPsychicObjectShieldActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsControlPlayer(); // Function BattlePrototype.TargetableObjectInterface.IsControlPlayer // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsBerserkCharacter(); // Function BattlePrototype.TargetableObjectInterface.IsBerserkCharacter // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FVector GetTargetCursorLocation(); // Function BattlePrototype.TargetableObjectInterface.GetTargetCursorLocation // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	struct AActor* GetPsychicObjectShield(); // Function BattlePrototype.TargetableObjectInterface.GetPsychicObjectShield // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.TargetSearchComponent
// Size: 0x150 (Inherited: 0xc0)
struct UTargetSearchComponent : UActorComponent {
	float SearchDistance; // 0xc0(0x04)
	float SearchYaw; // 0xc4(0x04)
	float SearchPitch; // 0xc8(0x04)
	char pad_CC[0x4]; // 0xcc(0x04)
	struct TArray<struct FTargetSearchArea> SearchArea; // 0xd0(0x10)
	float SearchMobDistance; // 0xe0(0x04)
	float LockDistance; // 0xe4(0x04)
	float Trace2ndZOffset; // 0xe8(0x04)
	struct FVector LockonPlayerPos; // 0xec(0x0c)
	float InternalLockUpdateTime; // 0xf8(0x04)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct FMulticastInlineDelegate DispatchChangeTarget; // 0x100(0x10)
	struct AEnemyManager* pEnemyManager_; // 0x110(0x08)
	struct ABattleManager* pBattleManager_; // 0x118(0x08)
	float TickInterval_; // 0x120(0x04)
	char pad_124[0x2c]; // 0x124(0x2c)

	void UpdateCurrentTarget(); // Function BattlePrototype.TargetSearchComponent.UpdateCurrentTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x130a730
	void StoreLockTarget(); // Function BattlePrototype.TargetSearchComponent.StoreLockTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x130a710
	void SetTargetFix(bool bFix); // Function BattlePrototype.TargetSearchComponent.SetTargetFix // (Final|Native|Public|BlueprintCallable) // @ game+0x130a560
	void SetLostFlag(); // Function BattlePrototype.TargetSearchComponent.SetLostFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x130a4b0
	void SetLockTargetDirect(struct ARSCharacterBase* Actor); // Function BattlePrototype.TargetSearchComponent.SetLockTargetDirect // (Final|Native|Public|BlueprintCallable) // @ game+0x130a430
	void SetLockTarget(bool bLock); // Function BattlePrototype.TargetSearchComponent.SetLockTarget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x130a3a0
	struct ARSCharacterBase* SearchTargetActor(struct TArray<struct ARSCharacterBase*> enemyList, enum class TargetListType listType, bool bIgnoreRendered); // Function BattlePrototype.TargetSearchComponent.SearchTargetActor // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x130a100
	void RestoreLockTarget(bool bRetargetRestoreFailed); // Function BattlePrototype.TargetSearchComponent.RestoreLockTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1309f40
	void OnSetBattling(bool bBattle); // Function BattlePrototype.TargetSearchComponent.OnSetBattling // (Final|Native|Public|BlueprintCallable) // @ game+0x1309cd0
	void LockonTargetCalcPos(float lockonHeight); // Function BattlePrototype.TargetSearchComponent.LockonTargetCalcPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1309c50
	bool IsTargetFix(); // Function BattlePrototype.TargetSearchComponent.IsTargetFix // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309c20
	bool IsLostLockTarget(); // Function BattlePrototype.TargetSearchComponent.IsLostLockTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309b00
	bool IsLockTarget(); // Function BattlePrototype.TargetSearchComponent.IsLockTarget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309ae0
	bool IsBossBattle(); // Function BattlePrototype.TargetSearchComponent.IsBossBattle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13099f0
	bool IsAbleTarget(struct ARSCharacterBase* Target, bool isLock, enum class TargetListType listType, enum class ETargetFailedReason OutReason); // Function BattlePrototype.TargetSearchComponent.IsAbleTarget // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309880
	struct UTargetSearchComponent* GetTargetSearchComponentFromActor(struct AActor* Actor); // Function BattlePrototype.TargetSearchComponent.GetTargetSearchComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x13094d0
	struct ARSCharacterBase* GetLostTargetActor(); // Function BattlePrototype.TargetSearchComponent.GetLostTargetActor // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13093b0
	struct ARSCharacterBase* GetCurrentTargetActor(); // Function BattlePrototype.TargetSearchComponent.GetCurrentTargetActor // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1309270
	void ClearLostTargetActor(); // Function BattlePrototype.TargetSearchComponent.ClearLostTargetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1309100
	bool ChangeLockTarget(float AxisValue, struct TArray<struct ARSCharacterBase*> enemyList); // Function BattlePrototype.TargetSearchComponent.ChangeLockTarget // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1309000
};

// Class BattlePrototype.TaskBaseNative
// Size: 0xa8 (Inherited: 0x70)
struct UTaskBaseNative : UBTTaskNode {
	char pad_70[0x38]; // 0x70(0x38)
};

// Class BattlePrototype.DebuggingItemTeamBondsLevel
// Size: 0x308 (Inherited: 0x300)
struct ADebuggingItemTeamBondsLevel : ADebuggingItemInt {
	enum class EPlayerID playerType; // 0x300(0x01)
	char pad_301[0x7]; // 0x301(0x07)
};

// Class BattlePrototype.DebuggingItemPresentEvent
// Size: 0x2e8 (Inherited: 0x2e0)
struct ADebuggingItemPresentEvent : ADebuggingItemEvent {
	enum class EPlayerID playerType; // 0x2e0(0x01)
	char pad_2E1[0x3]; // 0x2e1(0x03)
	int32_t toLevel; // 0x2e4(0x04)
};

// Class BattlePrototype.DebuggingItemTeamBondsLevelGroup
// Size: 0x300 (Inherited: 0x2d0)
struct ADebuggingItemTeamBondsLevelGroup : ADebuggingItemGroup {
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemTeamBondsLevel>> levelIntList; // 0x2d0(0x10)
	struct TArray<struct TWeakObjectPtr<struct ADebuggingItemPresentEvent>> presentEventList; // 0x2e0(0x10)
	struct UUserParamManager* paramMan; // 0x2f0(0x08)
	struct UDatabaseManager* dbMan; // 0x2f8(0x08)

	void OnExecutePresent(struct ADebuggingItemEvent* Item); // Function BattlePrototype.DebuggingItemTeamBondsLevelGroup.OnExecutePresent // (Final|Native|Public) // @ game+0x79d490
	void OnChangeLevel(struct ADebuggingItemInt* Item); // Function BattlePrototype.DebuggingItemTeamBondsLevelGroup.OnChangeLevel // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.TeamComponent
// Size: 0xc8 (Inherited: 0xc0)
struct UTeamComponent : UActorComponent {
	enum class TeamKind OwnKind; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)

	bool IsRival(struct UTeamComponent* Opponent); // Function BattlePrototype.TeamComponent.IsRival // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309b90
	bool IsPlayer(); // Function BattlePrototype.TeamComponent.IsPlayer // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309b60
	bool IsMob(); // Function BattlePrototype.TeamComponent.IsMob // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309b30
	bool IsFriend(struct UTeamComponent* Opponent); // Function BattlePrototype.TeamComponent.IsFriend // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309a50
	bool IsEnemy(); // Function BattlePrototype.TeamComponent.IsEnemy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1309a20
	struct UTeamComponent* GetTeamComponentFromActor(struct AActor* Actor); // Function BattlePrototype.TeamComponent.GetTeamComponentFromActor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1309550
	void CopyTeamParameterFrom(struct UTeamComponent* Other); // Function BattlePrototype.TeamComponent.CopyTeamParameterFrom // (Final|Native|Public|BlueprintCallable) // @ game+0x13091d0
	void CopyTeamParameterBetweenActor(struct AActor* From, struct AActor* To); // Function BattlePrototype.TeamComponent.CopyTeamParameterBetweenActor // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1309120
};

// Class BattlePrototype.TeamUtility
// Size: 0x28 (Inherited: 0x28)
struct UTeamUtility : UObject {

	void SearchRivalCharacters(struct TArray<struct ARSCharacterBase*> findCharas, struct ARSCharacterBase* starndardChara, float seachDistance); // Function BattlePrototype.TeamUtility.SearchRivalCharacters // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1309fd0
};

// Class BattlePrototype.TeleportableWallBase
// Size: 0x258 (Inherited: 0x230)
struct ATeleportableWallBase : AActor {
	struct UStaticMeshComponent* MeshComponent; // 0x230(0x08)
	struct USceneComponent* IconPosition; // 0x238(0x08)
	struct UBoxComponent* ShowComponent; // 0x240(0x08)
	struct FVector WorldPositionOffset; // 0x248(0x0c)
	char pad_254[0x4]; // 0x254(0x04)
};

// Class BattlePrototype.TestSave
// Size: 0x128 (Inherited: 0x28)
struct UTestSave : USaveGame {
	int32_t testInt_; // 0x28(0x04)
	float testFloat_; // 0x2c(0x04)
	struct FName testFName_; // 0x30(0x08)
	struct TArray<int32_t> testArrayInt_; // 0x38(0x10)
	struct FSaveTestStruct testStruct_; // 0x48(0x18)
	struct TArray<struct FSaveTestStruct> testArrayStruct_; // 0x60(0x10)
	char pad_70[0xb8]; // 0x70(0xb8)
};

// Class BattlePrototype.TextData
// Size: 0x30 (Inherited: 0x28)
struct UTextData : UObject {
	struct UDataTable* RefTextTable; // 0x28(0x08)

	bool LoadResource(struct FString FilePath); // Function BattlePrototype.TextData.LoadResource // (Final|Native|Public|BlueprintCallable) // @ game+0x11eb7d0
	struct FString GetText(struct FName ID, bool Founded); // Function BattlePrototype.TextData.GetText // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13095d0
};

// Class BattlePrototype.TickManageComponent
// Size: 0xf0 (Inherited: 0xc0)
struct UTickManageComponent : UActorComponent {
	struct TArray<struct TWeakObjectPtr<struct AActor>> _ManageActorList; // 0xc0(0x10)
	struct TArray<struct TWeakObjectPtr<struct UTickManageComponent>> _TickManageComponentList; // 0xd0(0x10)
	struct TArray<struct TWeakObjectPtr<struct UActorComponent>> _ComponentList; // 0xe0(0x10)

	void SetManageTickEnable(bool bEnable); // Function BattlePrototype.TickManageComponent.SetManageTickEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x130a4d0
	void RegisterManageComponent(struct TArray<struct UActorComponent*> ComponentList); // Function BattlePrototype.TickManageComponent.RegisterManageComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1309de0
	void RegisterManageActor(struct AActor* Actor); // Function BattlePrototype.TickManageComponent.RegisterManageActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1309d60
};

// Class BattlePrototype.TipsCountParamManager
// Size: 0x160 (Inherited: 0x28)
struct UTipsCountParamManager : UObject {
	char pad_28[0x138]; // 0x28(0x138)

	bool WhetherTheConditionsAreMet(enum class EHelpTutorial helpID); // Function BattlePrototype.TipsCountParamManager.WhetherTheConditionsAreMet // (Final|Native|Public|BlueprintCallable) // @ game+0x130a750
	void SetHiddenTips(bool newFlag); // Function BattlePrototype.TipsCountParamManager.SetHiddenTips // (Final|Native|Public|BlueprintCallable) // @ game+0x130a310
	void SetDisplayedData(enum class EHelpTutorial helpID, bool NewValue); // Function BattlePrototype.TipsCountParamManager.SetDisplayedData // (Final|Native|Public|BlueprintCallable) // @ game+0x130a240
	void ResetTips(enum class EHelpTutorial helpID); // Function BattlePrototype.TipsCountParamManager.ResetTips // (Final|Native|Public|BlueprintCallable) // @ game+0x1309ec0
	void InitData(struct URSGameInstance* gameInst); // Function BattlePrototype.TipsCountParamManager.InitData // (Final|Native|Public|BlueprintCallable) // @ game+0x13096e0
};

// Class BattlePrototype.TownPeopleManager
// Size: 0x240 (Inherited: 0x230)
struct ATownPeopleManager : AActor {
	struct UNpcManager* pNpcManager; // 0x230(0x08)
	char pad_238[0x8]; // 0x238(0x08)
};

// Class BattlePrototype.TradeItemData
// Size: 0x30 (Inherited: 0x28)
struct UTradeItemData : UObject {
	struct UDataTable* tradeItemDataTable_; // 0x28(0x08)

	struct UDataTable* GetTradeItemDataTable(); // Function BattlePrototype.TradeItemData.GetTradeItemDataTable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12bcd00
	bool GetTItemDataFromDataTable(struct FString tradeTablePath); // Function BattlePrototype.TradeItemData.GetTItemDataFromDataTable // (Final|Native|Public) // @ game+0x13093e0
	bool GetDataLineByIndex(struct FName Index, struct FTradeItem TradeItem); // Function BattlePrototype.TradeItemData.GetDataLineByIndex // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13092a0
};

// Class BattlePrototype.TreasureItem
// Size: 0x350 (Inherited: 0x340)
struct ATreasureItem : AArrangeItemParticle {
	struct USkeletalMeshComponent* skeletalMeshComponent_; // 0x340(0x08)
	bool isInitialize_; // 0x348(0x01)
	bool isGetThisItem_; // 0x349(0x01)
	char pad_34A[0x6]; // 0x34a(0x06)

	void ProcessBeforeGetAnimBegin(); // Function BattlePrototype.TreasureItem.ProcessBeforeGetAnimBegin // (Final|Native|Public|BlueprintCallable) // @ game+0x130d5c0
	void ProcessAfterGetAnimFinished(); // Function BattlePrototype.TreasureItem.ProcessAfterGetAnimFinished // (Final|Native|Public|BlueprintCallable) // @ game+0x130d5a0
};

// Class BattlePrototype.TrialParamDebugGroup
// Size: 0x2f8 (Inherited: 0x2d0)
struct ATrialParamDebugGroup : ADebuggingItemGroup {
	struct TWeakObjectPtr<struct ADebuggingItemBool> IsPlayTrialYuito; // 0x2d0(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemBool> IsPlayTrialKasane; // 0x2d8(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemEvent> ExecParamChange; // 0x2e0(0x08)
	struct TWeakObjectPtr<struct ADebuggingItemEvent> ExecLoadTrialParam; // 0x2e8(0x08)
	struct USaveLoadScreenParamManager* DebugSaveLoadScreenParamManager; // 0x2f0(0x08)

	void OnPageOpened(); // Function BattlePrototype.TrialParamDebugGroup.OnPageOpened // (Final|Native|Public) // @ game+0x8518d0
	void OnExecuteParameterChange(struct ADebuggingItemEvent* Item); // Function BattlePrototype.TrialParamDebugGroup.OnExecuteParameterChange // (Final|Native|Public) // @ game+0x79d490
	void OnExecuteLoadTrialSave(struct ADebuggingItemEvent* Item); // Function BattlePrototype.TrialParamDebugGroup.OnExecuteLoadTrialSave // (Final|Native|Public) // @ game+0x79d490
};

// Class BattlePrototype.TriggerEffectManager
// Size: 0x350 (Inherited: 0x230)
struct ATriggerEffectManager : AActor {
	char pad_230[0x90]; // 0x230(0x90)
	struct AActor* m_directShotPsyObj; // 0x2c0(0x08)
	char pad_2C8[0x88]; // 0x2c8(0x88)

	void UpdateTriggerEffect(); // Function BattlePrototype.TriggerEffectManager.UpdateTriggerEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void UnloadHDB(struct FString GroupName); // Function BattlePrototype.TriggerEffectManager.UnloadHDB // (Final|Native|Public|BlueprintCallable) // @ game+0x128fe70
	void Unload(struct FString GroupName); // Function BattlePrototype.TriggerEffectManager.Unload // (Final|Native|Public|BlueprintCallable) // @ game+0x128fe70
	void StopTriggerEffect(int32_t lr, float lingeringTime); // Function BattlePrototype.TriggerEffectManager.StopTriggerEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x130df10
	void StopPadEffectName(struct FString Filename, float sec); // Function BattlePrototype.TriggerEffectManager.StopPadEffectName // (Final|Native|Public|BlueprintCallable) // @ game+0x11d10a0
	void StopPadEffect(float sec); // Function BattlePrototype.TriggerEffectManager.StopPadEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void StopEmulateCompatibleVibration(struct UForceFeedbackEffect* ForceFeedbackEffect, struct FName Tag); // Function BattlePrototype.TriggerEffectManager.StopEmulateCompatibleVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x11a8b10
	void SetTriggerEffectOff(int32_t lr); // Function BattlePrototype.TriggerEffectManager.SetTriggerEffectOff // (Final|Native|Public|BlueprintCallable) // @ game+0x11b54f0
	void SetTriggerEffect2(enum class ETrgEffMode m0, char v00, char v01, char v02, enum class ETrgEffMode m1, char v10, char v11, char v12); // Function BattlePrototype.TriggerEffectManager.SetTriggerEffect2 // (Final|Native|Public|BlueprintCallable) // @ game+0x130db40
	void SetTriggerEffect(struct FTrgEffParam L, struct FTrgEffParam R, bool leftInitFlag, bool rightInitFlag); // Function BattlePrototype.TriggerEffectManager.SetTriggerEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x130dd80
	void SetRandomFrequencyVibration(int32_t lr, char Pos, char amp, char minFre, char maxFre, bool isReleaseEnhancements); // Function BattlePrototype.TriggerEffectManager.SetRandomFrequencyVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x130d990
	void SetPadEffectVolumeName(struct FString Filename, float wavvol, float vibvol, float sec); // Function BattlePrototype.TriggerEffectManager.SetPadEffectVolumeName // (Final|Native|Public|BlueprintCallable) // @ game+0x130d830
	void SetPadEffectVolume(float wavvol, float vibvol, float sec); // Function BattlePrototype.TriggerEffectManager.SetPadEffectVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x130d720
	void SetPadEffectStrengthVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectStrengthVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectOuterVibrationMagnification(float mag); // Function BattlePrototype.TriggerEffectManager.SetPadEffectOuterVibrationMagnification // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectMasterVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectMasterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectMapGimmickVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectMapGimmickVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectLocationVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectLocationVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectDirectShotVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectDirectShotVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleModeSmallVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleModeSmallVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleModeMasterVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleModeMasterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleModeLargeVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleModeLargeVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2Volume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2Volume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2SmallVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2SmallVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2SmallVibAfterglow(float frameNum); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2SmallVibAfterglow // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2MinRotRateOfSmall(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2MinRotRateOfSmall // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2MinRotRateOfLarge(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2MinRotRateOfLarge // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2MaxRotRateOfSmall(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2MaxRotRateOfSmall // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2MaxRotRateOfLarge(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2MaxRotRateOfLarge // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2LargeVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2LargeVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectCompatibleMode2LargeVibAfterglow(float frameNum); // Function BattlePrototype.TriggerEffectManager.SetPadEffectCompatibleMode2LargeVibAfterglow // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectBrainFieldVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectBrainFieldVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetPadEffectBrainCrashVolume(float vol); // Function BattlePrototype.TriggerEffectManager.SetPadEffectBrainCrashVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
	void SetIsCompatibleMode2Enabled(bool IsEnable); // Function BattlePrototype.TriggerEffectManager.SetIsCompatibleMode2Enabled // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetCompatibleVibrationMode(bool isCompatibleVibMode); // Function BattlePrototype.TriggerEffectManager.SetCompatibleVibrationMode // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void ResumePadEffect(); // Function BattlePrototype.TriggerEffectManager.ResumePadEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void RegistTargetMeshComponent(struct UMeshComponent* Mesh, struct FName TargetSocketName); // Function BattlePrototype.TriggerEffectManager.RegistTargetMeshComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x130d660
	void RegistDirectShotPsyObj(struct AActor* Actor); // Function BattlePrototype.TriggerEffectManager.RegistDirectShotPsyObj // (Final|Native|Public|BlueprintCallable) // @ game+0x130d5e0
	void PlayPadEffectV01(struct FString Filename, float wavvol, float vibvol, bool roopFlag, enum class EVibSndPrio svprio, enum class EVibSndMode svmode, struct AActor* sndowner, struct UMeshComponent* sndownerMesh, struct FName sndownerMeshSocketName, bool isDistanceAttenuation); // Function BattlePrototype.TriggerEffectManager.PlayPadEffectV01 // (Final|Native|Public|BlueprintCallable) // @ game+0x130d2c0
	void PlayPadEffect(struct FString Filename, float wavvol, float vibvol, bool roopFlag, enum class EVibSndPrio svprio, enum class EVibSndMode svmode, struct AActor* sndowner, struct UMeshComponent* sndownerMesh, struct FName sndownerMeshSocketName, bool isDistanceAttenuation); // Function BattlePrototype.TriggerEffectManager.PlayPadEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x130d2c0
	void PlayHaptics(struct FString Filename, enum class EVibSndMode svmode, struct AActor* sndowner); // Function BattlePrototype.TriggerEffectManager.PlayHaptics // (Final|Native|Public|BlueprintCallable) // @ game+0x130d1a0
	void PlayEmulateCompatibleVibration(struct UForceFeedbackEffect* ForceFeedbackEffect, struct FName Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused); // Function BattlePrototype.TriggerEffectManager.PlayEmulateCompatibleVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x130cff0
	void PausePadEffect(); // Function BattlePrototype.TriggerEffectManager.PausePadEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void LoadHDB(struct FString GroupName, struct FString Filename); // Function BattlePrototype.TriggerEffectManager.LoadHDB // (Final|Native|Public|BlueprintCallable) // @ game+0x130cf00
	void Load(struct FString GroupName, struct FString Filename, enum class EVibSndPrio prio); // Function BattlePrototype.TriggerEffectManager.Load // (Final|Native|Public|BlueprintCallable) // @ game+0x130cdd0
	bool IsTriggerInputStatus(int32_t lr); // Function BattlePrototype.TriggerEffectManager.IsTriggerInputStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x130cd40
	bool IsTriggerEffectStopped(int32_t lr); // Function BattlePrototype.TriggerEffectManager.IsTriggerEffectStopped // (Final|Native|Public|BlueprintCallable) // @ game+0x130cd40
	bool IsTriggerEffectOff(int32_t lr); // Function BattlePrototype.TriggerEffectManager.IsTriggerEffectOff // (Final|Native|Public|BlueprintCallable) // @ game+0x130ccb0
	bool IsPadEffectPlaying(); // Function BattlePrototype.TriggerEffectManager.IsPadEffectPlaying // (Final|Native|Public|BlueprintCallable) // @ game+0x11b48c0
	void IncorporateOffModeIntoTriggerEffect(bool isOffMode); // Function BattlePrototype.TriggerEffectManager.IncorporateOffModeIntoTriggerEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void IgnoreCompatibleVibration(bool Flag); // Function BattlePrototype.TriggerEffectManager.IgnoreCompatibleVibration // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void EraseTargetMeshComponent(); // Function BattlePrototype.TriggerEffectManager.EraseTargetMeshComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x130c5f0
	void EraseDirectShotPsyObj(); // Function BattlePrototype.TriggerEffectManager.EraseDirectShotPsyObj // (Final|Native|Public|BlueprintCallable) // @ game+0x130c5d0
	void ClearTriggerEffect(); // Function BattlePrototype.TriggerEffectManager.ClearTriggerEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void ChangePanRatioOfPadEffect(float padPanRatio); // Function BattlePrototype.TriggerEffectManager.ChangePanRatioOfPadEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x11d11c0
};

// Class BattlePrototype.TumbleConditionComponent
// Size: 0x180 (Inherited: 0x160)
struct UTumbleConditionComponent : UConditionComponent {
	float _tumbleSec; // 0x160(0x04)
	char pad_164[0x1c]; // 0x164(0x1c)
};

// Class BattlePrototype.TutorialData
// Size: 0x30 (Inherited: 0x28)
struct UTutorialData : UObject {
	struct UHelpTutorialDBAsset* helpDataAsset_; // 0x28(0x08)
};

// Class BattlePrototype.UIBase
// Size: 0x388 (Inherited: 0x248)
struct UUIBase : UREDUserTextWidget {
	bool FlagPlay; // 0x248(0x01)
	bool FlagMouse; // 0x249(0x01)
	char pad_24A[0x2]; // 0x24a(0x02)
	struct FRedMouseArgument MouseCallArgument; // 0x24c(0x0c)
	struct FVector2D MouseHitOffsetPos; // 0x258(0x08)
	struct FVector2D MouseHitOffsetSize; // 0x260(0x08)
	enum class EUIMouseHitType MouseHitType; // 0x268(0x01)
	bool DebugMouseHitDisp; // 0x269(0x01)
	char pad_26A[0x6]; // 0x26a(0x06)
	struct FMulticastInlineDelegate m_BaseFocusMouse; // 0x270(0x10)
	struct FMulticastInlineDelegate m_BaseUnFocusMouse; // 0x280(0x10)
	struct FMulticastInlineDelegate m_BaseDownMouse; // 0x290(0x10)
	char pad_2A0[0x1]; // 0x2a0(0x01)
	bool FlagRemove; // 0x2a1(0x01)
	bool FlagNotRemoveHud; // 0x2a2(0x01)
	char pad_2A3[0x1]; // 0x2a3(0x01)
	int32_t CurrentState; // 0x2a4(0x04)
	int32_t NextState; // 0x2a8(0x04)
	int32_t CurrentSubState; // 0x2ac(0x04)
	int32_t NextSubState; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct TArray<struct UWidgetAnimation*> AnimationList; // 0x2b8(0x10)
	int32_t PlayIndex; // 0x2c8(0x04)
	enum class EUIViewPrio ViewPortPrio; // 0x2cc(0x01)
	char pad_2CD[0x3]; // 0x2cd(0x03)
	struct UUIChromaticAberration* ChromaticAberration; // 0x2d0(0x08)
	struct TArray<struct UWidget*> CA_WorkObject; // 0x2d8(0x10)
	struct TArray<struct UUIChromaticAberration*> ListChromaticAberration; // 0x2e8(0x10)
	struct TArray<struct UREDRetainerBox*> ListControlRetainerBox; // 0x2f8(0x10)
	int32_t StateControlRetainerBox; // 0x308(0x04)
	char pad_30C[0x4]; // 0x30c(0x04)
	struct UUserWidget* ControlWidget; // 0x310(0x08)
	enum class ESlateVisibility LocalVisibility; // 0x318(0x01)
	char pad_319[0x3]; // 0x319(0x03)
	int32_t inputLevel; // 0x31c(0x04)
	float BaseScrollSpeed; // 0x320(0x04)
	char pad_324[0x1c]; // 0x324(0x1c)
	struct UREDebugLines* m_DebugDraw; // 0x340(0x08)
	struct FGeometry m_MyGeometry; // 0x348(0x38)
	char pad_380[0x8]; // 0x380(0x08)

	void UpdateVisible(); // Function BattlePrototype.UIBase.UpdateVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x1313090
	void UpdateState(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIBase.UpdateState // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void UpdateControlRetainerBox(); // Function BattlePrototype.UIBase.UpdateControlRetainerBox // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void UpdateChromaticAberration(); // Function BattlePrototype.UIBase.UpdateChromaticAberration // (Final|Native|Public|BlueprintCallable) // @ game+0x1312d70
	void Update(float InDeltaTime); // Function BattlePrototype.UIBase.Update // (Native|Public|BlueprintCallable) // @ game+0x1312cf0
	void StopUICurrentAnimation(); // Function BattlePrototype.UIBase.StopUICurrentAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1312cd0
	void StopUIAnimation(int32_t Index); // Function BattlePrototype.UIBase.StopUIAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1312c50
	void StopUIAllAnimation(); // Function BattlePrototype.UIBase.StopUIAllAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1312c30
	void StopLoopSe(struct FName loopSeName); // Function BattlePrototype.UIBase.StopLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x1312bb0
	void SetVisible(enum class ESlateVisibility Visiblity); // Function BattlePrototype.UIBase.SetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x13127f0
	void SetViewPortPrio(enum class EUIViewPrio viewprio); // Function BattlePrototype.UIBase.SetViewPortPrio // (Final|Native|Public|BlueprintCallable) // @ game+0x1312770
	void SetupChromaticAberrationRetainerBox(struct UPanelWidget* Base); // Function BattlePrototype.UIBase.SetupChromaticAberrationRetainerBox // (Final|Native|Public|BlueprintCallable) // @ game+0x13128f0
	void SetupChromaticAberrationImage(struct UPanelWidget* Base); // Function BattlePrototype.UIBase.SetupChromaticAberrationImage // (Final|Native|Public|BlueprintCallable) // @ game+0x1312870
	void SetUIAnimationFrame(int32_t Index, float Time); // Function BattlePrototype.UIBase.SetUIAnimationFrame // (Final|Native|Public|BlueprintCallable) // @ game+0x13126a0
	void SetMouseMode(bool mousemode, int32_t inputLevel); // Function BattlePrototype.UIBase.SetMouseMode // (Final|Native|Public|BlueprintCallable) // @ game+0x13125e0
	void SetMouseDisable(bool Flag); // Function BattlePrototype.UIBase.SetMouseDisable // (Final|Native|Protected|BlueprintCallable) // @ game+0x1312550
	void SetInputLevel(int32_t inputLevel); // Function BattlePrototype.UIBase.SetInputLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x13124d0
	void SetImageFromSprite(struct UImage* Image, struct UPaperSprite* Sprite); // Function BattlePrototype.UIBase.SetImageFromSprite // (Final|Native|Public|BlueprintCallable) // @ game+0x1312410
	void SetFlagUpdateAlways(bool Flag); // Function BattlePrototype.UIBase.SetFlagUpdateAlways // (Final|Native|Public|BlueprintCallable) // @ game+0x1312390
	void SetDebugInvisible(bool IsInvisible); // Function BattlePrototype.UIBase.SetDebugInvisible // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
	void SetControlWidget(struct UUserWidget* Widget); // Function BattlePrototype.UIBase.SetControlWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1312310
	void SetAnimationNum(int32_t Num); // Function BattlePrototype.UIBase.SetAnimationNum // (Final|Native|Public|BlueprintCallable) // @ game+0x13121b0
	void SetAnimation(int32_t Index, struct UWidgetAnimation* Animation); // Function BattlePrototype.UIBase.SetAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x13120f0
	void SearchControlRetainerBox(struct UWidget* Widget); // Function BattlePrototype.UIBase.SearchControlRetainerBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1312070
	void RemoveFromParentRED(); // Function BattlePrototype.UIBase.RemoveFromParentRED // (Final|Native|Public|BlueprintCallable) // @ game+0x1312050
	void RedWidgetUnFocus__DelegateSignature(struct FRedMouseArgument argument, struct UUserWidget* pWidget); // DelegateFunction BattlePrototype.UIBase.RedWidgetUnFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedWidgetFocus__DelegateSignature(struct FRedMouseArgument argument, struct UUserWidget* pWidget); // DelegateFunction BattlePrototype.UIBase.RedWidgetFocus__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void RedWidgetDown__DelegateSignature(struct FRedMouseArgument argument, struct UUserWidget* pWidget); // DelegateFunction BattlePrototype.UIBase.RedWidgetDown__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x1685580
	void ProjectWorldToScreen2(struct FVector WorldPosition, struct FVector2D ScreenPosition); // Function BattlePrototype.UIBase.ProjectWorldToScreen2 // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1311f70
	void PlayUIAnimation(int32_t Index, float Speed, bool IsLoop); // Function BattlePrototype.UIBase.PlayUIAnimation // (Final|Native|Public|BlueprintCallable) // @ game+0x1311e60
	struct URSAtomComponentBase* PlaySEAtLocation(enum class EUI_SE seType, struct FVector Location); // Function BattlePrototype.UIBase.PlaySEAtLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1311d80
	struct URSAtomComponentBase* PlaySE(enum class EUI_SE seType); // Function BattlePrototype.UIBase.PlaySE // (Final|Native|Public|BlueprintCallable) // @ game+0x1311cf0
	void PlayLoopSe(enum class EUI_SE seType, struct FName loopSeName); // Function BattlePrototype.UIBase.PlayLoopSe // (Final|Native|Public|BlueprintCallable) // @ game+0x1311c30
	void OpenDirect(); // Function BattlePrototype.UIBase.OpenDirect // (Native|Public|BlueprintCallable) // @ game+0x693f00
	void Open(); // Function BattlePrototype.UIBase.Open // (Native|Public|BlueprintCallable) // @ game+0x693ee0
	void IsStatePlay(bool isPlay); // Function BattlePrototype.UIBase.IsStatePlay // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1311b90
	void IsPlayUICurrentAnimation(bool isPlay); // Function BattlePrototype.UIBase.IsPlayUICurrentAnimation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1311a50
	void IsPlayUIAnyAnimation(bool isPlay); // Function BattlePrototype.UIBase.IsPlayUIAnyAnimation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13119c0
	void IsPlayUIAnimation(int32_t Index, bool isPlay); // Function BattlePrototype.UIBase.IsPlayUIAnimation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13118f0
	void IsPlaying(bool IsPlaying); // Function BattlePrototype.UIBase.IsPlaying // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1311af0
	bool isLoopSE(struct FName loopSeName); // Function BattlePrototype.UIBase.isLoopSE // (Final|Native|Public|BlueprintCallable) // @ game+0x13130d0
	struct FString IntToString(int32_t Value, int32_t MinLength, int32_t MaxLength); // Function BattlePrototype.UIBase.IntToString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13117b0
	void InitControlRetainerBox(); // Function BattlePrototype.UIBase.InitControlRetainerBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1310c20
	void InitChromaticAberration(); // Function BattlePrototype.UIBase.InitChromaticAberration // (Final|Native|Public|BlueprintCallable) // @ game+0x1310c00
	void GetViewportOffset(struct FVector2D absolutePosition, struct FVector2D calcOffset); // Function BattlePrototype.UIBase.GetViewportOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1310b30
	void GetUICurrentAnimationIndex(int32_t Index); // Function BattlePrototype.UIBase.GetUICurrentAnimationIndex // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1310aa0
	void GetScreenOffsetReverse(struct FVector2D baseOffset, struct FVector2D calcOffset); // Function BattlePrototype.UIBase.GetScreenOffsetReverse // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13109d0
	void GetScreenOffset(struct FVector2D baseOffset, struct FVector2D calcOffset); // Function BattlePrototype.UIBase.GetScreenOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1310900
	bool GetMouseDisable(); // Function BattlePrototype.UIBase.GetMouseDisable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13108e0
	struct FText GetMenuCommonMessage(struct UDatabaseManager* pDatabaseManager, struct FName Name); // Function BattlePrototype.UIBase.GetMenuCommonMessage // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x13107c0
	void GetInputLevel(int32_t inputLevel); // Function BattlePrototype.UIBase.GetInputLevel // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1310730
	void GetIconLimitRD(struct FVector2D LimitPosition); // Function BattlePrototype.UIBase.GetIconLimitRD // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13106a0
	void GetIconLimitLU(struct FVector2D LimitPosition); // Function BattlePrototype.UIBase.GetIconLimitLU // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1310610
	void GetFlagUpdateAlways(bool Flag); // Function BattlePrototype.UIBase.GetFlagUpdateAlways // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1310580
	void GetCurrentState(int32_t State); // Function BattlePrototype.UIBase.GetCurrentState // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x13104e0
	void GetAnimation(int32_t Index, struct UWidgetAnimation* Animation); // Function BattlePrototype.UIBase.GetAnimation // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1310410
	struct FVector2D GetAbsoluteSize(); // Function BattlePrototype.UIBase.GetAbsoluteSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13103e0
	void GetAbsoluteScreenOfffset(struct FVector2D baseOffset, struct FVector2D calcOffset); // Function BattlePrototype.UIBase.GetAbsoluteScreenOfffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1310310
	struct FVector2D GetAbsolutePosition(); // Function BattlePrototype.UIBase.GetAbsolutePosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x13102e0
	void DebugDrawPlayingAnimation(float DeltaSecond); // Function BattlePrototype.UIBase.DebugDrawPlayingAnimation // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d11c0
	void DebugDrawLastAnimation(float DeltaSecond); // Function BattlePrototype.UIBase.DebugDrawLastAnimation // (Final|Native|Protected|BlueprintCallable) // @ game+0x11d11c0
	void CloseDirect(); // Function BattlePrototype.UIBase.CloseDirect // (Native|Public|BlueprintCallable) // @ game+0x13102c0
	void Close(); // Function BattlePrototype.UIBase.Close // (Native|Public|BlueprintCallable) // @ game+0x693f60
	bool CheckRectangleCore(struct FVector2D Position); // Function BattlePrototype.UIBase.CheckRectangleCore // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1310240
	bool CheckRectangle(); // Function BattlePrototype.UIBase.CheckRectangle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1310210
	void CheckInput(enum class EUIInputButton KeyType, enum class EUIInputType InputType, bool IsInput); // Function BattlePrototype.UIBase.CheckInput // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1310100
	bool CheckEqualName(struct FString BaseString, struct FString CheckString); // Function BattlePrototype.UIBase.CheckEqualName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1310000
	bool CheckCircleCore(struct FVector2D Position); // Function BattlePrototype.UIBase.CheckCircleCore // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x130ff80
	bool CheckCircle(); // Function BattlePrototype.UIBase.CheckCircle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x130ff50
	bool CheckAnyInput(); // Function BattlePrototype.UIBase.CheckAnyInput // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x130ff20
	void ChangeSubState(int32_t NewSubState); // Function BattlePrototype.UIBase.ChangeSubState // (Native|Public|BlueprintCallable) // @ game+0x130fe90
	void ChangeStateDirect(int32_t NewState); // Function BattlePrototype.UIBase.ChangeStateDirect // (Native|Public|BlueprintCallable) // @ game+0x130fe00
	void ChangeStateAllDirect(int32_t NewState, int32_t NewSubState); // Function BattlePrototype.UIBase.ChangeStateAllDirect // (Native|Public|BlueprintCallable) // @ game+0x130fd40
	void ChangeState(int32_t NewState); // Function BattlePrototype.UIBase.ChangeState // (Native|Public|BlueprintCallable) // @ game+0x130fcb0
	void AddViewPortPrio(); // Function BattlePrototype.UIBase.AddViewPortPrio // (Final|Native|Public|BlueprintCallable) // @ game+0x130fc90
	void AddToSetViewPortPrio(enum class EUIViewPrio viewprio); // Function BattlePrototype.UIBase.AddToSetViewPortPrio // (Final|Native|Public|BlueprintCallable) // @ game+0x130fc10
};

// Class BattlePrototype.UIActionIcon
// Size: 0x488 (Inherited: 0x388)
struct UUIActionIcon : UUIBase {
	struct FVector2D baseOffset; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)
	struct AActor* OwnerActor; // 0x398(0x08)
	char pad_3A0[0xe8]; // 0x3a0(0xe8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIActionIcon.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x130dfe0
	void setSubQuestStateDetail(enum class EActionIconSubQuestState State, bool isQuestActive, bool IsActive); // Function BattlePrototype.UIActionIcon.setSubQuestStateDetail // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animIn2, struct UWidgetAnimation* animOut2, struct UWidgetAnimation* animSelect_Progress, struct UWidgetAnimation* animSelectIn_Progress, struct UWidgetAnimation* animSelectOut_Progress, struct UWidgetAnimation* animIn2_Progress, struct UWidgetAnimation* animOut2_Progress, struct UWidgetAnimation* animSelect_Bonds, struct UWidgetAnimation* animSelectIn_Bonds, struct UWidgetAnimation* animSelectOut_Bonds, struct UWidgetAnimation* animIn2_Bonds, struct UWidgetAnimation* animOut2_Bonds, struct UImage* imageIcon, struct UImage* imageFrame1, struct UImage* imageFrame6Add, struct UImage* imageNo, struct UImage* imageNoAdd); // Function BattlePrototype.UIActionIcon.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x130c610
};

// Class BattlePrototype.UIAreaHere
// Size: 0x3b0 (Inherited: 0x388)
struct UUIAreaHere : UUIBase {
	float DrawSeconds; // 0x388(0x04)
	char pad_38C[0x24]; // 0x38c(0x24)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIAreaHere.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1312d90
	void Start(int32_t LocationId, int32_t areaId, int32_t PortalID); // Function BattlePrototype.UIAreaHere.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1312970
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textAreaHere); // Function BattlePrototype.UIAreaHere.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13111b0
};

// Class BattlePrototype.UIAreaNext
// Size: 0x3a0 (Inherited: 0x388)
struct UUIAreaNext : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIAreaNext.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1312e90
	bool Start(int32_t LocationId, int32_t areaId, int32_t PortalID, bool isWorldMap); // Function BattlePrototype.UIAreaNext.Start // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1312a70
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut); // Function BattlePrototype.UIAreaNext.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13112b0
	bool End(); // Function BattlePrototype.UIAreaNext.End // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIAutoSaving
// Size: 0x390 (Inherited: 0x388)
struct UUIAutoSaving : UUIBase {
	float m_SaveTimer; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)

	void OpenAutoSave(); // Function BattlePrototype.UIAutoSaving.OpenAutoSave // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIBooksTop
// Size: 0x650 (Inherited: 0x388)
struct UUIBooksTop : UUIBase {
	char pad_388[0x2c8]; // 0x388(0x2c8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIBooksTop.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1312f90
	void SetContentsChange(bool IsChange); // Function BattlePrototype.UIBooksTop.SetContentsChange // (Final|Native|Public|BlueprintCallable) // @ game+0x1312290
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIBooksTop.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1313160
	bool isEndMenu(); // Function BattlePrototype.UIBooksTop.isEndMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13130b0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UBorder* borderAllColor, struct UBorder* borderPicture, struct UREDRetainerBox* retainerBoxMenu, struct UImage* imageGhostViewer, struct UImage* imageViewerNoise, struct UWidgetAnimation* animDefaultView, struct UWidgetAnimation* animChangeView, struct UWidgetAnimation* animChangeDefault, struct UUIBrainMessage* UIBrainMessage, struct UUICharaBooks* UICharaBooks, struct UUIEnemyBooks* UIEnemyBooks, struct UUIWishList* uiWish, struct UUIHelpMenu* UIHelpMenu); // Function BattlePrototype.UIBooksTop.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1311370
	void InitializeCommonParts(struct UUIMainContents* Parent, struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UIBooksTop.InitializeCommonParts // (Final|Native|Public|BlueprintCallable) // @ game+0x13110b0
	void InitializeCategory(int32_t Category, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animUnselect, struct UWidgetAnimation* animDecision, struct UTextBlock* textCategory); // Function BattlePrototype.UIBooksTop.InitializeCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x1310e30
	void InitializeArrowLR(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision); // Function BattlePrototype.UIBooksTop.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x1310c40
};

// Class BattlePrototype.UIBossName
// Size: 0x508 (Inherited: 0x388)
struct UUIBossName : UUIBase {
	float PreShuffleSeconds; // 0x388(0x04)
	float ShuffuleSeconds; // 0x38c(0x04)
	float ShuffuleIntervalSeconds; // 0x390(0x04)
	float FixedDrawSecond; // 0x394(0x04)
	char pad_398[0x170]; // 0x398(0x170)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIBossName.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1317b30
	void Start(struct FString bossId, enum class EBossNameMode Mode, float freeFixedDrawSecond); // Function BattlePrototype.UIBossName.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1317930
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textBossName); // Function BattlePrototype.UIBossName.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1315660
};

// Class BattlePrototype.UIBrainCrashGauge
// Size: 0x420 (Inherited: 0x388)
struct UUIBrainCrashGauge : UUIBase {
	char pad_388[0x50]; // 0x388(0x50)
	struct ARSCharacterBase* m_pTarget; // 0x3d8(0x08)
	char pad_3E0[0x40]; // 0x3e0(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIBrainCrashGauge.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1317c30
	void SetTarget(struct ARSCharacterBase* Target); // Function BattlePrototype.UIBrainCrashGauge.SetTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13178b0
	void SetBg(struct UImage* pImage); // Function BattlePrototype.UIBrainCrashGauge.SetBg // (Final|Native|Public|BlueprintCallable) // @ game+0x13171e0
	void OnPlayGaugeFullSound(); // Function BattlePrototype.UIBrainCrashGauge.OnPlayGaugeFullSound // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animFull, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animDecision2, struct UImage* imageGaugeAdd, struct UImage* imageGaugeNormal); // Function BattlePrototype.UIBrainCrashGauge.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13157f0
	void GetGaugeTimerRate(float Rate); // Function BattlePrototype.UIBrainCrashGauge.GetGaugeTimerRate // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1315340
};

// Class BattlePrototype.UIBrainGaugeEN
// Size: 0x398 (Inherited: 0x388)
struct UUIBrainGaugeEN : UUIBase {
	float m_Percent; // 0x388(0x04)
	float m_Time; // 0x38c(0x04)
	bool m_FlagPercentUpdate; // 0x390(0x01)
	bool m_FlagGaugeMax; // 0x391(0x01)
	bool m_FlagBrainField; // 0x392(0x01)
	char pad_393[0x5]; // 0x393(0x05)

	void StartBrainField(); // Function BattlePrototype.UIBrainGaugeEN.StartBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1317af0
	void SetGaugePercent(float percent, float Time); // Function BattlePrototype.UIBrainGaugeEN.SetGaugePercent // (Final|Native|Public|BlueprintCallable) // @ game+0x13176f0
	void SetGaugeMax(bool IsFull); // Function BattlePrototype.UIBrainGaugeEN.SetGaugeMax // (Final|Native|Public|BlueprintCallable) // @ game+0x1317670
	void EndBrainField(); // Function BattlePrototype.UIBrainGaugeEN.EndBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1315300
};

// Class BattlePrototype.UIBrainMap
// Size: 0x3e8 (Inherited: 0x388)
struct UUIBrainMap : UUIBase {
	struct FLinearColor ColorBrainIcon; // 0x388(0x10)
	char pad_398[0x50]; // 0x398(0x50)

	void updateProgramAnimation(float DeltaSeconds); // Function BattlePrototype.UIBrainMap.updateProgramAnimation // (Final|Native|Protected|BlueprintCallable) // @ game+0x1318420
	void playContentsOut(); // Function BattlePrototype.UIBrainMap.playContentsOut // (Final|Native|Protected|BlueprintCallable) // @ game+0x1318370
	void playContentsIn(); // Function BattlePrototype.UIBrainMap.playContentsIn // (Final|Native|Protected|BlueprintCallable) // @ game+0x1318350
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIBrainMap.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c99d0
	bool isPlayingContentsOut(); // Function BattlePrototype.UIBrainMap.isPlayingContentsOut // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1318280
	bool isPlayingContentsIn(); // Function BattlePrototype.UIBrainMap.isPlayingContentsIn // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1318250
	void InitializeThis(struct UBorder* borderAllColor, struct UImage* imageCoverBlack, struct UImage* imageCA_Red, struct UImage* imageCA_Green, struct UImage* imageCA_Blue, struct UImage* imageBrainIcon2, struct UImage* imageBrainIcon3, struct UImage* imageBrainIcon4, struct UUIBase* uiMainChliceParts); // Function BattlePrototype.UIBrainMap.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1315a70
};

// Class BattlePrototype.UIBrainMessage
// Size: 0x3a8 (Inherited: 0x388)
struct UUIBrainMessage : UUIBase {
	bool m_FlagReplyBondsEpisode; // 0x388(0x01)
	bool m_FlagReplyTest; // 0x389(0x01)
	bool m_FlagReplyClose; // 0x38a(0x01)
	bool m_FlagMouseInput; // 0x38b(0x01)
	char pad_38C[0x1c]; // 0x38c(0x1c)

	bool UpdateThreadTitleNative(int32_t Index); // Function BattlePrototype.UIBrainMessage.UpdateThreadTitleNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool updateBrainMessageMouseSE(); // Function BattlePrototype.UIBrainMessage.updateBrainMessageMouseSE // (Final|Native|Public|BlueprintCallable) // @ game+0x13183f0
	void updateBrainMessageMouseFocus(); // Function BattlePrototype.UIBrainMessage.updateBrainMessageMouseFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x13183d0
	void stopMessageScrollSE(); // Function BattlePrototype.UIBrainMessage.stopMessageScrollSE // (Final|Native|Public|BlueprintCallable) // @ game+0x13183b0
	void SetOldScrollOffset(float Offset); // Function BattlePrototype.UIBrainMessage.SetOldScrollOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x1317830
	void SetFlagEnableClose(bool isPlay); // Function BattlePrototype.UIBrainMessage.SetFlagEnableClose // (Final|Native|Public|BlueprintCallable) // @ game+0x13175f0
	void SetDefaultThread(struct FName threadID); // Function BattlePrototype.UIBrainMessage.SetDefaultThread // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ResetReplyBondsEpisodeFlag(); // Function BattlePrototype.UIBrainMessage.ResetReplyBondsEpisodeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x13171c0
	void ResetDefaultThread(); // Function BattlePrototype.UIBrainMessage.ResetDefaultThread // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void playMessageScrollSE(); // Function BattlePrototype.UIBrainMessage.playMessageScrollSE // (Final|Native|Public|BlueprintCallable) // @ game+0x1318390
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIBrainMessage.ListUnFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIBrainMessage.ListFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	bool isUpdateBrainThreadMouseFocus(int32_t cursorIndex); // Function BattlePrototype.UIBrainMessage.isUpdateBrainThreadMouseFocus // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13182b0
	bool IsReplyClose(); // Function BattlePrototype.UIBrainMessage.IsReplyClose // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1316d20
	bool IsReplyBondsEpisode(); // Function BattlePrototype.UIBrainMessage.IsReplyBondsEpisode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1316ce0
	bool InitListMessageNative(int32_t Index); // Function BattlePrototype.UIBrainMessage.InitListMessageNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeList(struct UREDScrollBox* ScrollBox, struct UREDScrollBox* scrollboxMessage); // Function BattlePrototype.UIBrainMessage.InitializeList // (Final|Native|Public|BlueprintCallable) // @ game+0x13155a0
	bool GetFlagEnableClose(); // Function BattlePrototype.UIBrainMessage.GetFlagEnableClose // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1315320
	bool ClearCurrentNewFlagNative(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIBrainMessage.ClearCurrentNewFlagNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIBrainTalk
// Size: 0x478 (Inherited: 0x388)
struct UUIBrainTalk : UUIBase {
	char pad_388[0x58]; // 0x388(0x58)
	struct UAtomComponent* Voice; // 0x3e0(0x08)
	char pad_3E8[0x10]; // 0x3e8(0x10)
	bool m_isVoicePlayWait; // 0x3f8(0x01)
	char pad_3F9[0x7f]; // 0x3f9(0x7f)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIBrainTalk.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1317d30
	void StopBrainTalkVoice(); // Function BattlePrototype.UIBrainTalk.StopBrainTalkVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x1317b10
	void SetIsVoicePlayWait(bool Flag); // Function BattlePrototype.UIBrainTalk.SetIsVoicePlayWait // (Final|Native|Public|BlueprintCallable) // @ game+0x13177b0
	void SetBugMode(bool isBug); // Function BattlePrototype.UIBrainTalk.SetBugMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1317560
	void SetBrainTalkMessage(int32_t characterId, int32_t ExpressionID, struct FString Message, struct UAtomComponent* Voice, float DrawSecond, bool isReserve); // Function BattlePrototype.UIBrainTalk.SetBrainTalkMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1317340
	void PlayBrainTalkVoice(); // Function BattlePrototype.UIBrainTalk.PlayBrainTalkVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x13171a0
	void PauseBrainTalkVoice(bool IsPause); // Function BattlePrototype.UIBrainTalk.PauseBrainTalkVoice // (Final|Native|Public|BlueprintCallable) // @ game+0x1317110
	void IsEndTalk(bool IsEnd); // Function BattlePrototype.UIBrainTalk.IsEndTalk // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1316c50
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textBrainTalk, struct UImage* iconFont, struct UImage* faceB, struct UMaterialInstanceConstant* materialFontNormal, struct UMaterialInstanceConstant* materialFontNoize); // Function BattlePrototype.UIBrainTalk.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1315cf0
	struct UTexture* GetFaceTexture(int32_t Index); // Function BattlePrototype.UIBrainTalk.GetFaceTexture // (Event|Protected|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UICharaBooks
// Size: 0x460 (Inherited: 0x388)
struct UUICharaBooks : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0x70]; // 0x3a0(0x70)
	struct UTexture* TextureCharacter[0x2]; // 0x410(0x10)
	char pad_420[0x40]; // 0x420(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICharaBooks.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1317e30
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICharaBooks.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICharaBooks.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UICharaBooks.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICharaBooks.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UICharaBooks.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animPresent, struct UWidgetAnimation* animPresentIn, struct UWidgetAnimation* animPresentOut, struct UREDScrollBox* ScrollBox, struct UUICharaInfoWindow* childInfoWin, struct UUIEnemyListIndex* childListIndex, struct UUICharaPresentWindow* presentWindow); // Function BattlePrototype.UICharaBooks.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1315fb0
	void InitializeFromMain(struct UUIMainContents* UIMainContents, struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UICharaBooks.InitializeFromMain // (Final|Native|Public|BlueprintCallable) // @ game+0x13154a0
	void InitializeFromBooks(struct UUIBooksTop* Parent, struct UImage* imageChara); // Function BattlePrototype.UICharaBooks.InitializeFromBooks // (Final|Native|Public|BlueprintCallable) // @ game+0x13153e0
};

// Class BattlePrototype.UICharaInfoWindow
// Size: 0x488 (Inherited: 0x388)
struct UUICharaInfoWindow : UUIBase {
	char pad_388[0x100]; // 0x388(0x100)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICharaInfoWindow.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1317f30
	void InitializeThis(struct UWidgetAnimation* animDefault1, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animDefault1_3, struct UWidgetAnimation* animDefault2_2, struct UTextBlock* textCharaName, struct UTextBlock* textCategoryName, struct UTextBlock* textCharaInfo, struct UTextBlock* textCharaDetails, struct UImage* charaImage, struct UREDScrollBoxSimple* scrollBox1, struct UREDScrollBoxSimple* scrollBox2, struct UREDOverlay* mousehitthubnail); // Function BattlePrototype.UICharaInfoWindow.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1316230
};

// Class BattlePrototype.UICharaName
// Size: 0x3c8 (Inherited: 0x388)
struct UUICharaName : UUIBase {
	float DrawSecond; // 0x388(0x04)
	char pad_38C[0x3c]; // 0x38c(0x3c)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICharaName.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1318030
	void Start(struct FString CharaID); // Function BattlePrototype.UICharaName.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1317a50
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textCharaName, struct UTextBlock* textCharaName2); // Function BattlePrototype.UICharaName.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1316570
};

// Class BattlePrototype.UICharaPresentListIndex
// Size: 0x3b8 (Inherited: 0x388)
struct UUICharaPresentListIndex : UUIBase {
	char pad_388[0x30]; // 0x388(0x30)

	void UpdateStateThis(); // Function BattlePrototype.UICharaPresentListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1318130
	bool SetItemInfo(struct FName ItemId); // Function BattlePrototype.UICharaPresentListIndex.SetItemInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UTextBlock* textItemName); // Function BattlePrototype.UICharaPresentListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1316700
};

// Class BattlePrototype.UICharaPresentWindow
// Size: 0x478 (Inherited: 0x388)
struct UUICharaPresentWindow : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	struct FLinearColor ColorNumNormal; // 0x3a0(0x10)
	struct FLinearColor ColorNumMax; // 0x3b0(0x10)
	char pad_3C0[0xb8]; // 0x3c0(0xb8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICharaPresentWindow.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1318150
	bool SetItemInfo(struct FName ItemId); // Function BattlePrototype.UICharaPresentWindow.SetItemInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	bool SetFavorabilityIcon(enum class EItemFavorability favorability); // Function BattlePrototype.UICharaPresentWindow.SetFavorabilityIcon // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool SetFaceIcon(enum class EPlayerID characterId); // Function BattlePrototype.UICharaPresentWindow.SetFaceIcon // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICharaPresentWindow.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICharaPresentWindow.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UICharaPresentWindow.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICharaPresentWindow.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UICharaPresentWindow.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UREDScrollBox* ScrollBox, struct UUICharaPresentListIndex* childListIndex, struct UImage* imagePresent, struct UTextBlock* textTitleBar, struct UTextBlock* textCharaName, struct UBorder* borderBondLevelNum, struct UTextBlock* textBondLevelNum, struct UTextBlock* textItemName, struct UBorder* borderCurrentNum, struct UTextBlock* textCurrentNum, struct UTextBlock* textSlash, struct UTextBlock* textMaxNum, struct UUIGuide* childGuide); // Function BattlePrototype.UICharaPresentWindow.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1316850
};

// Class BattlePrototype.UICharaSelectMenu
// Size: 0x488 (Inherited: 0x388)
struct UUICharaSelectMenu : UUIBase {
	struct FDelegate m_OnEventSelectStart; // 0x388(0x10)
	struct ARSTitleManager* m_pTitleManager; // 0x398(0x08)
	char pad_3A0[0x10]; // 0x3a0(0x10)
	struct UUserParamManager* UserParamManager; // 0x3b0(0x08)
	struct UDatabaseManager* DatabaseManager; // 0x3b8(0x08)
	char pad_3C0[0xc8]; // 0x3c0(0xc8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICharaSelectMenu.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131d5c0
	void Start(enum class ECharaSelectType Type); // Function BattlePrototype.UICharaSelectMenu.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x131d500
	void SetTitleManager(struct ARSTitleManager* ptitlemanager); // Function BattlePrototype.UICharaSelectMenu.SetTitleManager // (Final|Native|Public|BlueprintCallable) // @ game+0x131d330
	void SetScenarioCrear(bool yuito, bool kasane); // Function BattlePrototype.UICharaSelectMenu.SetScenarioCrear // (Final|Native|Public|BlueprintCallable) // @ game+0x131d260
	void SetCharacterOutLine(int32_t cursorIndex); // Function BattlePrototype.UICharaSelectMenu.SetCharacterOutLine // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeParts(int32_t Index, struct UUICharaSelectParts* charaparts); // Function BattlePrototype.UICharaSelectMenu.InitializeParts // (Final|Native|Public|BlueprintCallable) // @ game+0x131b0b0
	void InitializeCharaSelect(struct UUIGuide* uGuide, struct UTextBlock* charaselectguide, struct UTextBlock* charatext, struct UTextBlock* CharaName, struct UTextBlock* characlear, struct UBorder* clearborder, struct UREDImage* mouse_yuito_hit, struct UREDImage* mouse_kasane_hit, struct UREDImage* mouse_yuito_hit2, struct UREDImage* mouse_kasane_hit2); // Function BattlePrototype.UICharaSelectMenu.InitializeCharaSelect // (Final|Native|Public|BlueprintCallable) // @ game+0x131ac30
	void InitializeAnime(struct UWidgetAnimation* in_anime, struct UWidgetAnimation* default_anime, struct UWidgetAnimation* default_none_anime, struct UWidgetAnimation* out_anime, struct UWidgetAnimation* in_yuito_anime, struct UWidgetAnimation* default_yuito_anime, struct UWidgetAnimation* decision_yuito_anime, struct UWidgetAnimation* out_yuito_anime, struct UWidgetAnimation* in_kasane_anime, struct UWidgetAnimation* default_kasane_anime, struct UWidgetAnimation* decision_kasane_anime, struct UWidgetAnimation* on_kasane_anime); // Function BattlePrototype.UICharaSelectMenu.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1319fa0
	bool GetDecideScenario(); // Function BattlePrototype.UICharaSelectMenu.GetDecideScenario // (Final|Native|Public|BlueprintCallable) // @ game+0x1319f70
	int32_t GetCursor(); // Function BattlePrototype.UICharaSelectMenu.GetCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x12e76a0
};

// Class BattlePrototype.UICharaSelectParts
// Size: 0x3a8 (Inherited: 0x388)
struct UUICharaSelectParts : UUIBase {
	char pad_388[0x20]; // 0x388(0x20)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICharaSelectParts.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131d6c0
	void InitializeAnime(struct UWidgetAnimation* cursor_select, struct UWidgetAnimation* cursor_default_none, struct UWidgetAnimation* cursor_default); // Function BattlePrototype.UICharaSelectParts.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x131a2e0
};

// Class BattlePrototype.UIChromaticAberration
// Size: 0x50 (Inherited: 0x28)
struct UUIChromaticAberration : UObject {
	struct URetainerBox* RetainerBox; // 0x28(0x08)
	struct UMaterialInstanceDynamic* Material; // 0x30(0x08)
	struct TArray<struct UImage*> Image; // 0x38(0x10)
	enum class EChromaticAberrationType Type; // 0x48(0x01)
	char pad_49[0x7]; // 0x49(0x07)

	void Update(); // Function BattlePrototype.UIChromaticAberration.Update // (Final|Native|Public|BlueprintCallable) // @ game+0x131d5a0
	void Setup(struct URetainerBox* InRetainerBox, struct UImage* ImageRed, struct UImage* ImageGreen, struct UImage* ImageBlue); // Function BattlePrototype.UIChromaticAberration.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x131d3b0
};

// Class BattlePrototype.UICode
// Size: 0x400 (Inherited: 0x388)
struct UUICode : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0x60]; // 0x3a0(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICode.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131d7c0
	void Start(); // Function BattlePrototype.UICode.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x131e350
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICode.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICode.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UICode.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UICode.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UICode.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UREDScrollBox* ScrollBox, struct UTextBlock* textTitle); // Function BattlePrototype.UICode.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131b170
};

// Class BattlePrototype.UICodeListIndex
// Size: 0x3d8 (Inherited: 0x388)
struct UUICodeListIndex : UUIBase {
	char pad_388[0x50]; // 0x388(0x50)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICodeListIndex.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131d8c0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animDefaultClear, struct UWidgetAnimation* animSelectClear, struct UWidgetAnimation* animSelectInClear, struct UImage* imageNewIcon, struct UTextBlock* textName); // Function BattlePrototype.UICodeListIndex.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131b300
};

// Class BattlePrototype.UIConfigBrightness
// Size: 0x428 (Inherited: 0x388)
struct UUIConfigBrightness : UUIBase {
	int32_t MinX; // 0x388(0x04)
	int32_t MaxX; // 0x38c(0x04)
	char pad_390[0x98]; // 0x390(0x98)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigBrightness.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131d9c0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UImage* imageSlider, struct UTextBlock* textDescription, struct UREDOverlay* gauge_set); // Function BattlePrototype.UIConfigBrightness.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131b540
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigBrightness.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x131a3e0
	void applyBrightness(float fValue); // Function BattlePrototype.UIConfigBrightness.applyBrightness // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIConfigChoice
// Size: 0x448 (Inherited: 0x388)
struct UUIConfigChoice : UUIBase {
	char pad_388[0xc0]; // 0x388(0xc0)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigChoice.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131dac0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UTextBlock* textWindowTitle, struct UTextBlock* TextMain, struct UOverlay* overlayGuideSet); // Function BattlePrototype.UIConfigChoice.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131b690
	void initializeIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UIConfigChoice.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x131dfc0
};

// Class BattlePrototype.UIConfigController
// Size: 0x500 (Inherited: 0x388)
struct UUIConfigController : UUIBase {
	float LineHeight; // 0x388(0x04)
	char pad_38C[0x174]; // 0x38c(0x174)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigController.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131dbc0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UREDScrollBoxSimple* ScrollBox, struct UUIConfigControllerSelectMulti* indexAttack, struct UUIConfigControllerSelectMulti* indexJump, struct UUIConfigControllerSelectMulti* indexStep_Dash, struct UUIConfigControllerSelectMulti* indexSpecialAttack, struct UUIConfigControllerSelectMulti* indexSAS_Menu_OpenClose, struct UUIConfigControllerSelectMulti* indexCV_Menu_OpenClose, struct UUIConfigControllerSelectMulti* indexPsychokinesis_Low, struct UUIConfigControllerSelectMulti* indexPsychokinesis_High, struct UUIConfigControllerSelectMulti* indexAutoTargetSwitching, struct UUIConfigControllerSelectMulti* indexSAS_CV_PageSwitch, struct UUIConfigControllerSelect* indexMoveFront, struct UUIConfigControllerSelect* indexMoveBack, struct UUIConfigControllerSelect* indexMoveLeft, struct UUIConfigControllerSelect* indexMoveRight, struct UUIConfigControllerSelect* indexAction, struct UUIConfigControllerSelect* indexAction2, struct UUIConfigControllerSelect* indexPsychicField, struct UUIConfigControllerSelect* indexAssaultVision, struct UUIConfigControllerSelect* indexExecuteBrainDrive, struct UUIConfigControllerSelect* indexCameraUp, struct UUIConfigControllerSelect* indexCameraDown, struct UUIConfigControllerSelect* indexCameraLeft, struct UUIConfigControllerSelect* indexCameraRight, struct UUIConfigControllerSelect* indexLockOn, struct UUIConfigControllerSelect* indexExecuteSAS1, struct UUIConfigControllerSelect* indexExecuteSAS2, struct UUIConfigControllerSelect* indexExecuteSAS3, struct UUIConfigControllerSelect* indexExecuteSAS4, struct UUIConfigControllerSelect* indexStopSAS, struct UUIConfigControllerSelect* indexExecuteCV1, struct UUIConfigControllerSelect* indexExecuteCV2, struct UUIConfigControllerSelect* indexExecuteCV3, struct UUIConfigControllerSelect* indexExecuteCV4, struct UUIConfigControllerSelect* indexItemSelectL, struct UUIConfigControllerSelect* indexItemSelectR, struct UUIConfigControllerSelect* indexUseItem, struct UUIConfigControllerSelect* indexCampMenu, struct UUIConfigControllerSelect* indexDetailMap, struct UUIConfigControllerSelect* indexWorldMap, struct UUIConfigControllerSelect* indexBrainMessage); // Function BattlePrototype.UIConfigController.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131b7e0
};

// Class BattlePrototype.UIConfigControllerSelect
// Size: 0x3c8 (Inherited: 0x388)
struct UUIConfigControllerSelect : UUIBase {
	char pad_388[0x40]; // 0x388(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigControllerSelect.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131dcc0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct USpacer* Spacer, struct UTextBlock* textTitle); // Function BattlePrototype.UIConfigControllerSelect.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x131c370
};

// Class BattlePrototype.UIConfigControllerSelectMulti
// Size: 0x430 (Inherited: 0x388)
struct UUIConfigControllerSelectMulti : UUIBase {
	char pad_388[0xa8]; // 0x388(0xa8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigControllerSelectMulti.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131ddc0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textTitle); // Function BattlePrototype.UIConfigControllerSelectMulti.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131c530
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigControllerSelectMulti.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x131a5f0
};

// Class BattlePrototype.UIConfigGame
// Size: 0x938 (Inherited: 0x388)
struct UUIConfigGame : UUIBase {
	float LineHeight; // 0x388(0x04)
	int32_t IndexPerPage; // 0x38c(0x04)
	int32_t ControllerIndexPerPage; // 0x390(0x04)
	int32_t KeyboardIndexPerPage; // 0x394(0x04)
	struct USoundAtomCue* m_pSoundSampleVoiceJP; // 0x398(0x08)
	struct USoundAtomCue* m_pSoundSampleVoiceEN; // 0x3a0(0x08)
	char pad_3A8[0x528]; // 0x3a8(0x528)
	struct USaveLoadScreenParamManager* m_pSystemSaveLoadScreenParamManager; // 0x8d0(0x08)
	char pad_8D8[0x60]; // 0x8d8(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigGame.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131dec0
	void unbindAnyKey(); // Function BattlePrototype.UIConfigGame.unbindAnyKey // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void StartFromTitle(); // Function BattlePrototype.UIConfigGame.StartFromTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x131d580
	void SetContentsChange(bool IsChange); // Function BattlePrototype.UIConfigGame.SetContentsChange // (Final|Native|Public|BlueprintCallable) // @ game+0x131d1e0
	void SetChangeMainMenuTabR(); // Function BattlePrototype.UIConfigGame.SetChangeMainMenuTabR // (Final|Native|Public|BlueprintCallable) // @ game+0x131d1c0
	void SetChangeMainMenuTabL(); // Function BattlePrototype.UIConfigGame.SetChangeMainMenuTabL // (Final|Native|Public|BlueprintCallable) // @ game+0x131d1a0
	void setAnyKey(struct FKey Key); // Function BattlePrototype.UIConfigGame.setAnyKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x131e280
	void playVibrationS(); // Function BattlePrototype.UIConfigGame.playVibrationS // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIConfigGame.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131e250
	bool isEndMenu(); // Function BattlePrototype.UIConfigGame.isEndMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131e230
	bool IsChangeMainMenuTabR(); // Function BattlePrototype.UIConfigGame.IsChangeMainMenuTabR // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131d180
	bool IsChangeMainMenuTabL(); // Function BattlePrototype.UIConfigGame.IsChangeMainMenuTabL // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x131d160
	bool isAllowChangeMainMenuTab(); // Function BattlePrototype.UIConfigGame.isAllowChangeMainMenuTab // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x131e200
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animInfoWin, struct UWidgetAnimation* animInfoWinIn, struct UWidgetAnimation* animInfoWinOut, struct UBackgroundBlur* BackgroundBlur, struct UBorder* borderAllColor, struct UImage* imageCoverBlack, struct UREDScrollBoxSimple* ScrollBox, struct UTextBlock* textTitle, struct UTextBlock* textHelp, struct UOverlay* menuSet, struct UUIGuide* UIGuide, struct UUIConfigBrightness* uiBrightness, struct UUIConfigKeyboardMouse* uiKeyboardMouse, struct UUIConfigController* uiController, struct UUIConfigGraphics* uiGraphics, struct UUIConfigOther* uiOther, struct UImage* imageOtherCategoryLine, struct UUIConfigChoice* UIConfigChoice, struct UUIConfigSelect3* uiIndexDifficulty, struct UUIConfigSelect2* uiIndexAutoLockOn, struct UUIConfigSelect2* uiIndexAutoCamera, struct UUIConfigSelect2* uiIndexCameraAfterMoveType, struct UUIConfigSelect2* uiIndexDisplayEnemyDamage, struct UUIConfigSelect2* uiIndexMiniMapDisplay, struct UUIConfigSelect2* uiIndexMiniMapRotation, struct UUIConfigSelect2* uiIndexMiniMapScaling, struct UUIConfigSelect2* uiIndexBrainCrashCutin, struct UUIConfigSelect2* uiIndexAutoSkip, struct UUIConfigSelectMulti* uiIndexVoiceLanguage, struct UUIConfigSelectSlider* uiIndexVoiceVolume, struct UUIConfigSelectSlider* uiIndexBGMVolume, struct UUIConfigSelectSlider* uiIndexSEVolume, struct UUIConfigSelect5* uiIndexCameraRotationSpeed, struct UUIConfigSelect2* uiIndexCameraRotationPitch, struct UUIConfigSelect2* uiIndexCameraRotatinoYaw, struct UUIConfigSelect2* uiIndexControllerVibration); // Function BattlePrototype.UIConfigGame.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131c6c0
	void InitializeCommonParts(struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide, struct UUIMainContents* Parent, struct UWidgetAnimation* animMainMenuInfoWin, struct UWidgetAnimation* animMainMenuInfoWinIn, struct UWidgetAnimation* animMainMenuInfoWinOut); // Function BattlePrototype.UIConfigGame.InitializeCommonParts // (Final|Native|Public|BlueprintCallable) // @ game+0x131aef0
	void InitializeCategory(int32_t Category, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UTextBlock* textCategory); // Function BattlePrototype.UIConfigGame.InitializeCategory // (Final|Native|Public|BlueprintCallable) // @ game+0x131a9f0
	void InitializeArrowLR(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision); // Function BattlePrototype.UIConfigGame.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x131a800
	void bindAnyKey(); // Function BattlePrototype.UIConfigGame.bindAnyKey // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIConfigGraphics
// Size: 0x418 (Inherited: 0x388)
struct UUIConfigGraphics : UUIBase {
	char pad_388[0x90]; // 0x388(0x90)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigGraphics.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323860
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UREDScrollBoxSimple* ScrollBox, struct UUIConfigSelect3* uiAntiAliasingQuality, struct UUIConfigSelect2* uiVSync, struct UUIConfigSelect3* uiTextureQuality, struct UUIConfigSelect3* uiShadowQuality, struct UUIConfigSelect3* uiPostProccessingQuality, struct UUIConfigSelectMulti* uiResolution, struct UUIConfigSelect3* uiWindowMode, struct UUIConfigSelect3* uiFrameRate); // Function BattlePrototype.UIConfigGraphics.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13223f0
};

// Class BattlePrototype.UIConfigKeyboardMouse
// Size: 0x3e8 (Inherited: 0x388)
struct UUIConfigKeyboardMouse : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0x48]; // 0x3a0(0x48)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigKeyboardMouse.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1323960
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIConfigKeyboardMouse.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIConfigKeyboardMouse.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIConfigKeyboardMouse.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIConfigKeyboardMouse.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIConfigKeyboardMouse.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIConfigKeyboardMouse.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13226b0
};

// Class BattlePrototype.UIConfigKeyboardMouseListIndex
// Size: 0x460 (Inherited: 0x388)
struct UUIConfigKeyboardMouseListIndex : UUIBase {
	char pad_388[0xd8]; // 0x388(0xd8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigKeyboardMouseListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323a60
	void InitializeThisFixed(struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animSelect2, struct UWidgetAnimation* animSelect2_in, struct UWidgetAnimation* animSelect2_out, struct UTextBlock* textTitle2, struct UOverlay* overlayFrameSet1, struct UOverlay* overlayFrameSet2); // Function BattlePrototype.UIConfigKeyboardMouseListIndex.InitializeThisFixed // (Final|Native|Public|BlueprintCallable) // @ game+0x1323660
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect_L, struct UWidgetAnimation* animSelect_L_in, struct UWidgetAnimation* animSelect_L_out, struct UWidgetAnimation* animDecision_L, struct UWidgetAnimation* animSelect_L2, struct UWidgetAnimation* animCancel_L2, struct UWidgetAnimation* animSelect_R, struct UWidgetAnimation* animSelect_R_in, struct UWidgetAnimation* animSelect_R_out, struct UWidgetAnimation* animDecision_R, struct UWidgetAnimation* animSelect_R2, struct UWidgetAnimation* animCancel_R2, struct UWidgetAnimation* animChange_L_R, struct UWidgetAnimation* animChange_R_L, struct UTextBlock* textTitle); // Function BattlePrototype.UIConfigKeyboardMouseListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1322770
	void InitializeMouseHit(struct UREDOverlay* pg_set_3, struct UREDOverlay* pg_set_4); // Function BattlePrototype.UIConfigKeyboardMouseListIndex.InitializeMouseHit // (Final|Native|Public|BlueprintCallable) // @ game+0x1321830
};

// Class BattlePrototype.UIConfigOther
// Size: 0x390 (Inherited: 0x388)
struct UUIConfigOther : UUIBase {
	struct UUIBase* ChildIndex; // 0x388(0x08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigOther.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1323b60
	void InitializeThis(struct UUIBase* uiIndex, struct UREDTextBlock* textIndex); // Function BattlePrototype.UIConfigOther.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1322bb0
};

// Class BattlePrototype.UIConfigSelect2
// Size: 0x4f0 (Inherited: 0x388)
struct UUIConfigSelect2 : UUIBase {
	char pad_388[0x168]; // 0x388(0x168)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigSelect2.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323c60
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textTitle); // Function BattlePrototype.UIConfigSelect2.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1322c70
	void initializeIndex(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animEnable, struct UWidgetAnimation* animEnableIn, struct UWidgetAnimation* animEnableOut, struct UTextBlock* textIndex); // Function BattlePrototype.UIConfigSelect2.initializeIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1320e70
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigSelect2.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x1320530
};

// Class BattlePrototype.UIConfigSelect3
// Size: 0x550 (Inherited: 0x388)
struct UUIConfigSelect3 : UUIBase {
	char pad_388[0x1c8]; // 0x388(0x1c8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigSelect3.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323d60
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textTitle); // Function BattlePrototype.UIConfigSelect3.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1322e00
	void initializeIndex(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animEnable, struct UWidgetAnimation* animEnableIn, struct UWidgetAnimation* animEnableOut, struct UTextBlock* textIndex); // Function BattlePrototype.UIConfigSelect3.initializeIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1321170
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigSelect3.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x1320740
};

// Class BattlePrototype.UIConfigSelect5
// Size: 0x5e8 (Inherited: 0x388)
struct UUIConfigSelect5 : UUIBase {
	char pad_388[0x260]; // 0x388(0x260)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigSelect5.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323e60
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textTitle); // Function BattlePrototype.UIConfigSelect5.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1322f90
	void initializeIndex(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animEnable, struct UWidgetAnimation* animEnableIn, struct UWidgetAnimation* animEnableOut); // Function BattlePrototype.UIConfigSelect5.initializeIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1321470
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigSelect5.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x131a5f0
};

// Class BattlePrototype.UIConfigSelectMulti
// Size: 0x468 (Inherited: 0x388)
struct UUIConfigSelectMulti : UUIBase {
	char pad_388[0xe0]; // 0x388(0xe0)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigSelectMulti.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323f60
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefaultGlay, struct UWidgetAnimation* animSelectGlay, struct UWidgetAnimation* animInGlay, struct UWidgetAnimation* animOutGlay, struct UTextBlock* textTitle, struct UTextBlock* textParameter); // Function BattlePrototype.UIConfigSelectMulti.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1323120
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigSelectMulti.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x1320950
};

// Class BattlePrototype.UIConfigSelectSlider
// Size: 0x448 (Inherited: 0x388)
struct UUIConfigSelectSlider : UUIBase {
	int32_t MinX; // 0x388(0x04)
	int32_t MaxX; // 0x38c(0x04)
	char pad_390[0xb8]; // 0x390(0xb8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIConfigSelectSlider.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1324060
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textTitle, struct UREDImage* imageSlider, struct UREDOverlay* gauge_set); // Function BattlePrototype.UIConfigSelectSlider.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13233e0
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIConfigSelectSlider.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x1320b60
};

// Class BattlePrototype.UICredit
// Size: 0x3d90 (Inherited: 0x388)
struct UUICredit : UUIBase {
	struct FSlateColor FontColor; // 0x388(0x28)
	char pad_3B0[0x2e0]; // 0x3b0(0x2e0)
	struct UTextData* TextData; // 0x690(0x08)
	char pad_698[0x20]; // 0x698(0x20)
	struct UTexture2D* TextureLogos[0x2]; // 0x6b8(0x10)
	char pad_6C8[0x36c8]; // 0x6c8(0x36c8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICredit.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1324160
	void InitializeThis(struct UOverlay* overlayParent); // Function BattlePrototype.UICredit.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13235e0
	void InitializeStaffNameQuad(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textStaffLeft1, struct UREDTextBlock* textStaffLeft2, struct UREDTextBlock* textStaffRight1, struct UREDTextBlock* textStaffRight2); // Function BattlePrototype.UICredit.InitializeStaffNameQuad // (Final|Native|Protected|BlueprintCallable) // @ game+0x1322230
	void InitializeStaffNameDouble(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textStaff1, struct UREDTextBlock* textStaff2); // Function BattlePrototype.UICredit.InitializeStaffNameDouble // (Final|Native|Protected|BlueprintCallable) // @ game+0x13220e0
	void InitializeStaffName(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* TextBlock); // Function BattlePrototype.UICredit.InitializeStaffName // (Final|Native|Protected|BlueprintCallable) // @ game+0x1321fe0
	void InitializeSpace_StaffNameDouble(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textStaff1, struct UREDTextBlock* textStaff2); // Function BattlePrototype.UICredit.InitializeSpace_StaffNameDouble // (Final|Native|Protected|BlueprintCallable) // @ game+0x1321e90
	void InitializeSpace_StaffName(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textStaff); // Function BattlePrototype.UICredit.InitializeSpace_StaffName // (Final|Native|Protected|BlueprintCallable) // @ game+0x1321d90
	void InitializeOfficial_StaffNameDouble(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textPosition, struct UREDTextBlock* textStaff1, struct UREDTextBlock* textStaff2); // Function BattlePrototype.UICredit.InitializeOfficial_StaffNameDouble // (Final|Native|Protected|BlueprintCallable) // @ game+0x1321c00
	void InitializeOfficial_StaffNameCombo(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textPosition1, struct UREDTextBlock* textStaff1, struct UREDTextBlock* textPosition2, struct UREDTextBlock* textStaff2); // Function BattlePrototype.UICredit.InitializeOfficial_StaffNameCombo // (Final|Native|Protected|BlueprintCallable) // @ game+0x1321a40
	void InitializeOfficial_StaffName(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* textPosition, struct UREDTextBlock* textStaff); // Function BattlePrototype.UICredit.InitializeOfficial_StaffName // (Final|Native|Protected|BlueprintCallable) // @ game+0x13218f0
	void InitializeLogo(struct UOverlay* Overlay, struct USpacer* Spacer, struct UImage* imageLogo); // Function BattlePrototype.UICredit.InitializeLogo // (Final|Native|Protected|BlueprintCallable) // @ game+0x1321730
	void InitializeCorporateName_Official(struct UOverlay* Overlay, struct USpacer* Spacer, struct UREDTextBlock* TextBlock); // Function BattlePrototype.UICredit.InitializeCorporateName_Official // (Final|Native|Protected|BlueprintCallable) // @ game+0x1320d70
};

// Class BattlePrototype.UICrushBonus
// Size: 0x3b8 (Inherited: 0x388)
struct UUICrushBonus : UUIBase {
	char pad_388[0x30]; // 0x388(0x30)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UICrushBonus.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13284a0
	void setBonus(int32_t bonus); // Function BattlePrototype.UICrushBonus.setBonus // (Final|Native|Public|BlueprintCallable) // @ game+0x1328fd0
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textNumber); // Function BattlePrototype.UICrushBonus.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1326c90
};

// Class BattlePrototype.UIDetailMap
// Size: 0x408 (Inherited: 0x388)
struct UUIDetailMap : UUIBase {
	struct FName m_SceneName; // 0x388(0x08)
	struct ABP_UI_SceneMap* m_ParentSceneMap; // 0x390(0x08)
	char pad_398[0x48]; // 0x398(0x48)
	struct ARSHUDBase* m_pHudBase; // 0x3e0(0x08)
	char pad_3E8[0x20]; // 0x3e8(0x20)

	void UpdateStateDetailMap(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIDetailMap.UpdateStateDetailMap // (Final|Native|Public|BlueprintCallable) // @ game+0x13282a0
	bool TextFixDataDetailMap(int32_t LocationNo); // Function BattlePrototype.UIDetailMap.TextFixDataDetailMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ReleaseDetailMap(); // Function BattlePrototype.UIDetailMap.ReleaseDetailMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeMouseRectWidget(struct UREDOverlay* pc_pg1_2, struct UREDOverlay* pc_pg1_3, struct UREDOverlay* pc_pg2_3, struct UREDOverlay* pc_pg2_2); // Function BattlePrototype.UIDetailMap.InitializeMouseRectWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1326b40
	void InitializeDetailMap(); // Function BattlePrototype.UIDetailMap.InitializeDetailMap // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool InitializeDataDetailMap(); // Function BattlePrototype.UIDetailMap.InitializeDataDetailMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_, struct UWidgetAnimation* iconinfoin, struct UWidgetAnimation* iconinfoout, struct UWidgetAnimation* default_iconinfo_none); // Function BattlePrototype.UIDetailMap.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1326400
	struct ABP_UI_SceneMap* getDetaileMapRefalence(struct FString Path); // Function BattlePrototype.UIDetailMap.getDetaileMapRefalence // (Final|Native|Public|BlueprintCallable) // @ game+0x1328ba0
	bool CreateDetailMap(); // Function BattlePrototype.UIDetailMap.CreateDetailMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ControlDetailMap(int32_t SubState); // Function BattlePrototype.UIDetailMap.ControlDetailMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIDiscover
// Size: 0x438 (Inherited: 0x388)
struct UUIDiscover : UUIBase {
	struct AActor* m_EmActor; // 0x388(0x08)
	struct FVector m_EmPosData; // 0x390(0x0c)
	char pad_39C[0x9c]; // 0x39c(0x9c)

	void UpdateStateDiscover(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIDiscover.UpdateStateDiscover // (Final|Native|Public|BlueprintCallable) // @ game+0x13283a0
	void UpdatePosDiscover(); // Function BattlePrototype.UIDiscover.UpdatePosDiscover // (Final|Native|Public|BlueprintCallable) // @ game+0x1328280
	void Start(enum class EDiscoverType Type, struct AActor* EmActor); // Function BattlePrototype.UIDiscover.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1327ea0
	void SetMaxTimer(float Timer); // Function BattlePrototype.UIDiscover.SetMaxTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1327e20
	void SetDiscoverIndex(int32_t Index); // Function BattlePrototype.UIDiscover.SetDiscoverIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1327da0
	void SetDiscoverIcon(enum class EDiscoverIconType Type); // Function BattlePrototype.UIDiscover.SetDiscoverIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeData(struct UOverlay* FrameData); // Function BattlePrototype.UIDiscover.InitializeData // (Final|Native|Public|BlueprintCallable) // @ game+0x1326880
	void InitializeAnime(struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_discover, struct UWidgetAnimation* in_discover, struct UWidgetAnimation* out_discover, struct UWidgetAnimation* default_undiscover, struct UWidgetAnimation* in_undiscover, struct UWidgetAnimation* out_undiscover, struct UWidgetAnimation* default_undiscoverOver, struct UWidgetAnimation* out_undiscoverOver); // Function BattlePrototype.UIDiscover.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1326600
	int32_t GetDiscoverIndex(); // Function BattlePrototype.UIDiscover.GetDiscoverIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x13263e0
	void ForceVisible(bool Flag); // Function BattlePrototype.UIDiscover.ForceVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x1326360
	void ForceCloseDead(); // Function BattlePrototype.UIDiscover.ForceCloseDead // (Final|Native|Public|BlueprintCallable) // @ game+0x1326340
	void ForceClose(); // Function BattlePrototype.UIDiscover.ForceClose // (Final|Native|Public|BlueprintCallable) // @ game+0x1326320
};

// Class BattlePrototype.UIEnemyBooks
// Size: 0x450 (Inherited: 0x388)
struct UUIEnemyBooks : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0x50]; // 0x3a0(0x50)
	struct UTexture* TextureEnemy[0x4]; // 0x3f0(0x20)
	char pad_410[0x40]; // 0x410(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIEnemyBooks.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13285a0
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIEnemyBooks.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIEnemyBooks.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIEnemyBooks.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIEnemyBooks.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIEnemyBooks.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UREDScrollBox* ScrollBox, struct UUIEnemyInfoWindow* childInfoWin, struct UUIEnemyListIndex* childListIndex); // Function BattlePrototype.UIEnemyBooks.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1326e20
	void InitializeFromMain(struct UUIMainContents* UIMainContents, struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UIEnemyBooks.InitializeFromMain // (Final|Native|Public|BlueprintCallable) // @ game+0x13269c0
	void InitializeFromBooks(struct UUIBooksTop* Parent, struct UImage* imageEnemy); // Function BattlePrototype.UIEnemyBooks.InitializeFromBooks // (Final|Native|Public|BlueprintCallable) // @ game+0x1326900
};

// Class BattlePrototype.UIEnemyDropItem
// Size: 0x398 (Inherited: 0x388)
struct UUIEnemyDropItem : UUIBase {
	char pad_388[0x10]; // 0x388(0x10)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIEnemyDropItem.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13286a0
	void SetInfoBP(int32_t itemIconId, enum class EItemRarity itemRariy); // Function BattlePrototype.UIEnemyDropItem.SetInfoBP // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UImage* imageIcon, struct UTextBlock* textName); // Function BattlePrototype.UIEnemyDropItem.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1326fb0
};

// Class BattlePrototype.UIEnemyInfoWindow
// Size: 0x428 (Inherited: 0x388)
struct UUIEnemyInfoWindow : UUIBase {
	struct UUIEnemyDropItem* m_pDropItemClass; // 0x388(0x08)
	char pad_390[0x98]; // 0x390(0x98)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIEnemyInfoWindow.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13287a0
	void InitializeThis(struct UWidgetAnimation* animDefault1, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animDefault1_3, struct UWidgetAnimation* animDefault2_2, struct UVerticalBox* verticalBoxDropItem, struct UUIEnemyDropItem* childDropItem, struct UVerticalBox* verticalBoxHabitat, struct UTextBlock* textHabitat, struct UOverlay* overlayDetails, struct UTextBlock* textDetailsTitle, struct UImage* enemyImage, struct UTextBlock* textEnemyName, struct UTextBlock* textDropItemTitle, struct UTextBlock* textHabitatTitle, struct UREDScrollBoxSimple* scrollBox1, struct UREDScrollBoxSimple* scrollBox2, struct UREDOverlay* mousehitthubnail); // Function BattlePrototype.UIEnemyInfoWindow.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13270b0
};

// Class BattlePrototype.UIEnemyListIndex
// Size: 0x3c8 (Inherited: 0x388)
struct UUIEnemyListIndex : UUIBase {
	char pad_388[0x40]; // 0x388(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIEnemyListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13288a0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UImage* imageNewIcon, struct UTextBlock* textName); // Function BattlePrototype.UIEnemyListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1327530
};

// Class BattlePrototype.UIEquip
// Size: 0x3b0 (Inherited: 0x388)
struct UUIEquip : UUIBase {
	char pad_388[0x20]; // 0x388(0x20)
	bool m_IsSetDefaultCursorParam; // 0x3a8(0x01)
	bool m_IsDefaultCursorVisual; // 0x3a9(0x01)
	enum class EPlayerID m_DefaultCharaID; // 0x3aa(0x01)
	char pad_3AB[0x5]; // 0x3ab(0x05)

	void updatEquipListMouseFocus(); // Function BattlePrototype.UIEquip.updatEquipListMouseFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x1329050
	void updateProgramAnimation(float DeltaSeconds); // Function BattlePrototype.UIEquip.updateProgramAnimation // (Final|Native|Protected|BlueprintCallable) // @ game+0x1329070
	void SetDefaultCursor(enum class EPlayerID CharaID, bool IsVisual); // Function BattlePrototype.UIEquip.SetDefaultCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x1327cd0
	void ResetDefaultCursor(); // Function BattlePrototype.UIEquip.ResetDefaultCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x1327cb0
	void playContentsOut(); // Function BattlePrototype.UIEquip.playContentsOut // (Final|Native|Protected|BlueprintCallable) // @ game+0x1328fb0
	void playContentsIn(); // Function BattlePrototype.UIEquip.playContentsIn // (Final|Native|Protected|BlueprintCallable) // @ game+0x1328f90
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIEquip.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1328ec0
	bool isPlayingContentsOut(); // Function BattlePrototype.UIEquip.isPlayingContentsOut // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1328e90
	bool isPlayingContentsIn(); // Function BattlePrototype.UIEquip.isPlayingContentsIn // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1328e60
	void InitializeThis(struct UOverlay* overlayAllSet, struct UOverlay* overlay2); // Function BattlePrototype.UIEquip.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13276c0
	void InitializeScrollBox(struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIEquip.InitializeScrollBox // (Final|Native|Protected|BlueprintCallable) // @ game+0x131d330
};

// Class BattlePrototype.UIEquipParts5
// Size: 0x398 (Inherited: 0x388)
struct UUIEquipParts5 : UUIBase {
	struct UFlagManager* FlagManager; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)

	int32_t TextCompare(struct FText Text1, struct FText Text2); // Function BattlePrototype.UIEquipParts5.TextCompare // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13280f0
	int32_t StringCompare(struct FString String1, struct FString String2); // Function BattlePrototype.UIEquipParts5.StringCompare // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1327f80
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIEquipParts5.ListUnFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIEquipParts5.ListFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	bool isUpdateEquipListMouseFocus(int32_t cursorIndex); // Function BattlePrototype.UIEquipParts5.isUpdateEquipListMouseFocus // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1328ef0
	void InitializeList(struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIEquipParts5.InitializeList // (Final|Native|Public|BlueprintCallable) // @ game+0x1326ac0
	bool ClearCurrentNewFlagNative(int32_t Index); // Function BattlePrototype.UIEquipParts5.ClearCurrentNewFlagNative // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIFade
// Size: 0x3b8 (Inherited: 0x388)
struct UUIFade : UUIBase {
	char pad_388[0x30]; // 0x388(0x30)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIFade.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13289a0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UImage* imageBG); // Function BattlePrototype.UIFade.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1327780
};

// Class BattlePrototype.UIGameOver
// Size: 0x458 (Inherited: 0x388)
struct UUIGameOver : UUIBase {
	int32_t DefaultIndex; // 0x388(0x04)
	char pad_38C[0xcc]; // 0x38c(0xcc)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIGameOver.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1328aa0
	void StartGameOver(); // Function BattlePrototype.UIGameOver.StartGameOver // (Final|Native|Public|BlueprintCallable) // @ game+0x1327f60
	bool IsEnd(); // Function BattlePrototype.UIGameOver.IsEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1327c90
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOutRetry, struct UWidgetAnimation* animOutTitle, struct UTextBlock* textGameOver, struct UTextBlock* textDescription, struct UTextBlock* textRetry, struct UTextBlock* textReturnToTitle, struct UUIGuide* childKeyGuide, struct UUserWidget* childWidget, struct UWidgetAnimation* animChildDefault, struct UWidgetAnimation* animChildIn, struct UWidgetAnimation* animChildOutRetry, struct UWidgetAnimation* animChildOutTitle); // Function BattlePrototype.UIGameOver.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13278d0
	void initializeIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animDecision); // Function BattlePrototype.UIGameOver.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x1328cd0
	struct FName getTargetBossID(); // Function BattlePrototype.UIGameOver.getTargetBossID // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	enum class EGameOverResult getResult(); // Function BattlePrototype.UIGameOver.getResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1328c90
};

// Class BattlePrototype.UIGamerTag
// Size: 0x3a0 (Inherited: 0x388)
struct UUIGamerTag : UUIBase {
	struct UOverlay* guide; // 0x388(0x08)
	struct UTextBlock* XBoxUserName; // 0x390(0x08)
	struct UWidgetAnimation* Anime_default; // 0x398(0x08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIGamerTag.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131d6c0
	void SetUserName(); // Function BattlePrototype.UIGamerTag.SetUserName // (Final|Native|Public|BlueprintCallable) // @ game+0x132ce40
	void SetGuideVisible(bool IsVisible); // Function BattlePrototype.UIGamerTag.SetGuideVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x132c680
	void InitializeThisGuide(struct UOverlay* guide); // Function BattlePrototype.UIGamerTag.InitializeThisGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x132c5e0
	void InitializeThis(struct UTextBlock* usernametext, struct UWidgetAnimation* _default); // Function BattlePrototype.UIGamerTag.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132b920
};

// Class BattlePrototype.UIGeneralChoice
// Size: 0x528 (Inherited: 0x388)
struct UUIGeneralChoice : UUIBase {
	char pad_388[0x1a0]; // 0x388(0x1a0)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIGeneralChoice.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d060
	void start4(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, struct FString textIndex3, struct FString textIndex4, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.UIGeneralChoice.start4 // (Final|Native|Public|BlueprintCallable) // @ game+0x132e6e0
	void start3(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, struct FString textIndex3, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.UIGeneralChoice.start3 // (Final|Native|Public|BlueprintCallable) // @ game+0x132e350
	void start2(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.UIGeneralChoice.start2 // (Final|Native|Public|BlueprintCallable) // @ game+0x132e050
	void start1(struct FString TextMain, struct FString textIndex, bool cancelable, int32_t CancelIndex, bool IsFade); // Function BattlePrototype.UIGeneralChoice.start1 // (Final|Native|Public|BlueprintCallable) // @ game+0x132de20
	void notice_start2(struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2); // Function BattlePrototype.UIGeneralChoice.notice_start2 // (Final|Native|Public|BlueprintCallable) // @ game+0x132d980
	void notice_start1(struct FString TextMain, struct FString textIndex); // Function BattlePrototype.UIGeneralChoice.notice_start1 // (Final|Native|Public|BlueprintCallable) // @ game+0x132d810
	bool IsCancel(); // Function BattlePrototype.UIGeneralChoice.IsCancel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132d7e0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* TextMain, struct UVerticalBox* indexListParent, struct UImage* imageGhost, struct UImage* imagepgBlack); // Function BattlePrototype.UIGeneralChoice.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132b9e0
	void initializeIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UIGeneralChoice.initializeIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x132d5a0
	int32_t getResult(); // Function BattlePrototype.UIGeneralChoice.getResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132d580
};

// Class BattlePrototype.UIGuide
// Size: 0x3a0 (Inherited: 0x388)
struct UUIGuide : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void UpdateStateThis(int32_t State, int32_t SubState); // Function BattlePrototype.UIGuide.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x132d160
	void setGuide(int32_t Index, enum class EGuideKey Key, struct FName String); // Function BattlePrototype.UIGuide.setGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x132dbb0
	void InitializeThis(struct USpacer* guideSpacer); // Function BattlePrototype.UIGuide.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x132bbe0
	void clearGuide(); // Function BattlePrototype.UIGuide.clearGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x132d560
	void buildGuide(); // Function BattlePrototype.UIGuide.buildGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x132d540
};

// Class BattlePrototype.UIHealthControl
// Size: 0x3e8 (Inherited: 0x388)
struct UUIHealthControl : UUIBase {
	char pad_388[0x60]; // 0x388(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIHealthControl.UpdateStateThis // (Native|Protected|BlueprintCallable) // @ game+0x132d220
	void SetTextHP(struct UTextBlock* textMaxHP, struct UTextBlock* textCurrentHP); // Function BattlePrototype.UIHealthControl.SetTextHP // (Final|Native|Protected|BlueprintCallable) // @ game+0x132cd70
	void SetProgressBar(struct UImage* Base, struct UImage* Override, struct UImage* base_add); // Function BattlePrototype.UIHealthControl.SetProgressBar // (Final|Native|Protected|BlueprintCallable) // @ game+0x132cc70
	void SetPlayerName(enum class EPlayerID CharaID, struct UTextBlock* text); // Function BattlePrototype.UIHealthControl.SetPlayerName // (Final|Native|Public|BlueprintCallable) // @ game+0x132cbb0
	void SetNotHealAnimationFlag(bool IsNotAnimation); // Function BattlePrototype.UIHealthControl.SetNotHealAnimationFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x132cb30
	void setIconType(int32_t Type); // Function BattlePrototype.UIHealthControl.setIconType // (Final|Native|Public|BlueprintCallable) // @ game+0x132cab0
	void SetIconDraw(int32_t Index, bool IsDraw); // Function BattlePrototype.UIHealthControl.SetIconDraw // (Final|Native|Public|BlueprintCallable) // @ game+0x132c9d0
	void SetIcon2(struct UImage* Icon, int32_t Index); // Function BattlePrototype.UIHealthControl.SetIcon2 // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void SetIcon1(struct UImage* Icon, int32_t Index); // Function BattlePrototype.UIHealthControl.SetIcon1 // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void SetIcon(int32_t Index, struct UImage* Icon); // Function BattlePrototype.UIHealthControl.SetIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x132c890
	void SetHpDirect(float Max, float current); // Function BattlePrototype.UIHealthControl.SetHpDirect // (Final|Native|Public|BlueprintCallable) // @ game+0x132c7d0
	void SetHp(float Max, float current); // Function BattlePrototype.UIHealthControl.SetHp // (Final|Native|Public|BlueprintCallable) // @ game+0x132c710
	void ResetFlagFirstSet(); // Function BattlePrototype.UIHealthControl.ResetFlagFirstSet // (Final|Native|Public|BlueprintCallable) // @ game+0x132c660
	bool IsUnlockPlayerChara(enum class EPlayerID CharaID); // Function BattlePrototype.UIHealthControl.IsUnlockPlayerChara // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	int32_t GetBadStateNum(); // Function BattlePrototype.UIHealthControl.GetBadStateNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132b1b0
};

// Class BattlePrototype.UIHelpMenu
// Size: 0x498 (Inherited: 0x388)
struct UUIHelpMenu : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0xf8]; // 0x3a0(0xf8)

	void UpdateStateHelpList(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIHelpMenu.UpdateStateHelpList // (Final|Native|Public|BlueprintCallable) // @ game+0x132ce60
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIHelpMenu.ListUpdateElement // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIHelpMenu.ListUnFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIHelpMenu.ListUnFocus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIHelpMenu.ListFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIHelpMenu.ListFocus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeList(struct UCanvasPanel* scrollBoxParent, struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIHelpMenu.InitializeList // (Final|Native|Public|BlueprintCallable) // @ game+0x132b590
	void InitializeHelp(struct UUITutoTipsParts* uTutoTipsParts); // Function BattlePrototype.UIHelpMenu.InitializeHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x132b510
	void InitializeCommonHelp(struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UIHelpMenu.InitializeCommonHelp // (Final|Native|Public|BlueprintCallable) // @ game+0x132b450
	void InitializeArrow(int32_t Index, struct UUIHelpParts* arrow); // Function BattlePrototype.UIHelpMenu.InitializeArrow // (Final|Native|Public|BlueprintCallable) // @ game+0x132b390
	void InitializeAnime(struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UIHelpMenu.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x132b1d0
};

// Class BattlePrototype.UIHelpParts
// Size: 0x3a8 (Inherited: 0x388)
struct UUIHelpParts : UUIBase {
	char pad_388[0x20]; // 0x388(0x20)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIHelpParts.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131d6c0
	void InitializeAnime(struct UWidgetAnimation* cursor_select, struct UWidgetAnimation* cursor_default_none, struct UWidgetAnimation* cursor_default); // Function BattlePrototype.UIHelpParts.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x132b290
};

// Class BattlePrototype.UIHelpPartsList
// Size: 0x3e0 (Inherited: 0x388)
struct UUIHelpPartsList : UUIBase {
	char pad_388[0x58]; // 0x388(0x58)

	void UpdateStateHelpPartsList(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIHelpPartsList.UpdateStateHelpPartsList // (Final|Native|Public|BlueprintCallable) // @ game+0x132cf60
	void InitializeListPartsList(struct UTextBlock* TextList, struct UImage* imageNew); // Function BattlePrototype.UIHelpPartsList.InitializeListPartsList // (Final|Native|Public|BlueprintCallable) // @ game+0x132b7a0
	void InitializeListAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* select, struct UWidgetAnimation* default_); // Function BattlePrototype.UIHelpPartsList.InitializeListAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x132b650
};

// Class BattlePrototype.UIInfoWindow
// Size: 0x3d8 (Inherited: 0x388)
struct UUIInfoWindow : UUIBase {
	bool isWarning; // 0x388(0x01)
	char pad_389[0x47]; // 0x389(0x47)
	struct URSAtomComponentBase* PlayingSE; // 0x3d0(0x08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIInfoWindow.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d320
	void setVisibleGuide(bool Flag); // Function BattlePrototype.UIInfoWindow.setVisibleGuide // (Final|Native|Public|BlueprintCallable) // @ game+0x132dd90
	void setStyleWarning(); // Function BattlePrototype.UIInfoWindow.setStyleWarning // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void setStyleNormal(); // Function BattlePrototype.UIInfoWindow.setStyleNormal // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void setMessage(struct FString Message); // Function BattlePrototype.UIInfoWindow.setMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x132dcb0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* TextMain, struct USpacer* Spacer, struct UOverlay* guideOverlay, struct UImage* imageGuideLine, struct UImage* imageFade); // Function BattlePrototype.UIInfoWindow.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132bc60
};

// Class BattlePrototype.UIItemDetails
// Size: 0x3e8 (Inherited: 0x388)
struct UUIItemDetails : UUIBase {
	char pad_388[0x60]; // 0x388(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIItemDetails.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d420
	bool SetItemInfo(struct FName ItemId, int32_t ItemIndex); // Function BattlePrototype.UIItemDetails.SetItemInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefaultMax, struct UWidgetAnimation* animDefaultNoSet, struct UImage* imageNewIcon, struct UTextBlock* textItemName, struct UTextBlock* textParameter, struct UTextBlock* textItemDescription, struct UTextBlock* textHave, struct UTextBlock* textItemHaveNum, struct UTextBlock* textItemMaxNum, struct UTextBlock* textItemNumSlash); // Function BattlePrototype.UIItemDetails.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132bea0
	void ClearItemInfo(); // Function BattlePrototype.UIItemDetails.ClearItemInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x132b190
};

// Class BattlePrototype.UIItemListIndex
// Size: 0x450 (Inherited: 0x388)
struct UUIItemListIndex : UUIBase {
	struct FLinearColor ColorNumHave; // 0x388(0x10)
	struct FLinearColor ColorMaxNumHave; // 0x398(0x10)
	char pad_3A8[0xa8]; // 0x3a8(0xa8)

	void UpdateStateThis(); // Function BattlePrototype.UIItemListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d520
	bool SetItemInfoR(struct FName ItemId, int32_t ItemIndex); // Function BattlePrototype.UIItemListIndex.SetItemInfoR // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetItemInfoL(struct FName ItemId, int32_t ItemIndex); // Function BattlePrototype.UIItemListIndex.SetItemInfoL // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelectL, struct UWidgetAnimation* animSelectInL, struct UBorder* borderHaveL, struct UWidgetAnimation* animSelectR, struct UWidgetAnimation* animSelectInR, struct UBorder* borderHaveR, struct UWidgetAnimation* animChangeR, struct UWidgetAnimation* animChangeL, struct UImage* imageNewIconL, struct UTextBlock* textItemNameL, struct UTextBlock* textNumHaveL, struct UOverlay* overlayR, struct UImage* imageNewIconR, struct UTextBlock* textItemNameR, struct UTextBlock* textNumHaveR); // Function BattlePrototype.UIItemListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132c1a0
	void InitializeOverlay(struct UREDOverlay* listLset, struct UREDOverlay* listRset); // Function BattlePrototype.UIItemListIndex.InitializeOverlay // (Final|Native|Public|BlueprintCallable) // @ game+0x132b860
};

// Class BattlePrototype.UIItemMenu
// Size: 0x10188 (Inherited: 0x388)
struct UUIItemMenu : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0xfde8]; // 0x3a0(0xfde8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIItemMenu.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333470
	void SetContentsChange(bool IsChange); // Function BattlePrototype.UIItemMenu.SetContentsChange // (Final|Native|Public|BlueprintCallable) // @ game+0x13330c0
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIItemMenu.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1332ff0
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIItemMenu.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIItemMenu.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIItemMenu.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1333b70
	bool isEndMenu(); // Function BattlePrototype.UIItemMenu.isEndMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1333b50
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UBorder* borderAllColor, struct UREDScrollBox* ScrollBox, struct UUIItemDetails* UIItemDetails, struct UUIItemPartyStatus* uiPartyStatus); // Function BattlePrototype.UIItemMenu.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13318a0
	void InitializeItemCategory(int32_t Category, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animUnselect, struct UTextBlock* textCategory); // Function BattlePrototype.UIItemMenu.InitializeItemCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x1331620
	void InitializeCommonParts(struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UIItemMenu.InitializeCommonParts // (Final|Native|Public|BlueprintCallable) // @ game+0x1331050
	void InitializeArrowLR(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision); // Function BattlePrototype.UIItemMenu.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x1330e60
};

// Class BattlePrototype.UIItemPartyStatus
// Size: 0x3e0 (Inherited: 0x388)
struct UUIItemPartyStatus : UUIBase {
	char pad_388[0x58]; // 0x388(0x58)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIItemPartyStatus.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d420
	void updatePartyStatus(struct FName ItemId); // Function BattlePrototype.UIItemPartyStatus.updatePartyStatus // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1333e30
	void InitializeThis(struct UWidgetAnimation* animDefault); // Function BattlePrototype.UIItemPartyStatus.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1331aa0
	void InitializeIcons(struct UUIItemPartyStatusIcon* uiIcon1, struct UUIItemPartyStatusIcon* uiIcon2, struct UUIItemPartyStatusIcon* uiIcon3, struct UUIItemPartyStatusIcon* uiIcon4, struct UUIItemPartyStatusIcon* uiIcon5, struct UUIItemPartyStatusIcon* uiIcon6, struct UUIItemPartyStatusIcon* uiIcon7, struct UUIItemPartyStatusIcon* uiIcon8, struct UUIItemPartyStatusIcon* uiIcon9, struct UUIItemPartyStatusIcon* uiIcon10); // Function BattlePrototype.UIItemPartyStatus.InitializeIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x1331360
};

// Class BattlePrototype.UIItemPartyStatusIcon
// Size: 0x3e0 (Inherited: 0x388)
struct UUIItemPartyStatusIcon : UUIBase {
	char pad_388[0x58]; // 0x388(0x58)

	void SetFaceIcon(enum class EPlayerID characterId); // Function BattlePrototype.UIItemPartyStatusIcon.SetFaceIcon // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEquipOrLoveIcon(enum class EEquipOrLoveIcon Type); // Function BattlePrototype.UIItemPartyStatusIcon.SetEquipOrLoveIcon // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animUnselect, struct UWidgetAnimation* animDefaultMax, struct UWidgetAnimation* animDarkMax, struct UImage* imageEquip, struct UImage* imageDone, struct UHorizonFlipbookWidget* flipArrowUP, struct UHorizonFlipbookWidget* flipArrowDOWN, struct UPaperFlipbook* upDefaultPF, struct UPaperFlipbook* downDefaultPF, struct UOverlay* overlayBondSet, struct UTextBlock* textBondNum); // Function BattlePrototype.UIItemPartyStatusIcon.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1331b20
};

// Class BattlePrototype.UIItemTrade
// Size: 0xdfa8 (Inherited: 0x388)
struct UUIItemTrade : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0xdc08]; // 0x3a0(0xdc08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIItemTrade.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333570
	void StartWishList(); // Function BattlePrototype.UIItemTrade.StartWishList // (Final|Native|Public|BlueprintCallable) // @ game+0x1333450
	void Start(int32_t tradeShopId); // Function BattlePrototype.UIItemTrade.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x13333d0
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIItemTrade.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIItemTrade.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIItemTrade.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIItemTrade.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIItemTrade.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UREDScrollBox* ScrollBox, struct UUIItemTradeListIndex* uiListIndexBase, struct UTextBlock* textIndexItem, struct UTextBlock* textIndexHaveNum, struct UUIItemTradeMaterialListIndex* uiMaterialListIndex1, struct UUIItemTradeMaterialListIndex* uiMaterialListIndex2, struct UUIItemTradeMaterialListIndex* uiMaterialListIndex3, struct UTextBlock* textMaterialName, struct UTextBlock* textMaterialHaveNum, struct UTextBlock* textMaterialNeedNum); // Function BattlePrototype.UIItemTrade.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1331e60
	void InitializeFromWishList(struct UUIWishList* UIWishList, struct UUIShopItemDetails* uiItemDetail, struct UUIShopPartyStatus* uiPartyStatus); // Function BattlePrototype.UIItemTrade.InitializeFromWishList // (Final|Native|Public|BlueprintCallable) // @ game+0x1331260
	void InitializeFromShop(struct UUIShop* UIShop, struct UUIShopItemDetails* uiItemDetail, struct UUIShopChoice* uiChoice, struct UUIShopPartyStatus* uiPartyStatus); // Function BattlePrototype.UIItemTrade.InitializeFromShop // (Final|Native|Public|BlueprintCallable) // @ game+0x1331110
	void CloseWishList(); // Function BattlePrototype.UIItemTrade.CloseWishList // (Final|Native|Public|BlueprintCallable) // @ game+0x1330e40
};

// Class BattlePrototype.UIItemTradeListIndex
// Size: 0x458 (Inherited: 0x388)
struct UUIItemTradeListIndex : UUIBase {
	char pad_388[0xd0]; // 0x388(0xd0)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIItemTradeListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1333670
	bool SetItemInfo(struct FName ItemId, int32_t tradeItemIndex, bool canTrade, int32_t takeNum); // Function BattlePrototype.UIItemTradeListIndex.SetItemInfo // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1333140
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefaultEnough, struct UWidgetAnimation* animDefaultMax, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectEnough, struct UWidgetAnimation* animSelectMax, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectInEnough, struct UWidgetAnimation* animSelectInMax, struct UWidgetAnimation* animSelect2, struct UWidgetAnimation* animSelect2Enough, struct UWidgetAnimation* animSelect2Max, struct UWidgetAnimation* animChangeTradeItemIn, struct UWidgetAnimation* animChangeTradeItemInEnough, struct UWidgetAnimation* animChangeTradeItemInMax, struct UWidgetAnimation* animChangeTradeItemOut, struct UWidgetAnimation* animChangeTradeItemOutEnough, struct UWidgetAnimation* animChangeTradeItemOutMax, struct UImage* imageNewIcon, struct UImage* imageWish, struct UTextBlock* textItemName, struct UTextBlock* textNumHave); // Function BattlePrototype.UIItemTradeListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1332120
};

// Class BattlePrototype.UIItemTradeMaterialListIndex
// Size: 0x3f8 (Inherited: 0x388)
struct UUIItemTradeMaterialListIndex : UUIBase {
	char pad_388[0x70]; // 0x388(0x70)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIItemTradeMaterialListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1333770
	bool SetItemInfo(struct FName ItemId, int32_t needNum, bool isLackMaterial); // Function BattlePrototype.UIItemTradeMaterialListIndex.SetItemInfo // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x13332b0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefaultMax, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectMax, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectInMax, struct UWidgetAnimation* animDefaultLack, struct UWidgetAnimation* animSelectLack, struct UWidgetAnimation* animSelectInLack, struct UTextBlock* textItemName, struct UTextBlock* textNumHave, struct UTextBlock* textNumNeed); // Function BattlePrototype.UIItemTradeMaterialListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13326f0
};

// Class BattlePrototype.UIKeyword
// Size: 0x418 (Inherited: 0x388)
struct UUIKeyword : UUIBase {
	char pad_388[0x90]; // 0x388(0x90)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIKeyword.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333870
	void textEnter(struct FText text); // Function BattlePrototype.UIKeyword.textEnter // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333d50
	void textChange(struct FText text); // Function BattlePrototype.UIKeyword.textChange // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333c70
	void textCancel(); // Function BattlePrototype.UIKeyword.textCancel // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333c50
	bool isWindows(); // Function BattlePrototype.UIKeyword.isWindows // (Event|Protected|BlueprintEvent|Const) // @ game+0x1685580
	bool IsCancel(); // Function BattlePrototype.UIKeyword.IsCancel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1333b30
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textDescription, struct UTextBlock* textKeyword, struct UTextBlock* textInformation, struct UEditableText* textEdit); // Function BattlePrototype.UIKeyword.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1332a30
	struct FString getResult(); // Function BattlePrototype.UIKeyword.getResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1333a70
};

// Class BattlePrototype.UILetterBoxMask
// Size: 0x398 (Inherited: 0x388)
struct UUILetterBoxMask : UUIBase {
	char pad_388[0x10]; // 0x388(0x10)

	void setResolution(); // Function BattlePrototype.UILetterBoxMask.setResolution // (Final|Native|Public|BlueprintCallable) // @ game+0x1333c30
	void InitializeThis(struct UImage* Image1, struct UImage* Image2); // Function BattlePrototype.UILetterBoxMask.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1332c30
};

// Class BattlePrototype.UILoadingChapter
// Size: 0x3e0 (Inherited: 0x388)
struct UUILoadingChapter : UUIBase {
	char pad_388[0x58]; // 0x388(0x58)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UILoadingChapter.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1333970
	void SetId(int32_t ID); // Function BattlePrototype.UILoadingChapter.SetId // (Final|Native|Public|BlueprintCallable) // @ game+0x1333ba0
	void IsClosable(bool Closable); // Function BattlePrototype.UILoadingChapter.IsClosable // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1332f30
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textTitle, struct UTextBlock* textInfo, struct UImage* imageLocation, struct UREDRetainerBox* retainerBoxNoise1); // Function BattlePrototype.UILoadingChapter.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1332cf0
};

// Class BattlePrototype.UILog
// Size: 0x710 (Inherited: 0x388)
struct UUILog : UUIBase {
	char pad_388[0x388]; // 0x388(0x388)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UILog.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1338530
	void SetWaitTime(float Time); // Function BattlePrototype.UILog.SetWaitTime // (Final|Native|Public|BlueprintCallable) // @ game+0x13384b0
	void SetDrawTime(float Time); // Function BattlePrototype.UILog.SetDrawTime // (Final|Native|Public|BlueprintCallable) // @ game+0x13380f0
	bool IsEmpty(); // Function BattlePrototype.UILog.IsEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337c70
	void InitializeThis(struct UWidgetAnimation* animIn1, struct UWidgetAnimation* animIn2, struct UWidgetAnimation* animIn3, struct UWidgetAnimation* animIn4, struct UWidgetAnimation* animIn5, struct UWidgetAnimation* animIn6, struct UWidgetAnimation* animIn7, struct UWidgetAnimation* animDefault1, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animDefault3, struct UWidgetAnimation* animDefault4, struct UWidgetAnimation* animDefault5, struct UWidgetAnimation* animDefault6, struct UUILogParts* Log1, struct UUILogParts* Log2, struct UUILogParts* Log3, struct UUILogParts* Log4, struct UUILogParts* Log5, struct UUILogParts* Log6, struct UUILogParts* Log7); // Function BattlePrototype.UILog.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13375d0
	float GetWaitTime(); // Function BattlePrototype.UILog.GetWaitTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x13375b0
	float GetDrawTime(); // Function BattlePrototype.UILog.GetDrawTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337210
	void AddLogMessageSE(struct FString LogMessage, enum class EUI_SE Se); // Function BattlePrototype.UILog.AddLogMessageSE // (Final|Native|Public|BlueprintCallable) // @ game+0x1336fb0
	void AddLogMessage(struct FString LogMessage); // Function BattlePrototype.UILog.AddLogMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1336ed0
};

// Class BattlePrototype.UILogParts
// Size: 0x408 (Inherited: 0x388)
struct UUILogParts : UUIBase {
	float ShuffleSeconds; // 0x388(0x04)
	float ShuffleIntervalSeconds; // 0x38c(0x04)
	char pad_390[0x78]; // 0x390(0x78)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UILogParts.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1338630
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* TextBlock); // Function BattlePrototype.UILogParts.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1337b20
};

// Class BattlePrototype.UIMain3DManager
// Size: 0x260 (Inherited: 0x230)
struct AUIMain3DManager : AActor {
	struct UDataTable* SceneDataTable; // 0x230(0x08)
	struct UDataTable* PlayerDataTable; // 0x238(0x08)
	struct UDataTable* PlayerEquipGeneralDataTable; // 0x240(0x08)
	struct UDataTable* BGCameraDataTable; // 0x248(0x08)
	char pad_250[0x10]; // 0x250(0x10)

	void LoadTextureRelationEquip(struct UMeshComponent* MeshComp); // Function BattlePrototype.UIMain3DManager.LoadTextureRelationEquip // (Final|Native|Protected|BlueprintCallable) // @ game+0x1337e80
	bool IsTexturesThatUsedAtMeshLoaded(struct UMeshComponent* MeshComp); // Function BattlePrototype.UIMain3DManager.IsTexturesThatUsedAtMeshLoaded // (Final|Native|Protected|BlueprintCallable) // @ game+0x1337dd0
	bool GetSceneSetting(enum class EUIMain3DCharacterSceneID SceneID, struct FUIMain3DCharacterSceneSetting Setting); // Function BattlePrototype.UIMain3DManager.GetSceneSetting // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1337490
	bool GetPlayerSetting(int32_t PlayerUniqueID, struct FUIMain3DCharacterPlayerSetting Setting); // Function BattlePrototype.UIMain3DManager.GetPlayerSetting // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1337370
	bool GetEquipSetting(struct UDataTable* DataTable, enum class EUIMain3DEquipCameraID CameraID, struct FUIMain3DCharacterEquipSetting Setting); // Function BattlePrototype.UIMain3DManager.GetEquipSetting // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1337230
	bool GetBGCameraSetting(struct FUIMain3DBGCameraSetting Setting); // Function BattlePrototype.UIMain3DManager.GetBGCameraSetting // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1337150
};

// Class BattlePrototype.UIMainContents
// Size: 0x3d0 (Inherited: 0x388)
struct UUIMainContents : UUIBase {
	struct TArray<struct UUIBase*> MenuList; // 0x388(0x10)
	struct UUIConfigGame* UIConfig; // 0x398(0x08)
	int32_t MenuIndex; // 0x3a0(0x04)
	int32_t MenuIndexNext; // 0x3a4(0x04)
	int32_t MenuIndexBackup; // 0x3a8(0x04)
	int32_t TabEnableFlag; // 0x3ac(0x04)
	bool mIsBrainMessageAutoMode; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	struct FName mBrainMessageDefaultThreadID; // 0x3b4(0x08)
	bool mIsMenuSingle; // 0x3bc(0x01)
	char pad_3BD[0x13]; // 0x3bd(0x13)

	bool SetWeaponMenuDefaultCursor(enum class EPlayerID CharaID, bool IsVisual); // Function BattlePrototype.UIMainContents.SetWeaponMenuDefaultCursor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetViewerMode(bool IsViewerMode); // Function BattlePrototype.UIMainContents.SetViewerMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1338430
	void SetTabEnable(int32_t Index, bool IsEnable); // Function BattlePrototype.UIMainContents.SetTabEnable // (Final|Native|Protected|BlueprintCallable) // @ game+0x1338370
	void SetStartBrainMessage(bool isDefaultBrainMessage); // Function BattlePrototype.UIMainContents.SetStartBrainMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x12c1950
	void SetPopupMode(bool IsPopupMode); // Function BattlePrototype.UIMainContents.SetPopupMode // (Final|Native|Public|BlueprintCallable) // @ game+0x13382f0
	void SetOnlyWeaponMenu(bool IsOnlyWeaponMenu); // Function BattlePrototype.UIMainContents.SetOnlyWeaponMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1338270
	void SetOnlyEnemyBooks(bool IsOnlyEnemyBooks); // Function BattlePrototype.UIMainContents.SetOnlyEnemyBooks // (Final|Native|Public|BlueprintCallable) // @ game+0x13381f0
	void SetOnlyBrainMessage(bool IsOnlyBrainMessage); // Function BattlePrototype.UIMainContents.SetOnlyBrainMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1338170
	bool SetMouseEnableMode(bool Flag); // Function BattlePrototype.UIMainContents.SetMouseEnableMode // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool SetChangeMainMenuTabR(); // Function BattlePrototype.UIMainContents.SetChangeMainMenuTabR // (Final|Native|Public|BlueprintCallable) // @ game+0x13380c0
	bool SetChangeMainMenuTabL(); // Function BattlePrototype.UIMainContents.SetChangeMainMenuTabL // (Final|Native|Public|BlueprintCallable) // @ game+0x1338090
	bool SetChangeMainMenuTab(int32_t nextindex); // Function BattlePrototype.UIMainContents.SetChangeMainMenuTab // (Final|Native|Public|BlueprintCallable) // @ game+0x1338000
	void SetBrainMessageDefaultThread(struct FName threadID); // Function BattlePrototype.UIMainContents.SetBrainMessageDefaultThread // (Final|Native|Public|BlueprintCallable) // @ game+0x1337f80
	void SetBrainMessageAutoMode(bool IsAuto); // Function BattlePrototype.UIMainContents.SetBrainMessageAutoMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1337f00
	bool SetBrainMapCursorSpeed(float Speed); // Function BattlePrototype.UIMainContents.SetBrainMapCursorSpeed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetBrainMapCursorCorrectSpeed(float Speed); // Function BattlePrototype.UIMainContents.SetBrainMapCursorCorrectSpeed // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetBrainMapCursorCorrectArea(float Area); // Function BattlePrototype.UIMainContents.SetBrainMapCursorCorrectArea // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetWeaponMenuDefaultCursor(); // Function BattlePrototype.UIMainContents.ResetWeaponMenuDefaultCursor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ResetReplyBondsEpisodeFlag(); // Function BattlePrototype.UIMainContents.ResetReplyBondsEpisodeFlag // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool Release3DView(); // Function BattlePrototype.UIMainContents.Release3DView // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsViewerMode(); // Function BattlePrototype.UIMainContents.IsViewerMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337e60
	bool IsTabEnable(int32_t Index); // Function BattlePrototype.UIMainContents.IsTabEnable // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337d30
	bool IsStartBrainMessage(); // Function BattlePrototype.UIMainContents.IsStartBrainMessage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12c1620
	bool IsReplyBondsEpisode(); // Function BattlePrototype.UIMainContents.IsReplyBondsEpisode // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool IsPopupMode(); // Function BattlePrototype.UIMainContents.IsPopupMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337d10
	bool IsOnlyWeaponMenu(); // Function BattlePrototype.UIMainContents.IsOnlyWeaponMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337cf0
	bool IsOnlyEnemyBooks(); // Function BattlePrototype.UIMainContents.IsOnlyEnemyBooks // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337cd0
	bool IsOnlyBrainMessage(); // Function BattlePrototype.UIMainContents.IsOnlyBrainMessage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1337cb0
	bool isLockTabChange(); // Function BattlePrototype.UIMainContents.isLockTabChange // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1338730
	bool IsEndCurrentMenu(); // Function BattlePrototype.UIMainContents.IsEndCurrentMenu // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	float GetBrainMapCursorSpeed(); // Function BattlePrototype.UIMainContents.GetBrainMapCursorSpeed // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	float GetBrainMapCursorCorrectSpeed(); // Function BattlePrototype.UIMainContents.GetBrainMapCursorCorrectSpeed // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	float GetBrainMapCursorCorrectArea(); // Function BattlePrototype.UIMainContents.GetBrainMapCursorCorrectArea // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	bool Create3DView(); // Function BattlePrototype.UIMainContents.Create3DView // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ControlFunc(int32_t SubState); // Function BattlePrototype.UIMainContents.ControlFunc // (Final|Native|Public|BlueprintCallable) // @ game+0x13370d0
	void AnimPressButtonR(); // Function BattlePrototype.UIMainContents.AnimPressButtonR // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void AnimPressButtonL(); // Function BattlePrototype.UIMainContents.AnimPressButtonL // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIMainContentsSubTab
// Size: 0x3d8 (Inherited: 0x388)
struct UUIMainContentsSubTab : UUIBase {
	char pad_388[0x50]; // 0x388(0x50)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIMainContentsSubTab.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x133c590
	void SetTitle(struct FText text); // Function BattlePrototype.UIMainContentsSubTab.SetTitle // (Final|Native|Public|BlueprintCallable) // @ game+0x133be80
	void SetSelect(bool IsSelect); // Function BattlePrototype.UIMainContentsSubTab.SetSelect // (Final|Native|Public|BlueprintCallable) // @ game+0x133be00
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animUnselect, struct UREDTextBlock* textCategory); // Function BattlePrototype.UIMainContentsSubTab.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x133abf0
};

// Class BattlePrototype.UIMatchID
// Size: 0x400 (Inherited: 0x388)
struct UUIMatchID : UUIBase {
	float PreShuffleSeconds; // 0x388(0x04)
	float ShuffuleSeconds; // 0x38c(0x04)
	float ShuffuleIntervalSeconds; // 0x390(0x04)
	char pad_394[0x6c]; // 0x394(0x6c)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIMatchID.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x133c690
	void Start(struct FName CharaID, struct FName armyCodeMessageID); // Function BattlePrototype.UIMatchID.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x133c010
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textID, struct UTextBlock* textName); // Function BattlePrototype.UIMatchID.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x133ae30
	void End(); // Function BattlePrototype.UIMatchID.End // (Final|Native|Public|BlueprintCallable) // @ game+0x133a630
};

// Class BattlePrototype.UIMenuBattleControl
// Size: 0x528 (Inherited: 0x388)
struct UUIMenuBattleControl : UUIBase {
	struct UUINumberDamage* ClassNumberDamage; // 0x388(0x08)
	struct UUIGameOver* UIGameOver; // 0x390(0x08)
	struct UUIBossName* UIBossName; // 0x398(0x08)
	struct UUILog* UILog; // 0x3a0(0x08)
	struct UUITarget* UICursorNormal; // 0x3a8(0x08)
	struct UUIVitalityPL01* UIVitalityPL01; // 0x3b0(0x08)
	struct UUIVitalityPL02* UIVitalityPL02; // 0x3b8(0x08)
	struct UUIVitalityPL02* uiVitalityPL02Flame; // 0x3c0(0x08)
	struct UUIVitalityPL03* UIVitalityPL03; // 0x3c8(0x08)
	struct UUIVitalityPL03* uiVitalityPL03Flame; // 0x3d0(0x08)
	struct UUIVitalityEN01* UIVitalityEN01; // 0x3d8(0x08)
	struct UUIVitalityEN01* uiVitalityEN01Flame; // 0x3e0(0x08)
	struct UUIBrainGaugeEN* UIBrainGaugeEN; // 0x3e8(0x08)
	struct UUIBrainGaugeEN* uiBrainGaugeENFrame; // 0x3f0(0x08)
	struct TArray<struct UUIVitalityEN02*> UIEnemyVitalityWidgetList; // 0x3f8(0x10)
	struct TArray<struct UUINumberDamage*> DamageWidgets; // 0x408(0x10)
	struct TArray<struct UUIDiscover*> UIIDiscoverList; // 0x418(0x10)
	struct TArray<struct UUIPkObjectTimer*> UIPkObjectTimerList; // 0x428(0x10)
	bool FlagPlayUI; // 0x438(0x01)
	bool FlagCloseDirect; // 0x439(0x01)
	bool FlagDrawHpGaugeMain; // 0x43a(0x01)
	bool FlagDrawHpGaugeSub; // 0x43b(0x01)
	bool FlagDrawPsychicGauge; // 0x43c(0x01)
	bool FlagDrawBrainCrashGauge; // 0x43d(0x01)
	bool FlagDrawBrainCrashGaugeEnemy; // 0x43e(0x01)
	bool FlagDrawItemMenu; // 0x43f(0x01)
	bool FlagDrawSasMenu; // 0x440(0x01)
	bool FlagDrawMiniMap; // 0x441(0x01)
	bool FlagDrawLog; // 0x442(0x01)
	bool FlagDrawDroneGuide; // 0x443(0x01)
	bool FlagDrawTeamBondLv; // 0x444(0x01)
	bool FlagDrawMiniTips; // 0x445(0x01)
	bool FlagDrawBrainCrashBar; // 0x446(0x01)
	bool FlagDrawBrainCrashBarBoss; // 0x447(0x01)
	bool FlagDrawHpGaugeEnemyBoss; // 0x448(0x01)
	bool FlagDrawShortcutGuide; // 0x449(0x01)
	bool FlagDrawBrainTalk; // 0x44a(0x01)
	bool FlagDrawOtherWidget; // 0x44b(0x01)
	bool FlagDrawTutoOperation; // 0x44c(0x01)
	bool FlagDrawAreaHere; // 0x44d(0x01)
	bool FlagDrawSuccess; // 0x44e(0x01)
	char pad_44F[0x1]; // 0x44f(0x01)
	struct TArray<struct FUIBrainTargetInfo> CursorBrainTargetList; // 0x450(0x10)
	struct FVector2D CursorBrainTargetOffset2D; // 0x460(0x08)
	struct TArray<struct FUIEnemyInfo> enemyList; // 0x468(0x10)
	bool EnemyHpWidgetVisibleFlag; // 0x478(0x01)
	char pad_479[0x7]; // 0x479(0x07)
	struct ARSCharacterBase* CursorTarget; // 0x480(0x08)
	float DeltaTime; // 0x488(0x04)
	bool BrainGaugeENVisibleFlag; // 0x48c(0x01)
	char pad_48D[0xb]; // 0x48d(0x0b)
	struct UUIBrainCrashGauge* UIBrainCrashGauge; // 0x498(0x08)
	struct UUIBrainCrashGauge* UIBrainCrashGaugeBoss; // 0x4a0(0x08)
	struct ARSCharacterBase* BackupBrainCrashTarget; // 0x4a8(0x08)
	struct TArray<struct FUIPkObjectTimerInfo> PkObjectTimerWork; // 0x4b0(0x10)
	struct TArray<struct FString> LogMessageList; // 0x4c0(0x10)
	char pad_4D0[0xc]; // 0x4d0(0x0c)
	struct FVector2D m_widgetsMaxMove; // 0x4dc(0x08)
	struct FVector2D m_widgetsMaxMovePerFrame; // 0x4e4(0x08)
	struct FVector2D m_widgetsMaxScaleingMaxMove; // 0x4ec(0x08)
	struct FVector2D m_widgetsMaxScaleingPerFrame; // 0x4f4(0x08)
	char pad_4FC[0x2c]; // 0x4fc(0x2c)

	void UpdateStateThis(float fDeltaSecond); // Function BattlePrototype.UIMenuBattleControl.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x133ca90
	void UpdatePkObjectTimer(struct ARSCharacterBase* Target, float MaxSecond, float CurrentSecond); // Function BattlePrototype.UIMenuBattleControl.UpdatePkObjectTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x133c490
	void UpdateLogMessage(float DeltaSecond); // Function BattlePrototype.UIMenuBattleControl.UpdateLogMessage // (Final|Native|Protected|BlueprintCallable) // @ game+0x133c410
	void UpdateLockTarget(); // Function BattlePrototype.UIMenuBattleControl.UpdateLockTarget // (Final|Native|Protected|BlueprintCallable) // @ game+0x133c3f0
	void UpdateHpWidgetInformation(struct ARSCharacterBase* Actor, int32_t Index); // Function BattlePrototype.UIMenuBattleControl.UpdateHpWidgetInformation // (Final|Native|Protected|BlueprintCallable) // @ game+0x133c330
	void UpdateHpVisible(int32_t Index, struct ARSCharacterBase* Character); // Function BattlePrototype.UIMenuBattleControl.UpdateHpVisible // (Final|Native|Protected|BlueprintCallable) // @ game+0x133c270
	bool UpdateDrawWidgetMiniMap(); // Function BattlePrototype.UIMenuBattleControl.UpdateDrawWidgetMiniMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StopPkObjectTimer(struct ARSCharacterBase* Target); // Function BattlePrototype.UIMenuBattleControl.StopPkObjectTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x133c1f0
	void StartPkObjectTimer(struct ARSCharacterBase* Target, float MaxSecond, float CurrentSecond); // Function BattlePrototype.UIMenuBattleControl.StartPkObjectTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x133c0f0
	bool StartMinimapBrainField(); // Function BattlePrototype.UIMenuBattleControl.StartMinimapBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartGameOver(); // Function BattlePrototype.UIMenuBattleControl.StartGameOver // (Final|Native|Public|BlueprintCallable) // @ game+0x133c0d0
	void SetUUIVitalityEN02Visible(bool IsVisible); // Function BattlePrototype.UIMenuBattleControl.SetUUIVitalityEN02Visible // (Final|Native|Public|BlueprintCallable) // @ game+0x133bf60
	void SetupPlayerHpGauge(); // Function BattlePrototype.UIMenuBattleControl.SetupPlayerHpGauge // (Final|Native|Protected|BlueprintCallable) // @ game+0x133bff0
	void SetLogWaitTime(float Time); // Function BattlePrototype.UIMenuBattleControl.SetLogWaitTime // (Final|Native|Public|BlueprintCallable) // @ game+0x133bd80
	void SetLogMessageSE(struct FString LogMessage, enum class EUI_SE Se); // Function BattlePrototype.UIMenuBattleControl.SetLogMessageSE // (Final|Native|Public|BlueprintCallable) // @ game+0x133bca0
	void SetLogMessage(struct FString LogMessage); // Function BattlePrototype.UIMenuBattleControl.SetLogMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x133bc00
	void SetLogDrawTime(float Time); // Function BattlePrototype.UIMenuBattleControl.SetLogDrawTime // (Final|Native|Public|BlueprintCallable) // @ game+0x133bb80
	void SetIcon(struct ARSCharacterBase* Character, struct UUIHealthControl* Widget); // Function BattlePrototype.UIMenuBattleControl.SetIcon // (Final|Native|Protected|BlueprintCallable) // @ game+0x133bac0
	void SetEnemyHpWidgetVisible(bool IsVisible); // Function BattlePrototype.UIMenuBattleControl.SetEnemyHpWidgetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x133ba30
	void SetEnemyDamage(struct ARSCharacterBase* Target, int32_t CurrentHp, int32_t BaseHp, bool IsAlways, float Time); // Function BattlePrototype.UIMenuBattleControl.SetEnemyDamage // (Final|Native|Protected|BlueprintCallable) // @ game+0x133b8a0
	void SetDamage3D(int32_t Damage, struct FVector position3D, bool IsPlayer, bool isCritical, bool isSasCritical, bool isBrainCrashCritical, bool isHeal, bool isWeak, bool isNoDamage, struct ARSCharacterBase* crushTarget, int32_t crushBonus, struct FVector2D Offset); // Function BattlePrototype.UIMenuBattleControl.SetDamage3D // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x133b520
	void SetDamage2D(int32_t Damage, struct FVector2D position2D, bool IsPlayer, bool isCritical, bool isSasCritical, bool isBrainCrashCritical, bool isHeal, bool isWeak, bool isNoDamage, struct ARSCharacterBase* crushTarget, int32_t crushBonus); // Function BattlePrototype.UIMenuBattleControl.SetDamage2D // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x133b200
	bool SetCrushBonus(struct ARSCharacterBase* Target, int32_t bonus); // Function BattlePrototype.UIMenuBattleControl.SetCrushBonus // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetBrainCrashTarget(struct ARSCharacterBase* pTarget, bool bSuccess); // Function BattlePrototype.UIMenuBattleControl.SetBrainCrashTarget // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x133b130
	int32_t SetBrainCrashEnable(struct ARSCharacterBase* pTarget, bool IsEnable); // Function BattlePrototype.UIMenuBattleControl.SetBrainCrashEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x133b070
	bool SasSetChangePageReady(bool ReadyFlagL, bool ReadyFlagR); // Function BattlePrototype.UIMenuBattleControl.SasSetChangePageReady // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool RemoveDiscoverIndexList(int32_t Index); // Function BattlePrototype.UIMenuBattleControl.RemoveDiscoverIndexList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void ReleaseCrushBonus(); // Function BattlePrototype.UIMenuBattleControl.ReleaseCrushBonus // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool PlayDecideAnimeBrainTuto(); // Function BattlePrototype.UIMenuBattleControl.PlayDecideAnimeBrainTuto // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool PlayDamageEffect(bool isCritical); // Function BattlePrototype.UIMenuBattleControl.PlayDamageEffect // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OpenMinimap(bool Force); // Function BattlePrototype.UIMenuBattleControl.OpenMinimap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OpenBrainTuto(); // Function BattlePrototype.UIMenuBattleControl.OpenBrainTuto // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OpenAllActivePkObjectTimer(); // Function BattlePrototype.UIMenuBattleControl.OpenAllActivePkObjectTimer // (Final|Native|Protected|BlueprintCallable) // @ game+0x133b050
	void OpenActiveAllBrainTargetCursor(); // Function BattlePrototype.UIMenuBattleControl.OpenActiveAllBrainTargetCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x133b030
	bool MiniMapModelDelete(); // Function BattlePrototype.UIMenuBattleControl.MiniMapModelDelete // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isPlayBrainTuto(); // Function BattlePrototype.UIMenuBattleControl.isPlayBrainTuto // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool IsLogMessageEmpty(); // Function BattlePrototype.UIMenuBattleControl.IsLogMessageEmpty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x133aff0
	bool IsEndGameOver(); // Function BattlePrototype.UIMenuBattleControl.IsEndGameOver // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x133afc0
	void InitLogMessage(); // Function BattlePrototype.UIMenuBattleControl.InitLogMessage // (Final|Native|Protected|BlueprintCallable) // @ game+0x133abd0
	void InitializeThis(struct UUILog* UILog, struct UUIVitalityPL01* UIVitalityPL01, struct UUIVitalityPL02* UIVitalityPL02, struct UUIVitalityPL02* uiVitalityPL02Flame, struct UUIVitalityPL03* UIVitalityPL03, struct UUIVitalityPL03* uiVitalityPL03Flame, struct UUIVitalityEN01* UIVitalityEN01, struct UUIVitalityEN01* uiVitalityEN01Flame, struct UUIBrainGaugeEN* UIBrainGaugeEN, struct UUIBrainGaugeEN* uiBrainGaugeENFrame, struct UOverlay* overlayWidgets); // Function BattlePrototype.UIMenuBattleControl.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x133c790
	void InitDamage(); // Function BattlePrototype.UIMenuBattleControl.InitDamage // (Final|Native|Protected|BlueprintCallable) // @ game+0x133abb0
	float GetLogWaitTime(); // Function BattlePrototype.UIMenuBattleControl.GetLogWaitTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x133ab80
	float GetLogDrawTime(); // Function BattlePrototype.UIMenuBattleControl.GetLogDrawTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x133ab50
	void GetHpTargetCharacter(int32_t Index, struct ARSCharacterBase* Instance, bool IsEnable); // Function BattlePrototype.UIMenuBattleControl.GetHpTargetCharacter // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x133aa30
	float GetHPPercent(int32_t Index); // Function BattlePrototype.UIMenuBattleControl.GetHPPercent // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x133a9a0
	void GetHp(struct ARSCharacterBase* Character, float Max, float current); // Function BattlePrototype.UIMenuBattleControl.GetHp // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x133a880
	enum class EGameOverResult GetGameOverResult(); // Function BattlePrototype.UIMenuBattleControl.GetGameOverResult // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x133a850
	void GetFreeHpWidget(struct UUIVitalityEN02* Widget); // Function BattlePrototype.UIMenuBattleControl.GetFreeHpWidget // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x133a7c0
	struct UUINumberDamage* GetFreeDamageWidget(); // Function BattlePrototype.UIMenuBattleControl.GetFreeDamageWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x133a790
	int32_t GetEnemyLevel(struct ARSCharacterBase* Target); // Function BattlePrototype.UIMenuBattleControl.GetEnemyLevel // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	enum class EHelpTutorial GetCurrentMiniTipsID(); // Function BattlePrototype.UIMenuBattleControl.GetCurrentMiniTipsID // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	int32_t GetBrainTargetCursor(struct ARSCharacterBase* pTarget); // Function BattlePrototype.UIMenuBattleControl.GetBrainTargetCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x133a700
	struct ARSCharacterBase* GetBackupBossActor(); // Function BattlePrototype.UIMenuBattleControl.GetBackupBossActor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x133a6d0
	void EnemyHpWidgetDisappearInstantly(struct ARSCharacterBase* Target); // Function BattlePrototype.UIMenuBattleControl.EnemyHpWidgetDisappearInstantly // (Final|Native|Public|BlueprintCallable) // @ game+0x133a650
	bool EndMinimapBrainField(); // Function BattlePrototype.UIMenuBattleControl.EndMinimapBrainField // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t CreateIndexList(struct UUIDiscover* UIDiscover); // Function BattlePrototype.UIMenuBattleControl.CreateIndexList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	int32_t CreateDiscoverIndexList(struct UUIDiscover* UIDiscover); // Function BattlePrototype.UIMenuBattleControl.CreateDiscoverIndexList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CloseTargetCursor(); // Function BattlePrototype.UIMenuBattleControl.CloseTargetCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x133a610
	bool CloseMiniTips(enum class EHelpTutorial ID); // Function BattlePrototype.UIMenuBattleControl.CloseMiniTips // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool CloseMinimap(bool Force); // Function BattlePrototype.UIMenuBattleControl.CloseMinimap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CloseAllPkObjectTimer(); // Function BattlePrototype.UIMenuBattleControl.CloseAllPkObjectTimer // (Final|Native|Protected|BlueprintCallable) // @ game+0x133a5f0
	void CloseAllDamageWidget(); // Function BattlePrototype.UIMenuBattleControl.CloseAllDamageWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x133a5d0
	void CloseActiveAllBrainTargetCursor(struct ARSCharacterBase* pExcludeTarget); // Function BattlePrototype.UIMenuBattleControl.CloseActiveAllBrainTargetCursor // (Final|Native|Public|BlueprintCallable) // @ game+0x133a550
	bool ChangeTown(bool isTown, bool isAjito); // Function BattlePrototype.UIMenuBattleControl.ChangeTown // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool ChangePlayUI(bool isPlay); // Function BattlePrototype.UIMenuBattleControl.ChangePlayUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void BrainGaugeENStartField(); // Function BattlePrototype.UIMenuBattleControl.BrainGaugeENStartField // (Final|Native|Public|BlueprintCallable) // @ game+0x133a530
	void BrainGaugeENSetVisible(bool IsVisible); // Function BattlePrototype.UIMenuBattleControl.BrainGaugeENSetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x133a4a0
	void BrainGaugeENSetPercent(float percent, float Time); // Function BattlePrototype.UIMenuBattleControl.BrainGaugeENSetPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x133a3e0
	void BrainGaugeENSetGaugeMax(bool IsFull); // Function BattlePrototype.UIMenuBattleControl.BrainGaugeENSetGaugeMax // (Final|Native|Public|BlueprintCallable) // @ game+0x133a350
	void BrainGaugeENEndField(); // Function BattlePrototype.UIMenuBattleControl.BrainGaugeENEndField // (Final|Native|Public|BlueprintCallable) // @ game+0x133a330
};

// Class BattlePrototype.UIMiniMainQuestGoal
// Size: 0x388 (Inherited: 0x388)
struct UUIMiniMainQuestGoal : UUIBase {
};

// Class BattlePrototype.UIMiniSubQuestGoal
// Size: 0x388 (Inherited: 0x388)
struct UUIMiniSubQuestGoal : UUIBase {

	bool SetSubquestCompActive(); // Function BattlePrototype.UIMiniSubQuestGoal.SetSubquestCompActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetSubquestActive(); // Function BattlePrototype.UIMiniSubQuestGoal.SetSubquestActive // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIMiniBondsQuestGoal
// Size: 0x388 (Inherited: 0x388)
struct UUIMiniBondsQuestGoal : UUIBase {
};

// Class BattlePrototype.UIMiniMap
// Size: 0x4d8 (Inherited: 0x388)
struct UUIMiniMap : UUIBase {
	struct FName m_SceneName; // 0x388(0x08)
	bool ConfigMiniMapDisp; // 0x390(0x01)
	bool ConfigMiniMapScale; // 0x391(0x01)
	bool ConfigMiniMapRotate; // 0x392(0x01)
	char pad_393[0x1]; // 0x393(0x01)
	float m_limit; // 0x394(0x04)
	struct ABP_UI_SceneMap* m_ParentSceneMap; // 0x398(0x08)
	struct UUIMiniMainQuestGoal* m_MainQuestGoalWidgete; // 0x3a0(0x08)
	struct UUIMiniSubQuestGoal* m_SubQuestGoalWidgete; // 0x3a8(0x08)
	struct UUIMiniBondsQuestGoal* m_BondsQuestGoalWidgete; // 0x3b0(0x08)
	struct FVector2D m_VectorCenter; // 0x3b8(0x08)
	struct FVector2D m_VectorNorthRadios; // 0x3c0(0x08)
	struct FVector2D m_VectorQuestIconRadios; // 0x3c8(0x08)
	bool m_DebugFlagNative; // 0x3d0(0x01)
	char pad_3D1[0xe7]; // 0x3d1(0xe7)
	struct ARSHUDBase* m_pHudBase; // 0x4b8(0x08)
	struct APlayerController* m_PlayerController; // 0x4c0(0x08)
	struct TArray<struct UUIMinimapDistance*> m_MinimapDistanceData; // 0x4c8(0x10)

	void UpdateStateMinimap(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIMiniMap.UpdateStateMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x1340580
	bool UpdateConfigSetting(); // Function BattlePrototype.UIMiniMap.UpdateConfigSetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void StartMinimapBrainField(); // Function BattlePrototype.UIMiniMap.StartMinimapBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x1340530
	bool SetWidgetPlayerThumbnail(struct UObject* WorldContextObject, struct UImage* Image, int32_t Index); // Function BattlePrototype.UIMiniMap.SetWidgetPlayerThumbnail // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetWidgetCameraThumbnail(struct UObject* WorldContextObject, struct UImage* Image, int32_t Index); // Function BattlePrototype.UIMiniMap.SetWidgetCameraThumbnail // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetThumbnail(int32_t Icon); // Function BattlePrototype.UIMiniMap.SetThumbnail // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetDistanceSetting(enum class EUIMinmapDistanceIcon icontype); // Function BattlePrototype.UIMiniMap.SetDistanceSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1340360
	void SetDistanceReset(); // Function BattlePrototype.UIMiniMap.SetDistanceReset // (Final|Native|Public|BlueprintCallable) // @ game+0x1340340
	bool SetDirectionDestSubQuest(struct FName subquestTitle, struct FName SubQuestID, bool Flag); // Function BattlePrototype.UIMiniMap.SetDirectionDestSubQuest // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetDirectionDestNative(); // Function BattlePrototype.UIMiniMap.SetDirectionDestNative // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool SetDirectionDest(); // Function BattlePrototype.UIMiniMap.SetDirectionDest // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetBrainField(bool Flag); // Function BattlePrototype.UIMiniMap.SetBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x13401e0
	bool ReleaseMapSetting(); // Function BattlePrototype.UIMiniMap.ReleaseMapSetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void OpenMinimap(); // Function BattlePrototype.UIMiniMap.OpenMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x1340040
	void OnAfterChangeProgress(); // Function BattlePrototype.UIMiniMap.OnAfterChangeProgress // (Final|Native|Public) // @ game+0x1340020
	bool MinimapMaterialBrainfield(bool Flag); // Function BattlePrototype.UIMiniMap.MinimapMaterialBrainfield // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool MapOpenListSetting(int32_t AreaNo); // Function BattlePrototype.UIMiniMap.MapOpenListSetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool IsBrainField(); // Function BattlePrototype.UIMiniMap.IsBrainField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1340da0
	bool InitIcon_Etc_Native(); // Function BattlePrototype.UIMiniMap.InitIcon_Etc_Native // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializePlayerWidget(struct UUserWidget* widgetcamera, struct UUserWidget* widgetplayer); // Function BattlePrototype.UIMiniMap.InitializePlayerWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x133fd10
	void InitializeNorthWidget(struct UUserWidget* widgetnorthring, struct UUserWidget* widgetnorthicon, struct UUserWidget* widgetnorthstring); // Function BattlePrototype.UIMiniMap.InitializeNorthWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x133f9c0
	void InitializeMinimapDistance(struct UUIMinimapDistance* Distance, int32_t Num); // Function BattlePrototype.UIMiniMap.InitializeMinimapDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x133f900
	void InitializeMinimap(struct UOverlay* allset); // Function BattlePrototype.UIMiniMap.InitializeMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x133f880
	void InitializeImage(struct UImage* imagecamera, struct UImage* imageplayer); // Function BattlePrototype.UIMiniMap.InitializeImage // (Final|Native|Public|BlueprintCallable) // @ game+0x133f7c0
	void InitializeDirectionImage(struct UImage* imagemain, struct UImage* imagekizuna); // Function BattlePrototype.UIMiniMap.InitializeDirectionImage // (Final|Native|Public|BlueprintCallable) // @ game+0x133f700
	void InitializeAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_, struct UWidgetAnimation* out_noise, struct UWidgetAnimation* in_noise, struct UWidgetAnimation* default_noise); // Function BattlePrototype.UIMiniMap.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x133f060
	struct ABP_UI_SceneMap* getMinimapRefalence(struct FString Path); // Function BattlePrototype.UIMiniMap.getMinimapRefalence // (Final|Native|Public|BlueprintCallable) // @ game+0x1328ba0
	bool GetDebugFlagNative(); // Function BattlePrototype.UIMiniMap.GetDebugFlagNative // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x11b48c0
	void GetActiveSubquest(struct FName subquestName, struct FName SubQuestID, bool Flag); // Function BattlePrototype.UIMiniMap.GetActiveSubquest // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x133ef20
	void ForceLoadMap(); // Function BattlePrototype.UIMiniMap.ForceLoadMap // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	void EndMinimapBrainField(); // Function BattlePrototype.UIMiniMap.EndMinimapBrainField // (Final|Native|Public|BlueprintCallable) // @ game+0x133ef00
	bool CreateMapSetting(); // Function BattlePrototype.UIMiniMap.CreateMapSetting // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void CloseMinimap(); // Function BattlePrototype.UIMiniMap.CloseMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x133eee0
};

// Class BattlePrototype.UIMinimapDistance
// Size: 0x3b0 (Inherited: 0x388)
struct UUIMinimapDistance : UUIBase {
	char pad_388[0x28]; // 0x388(0x28)

	void SetThumbnail(enum class EUIMinmapDistanceIcon Icon); // Function BattlePrototype.UIMinimapDistance.SetThumbnail // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetTextColor(enum class EUIMinmapDistanceIconColor Color); // Function BattlePrototype.UIMinimapDistance.SetTextColor // (Final|Native|Public|BlueprintCallable) // @ game+0x1340490
	void SetDistance(struct FString Num); // Function BattlePrototype.UIMinimapDistance.SetDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x1340260
	void InitializeText(struct UTextBlock* distancenum, struct UTextBlock* distancetext); // Function BattlePrototype.UIMinimapDistance.InitializeText // (Final|Native|Public|BlueprintCallable) // @ game+0x133fed0
	void InitializeAnime(struct UWidgetAnimation* default_normal, struct UWidgetAnimation* default_red); // Function BattlePrototype.UIMinimapDistance.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x133f260
};

// Class BattlePrototype.UIMiniTips
// Size: 0x388 (Inherited: 0x388)
struct UUIMiniTips : UUIBase {

	void updateSpacerMiniTips(); // Function BattlePrototype.UIMiniTips.updateSpacerMiniTips // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIMouse
// Size: 0x3c8 (Inherited: 0x388)
struct UUIMouse : UUIBase {
	char pad_388[0x40]; // 0x388(0x40)

	void UpdateStateMouse(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIMouse.UpdateStateMouse // (Final|Native|Public|BlueprintCallable) // @ game+0x1340680
	void SetUnFoucus(); // Function BattlePrototype.UIMouse.SetUnFoucus // (Final|Native|Public|BlueprintCallable) // @ game+0x1340510
	void SetFoucus(); // Function BattlePrototype.UIMouse.SetFoucus // (Final|Native|Public|BlueprintCallable) // @ game+0x13403e0
	void MouseAnimeNone(bool Flag); // Function BattlePrototype.UIMouse.MouseAnimeNone // (Final|Native|Public|BlueprintCallable) // @ game+0x133ff90
	bool isFoucus(); // Function BattlePrototype.UIMouse.isFoucus // (Final|Native|Public|BlueprintCallable) // @ game+0x1340dc0
	void InitializeAnime(struct UWidgetAnimation* out_focus, struct UWidgetAnimation* in_focus, struct UWidgetAnimation* default_focus, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UIMouse.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x133f320
	bool GetMouseAnimeNone(); // Function BattlePrototype.UIMouse.GetMouseAnimeNone // (Final|Native|Public|BlueprintCallable) // @ game+0x11d1300
};

// Class BattlePrototype.UINoticeMessage
// Size: 0x428 (Inherited: 0x388)
struct UUINoticeMessage : UUIBase {
	float DispTimerMax; // 0x388(0x04)
	char pad_38C[0x9c]; // 0x38c(0x9c)

	void UpdateStateNoticeMessage(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UINoticeMessage.UpdateStateNoticeMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1340780
	void SetNoticeIcon(int32_t Type); // Function BattlePrototype.UINoticeMessage.SetNoticeIcon // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool RemoveEventSubQuest(); // Function BattlePrototype.UINoticeMessage.RemoveEventSubQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x13401b0
	bool RemoveEvent(enum class EUINoticeMessageCallType Type, struct FName ID); // Function BattlePrototype.UINoticeMessage.RemoveEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x13400f0
	bool RemoveBrainMessageEvent(struct FName threadID); // Function BattlePrototype.UINoticeMessage.RemoveBrainMessageEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1340060
	void InitializeNoticeMessage(struct UTextBlock* textName, struct UTextBlock* textDetails, struct UImage* kizunaImage, struct UOverlay* bmguide); // Function BattlePrototype.UINoticeMessage.InitializeNoticeMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x133fac0
	void InitializeAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UINoticeMessage.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x133f4b0
	void AddEvent(enum class EUINoticeMessageCallType Type, struct FName ID); // Function BattlePrototype.UINoticeMessage.AddEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x133ee20
};

// Class BattlePrototype.UINoticeQuest
// Size: 0x388 (Inherited: 0x388)
struct UUINoticeQuest : UUIBase {

	bool OpenStartSubQuest(struct FName questId, float DispTime, bool ManualClose); // Function BattlePrototype.UINoticeQuest.OpenStartSubQuest // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool OpenStartBondsQuest(struct FName questId, float DispTime, bool ManualClose); // Function BattlePrototype.UINoticeQuest.OpenStartBondsQuest // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool initializeSubQuestText(struct FName questId); // Function BattlePrototype.UINoticeQuest.initializeSubQuestText // (Final|Native|Protected|BlueprintCallable) // @ game+0x1340d10
	bool initializeBondsQuestText(struct FName questId); // Function BattlePrototype.UINoticeQuest.initializeBondsQuestText // (Final|Native|Protected|BlueprintCallable) // @ game+0x1340a40
	struct FString getSubQuestName(struct FName questId); // Function BattlePrototype.UINoticeQuest.getSubQuestName // (Final|Native|Protected|BlueprintCallable) // @ game+0x1340960
	struct FString getBondsQuestName(struct FName questId); // Function BattlePrototype.UINoticeQuest.getBondsQuestName // (Final|Native|Protected|BlueprintCallable) // @ game+0x1340880
	bool CloseStartSubQuest(struct FName questId, float DispTime, bool ManualClose); // Function BattlePrototype.UINoticeQuest.CloseStartSubQuest // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool CloseStartBondsQuest(struct FName questId, float DispTime, bool ManualClose); // Function BattlePrototype.UINoticeQuest.CloseStartBondsQuest // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UINoticeQuestReward
// Size: 0x478 (Inherited: 0x388)
struct UUINoticeQuestReward : UUIBase {
	char pad_388[0xf0]; // 0x388(0xf0)

	bool UpdateCursor(); // Function BattlePrototype.UINoticeQuestReward.UpdateCursor // (Final|Native|Protected|BlueprintCallable) // @ game+0x1340550
	bool SetRewardText(struct FName questId); // Function BattlePrototype.UINoticeQuestReward.SetRewardText // (Final|Native|Protected|BlueprintCallable) // @ game+0x1340400
	void SetItemRarity(struct UImage* imageRarity, enum class EItemRarity rarity); // Function BattlePrototype.UINoticeQuestReward.SetItemRarity // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void SetItemCategoryIcon(struct UImage* imageCategory, enum class EItemIcon Category); // Function BattlePrototype.UINoticeQuestReward.SetItemCategoryIcon // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool OpenStartReward(struct FName questId); // Function BattlePrototype.UINoticeQuestReward.OpenStartReward // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeRarity(struct UImage* rarity1, struct UImage* rarity2, struct UImage* rarity3); // Function BattlePrototype.UINoticeQuestReward.InitializeRarity // (Final|Native|Protected|BlueprintCallable) // @ game+0x133fdd0
	void initializeQuestRewardChoiceIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UTextBlock* textIndex); // Function BattlePrototype.UINoticeQuestReward.initializeQuestRewardChoiceIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1340ad0
	void InitializeOverlay(struct UOverlay* overlay1, struct UOverlay* overlay2, struct UOverlay* overlay3); // Function BattlePrototype.UINoticeQuestReward.InitializeOverlay // (Final|Native|Protected|BlueprintCallable) // @ game+0x133fc10
	void InitializeCategory(struct UImage* category1, struct UImage* category2, struct UImage* category3); // Function BattlePrototype.UINoticeQuestReward.InitializeCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x133f600
	int32_t getQuestRewardResult(); // Function BattlePrototype.UINoticeQuestReward.getQuestRewardResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132d580
};

// Class BattlePrototype.UINumberDamage
// Size: 0x470 (Inherited: 0x388)
struct UUINumberDamage : UUIBase {
	char pad_388[0xb8]; // 0x388(0xb8)
	struct FVector2D FixedMove; // 0x440(0x08)
	char pad_448[0x28]; // 0x448(0x28)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UINumberDamage.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1344d70
	void SetThumbnailNumebr3(struct UImage* Image, int32_t Value); // Function BattlePrototype.UINumberDamage.SetThumbnailNumebr3 // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetThumbnailNumebr1(struct UImage* Image, int32_t Value); // Function BattlePrototype.UINumberDamage.SetThumbnailNumebr1 // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void setPosition3D(struct FVector Position, struct FVector2D Offset); // Function BattlePrototype.UINumberDamage.setPosition3D // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1345f40
	void setPosition2D(struct FVector2D Position); // Function BattlePrototype.UINumberDamage.setPosition2D // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1345ea0
	void setNumber(int32_t Number); // Function BattlePrototype.UINumberDamage.setNumber // (Final|Native|Public|BlueprintCallable) // @ game+0x1345e20
	void setFlagSasCritical(bool isSasCritical); // Function BattlePrototype.UINumberDamage.setFlagSasCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x1345bb0
	void setFlagPlayer(bool IsPlayer); // Function BattlePrototype.UINumberDamage.setFlagPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1345b30
	void setFlagNoDamage(bool isNoDamage); // Function BattlePrototype.UINumberDamage.setFlagNoDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x1345ab0
	void setFlagHeal(bool isHeal); // Function BattlePrototype.UINumberDamage.setFlagHeal // (Final|Native|Public|BlueprintCallable) // @ game+0x1345a30
	void setFlagCritical(bool isCritical); // Function BattlePrototype.UINumberDamage.setFlagCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x13459b0
	void setFlagBrainCrashCritical(bool isBrainCrashCritical); // Function BattlePrototype.UINumberDamage.setFlagBrainCrashCritical // (Final|Native|Public|BlueprintCallable) // @ game+0x1345930
	void InitializeThisEx(struct UWidgetAnimation* animEnemy, struct UWidgetAnimation* animEnemyCritical, struct UWidgetAnimation* animHeal, struct UWidgetAnimation* animNoDamage, struct UWidgetAnimation* animSasCritical, struct UWidgetAnimation* animBrainCrashCritical, struct UImage* number_1_100001, struct UImage* number_1_10001, struct UImage* number_1_1001, struct UImage* number_1_101, struct UImage* number_1_11, struct UImage* number_1_2, struct UImage* number_3_100001, struct UImage* number_3_10001, struct UImage* number_3_1001, struct UImage* number_3_101, struct UImage* number_3_11, struct UImage* number_3_2, struct UOverlay* overlaySetParent, struct UHorizontalBox* horizontalBoxCritialSet, struct UHorizontalBox* horizontalBoxNormalSet, struct UOverlay* overlayNoDamageSet); // Function BattlePrototype.UINumberDamage.InitializeThisEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1344680
	void InitializeThis(struct UWidgetAnimation* animEnemy, struct UWidgetAnimation* animEnemyCritical, struct UWidgetAnimation* animHeal, struct UWidgetAnimation* animNoDamage, struct UWidgetAnimation* animSasCritical, struct UWidgetAnimation* animBrainCrashCritical, struct UImage* number_1_1001, struct UImage* number_1_101, struct UImage* number_1_11, struct UImage* number_1_2, struct UImage* number_3_1001, struct UImage* number_3_101, struct UImage* number_3_11, struct UImage* number_3_2, struct UOverlay* overlaySetParent, struct UHorizontalBox* horizontalBoxCritialSet, struct UHorizontalBox* horizontalBoxNormalSet, struct UOverlay* overlayNoDamageSet); // Function BattlePrototype.UINumberDamage.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1342df0
};

// Class BattlePrototype.UIParty
// Size: 0x3b8 (Inherited: 0x388)
struct UUIParty : UUIBase {
	struct FVector2D RT1_InOut1_Translation; // 0x388(0x08)
	struct FVector2D RT1_Out2_Translation; // 0x390(0x08)
	char pad_398[0x20]; // 0x398(0x20)

	void updateProgramAnimation(float DeltaSeconds); // Function BattlePrototype.UIParty.updateProgramAnimation // (Final|Native|Protected|BlueprintCallable) // @ game+0x1346280
	void updatePartyMouseFocus(); // Function BattlePrototype.UIParty.updatePartyMouseFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x1346260
	void playContentsOut2(); // Function BattlePrototype.UIParty.playContentsOut2 // (Final|Native|Protected|BlueprintCallable) // @ game+0x1345770
	void playContentsOut(); // Function BattlePrototype.UIParty.playContentsOut // (Final|Native|Protected|BlueprintCallable) // @ game+0x1345790
	void playContentsIn(); // Function BattlePrototype.UIParty.playContentsIn // (Final|Native|Protected|BlueprintCallable) // @ game+0x1345750
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIParty.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1345720
	bool isPlayingContentsOut2(); // Function BattlePrototype.UIParty.isPlayingContentsOut2 // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13456c0
	bool isPlayingContentsOut(); // Function BattlePrototype.UIParty.isPlayingContentsOut // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x13456f0
	bool isPlayingContentsIn(); // Function BattlePrototype.UIParty.isPlayingContentsIn // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1345690
	void InitializeThis(struct UBorder* borderAllColor, struct UImage* imageRT1); // Function BattlePrototype.UIParty.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13432c0
	void InitializeScrollBox(struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIParty.InitializeScrollBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1342d70
};

// Class BattlePrototype.UIPartyCharaInfo
// Size: 0x398 (Inherited: 0x388)
struct UUIPartyCharaInfo : UUIBase {
	char pad_388[0x10]; // 0x388(0x10)

	bool isCheckMouseCancel(); // Function BattlePrototype.UIPartyCharaInfo.isCheckMouseCancel // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1345660
	void InitializeThis(struct TArray<struct UUIBase*> charainfolist); // Function BattlePrototype.UIPartyCharaInfo.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1343380
};

// Class BattlePrototype.UIPkActionIcon
// Size: 0x388 (Inherited: 0x388)
struct UUIPkActionIcon : UUIBase {

	enum class EMouseIconType GetMouseIndex(int32_t KeyIndex, bool IsEnableMouseMove); // Function BattlePrototype.UIPkActionIcon.GetMouseIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x1342c90
};

// Class BattlePrototype.UIPkObjectTimer
// Size: 0x3c8 (Inherited: 0x388)
struct UUIPkObjectTimer : UUIBase {
	char pad_388[0x38]; // 0x388(0x38)
	struct FVector2D Offset; // 0x3c0(0x08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIPkObjectTimer.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1344e70
	bool SetupOffset(); // Function BattlePrototype.UIPkObjectTimer.SetupOffset // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UREDTextBlock* textTimer, struct UImage* imageTimer, struct UImage* imageTimerAdd); // Function BattlePrototype.UIPkObjectTimer.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1343460
};

// Class BattlePrototype.UIPresent
// Size: 0x3a0 (Inherited: 0x388)
struct UUIPresent : UUIBase {
	enum class EPlayerID m_Target; // 0x388(0x01)
	bool m_FlagSelect; // 0x389(0x01)
	char pad_38A[0x2]; // 0x38a(0x02)
	struct FName m_ItemID; // 0x38c(0x08)
	char pad_394[0xc]; // 0x394(0x0c)

	void updatePresentListMouseFocus(); // Function BattlePrototype.UIPresent.updatePresentListMouseFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x1329050
	void SetTarget(enum class EPlayerID Target); // Function BattlePrototype.UIPresent.SetTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1344cf0
	void InitializeScrollBox(struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIPresent.InitializeScrollBox // (Final|Native|Public|BlueprintCallable) // @ game+0x131d330
	bool GetSelectFlag(); // Function BattlePrototype.UIPresent.GetSelectFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1342d50
	struct FName GetItemID(); // Function BattlePrototype.UIPresent.GetItemID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1342c70
};

// Class BattlePrototype.UIPresentNext
// Size: 0x390 (Inherited: 0x388)
struct UUIPresentNext : UUIBase {
	struct FName m_ItemID; // 0x388(0x08)

	void SetItemID(struct FName ItemId); // Function BattlePrototype.UIPresentNext.SetItemID // (Final|Native|Public|BlueprintCallable) // @ game+0x1344c70
};

// Class BattlePrototype.UIPsychicWeightGauge
// Size: 0x440 (Inherited: 0x388)
struct UUIPsychicWeightGauge : UUIBase {
	char pad_388[0x38]; // 0x388(0x38)
	struct TWeakObjectPtr<struct AActor> Target; // 0x3c0(0x08)
	char pad_3C8[0x78]; // 0x3c8(0x78)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIPsychicWeightGauge.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1344f70
	void SetTarget(struct AActor* Target); // Function BattlePrototype.UIPsychicWeightGauge.SetTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x13461d0
	void setSuccessFlag(bool IsSuccess); // Function BattlePrototype.UIPsychicWeightGauge.setSuccessFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1346150
	void SetStyle(enum class EPsychicWeightGaugeButton Button, enum class EPsychicWeightGaugeSize Size, int32_t maxLevel); // Function BattlePrototype.UIPsychicWeightGauge.SetStyle // (Final|Native|Public|BlueprintCallable) // @ game+0x1346050
	void setGaugeVisible(bool IsVisible); // Function BattlePrototype.UIPsychicWeightGauge.setGaugeVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x1345d90
	void setGaugeReverse(bool FlagReverse); // Function BattlePrototype.UIPsychicWeightGauge.setGaugeReverse // (Final|Native|Public|BlueprintCallable) // @ game+0x1345d00
	void setGauge(int32_t Level, float fPercent); // Function BattlePrototype.UIPsychicWeightGauge.setGauge // (Final|Native|Public|BlueprintCallable) // @ game+0x1345c30
	void setExObjectFlag(bool IsExObject); // Function BattlePrototype.UIPsychicWeightGauge.setExObjectFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x13458b0
	void setEnabnle(bool IsEnable); // Function BattlePrototype.UIPsychicWeightGauge.setEnabnle // (Final|Native|Public|BlueprintCallable) // @ game+0x1345830
	void setEnableCombo(bool IsEnable); // Function BattlePrototype.UIPsychicWeightGauge.setEnableCombo // (Final|Native|Public|BlueprintCallable) // @ game+0x13457b0
	void OpenEx(); // Function BattlePrototype.UIPsychicWeightGauge.OpenEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1344c50
	void InitializeThis(struct UImage* imageBar1, struct UImage* imageBar2, struct UImage* imageBar1Add, struct UImage* imageWeightButton, struct UImage* imageWeightIconFont, struct UImage* imageFrame1, struct UImage* imageFrame2, struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault1, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animDefault3, struct UWidgetAnimation* animDefault4, struct UWidgetAnimation* animIn1, struct UWidgetAnimation* animIn2, struct UWidgetAnimation* animIn4, struct UWidgetAnimation* animOut1, struct UWidgetAnimation* animOut2, struct UWidgetAnimation* animChange1, struct UWidgetAnimation* animChange2, struct UWidgetAnimation* animDecision1, struct UWidgetAnimation* animDecision2); // Function BattlePrototype.UIPsychicWeightGauge.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1343620
	struct FVector GetPsychicObjectWeightGaugePos(struct AActor* Target); // Function BattlePrototype.UIPsychicWeightGauge.GetPsychicObjectWeightGaugePos // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool getGaugeReverseFlag(); // Function BattlePrototype.UIPsychicWeightGauge.getGaugeReverseFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1345270
	struct FLinearColor GetFontColorButton2(); // Function BattlePrototype.UIPsychicWeightGauge.GetFontColorButton2 // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	struct FLinearColor GetFontColorButton1(); // Function BattlePrototype.UIPsychicWeightGauge.GetFontColorButton1 // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
	void CloseDirectEx(); // Function BattlePrototype.UIPsychicWeightGauge.CloseDirectEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1342c50
};

// Class BattlePrototype.UIQuestChoice
// Size: 0x4d0 (Inherited: 0x388)
struct UUIQuestChoice : UUIBase {
	char pad_388[0x148]; // 0x388(0x148)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestChoice.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1345070
	void SetItemIcon(struct FName ItemId, struct UImage* imageCategory, struct UImage* imageItemIconFrame); // Function BattlePrototype.UIQuestChoice.SetItemIcon // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UTextBlock* textWindowTitle, struct UOverlay* overlayMainGatherItem, struct USpacer* spacerMain, struct UOverlay* overlayMainOther, struct UTextBlock* TextMain, struct UVerticalBox* verticalBoxChoice, struct UOverlay* overlayReward, struct UTextBlock* textRewardTitle, struct UHorizontalBox* horizontalBoxGuide); // Function BattlePrototype.UIQuestChoice.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1343bb0
	void initializeReward(int32_t Index, struct UOverlay* Overlay, struct UImage* itemIconFrame, struct UImage* iconCategory, struct UImage* iconFrame); // Function BattlePrototype.UIQuestChoice.initializeReward // (Final|Native|Protected|BlueprintCallable) // @ game+0x13454d0
	void initializeIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UIQuestChoice.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x1345290
};

// Class BattlePrototype.UIQuestDetailsBonds
// Size: 0x3d0 (Inherited: 0x388)
struct UUIQuestDetailsBonds : UUIBase {
	char pad_388[0x48]; // 0x388(0x48)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestDetailsBonds.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d420
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UImage* Image, struct UImage* imageNoise, struct UTextBlock* textTitle, struct UREDScrollBoxSimple* ScrollBox, struct UUIQuestIcon* UIQuestIcon, struct UUIQuestNamePlate* UIQuestNamePlate, struct UCanvasPanel* questPanel, struct UOverlay* overlayImage); // Function BattlePrototype.UIQuestDetailsBonds.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1343e30
};

// Class BattlePrototype.UIQuestDetailsMain
// Size: 0x3e8 (Inherited: 0x388)
struct UUIQuestDetailsMain : UUIBase {
	char pad_388[0x60]; // 0x388(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestDetailsMain.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1345170
	void SetProgressIcon(int32_t progressIndex); // Function BattlePrototype.UIQuestDetailsMain.SetProgressIcon // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UTextBlock* textTitle, struct UREDScrollBoxSimple* ScrollBox, struct UImage* Image1, struct UImage* Image2, struct UImage* image3, struct UImage* image4, struct UImage* image5, struct UUIQuestIcon* UIQuestIcon, struct UUIQuestNamePlate* UIQuestNamePlate, struct UCanvasPanel* questPanel, struct UOverlay* overlayImage1Set, struct UOverlay* overlayImage2Set, struct UOverlay* overlayImage3Set, struct UOverlay* overlayImage4Set, struct UOverlay* overlayImage5Set, struct UOverlay* overlayText1Set, struct UOverlay* overlayText2Set, struct UOverlay* overlayText3Set, struct UOverlay* overlayText4Set, struct UOverlay* overlayText5Set, struct UOverlay* overlayText6Set); // Function BattlePrototype.UIQuestDetailsMain.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13440b0
};

// Class BattlePrototype.UIQuestDetailsSub
// Size: 0x510 (Inherited: 0x388)
struct UUIQuestDetailsSub : UUIBase {
	char pad_388[0x188]; // 0x388(0x188)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestDetailsSub.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d420
	void SetItemRarity(struct UImage* imageRarity, enum class EItemRarity rarity); // Function BattlePrototype.UIQuestDetailsSub.SetItemRarity // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetItemIcon(struct UImage* imageCategory, enum class EItemIcon Category); // Function BattlePrototype.UIQuestDetailsSub.SetItemIcon // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UREDScrollBoxSimple* ScrollBox, struct UTextBlock* textTitle, struct UTextBlock* textIndexClient, struct UTextBlock* textIndexLocation, struct UTextBlock* textIndexProgress, struct UTextBlock* textIndexReward, struct UTextBlock* textClient, struct UTextBlock* TextLocation, struct USpacer* spacerDescription1, struct USpacer* spacerDescription2, struct UUIQuestIcon* UIQuestIcon, struct UUIQuestNamePlate* UIQuestNamePlate, struct UCanvasPanel* questPanel); // Function BattlePrototype.UIQuestDetailsSub.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1348970
	void initializeReward(int32_t Index, struct UOverlay* textSet, struct UImage* imageItemRarity, struct UImage* imageItemCategory); // Function BattlePrototype.UIQuestDetailsSub.initializeReward // (Final|Native|Public|BlueprintCallable) // @ game+0x1348830
	void InitializeProgress(int32_t Index, struct UHorizontalBox* HorizontalBox, struct UOverlay* iconSet, struct UImage* imageItemRarity, struct UImage* imageItemCategory, struct UTextBlock* TextBlock, struct UOverlay* numSet, struct UTextBlock* textProgressCurrent, struct UTextBlock* textProgressSlash, struct UTextBlock* textProgressTarget); // Function BattlePrototype.UIQuestDetailsSub.InitializeProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x1348570
};

// Class BattlePrototype.UIQuestIcon
// Size: 0x3c8 (Inherited: 0x388)
struct UUIQuestIcon : UUIBase {
	char pad_388[0x40]; // 0x388(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestIcon.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x134a6f0
	void SetProgress(int32_t Progress); // Function BattlePrototype.UIQuestIcon.SetProgress // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animDefault3, struct UWidgetAnimation* animDefault4, struct UWidgetAnimation* animDefault5, struct UWidgetAnimation* animDefault6, struct UTextBlock* textName); // Function BattlePrototype.UIQuestIcon.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1348cf0
};

// Class BattlePrototype.UIQuestListIndex
// Size: 0x4e0 (Inherited: 0x388)
struct UUIQuestListIndex : UUIBase {
	struct FSlateColor ActiveColorMain; // 0x388(0x28)
	struct FLinearColor ActiveOutlineColorMain; // 0x3b0(0x10)
	struct FSlateColor ActiveColorSub; // 0x3c0(0x28)
	struct FLinearColor ActiveOutlineColorSub; // 0x3e8(0x10)
	struct FSlateColor ActiveColorBonds; // 0x3f8(0x28)
	struct FLinearColor ActiveOutlineColorBonds; // 0x420(0x10)
	struct FSlateColor InactiveColor; // 0x430(0x28)
	struct FLinearColor InactiveOutlineColor; // 0x458(0x10)
	char pad_468[0x78]; // 0x468(0x78)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x134a7f0
	void SetInfo(enum class EQuestDataType QuestType, struct FName ID, int32_t Progress, int32_t Index, bool IsActive); // Function BattlePrototype.UIQuestListIndex.SetInfo // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x134a450
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animDefaultLock, struct UWidgetAnimation* animSelectLock, struct UWidgetAnimation* animSelectLockIn, struct UImage* imageNewIcon, struct UImage* imageBlackPattern1, struct UImage* imageBlackPattern2, struct UOverlay* overlayYuito, struct UOverlay* overlayKasane, struct UTextBlock* textQuestName); // Function BattlePrototype.UIQuestListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1348ef0
};

// Class BattlePrototype.UIQuestMenu
// Size: 0x11e0 (Inherited: 0x388)
struct UUIQuestMenu : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	char pad_3A0[0xe40]; // 0x3a0(0xe40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestMenu.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134a8f0
	void SetContentsChange(bool IsChange); // Function BattlePrototype.UIQuestMenu.SetContentsChange // (Final|Native|Public|BlueprintCallable) // @ game+0x134a3d0
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIQuestMenu.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIQuestMenu.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIQuestMenu.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIQuestMenu.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIQuestMenu.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UIQuestMenu.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134aee0
	bool isEndMenu(); // Function BattlePrototype.UIQuestMenu.isEndMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134aec0
	bool isEndErrorPopup(); // Function BattlePrototype.UIQuestMenu.isEndErrorPopup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animInfoWindow, struct UWidgetAnimation* animInfoWindowIn, struct UWidgetAnimation* animInfoWindowOut, struct UBorder* borderAllColor, struct UREDScrollBox* ScrollBox, struct UUIQuestListIndex* uiListIndexBase, struct UUIQuestChoice* childQuestPopup, struct UUIBase* childErrorPopup, struct UUIQuestDetailsMain* childDetailsMain, struct UUIQuestDetailsSub* childDetailsSub, struct UUIQuestDetailsBonds* childDetailsBounds); // Function BattlePrototype.UIQuestMenu.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1349230
	void InitializeCommonParts(struct UUIMainContents* UIMainContents, struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UIQuestMenu.InitializeCommonParts // (Final|Native|Public|BlueprintCallable) // @ game+0x1348470
	void InitializeCategory(int32_t Category, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animUnselect, struct UTextBlock* textCategory); // Function BattlePrototype.UIQuestMenu.InitializeCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x13481f0
	void InitializeArrowLR(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision); // Function BattlePrototype.UIQuestMenu.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x1348000
};

// Class BattlePrototype.UIQuestNamePlate
// Size: 0x3a0 (Inherited: 0x388)
struct UUIQuestNamePlate : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIQuestNamePlate.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x134a6f0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UOverlay* faceYuito, struct UOverlay* faceKasane, struct UTextBlock* textName); // Function BattlePrototype.UIQuestNamePlate.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13495f0
};

// Class BattlePrototype.UIResurrectionGauge
// Size: 0x420 (Inherited: 0x388)
struct UUIResurrectionGauge : UUIBase {
	struct FVector2D baseOffset; // 0x388(0x08)
	char pad_390[0x8]; // 0x390(0x08)
	struct AActor* OwnerActor; // 0x398(0x08)
	char pad_3A0[0x80]; // 0x3a0(0x80)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIResurrectionGauge.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134a9f0
	void setWorldOffset(struct FVector worldOffset); // Function BattlePrototype.UIResurrectionGauge.setWorldOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x134b440
	void setOwnerActor(struct AActor* OwnerActor); // Function BattlePrototype.UIResurrectionGauge.setOwnerActor // (Final|Native|Public|BlueprintCallable) // @ game+0x134b3c0
	void setMode(enum class EResurrectionIconMode Mode); // Function BattlePrototype.UIResurrectionGauge.setMode // (Final|Native|Public|BlueprintCallable) // @ game+0x134b280
	void setGauge(float guage); // Function BattlePrototype.UIResurrectionGauge.setGauge // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animIn2, struct UWidgetAnimation* animOut2, struct UImage* imageIcon, struct USpacer* Spacer); // Function BattlePrototype.UIResurrectionGauge.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1349740
};

// Class BattlePrototype.UISASActionIcon
// Size: 0x3d8 (Inherited: 0x388)
struct UUISASActionIcon : UUIBase {
	struct FVector2D baseOffset; // 0x388(0x08)
	bool m_isUsable; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct AActor* OwnerActor; // 0x398(0x08)
	char pad_3A0[0x38]; // 0x3a0(0x38)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UISASActionIcon.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134aaf0
	void setWorldOffset(struct FVector worldOffset); // Function BattlePrototype.UISASActionIcon.setWorldOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x134b440
	void setUsable(bool isUsable); // Function BattlePrototype.UISASActionIcon.setUsable // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void setOwnerActor(struct AActor* OwnerActor); // Function BattlePrototype.UISASActionIcon.setOwnerActor // (Final|Native|Public|BlueprintCallable) // @ game+0x134b3c0
	void setIconType(enum class ESASActionIconType icontype, bool isUsable); // Function BattlePrototype.UISASActionIcon.setIconType // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isUsable(); // Function BattlePrototype.UISASActionIcon.isUsable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x11d1b40
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animIn2, struct UWidgetAnimation* animOut2, struct UWidgetAnimation* animSelect); // Function BattlePrototype.UISASActionIcon.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1349a80
};

// Class BattlePrototype.UISASButton2
// Size: 0x3a0 (Inherited: 0x388)
struct UUISASButton2 : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void UpdateStateThis(int32_t State, int32_t SubState); // Function BattlePrototype.UISASButton2.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134abf0
	void SetReadyFlag(bool IsReady); // Function BattlePrototype.UISASButton2.SetReadyFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x134a670
	void SetPageFlag(bool IsPage); // Function BattlePrototype.UISASButton2.SetPageFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x134a5f0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animChangeSas1, struct UWidgetAnimation* animDefaultSas, struct UWidgetAnimation* animChangeSas2, struct UWidgetAnimation* animDecisionSas, struct UWidgetAnimation* animChangePage1, struct UWidgetAnimation* animDefaultPage, struct UWidgetAnimation* animChangePage2, struct UWidgetAnimation* animDecisionPage, struct UImage* imageSasIconFont, struct UImage* imageSasButton); // Function BattlePrototype.UISASButton2.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1349bd0
	void Decide(); // Function BattlePrototype.UISASButton2.Decide // (Final|Native|Protected|BlueprintCallable) // @ game+0x1347fe0
};

// Class BattlePrototype.UISASButton3
// Size: 0x3a0 (Inherited: 0x388)
struct UUISASButton3 : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void UpdateStateThis(int32_t State, int32_t SubState); // Function BattlePrototype.UISASButton3.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134acb0
	void SetReadyFlag(bool IsReady); // Function BattlePrototype.UISASButton3.SetReadyFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x134a670
	void SetPageFlag(bool IsPage); // Function BattlePrototype.UISASButton3.SetPageFlag // (Final|Native|Protected|BlueprintCallable) // @ game+0x134a5f0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animChangeCv1, struct UWidgetAnimation* animDefaultCv, struct UWidgetAnimation* animChangeCv2, struct UWidgetAnimation* animDecisionCv, struct UWidgetAnimation* animChangePage1, struct UWidgetAnimation* animDefaultPage, struct UWidgetAnimation* animChangePage2, struct UWidgetAnimation* animDecisionPage, struct UImage* imageSasIconFont, struct UImage* imageSasButton); // Function BattlePrototype.UISASButton3.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1349bd0
	void Decide(); // Function BattlePrototype.UISASButton3.Decide // (Final|Native|Protected|BlueprintCallable) // @ game+0x1347fe0
};

// Class BattlePrototype.UISASFrame
// Size: 0x448 (Inherited: 0x388)
struct UUISASFrame : UUIBase {
	char pad_388[0x90]; // 0x388(0x90)
	int32_t m_buttonIndex; // 0x418(0x04)
	char pad_41C[0x2c]; // 0x41c(0x2c)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UISASFrame.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134ad70
	void setSasGaugeR(struct UImage* Image, int32_t Index); // Function BattlePrototype.UISASFrame.setSasGaugeR // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void setObject(struct UUISASFrame2* frameObject, struct UImage* noneObject); // Function BattlePrototype.UISASFrame.setObject // (Final|Native|Public|BlueprintCallable) // @ game+0x134b300
	void SetIconVisible(bool IsVisible); // Function BattlePrototype.UISASFrame.SetIconVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x134b1f0
	void setIconScale(struct FVector2D Scale); // Function BattlePrototype.UISASFrame.setIconScale // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x134b160
	void setCombinationVision(bool isCv); // Function BattlePrototype.UISASFrame.setCombinationVision // (Final|Native|Public|BlueprintCallable) // @ game+0x134b0e0
	void setButtonIndex(int32_t Index); // Function BattlePrototype.UISASFrame.setButtonIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x134b060
	void setActiveWidgetFlag(bool isAcitveWidget); // Function BattlePrototype.UISASFrame.setActiveWidgetFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x134afe0
	void SetActive(bool IsActiveSAS, bool isActiveCv); // Function BattlePrototype.UISASFrame.SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x134af10
	bool IsEnable(); // Function BattlePrototype.UISASFrame.IsEnable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x134ae90
	bool IsDecide(); // Function BattlePrototype.UISASFrame.IsDecide // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134ae70
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animGauge_Full, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animGauge_FullIn, struct UWidgetAnimation* animGauge_Useing, struct UWidgetAnimation* animGauge_Full_Out, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animChange1, struct UWidgetAnimation* animChange2, struct UOverlay* overlaySasSet, struct UImage* imageIcon01, struct UImage* imageIcon01Add, struct UImage* imageObjectNone, struct UImage* imageBaseEffect, struct UImage* imageSasGaugeUse, struct UImage* imageSasGaugeUseAdd, struct UUISASFrame2* UISASFrame2); // Function BattlePrototype.UISASFrame.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1349f50
	bool CheckCombinationVisionCost(enum class E_SASKindNative sas); // Function BattlePrototype.UISASFrame.CheckCombinationVisionCost // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
};

// Class BattlePrototype.UISASFrame2
// Size: 0x3d0 (Inherited: 0x388)
struct UUISASFrame2 : UUIBase {
	char pad_388[0x48]; // 0x388(0x48)

	void UpdateStateThis(int32_t State, int32_t SubState); // Function BattlePrototype.UISASFrame2.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134f4d0
	void InitializeThis(struct UImage* imageSasFrame, struct UImage* imageCvFrame, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animFullIn, struct UWidgetAnimation* animFull, struct UWidgetAnimation* animFullOut, struct UWidgetAnimation* animInFull, struct UWidgetAnimation* animOutFull, struct UWidgetAnimation* animFullIn2, struct UWidgetAnimation* animFull2, struct UWidgetAnimation* animInFull2, struct UWidgetAnimation* animOutFull2, struct FLinearColor colorDefault, struct FLinearColor colorLockSas, struct FLinearColor colorLockCv); // Function BattlePrototype.UISASFrame2.InitializeThis // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x134e7f0
};

// Class BattlePrototype.UISASGauge
// Size: 0x3a8 (Inherited: 0x388)
struct UUISASGauge : UUIBase {
	char pad_388[0x20]; // 0x388(0x20)

	void setIconScale(struct FVector2D Scale); // Function BattlePrototype.UISASGauge.setIconScale // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x134ed80
	void SetButton(enum class E_SASButton Button); // Function BattlePrototype.UISASGauge.SetButton // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animGauge_0_101, struct UOverlay* Overlay); // Function BattlePrototype.UISASGauge.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x131a2e0
};

// Class BattlePrototype.UISASLink
// Size: 0x3c0 (Inherited: 0x388)
struct UUISASLink : UUIBase {
	struct FLinearColor ContentsInOutTextColor; // 0x388(0x10)
	struct FLinearColor ContentsInOutTextColorMax; // 0x398(0x10)
	char pad_3A8[0x18]; // 0x3a8(0x18)

	void updateProgramAnimation(float DeltaSeconds); // Function BattlePrototype.UISASLink.updateProgramAnimation // (Final|Native|Protected|BlueprintCallable) // @ game+0x134fbd0
	void playContentsOutMax(); // Function BattlePrototype.UISASLink.playContentsOutMax // (Final|Native|Protected|BlueprintCallable) // @ game+0x134fbb0
	void playContentsOut(); // Function BattlePrototype.UISASLink.playContentsOut // (Final|Native|Protected|BlueprintCallable) // @ game+0x134fb90
	void playContentsInMax(); // Function BattlePrototype.UISASLink.playContentsInMax // (Final|Native|Protected|BlueprintCallable) // @ game+0x134fb70
	void playContentsIn(); // Function BattlePrototype.UISASLink.playContentsIn // (Final|Native|Protected|BlueprintCallable) // @ game+0x134fb50
	bool isPlayingProgramAnimation(); // Function BattlePrototype.UISASLink.isPlayingProgramAnimation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134faf0
	bool isPlayingContentsOutMax(); // Function BattlePrototype.UISASLink.isPlayingContentsOutMax // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x134fac0
	bool isPlayingContentsOut(); // Function BattlePrototype.UISASLink.isPlayingContentsOut // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x134fa90
	bool isPlayingContentsInMax(); // Function BattlePrototype.UISASLink.isPlayingContentsInMax // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x134fa60
	bool isPlayingContentsIn(); // Function BattlePrototype.UISASLink.isPlayingContentsIn // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x134fa30
	void InitializeThis(struct UOverlay* overlayAllSet, struct UBorder* borderTextBondNum); // Function BattlePrototype.UISASLink.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x134ec00
};

// Class BattlePrototype.UISASLinkPopup
// Size: 0x390 (Inherited: 0x388)
struct UUISASLinkPopup : UUIBase {
	char pad_388[0x8]; // 0x388(0x08)

	void updateSasLinkPopupMouseFocus(); // Function BattlePrototype.UISASLinkPopup.updateSasLinkPopupMouseFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x134fc50
	void InitializeScrollBox(struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UISASLinkPopup.InitializeScrollBox // (Final|Native|Public|BlueprintCallable) // @ game+0x132c5e0
};

// Class BattlePrototype.UISASMenuControl
// Size: 0x3a0 (Inherited: 0x388)
struct UUISASMenuControl : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void SetBg(struct UImage* pImage); // Function BattlePrototype.UISASMenuControl.SetBg // (Final|Native|Public|BlueprintCallable) // @ game+0x134ecc0
	void getSasKey(enum class ESasKeyType Type, struct FName KeyName, struct FName KeyName2); // Function BattlePrototype.UISASMenuControl.getSasKey // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x134f590
	void BgUpdate(float DeltaSeconds); // Function BattlePrototype.UISASMenuControl.BgUpdate // (Final|Native|Public|BlueprintCallable) // @ game+0x134d1e0
	void BgSetVisible(bool IsVisible, float Speed); // Function BattlePrototype.UISASMenuControl.BgSetVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x134d0d0
	bool BgIsUpdate(); // Function BattlePrototype.UISASMenuControl.BgIsUpdate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134d0b0
};

// Class BattlePrototype.UISaveLoad
// Size: 0x4a8 (Inherited: 0x388)
struct UUISaveLoad : UUIBase {
	struct FMulticastInlineDelegate m_OnEventInitializeStart; // 0x388(0x10)
	struct FDelegate m_OnEventSelectStart; // 0x398(0x10)
	struct FVector2D ListElementSize; // 0x3a8(0x08)
	float ListOffsetSize; // 0x3b0(0x04)
	char pad_3B4[0x4]; // 0x3b4(0x04)
	struct UObject* ListIndexClass; // 0x3b8(0x08)
	char pad_3C0[0x58]; // 0x3c0(0x58)
	struct URSSaveGame* m_pAutoSave; // 0x418(0x08)
	struct USaveLoadScreenParamManager* m_pAutoSaveLoadScreenParamManager; // 0x420(0x08)
	struct URSSaveGame* m_pSave; // 0x428(0x08)
	struct USaveLoadScreenParamManager* m_pSaveLoadScreenParamManager; // 0x430(0x08)
	struct UCanvasPanel* scrollBoxParent; // 0x438(0x08)
	struct UUISaveLoadChoice* m_SaveLoadChoice; // 0x440(0x08)
	struct ARSHUDBase* m_pRSHudBase; // 0x448(0x08)
	struct ARSTitleManager* m_pTitleManager; // 0x450(0x08)
	struct UREDScrollBox* ScrollBox; // 0x458(0x08)
	struct UUIGuide* uGuide; // 0x460(0x08)
	struct UWidgetAnimation* LastAnimation; // 0x468(0x08)
	struct UWidgetAnimation* Anime_info_Win_out; // 0x470(0x08)
	struct UWidgetAnimation* Anime_info_Win_in; // 0x478(0x08)
	struct UWidgetAnimation* Anime_info_Win; // 0x480(0x08)
	struct UWidgetAnimation* Anime_out; // 0x488(0x08)
	struct UWidgetAnimation* Anime_in; // 0x490(0x08)
	struct UWidgetAnimation* Anime_default_none; // 0x498(0x08)
	struct UWidgetAnimation* Anime_default_; // 0x4a0(0x08)

	void UpdateStateSaveLoad(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UISaveLoad.UpdateStateSaveLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x134f1d0
	void Start(enum class ESaveLoad modeType, enum class ESaveLoadSubType subModeType); // Function BattlePrototype.UISaveLoad.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x134ee80
	void SetTitleManager(struct ARSTitleManager* ptitlemanager); // Function BattlePrototype.UISaveLoad.SetTitleManager // (Final|Native|Public|BlueprintCallable) // @ game+0x134ee00
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UISaveLoad.ListUpdateElement // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UISaveLoad.ListUnFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UISaveLoad.ListUnFocus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UISaveLoad.ListFocusMouse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UISaveLoad.ListFocus // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	bool isSavedError(); // Function BattlePrototype.UISaveLoad.isSavedError // (Final|Native|Public|BlueprintCallable) // @ game+0xad4510
	bool isSaved(); // Function BattlePrototype.UISaveLoad.isSaved // (Final|Native|Public|BlueprintCallable) // @ game+0x134fb20
	bool isClearChara(int32_t slotNo, bool yuito, bool kasane); // Function BattlePrototype.UISaveLoad.isClearChara // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x134f910
	void InitializeSaveLoad(struct UUIGuide* uGuide, struct UUISaveLoadChoice* SaveLoadChoice); // Function BattlePrototype.UISaveLoad.InitializeSaveLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x134e5e0
	void InitializeList(struct UCanvasPanel* scrollBoxParent, struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UISaveLoad.InitializeList // (Final|Native|Public|BlueprintCallable) // @ game+0x134d950
	void InitializeAnime(struct UWidgetAnimation* info_Win_out, struct UWidgetAnimation* info_Win_in, struct UWidgetAnimation* info_Win, struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UISaveLoad.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x134d310
	enum class ESaveLoadSubType GetCurrentSubMode(); // Function BattlePrototype.UISaveLoad.GetCurrentSubMode // (Final|Native|Public|BlueprintCallable) // @ game+0x134d2f0
	enum class ESaveLoad GetCurrentMode(); // Function BattlePrototype.UISaveLoad.GetCurrentMode // (Final|Native|Public|BlueprintCallable) // @ game+0x134d2d0
};

// Class BattlePrototype.UISaveLoadChoice
// Size: 0x480 (Inherited: 0x388)
struct UUISaveLoadChoice : UUIBase {
	char pad_388[0xf8]; // 0x388(0xf8)

	void UpdateStateSaveLoadChoice(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UISaveLoadChoice.UpdateStateSaveLoadChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x134f2d0
	bool StartSaveLoadChoice(struct FString textTitle, struct FString TextMain, int32_t DefaultIndex, struct FString textIndex1, struct FString textIndex2, int32_t textNum, bool cancelable, int32_t CancelIndex); // Function BattlePrototype.UISaveLoadChoice.StartSaveLoadChoice // (Final|Native|Public|BlueprintCallable) // @ game+0x134ef40
	void InitializeText(struct UTextBlock* textTitle, struct UTextBlock* TextMain, struct UVerticalBox* textVerticalBox, struct UOverlay* guideOverlay); // Function BattlePrototype.UISaveLoadChoice.InitializeText // (Final|Native|Public|BlueprintCallable) // @ game+0x134e6a0
	void initializeSaveLoadSelectIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UTextBlock* textIndex); // Function BattlePrototype.UISaveLoadChoice.initializeSaveLoadSelectIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x134f6d0
	void InitializeAnime(struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UISaveLoadChoice.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x134d510
	bool getResultAct(); // Function BattlePrototype.UISaveLoadChoice.getResultAct // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x134d0b0
	int32_t getResult(); // Function BattlePrototype.UISaveLoadChoice.getResult // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x132d580
};

// Class BattlePrototype.UISaveLoadList
// Size: 0x588 (Inherited: 0x388)
struct UUISaveLoadList : UUIBase {
	enum class SaveLoadListType m_SaveLoadListType; // 0x388(0x01)
	char pad_389[0x1ff]; // 0x389(0x1ff)

	void UpdateStateSaveLoadList(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UISaveLoadList.UpdateStateSaveLoadList // (Final|Native|Public|BlueprintCallable) // @ game+0x134f3d0
	bool SetTitleFontOutLineColor(enum class SaveLoadListType dataType, struct UTextBlock* text); // Function BattlePrototype.UISaveLoadList.SetTitleFontOutLineColor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetScreenTexture(int32_t ImageType, struct UTexture2D* ImageData); // Function BattlePrototype.UISaveLoadList.SetScreenTexture // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	bool SetLevelFontColor(bool LevelMax); // Function BattlePrototype.UISaveLoadList.SetLevelFontColor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetFontColor(enum class SaveLoadListClearType dataType, struct UTextBlock* text); // Function BattlePrototype.UISaveLoadList.SetFontColor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool SetDataFontOutLineColor(enum class SaveLoadListType dataType, struct UTextBlock* text); // Function BattlePrototype.UISaveLoadList.SetDataFontOutLineColor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeNoDataListAnime(struct UWidgetAnimation* Decide, struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* select, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UISaveLoadList.InitializeNoDataListAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x134e420
	void InitializeListTextTime(struct UTextBlock* textDayTime, struct UTextBlock* textDayhh, struct UTextBlock* textDaymm, struct UTextBlock* textDayss, struct UTextBlock* textTimehh, struct UTextBlock* textTimemm, struct UTextBlock* textTimess); // Function BattlePrototype.UISaveLoadList.InitializeListTextTime // (Final|Native|Public|BlueprintCallable) // @ game+0x134e220
	void InitializeListTextCommon(struct UImage* imageLine, struct UImage* imageClearIcon, struct UTextBlock* textDay1, struct UTextBlock* textDay2, struct UTextBlock* textTime1, struct UTextBlock* textTime2); // Function BattlePrototype.UISaveLoadList.InitializeListTextCommon // (Final|Native|Public|BlueprintCallable) // @ game+0x134e060
	void InitializeListText(struct UImage* imageScreen, struct UTextBlock* textChapter, struct UTextBlock* textChapterTitle, struct UTextBlock* textInfo, struct UTextBlock* textPlLv, struct UTextBlock* PlLvNum, struct UTextBlock* PlName, struct UTextBlock* textDayFixTime, struct UTextBlock* textPlEx, struct UImage* imagePlEx, struct UTextBlock* textSlash, struct UTextBlock* textSaveType); // Function BattlePrototype.UISaveLoadList.InitializeListText // (Final|Native|Public|BlueprintCallable) // @ game+0x134dd20
	void InitializeListClear(struct UOverlay* clear_01, struct UOverlay* clear_02, struct UTextBlock* textclear_01, struct UTextBlock* textclear_02); // Function BattlePrototype.UISaveLoadList.InitializeListClear // (Final|Native|Public|BlueprintCallable) // @ game+0x134dbd0
	void InitializeListAnime(struct UWidgetAnimation* Decide, struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* select, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UISaveLoadList.InitializeListAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x134da10
	void InitializeDataExLoadAnime(struct UWidgetAnimation* Decide, struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* select, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UISaveLoadList.InitializeDataExLoadAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x134d790
	void InitializeDataBreakListAnime(struct UWidgetAnimation* Decide, struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* select, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UISaveLoadList.InitializeDataBreakListAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x134d5d0
	enum class SaveLoadListType getSaveDataType(); // Function BattlePrototype.UISaveLoadList.getSaveDataType // (Final|Native|Public|BlueprintCallable) // @ game+0x134f6b0
};

// Class BattlePrototype.UIScarletLogo
// Size: 0x3e0 (Inherited: 0x388)
struct UUIScarletLogo : UUIBase {
	char pad_388[0x58]; // 0x388(0x58)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIScarletLogo.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1353a00
	void InitializeAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_, struct UWidgetAnimation* out_title, struct UWidgetAnimation* in_title, struct UWidgetAnimation* default_title); // Function BattlePrototype.UIScarletLogo.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x13522b0
};

// Class BattlePrototype.UIShop
// Size: 0x12348 (Inherited: 0x388)
struct UUIShop : UUIBase {
	struct FVector2D ListElementSize; // 0x388(0x08)
	float ListOffsetSize; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClass; // 0x398(0x08)
	struct AUIShop3DManager* BGModelClass; // 0x3a0(0x08)
	char pad_3A8[0x10]; // 0x3a8(0x10)
	struct AUIShop3DManager* BGModel; // 0x3b8(0x08)
	char pad_3C0[0x11f88]; // 0x3c0(0x11f88)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShop.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353b00
	void Start(int32_t shopId, int32_t tradeShopId, enum class EShopMode Mode); // Function BattlePrototype.UIShop.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1353900
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIShop.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIShop.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIShop.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIShop.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIShop.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animInfoWindow, struct UWidgetAnimation* animInfoWindowIn, struct UWidgetAnimation* animInfoWindowOut, struct UWidgetAnimation* animChange1, struct UWidgetAnimation* animChange2, struct UCanvasPanel* scrollBoxParent, struct UREDScrollBox* ScrollBox, struct UUIItemTrade* UIItemTrade, struct UUIShopGetContents* uiGetContents, struct UUIShopItemDetails* UIShopItemDetails, struct UOverlay* uiPaymentParent, struct UUIShopPayment* UIShopPayment, struct UUIShopChoice* uiChoice, struct UUIShopPartyStatus* uiPartyStatus, struct UUIGuide* UIGuide, struct UTextBlock* textTitle, struct UTextBlock* textIndexItem, struct UTextBlock* textIndexHaveNum, struct UTextBlock* textIndexPrice, struct UTextBlock* textIndexBuySellNum, struct UTextBlock* textHelp, struct UBorder* shopListColor, struct UBorder* shopGoldSet); // Function BattlePrototype.UIShop.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1352b60
	void InitializeModeTab(int32_t Mode, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UTextBlock* textBuySell); // Function BattlePrototype.UIShop.InitializeModeTab // (Final|Native|Protected|BlueprintCallable) // @ game+0x1352920
	void InitializeItemCategory(int32_t Category, struct UUIBase* Widget, struct UImage* imageSeparator, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animUnselect, struct UTextBlock* textCategory); // Function BattlePrototype.UIShop.InitializeItemCategory // (Final|Native|Protected|BlueprintCallable) // @ game+0x1352660
	void InitializeArrowLR(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision); // Function BattlePrototype.UIShop.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x1352470
};

// Class BattlePrototype.UIShop3DManager
// Size: 0x230 (Inherited: 0x230)
struct AUIShop3DManager : AActor {

	bool Start(); // Function BattlePrototype.UIShop3DManager.Start // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool End(); // Function BattlePrototype.UIShop3DManager.End // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIShopChoice
// Size: 0x480 (Inherited: 0x388)
struct UUIShopChoice : UUIBase {
	char pad_388[0xf8]; // 0x388(0xf8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopChoice.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353c00
	void startChoice2_BP(struct FName textWindowTitle, struct FName TextMain, struct FName textYes, struct FName textNo, int32_t DefaultCursor); // Function BattlePrototype.UIShopChoice.startChoice2_BP // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1354100
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animBuySellTransfer, struct UTextBlock* textWindowTitle, struct UTextBlock* TextMain, struct UVerticalBox* multiGroupParent, struct UVerticalBox* choiceSet, struct UOverlay* goldSet, struct UUIShopPayment* childShopPayment, struct UUIShopTransfer* childShopTransfer, struct UOverlay* guideSet); // Function BattlePrototype.UIShopChoice.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353240
	void initializeIndex(int32_t Index, struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UIShopChoice.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353ec0
};

// Class BattlePrototype.UIShopGetContents
// Size: 0x440 (Inherited: 0x388)
struct UUIShopGetContents : UUIBase {
	struct FVector2D ListElementSizeMain; // 0x388(0x08)
	float ListOffsetSizeMain; // 0x390(0x04)
	char pad_394[0x4]; // 0x394(0x04)
	struct UObject* ListIndexClassMain; // 0x398(0x08)
	struct UUIShopGetSubListIndex* m_pSubItemClass; // 0x3a0(0x08)
	char pad_3A8[0x40]; // 0x3a8(0x40)
	struct TArray<struct UUIShopGetSubListIndex*> m_uiSubItemList; // 0x3e8(0x10)
	char pad_3F8[0x38]; // 0x3f8(0x38)
	struct URSSaveGame* m_pSaveSystem; // 0x430(0x08)
	struct USaveLoadScreenParamManager* m_pSaveLoadSystemParamManager; // 0x438(0x08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopGetContents.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353d00
	void ListUpdateElement(int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIShopGetContents.ListUpdateElement // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1317040
	void ListUnFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIShopGetContents.ListUnFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316f50
	void ListUnFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIShopGetContents.ListUnFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316ec0
	void ListFocusMouse(int32_t isMouseScroll, int32_t Index, struct UUserWidget* Widget); // Function BattlePrototype.UIShopGetContents.ListFocusMouse // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316dd0
	void ListFocus(struct UUserWidget* Widget); // Function BattlePrototype.UIShopGetContents.ListFocus // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1316d40
	void InitializeThis(struct UREDScrollBox* scrollBoxMain, struct UREDScrollBoxSimple* scrollBoxSub, struct UUIShopGetSubListIndex* uiSubListIndex, struct UTextBlock* textListTitle, struct UImage* imageSubBaseLine, struct USpacer* spacerDescription); // Function BattlePrototype.UIShopGetContents.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353500
	void InitializeFromShop(struct UUIShop* UIShop, struct UUIShopChoice* uiChoice); // Function BattlePrototype.UIShopGetContents.InitializeFromShop // (Final|Native|Protected|BlueprintCallable) // @ game+0x134ec00
};

// Class BattlePrototype.UIShopGetListIndex
// Size: 0x3d8 (Inherited: 0x388)
struct UUIShopGetListIndex : UUIBase {
	char pad_388[0x50]; // 0x388(0x50)

	void UpdateStateThis(int32_t State, int32_t SubState); // Function BattlePrototype.UIShopGetListIndex.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1353e00
	void SetProgressIcon(int32_t Progress); // Function BattlePrototype.UIShopGetListIndex.SetProgressIcon // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animDefaultLock, struct UWidgetAnimation* animSelectLock, struct UWidgetAnimation* animSelectInLock, struct UImage* imageNewIcon, struct UTextBlock* textItemName); // Function BattlePrototype.UIShopGetListIndex.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x13536c0
};

// Class BattlePrototype.UIShopGetSubListIndex
// Size: 0x3d0 (Inherited: 0x388)
struct UUIShopGetSubListIndex : UUIBase {
	char pad_388[0x48]; // 0x388(0x48)

	void UpdateStateThis(int32_t State, int32_t SubState); // Function BattlePrototype.UIShopGetSubListIndex.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1359080
	void SetQuestIcon(); // Function BattlePrototype.UIShopGetSubListIndex.SetQuestIcon // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void SetItemIcon(struct FName ItemId); // Function BattlePrototype.UIShopGetSubListIndex.SetItemIcon // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1685580
	void SetBondsIcon(); // Function BattlePrototype.UIShopGetSubListIndex.SetBondsIcon // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefaultMax, struct UTextBlock* textItemName, struct UImage* imageCross, struct UTextBlock* textGetNum, struct UOverlay* overlayNumSet, struct UTextBlock* textNumSum, struct UTextBlock* textNumSlash, struct UTextBlock* textNumMax); // Function BattlePrototype.UIShopGetSubListIndex.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1356f00
};

// Class BattlePrototype.UIShopItemDetails
// Size: 0x3f8 (Inherited: 0x388)
struct UUIShopItemDetails : UUIBase {
	char pad_388[0x70]; // 0x388(0x70)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopItemDetails.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1359140
	bool SetItemInfo(struct FName ItemId, int32_t ItemIndex); // Function BattlePrototype.UIShopItemDetails.SetItemInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefaultMax, struct UWidgetAnimation* animDefaultNoSet, struct UImage* imageNewIcon, struct UImage* imageItemIcon, struct UImage* imageRarityFrame, struct UTextBlock* textItemName, struct UTextBlock* textParameter, struct UTextBlock* textItemDescription, struct UTextBlock* textHave, struct UTextBlock* textItemHaveNum, struct UTextBlock* textItemMaxNum, struct UTextBlock* textItemNumSlash); // Function BattlePrototype.UIShopItemDetails.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1357180
	void ClearItemInfo(); // Function BattlePrototype.UIShopItemDetails.ClearItemInfo // (Native|Event|Public|BlueprintEvent) // @ game+0x132b190
};

// Class BattlePrototype.UIShopListIndex
// Size: 0x470 (Inherited: 0x388)
struct UUIShopListIndex : UUIBase {
	struct FLinearColor ColorNumHave; // 0x388(0x10)
	struct FLinearColor ColorMaxNumHave; // 0x398(0x10)
	char pad_3A8[0xc8]; // 0x3a8(0xc8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopListIndex.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1359240
	bool SetItemInfo(struct FName ItemId, int32_t ItemIndex); // Function BattlePrototype.UIShopListIndex.SetItemInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UImage* imageNewIcon, struct UTextBlock* textItemName, struct UTextBlock* textNumHave, struct UTextBlock* textNumPrice, struct UTextBlock* textNumBuySell); // Function BattlePrototype.UIShopListIndex.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1357500
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UIShopListIndex.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x13567e0
};

// Class BattlePrototype.UIShopPartyStatus
// Size: 0x3e8 (Inherited: 0x388)
struct UUIShopPartyStatus : UUIBase {
	float DefaultPositionY; // 0x388(0x04)
	float TradePositionY; // 0x38c(0x04)
	char pad_390[0x58]; // 0x390(0x58)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopPartyStatus.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1359340
	void InitializeThis(struct UBorder* borderAllColor); // Function BattlePrototype.UIShopPartyStatus.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1357740
	void InitializeIcons(struct UUIShopPartyStatusIcon* uiIcon1, struct UUIShopPartyStatusIcon* uiIcon2, struct UUIShopPartyStatusIcon* uiIcon3, struct UUIShopPartyStatusIcon* uiIcon4, struct UUIShopPartyStatusIcon* uiIcon5, struct UUIShopPartyStatusIcon* uiIcon6, struct UUIShopPartyStatusIcon* uiIcon7, struct UUIShopPartyStatusIcon* uiIcon8, struct UUIShopPartyStatusIcon* uiIcon9, struct UUIShopPartyStatusIcon* uiIcon10); // Function BattlePrototype.UIShopPartyStatus.InitializeIcons // (Final|Native|Public|BlueprintCallable) // @ game+0x1331360
};

// Class BattlePrototype.UIShopPartyStatusIcon
// Size: 0x4a0 (Inherited: 0x388)
struct UUIShopPartyStatusIcon : UUIBase {
	struct FSlateColor ColorEqual; // 0x388(0x28)
	struct FSlateColor ColorUp; // 0x3b0(0x28)
	struct FSlateColor ColorDown; // 0x3d8(0x28)
	char pad_400[0xa0]; // 0x400(0xa0)

	void SetParameterIcon(int32_t Index, int32_t Icon); // Function BattlePrototype.UIShopPartyStatusIcon.SetParameterIcon // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetFaceIcon(enum class EPlayerID characterId); // Function BattlePrototype.UIShopPartyStatusIcon.SetFaceIcon // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEquipOrLoveIcon(enum class EEquipOrLoveIcon Type); // Function BattlePrototype.UIShopPartyStatusIcon.SetEquipOrLoveIcon // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDark, struct UWidgetAnimation* animDefaultMax, struct UWidgetAnimation* animDarkMax, struct UImage* imageEquip, struct UImage* imageDone, struct UOverlay* overlayParamL, struct UHorizonFlipbookWidget* arrowL_UP, struct UHorizonFlipbookWidget* arrowL_DOWN, struct UTextBlock* textNumL, struct UOverlay* overlayParamR, struct UHorizonFlipbookWidget* arrowR_UP, struct UHorizonFlipbookWidget* arrowR_DOWN, struct UTextBlock* textNumR, struct UOverlay* overlayBondSet, struct UTextBlock* textBondNum, struct UPaperFlipbook* pfArrowUP, struct UPaperFlipbook* pfArrowDown); // Function BattlePrototype.UIShopPartyStatusIcon.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13577c0
};

// Class BattlePrototype.UIShopPayment
// Size: 0x3d0 (Inherited: 0x388)
struct UUIShopPayment : UUIBase {
	char pad_388[0x48]; // 0x388(0x48)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopPayment.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d420
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animDefault3, struct UTextBlock* textMoneyInHand, struct UTextBlock* textMoneyAfter, struct UTextBlock* textSubtotal, struct UTextBlock* textNumMoneyInHand, struct UTextBlock* textNumMoneyAfter, struct UTextBlock* textNumSubtotal); // Function BattlePrototype.UIShopPayment.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1357cd0
};

// Class BattlePrototype.UIShopTransfer
// Size: 0x3b8 (Inherited: 0x388)
struct UUIShopTransfer : UUIBase {
	char pad_388[0x30]; // 0x388(0x30)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIShopTransfer.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x132d420
	void InitializeThis(struct UWidgetAnimation* animBuy, struct UWidgetAnimation* animSell, struct UWidgetAnimation* animTrade, struct UTextBlock* textTransfer1, struct UTextBlock* textTransfer2); // Function BattlePrototype.UIShopTransfer.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1357f50
};

// Class BattlePrototype.UITarget
// Size: 0x3d8 (Inherited: 0x388)
struct UUITarget : UUIBase {
	char pad_388[0x50]; // 0x388(0x50)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITarget.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1359440
	void SetSize(float Size); // Function BattlePrototype.UITarget.SetSize // (Final|Native|Public|BlueprintCallable) // @ game+0x1358e20
	void SetFlagDisturb(bool isDisturb); // Function BattlePrototype.UITarget.SetFlagDisturb // (Final|Native|Public|BlueprintCallable) // @ game+0x1358da0
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animChange, struct UWidgetAnimation* animOut2, struct USizeBox* sizeBox0, struct USizeBox* sizeBoxAdd); // Function BattlePrototype.UITarget.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13580e0
	void Change(); // Function BattlePrototype.UITarget.Change // (Final|Native|Public|BlueprintCallable) // @ game+0x1356560
};

// Class BattlePrototype.UITargetBrain
// Size: 0x410 (Inherited: 0x388)
struct UUITargetBrain : UUIBase {
	char pad_388[0x88]; // 0x388(0x88)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITargetBrain.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1359540
	bool UpdateButton(); // Function BattlePrototype.UITargetBrain.UpdateButton // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetEnable(bool IsEnable); // Function BattlePrototype.UITargetBrain.SetEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1358d10
	bool IsEnableDecide(); // Function BattlePrototype.UITargetBrain.IsEnableDecide // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1358ce0
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animDefault2, struct UWidgetAnimation* animIn2, struct UWidgetAnimation* animOut2, struct UWidgetAnimation* animChange1_3, struct UWidgetAnimation* animChange2_2, struct UBorder* borderButtonSet); // Function BattlePrototype.UITargetBrain.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1358320
	void Decide(); // Function BattlePrototype.UITargetBrain.Decide // (Final|Native|Public|BlueprintCallable) // @ game+0x13565b0
	void CloseThis(); // Function BattlePrototype.UITargetBrain.CloseThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1356580
};

// Class BattlePrototype.UITips
// Size: 0x440 (Inherited: 0x388)
struct UUITips : UUIBase {
	char pad_388[0xb8]; // 0x388(0xb8)

	void UpdateStateTips(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITips.UpdateStateTips // (Final|Native|Public|BlueprintCallable) // @ game+0x1359a40
	void Start(enum class EHelpTutorial helpID, bool notPauseControll, bool notCloseOfPause, bool IsFade); // Function BattlePrototype.UITips.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1358ea0
	void InitializeTips(struct UUIGuide* uGuide, struct UTextBlock* textGuide, struct UUITutoTipsParts* ututotipsdata, struct UImage* imageFade); // Function BattlePrototype.UITips.InitializeTips // (Final|Native|Public|BlueprintCallable) // @ game+0x1358b90
	void InitializeArrow(int32_t Index, struct UUIHelpParts* arrow); // Function BattlePrototype.UITips.InitializeArrow // (Final|Native|Public|BlueprintCallable) // @ game+0x1356720
	void InitializeAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UITips.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x13565d0
};

// Class BattlePrototype.UITitleCrossSave
// Size: 0x438 (Inherited: 0x388)
struct UUITitleCrossSave : UUIBase {
	char pad_388[0xb0]; // 0x388(0xb0)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleCrossSave.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1359640
	void Start(struct ARSTitleManager* TitleManager); // Function BattlePrototype.UITitleCrossSave.Start // (Final|Native|Protected|BlueprintCallable) // @ game+0x1359000
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UREDTextBlock* textTitle, struct UREDTextBlock* textHelp, struct UUIGuide* UIGuide, struct UUITitleCrossSave_UpdatingWidget* uiUpdatingWidget, struct UUITitleCrossSave_ConfirmWindow* uiConfirmWindow); // Function BattlePrototype.UITitleCrossSave.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1358620
};

// Class BattlePrototype.UITitleCrossSave_ConfirmWindow
// Size: 0x3c8 (Inherited: 0x388)
struct UUITitleCrossSave_ConfirmWindow : UUIBase {
	char pad_388[0x40]; // 0x388(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleCrossSave_ConfirmWindow.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1359740
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UREDTextBlock* TextMain, struct UREDScrollBoxSimple* ScrollBox, struct UUITitleCrossSave_ConfirmWindow_Parts_Select2* uiSelect2); // Function BattlePrototype.UITitleCrossSave_ConfirmWindow.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1358860
};

// Class BattlePrototype.UITitleCrossSave_ConfirmWindow_Parts_Select2
// Size: 0x4e0 (Inherited: 0x388)
struct UUITitleCrossSave_ConfirmWindow_Parts_Select2 : UUIBase {
	char pad_388[0x158]; // 0x388(0x158)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleCrossSave_ConfirmWindow_Parts_Select2.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1359840
	void InitializeThis(); // Function BattlePrototype.UITitleCrossSave_ConfirmWindow_Parts_Select2.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1358a20
	void initializeIndex(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animEnable, struct UWidgetAnimation* animEnableIn, struct UWidgetAnimation* animEnableOut, struct UREDTextBlock* textIndex); // Function BattlePrototype.UITitleCrossSave_ConfirmWindow_Parts_Select2.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x1356c00
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UITitleCrossSave_ConfirmWindow_Parts_Select2.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x13569f0
};

// Class BattlePrototype.UITitleCrossSave_UpdatingWidget
// Size: 0x3b8 (Inherited: 0x388)
struct UUITitleCrossSave_UpdatingWidget : UUIBase {
	char pad_388[0x30]; // 0x388(0x30)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleCrossSave_UpdatingWidget.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1359940
	void UpdateLoadingMaterial(); // Function BattlePrototype.UITitleCrossSave_UpdatingWidget.UpdateLoadingMaterial // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void SetLoadingColor(struct FLinearColor Color); // Function BattlePrototype.UITitleCrossSave_UpdatingWidget.SetLoadingColor // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animNoneDefault); // Function BattlePrototype.UITitleCrossSave_UpdatingWidget.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1358a40
};

// Class BattlePrototype.UITitleFirstConfigBrightness
// Size: 0x4a0 (Inherited: 0x388)
struct UUITitleFirstConfigBrightness : UUIBase {
	int32_t MinX; // 0x388(0x04)
	int32_t MaxX; // 0x38c(0x04)
	char pad_390[0x110]; // 0x390(0x110)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstConfigBrightness.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135da60
	bool isBack(); // Function BattlePrototype.UITitleFirstConfigBrightness.isBack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x135eae0
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UImage* imageSlider, struct UTextBlock* textTopDescription, struct UTextBlock* textBottomDescription, struct UREDOverlay* gauge_set, struct USpacer* guideSpacer); // Function BattlePrototype.UITitleFirstConfigBrightness.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135c3b0
	void initializeIndex(struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UITitleFirstConfigBrightness.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x135e4e0
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UITitleFirstConfigBrightness.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x1320530
	void applyBrightness(float fValue); // Function BattlePrototype.UITitleFirstConfigBrightness.applyBrightness // (Event|Protected|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UITitleFirstConfigDifficulty
// Size: 0x488 (Inherited: 0x388)
struct UUITitleFirstConfigDifficulty : UUIBase {
	char pad_388[0xf0]; // 0x388(0xf0)
	struct ARSTitleManager* TitleManager; // 0x478(0x08)
	char pad_480[0x8]; // 0x480(0x08)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstConfigDifficulty.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135db60
	void SetTitleManager(struct ARSTitleManager* TitleManager); // Function BattlePrototype.UITitleFirstConfigDifficulty.SetTitleManager // (Final|Native|Public|BlueprintCallable) // @ game+0x135eb60
	bool isBack(); // Function BattlePrototype.UITitleFirstConfigDifficulty.isBack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x135eb00
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textDescription, struct UTextBlock* textDifficulty, struct USpacer* guideSpacer); // Function BattlePrototype.UITitleFirstConfigDifficulty.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135c5f0
	void initializeIndex(struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UITitleFirstConfigDifficulty.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x135e6e0
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UITitleFirstConfigDifficulty.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x135b980
};

// Class BattlePrototype.UITitleFirstConfigVoiceLanguage
// Size: 0x480 (Inherited: 0x388)
struct UUITitleFirstConfigVoiceLanguage : UUIBase {
	char pad_388[0xf8]; // 0x388(0xf8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstConfigVoiceLanguage.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135dc60
	bool isBack(); // Function BattlePrototype.UITitleFirstConfigVoiceLanguage.isBack // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x135eb20
	void InitializeThis(struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textDescription, struct UTextBlock* textVoiceLanguage, struct USpacer* guideSpacer); // Function BattlePrototype.UITitleFirstConfigVoiceLanguage.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135c7b0
	void initializeIndex(struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UITitleFirstConfigVoiceLanguage.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x135e6e0
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UITitleFirstConfigVoiceLanguage.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x135b980
};

// Class BattlePrototype.UITitleFirstConfirm
// Size: 0x3e8 (Inherited: 0x388)
struct UUITitleFirstConfirm : UUIBase {
	char pad_388[0x60]; // 0x388(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstConfirm.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135dd60
	void startAnalytics(); // Function BattlePrototype.UITitleFirstConfirm.startAnalytics // (Final|Native|Public|BlueprintCallable) // @ game+0x135ece0
	void SetTitleManager(struct ARSTitleManager* TitleManager); // Function BattlePrototype.UITitleFirstConfirm.SetTitleManager // (Final|Native|Public|BlueprintCallable) // @ game+0x135ebe0
	void SetCeBank(bool Value); // Function BattlePrototype.UITitleFirstConfirm.SetCeBank // (Event|Protected|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UUITitleFirstConfirmChildImage* childImage1, struct UUITitleFirstConfirmChildImage* childImage2, struct UUITitleFirstConfirmChildText* childText, struct UUIGuide* UIGuide); // Function BattlePrototype.UITitleFirstConfirm.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135c970
};

// Class BattlePrototype.UITitleFirstConfirmChildBase
// Size: 0x3a0 (Inherited: 0x388)
struct UUITitleFirstConfirmChildBase : UUIBase {
	char pad_388[0x10]; // 0x388(0x10)
	struct ARSTitleManager* TitleManager; // 0x398(0x08)
};

// Class BattlePrototype.UITitleFirstConfirmChildImage
// Size: 0x400 (Inherited: 0x3a0)
struct UUITitleFirstConfirmChildImage : UUITitleFirstConfirmChildBase {
	char pad_3A0[0x60]; // 0x3a0(0x60)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstConfirmChildImage.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135de60
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UImage* imageEulaFull_2, struct UImage* imageEulaFull_3, struct UImage* imageEulaHalf_2, struct UImage* imageEulaHalf_3, struct UImage* imagePrivacyPolicy, struct UREDTextBlock* textTitle, struct UREDTextBlock* textHelp, struct UREDScrollBoxSimple* ScrollBox, struct UUITitleFirstConfirmSelect2* uiSelect2); // Function BattlePrototype.UITitleFirstConfirmChildImage.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135cb70
};

// Class BattlePrototype.UITitleFirstConfirmChildText
// Size: 0x3e0 (Inherited: 0x3a0)
struct UUITitleFirstConfirmChildText : UUITitleFirstConfirmChildBase {
	char pad_3A0[0x40]; // 0x3a0(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstConfirmChildText.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135df60
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UREDTextBlock* TextMain, struct UREDTextBlock* textTitle, struct UREDTextBlock* textHelp, struct UREDScrollBoxSimple* ScrollBox, struct UUITitleFirstConfirmSelect2* uiSelect2); // Function BattlePrototype.UITitleFirstConfirmChildText.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135ceb0
};

// Class BattlePrototype.UITitleFirstConfirmSelect2
// Size: 0x4b8 (Inherited: 0x388)
struct UUITitleFirstConfirmSelect2 : UUIBase {
	char pad_388[0x130]; // 0x388(0x130)

	void UpdateStateThis(int32_t State); // Function BattlePrototype.UITitleFirstConfirmSelect2.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135e060
	void InitializeThis(); // Function BattlePrototype.UITitleFirstConfirmSelect2.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135d0f0
	void initializeIndex(int32_t Index, struct UUserWidget* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UWidgetAnimation* animEnable, struct UWidgetAnimation* animEnableIn, struct UWidgetAnimation* animEnableOut, struct UREDTextBlock* textIndex); // Function BattlePrototype.UITitleFirstConfirmSelect2.initializeIndex // (Final|Native|Protected|BlueprintCallable) // @ game+0x135bfb0
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UITitleFirstConfirmSelect2.InitializeArrowLR // (Final|Native|Protected|BlueprintCallable) // @ game+0x135bb90
};

// Class BattlePrototype.UITitleFirstLangaugeChange
// Size: 0x480 (Inherited: 0x388)
struct UUITitleFirstLangaugeChange : UUIBase {
	char pad_388[0xf8]; // 0x388(0xf8)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleFirstLangaugeChange.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x135e0e0
	void SetTitleManager(struct ARSTitleManager* TitleManager); // Function BattlePrototype.UITitleFirstLangaugeChange.SetTitleManager // (Final|Native|Public|BlueprintCallable) // @ game+0x135ec60
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UREDTextBlock* TextMain, struct UREDTextBlock* textLangauge); // Function BattlePrototype.UITitleFirstLangaugeChange.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x135d110
	void initializeIndex(struct UUIBase* Widget, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animSelect, struct UWidgetAnimation* animSelectIn, struct UWidgetAnimation* animSelectOut, struct UWidgetAnimation* animDecision, struct UREDTextBlock* textIndex); // Function BattlePrototype.UITitleFirstLangaugeChange.initializeIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x135e8e0
	void InitializeArrowLR(bool IsRight, struct UREDHorizonFlipbookWidget* Widget, struct UPaperFlipbook* defaultPF, struct UPaperFlipbook* selectPF, struct UPaperFlipbook* selectInPF, struct UPaperFlipbook* selectOutPF, struct UPaperFlipbook* decisionPF); // Function BattlePrototype.UITitleFirstLangaugeChange.InitializeArrowLR // (Final|Native|Public|BlueprintCallable) // @ game+0x135bda0
};

// Class BattlePrototype.UITitleLicense
// Size: 0x3c8 (Inherited: 0x388)
struct UUITitleLicense : UUIBase {
	char pad_388[0x40]; // 0x388(0x40)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleLicense.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135e1e0
	void Start(); // Function BattlePrototype.UITitleLicense.Start // (Final|Native|Protected|BlueprintCallable) // @ game+0x135d9b0
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UREDTextBlock* textTitle, struct UREDTextBlock* textHelp, struct UREDScrollBoxSimple* ScrollBox, struct UUIGuide* UIGuide); // Function BattlePrototype.UITitleLicense.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x135d2a0
};

// Class BattlePrototype.UITitleLogo
// Size: 0x448 (Inherited: 0x388)
struct UUITitleLogo : UUIBase {
	char pad_388[0x28]; // 0x388(0x28)
	struct UTexture* TextureLogo[0x6]; // 0x3b0(0x30)
	struct UUIGamerTag* m_UserTag; // 0x3e0(0x08)
	char pad_3E8[0x18]; // 0x3e8(0x18)
	struct ARSHUDBase* m_pRSHudBase; // 0x400(0x08)
	struct URSSaveGame* m_pSaveGameSystem; // 0x408(0x08)
	struct USaveLoadScreenParamManager* m_pSaveLoadSystemParamManager; // 0x410(0x08)
	char pad_418[0x30]; // 0x418(0x30)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleLogo.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x135e2e0
	void SetUserTagWidget(struct UUIGamerTag* UserTag); // Function BattlePrototype.UITitleLogo.SetUserTagWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x135d930
	void InitializeThis(struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UWidgetAnimation* animDefault, struct UImage* imageLogo); // Function BattlePrototype.UITitleLogo.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x135d4a0
};

// Class BattlePrototype.UITitleMenu
// Size: 0x4d0 (Inherited: 0x388)
struct UUITitleMenu : UUIBase {
	struct FDelegate m_OnEventCursorSelectStart; // 0x388(0x10)
	struct UUIGamerTag* TitleUserTag; // 0x398(0x08)
	char pad_3A0[0x20]; // 0x3a0(0x20)
	struct UUserParamManager* UserParamManager; // 0x3c0(0x08)
	struct UDatabaseManager* DatabaseManager; // 0x3c8(0x08)
	struct ARSTitleManager* m_pTitleManager; // 0x3d0(0x08)
	struct AMessageHudManager* MessageHudManager; // 0x3d8(0x08)
	char pad_3E0[0x78]; // 0x3e0(0x78)
	struct APlayerController* m_pPlayerController; // 0x458(0x08)
	struct ARSHUDBase* m_pHudBase; // 0x460(0x08)
	char pad_468[0x68]; // 0x468(0x68)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleMenu.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x135e3e0
	void Start(bool isStartMenu); // Function BattlePrototype.UITitleMenu.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x135d9d0
	void SetTitleManager(struct ARSTitleManager* ptitlemanager); // Function BattlePrototype.UITitleMenu.SetTitleManager // (Final|Native|Public|BlueprintCallable) // @ game+0x135d8b0
	void SetTitleLogoWidget(struct UUIScarletLogo* titlelogowidget); // Function BattlePrototype.UITitleMenu.SetTitleLogoWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x135d830
	void OpenSelectMenu(); // Function BattlePrototype.UITitleMenu.OpenSelectMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x135d800
	void OpenLogoBP(); // Function BattlePrototype.UITitleMenu.OpenLogoBP // (Final|Native|Public|BlueprintCallable) // @ game+0x135d7e0
	void OpenFirstPressMenu(); // Function BattlePrototype.UITitleMenu.OpenFirstPressMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x135d7b0
	bool isFirstDecideCheck(); // Function BattlePrototype.UITitleMenu.isFirstDecideCheck // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x135eb40
	void InitializeXboxOne(struct UTextBlock* UserName); // Function BattlePrototype.UITitleMenu.InitializeXboxOne // (Final|Native|Public|BlueprintCallable) // @ game+0x135d730
	void InitializeTitleParts(int32_t Index, struct UUITitleMenuParts* titleparts); // Function BattlePrototype.UITitleMenu.InitializeTitleParts // (Final|Native|Public|BlueprintCallable) // @ game+0x135d670
	void InitializeTitleLogo(struct UImage* titlelogoimage); // Function BattlePrototype.UITitleMenu.InitializeTitleLogo // (Final|Native|Public|BlueprintCallable) // @ game+0x135d5f0
	void InitializeText(struct UTextBlock* pressstart, struct UTextBlock* titlever, struct UTextBlock* titlecopyright); // Function BattlePrototype.UITitleMenu.InitializeText // (Final|Native|Public|BlueprintCallable) // @ game+0x135c2b0
	void InitializeAnime(struct UWidgetAnimation* _press_start_out_first, struct UWidgetAnimation* _press_start_in_first, struct UWidgetAnimation* _press_start_default_first, struct UWidgetAnimation* _press_start_out, struct UWidgetAnimation* _press_start_in, struct UWidgetAnimation* _press_start_default_none, struct UWidgetAnimation* _press_start_default_, struct UWidgetAnimation* _start_menu_in, struct UWidgetAnimation* _start_menu_default, struct UWidgetAnimation* _start_menu_decision, struct UWidgetAnimation* _change_press_start, struct UWidgetAnimation* _start_menu_select_in); // Function BattlePrototype.UITitleMenu.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x135b640
	bool GetMoviePlayFlag(); // Function BattlePrototype.UITitleMenu.GetMoviePlayFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x135b620
};

// Class BattlePrototype.UITitleMenuParts
// Size: 0x418 (Inherited: 0x388)
struct UUITitleMenuParts : UUIBase {
	char pad_388[0x90]; // 0x388(0x90)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITitleMenuParts.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13628d0
	void InitializeUnSelectAnime(struct UWidgetAnimation* _cursor_menu_out, struct UWidgetAnimation* _cursor_menu_in, struct UWidgetAnimation* _cursor_menu_default_none, struct UWidgetAnimation* _cursor_menu_default_, struct UWidgetAnimation* _cursor_menu_select, struct UWidgetAnimation* _cursor_menu_decision); // Function BattlePrototype.UITitleMenuParts.InitializeUnSelectAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1362410
	void InitializeText(struct UTextBlock* partsdatatext); // Function BattlePrototype.UITitleMenuParts.InitializeText // (Final|Native|Public|BlueprintCallable) // @ game+0x131d330
	void InitializeNormalAnime(struct UWidgetAnimation* _cursor_menu_out, struct UWidgetAnimation* _cursor_menu_in, struct UWidgetAnimation* _cursor_menu_default_none, struct UWidgetAnimation* _cursor_menu_default_, struct UWidgetAnimation* _cursor_menu_select, struct UWidgetAnimation* _cursor_menu_decision); // Function BattlePrototype.UITitleMenuParts.InitializeNormalAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1360e40
};

// Class BattlePrototype.UITownName
// Size: 0x3e0 (Inherited: 0x388)
struct UUITownName : UUIBase {
	float DrawSecond; // 0x388(0x04)
	char pad_38C[0x54]; // 0x38c(0x54)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITownName.UpdateStateThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13629d0
	void Start(int32_t LocationId); // Function BattlePrototype.UITownName.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x13627b0
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UTextBlock* textLocationName, struct UTextBlock* textLocationName2, struct UTextBlock* textLocationName3, struct UTextBlock* textLocationName4); // Function BattlePrototype.UITownName.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1361190
};

// Class BattlePrototype.UITutoOperation
// Size: 0x4d0 (Inherited: 0x388)
struct UUITutoOperation : UUIBase {
	struct FVector2D baseOffset; // 0x388(0x08)
	struct UUITutoOperationParts* m_pClassSelect; // 0x390(0x08)
	struct UVerticalBox* m_pPartsParent; // 0x398(0x08)
	struct AActor* OwnerActor; // 0x3a0(0x08)
	struct FVector worldOffset; // 0x3a8(0x0c)
	char pad_3B4[0x114]; // 0x3b4(0x114)
	struct ARSHUDBase* m_pHudBase; // 0x4c8(0x08)

	void UpdateStateTutoOperation(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UITutoOperation.UpdateStateTutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x1362ad0
	void Start(struct FName helpID); // Function BattlePrototype.UITutoOperation.Start // (Final|Native|Public|BlueprintCallable) // @ game+0x1362830
	void OperationEnd(); // Function BattlePrototype.UITutoOperation.OperationEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1362680
	void InitializeTutoOperationList(int32_t ListIndex, struct UOverlay* overlayData, struct UUITutoOperationParts* textRight, struct UUITutoOperationParts* textleft); // Function BattlePrototype.UITutoOperation.InitializeTutoOperationList // (Final|Native|Public|BlueprintCallable) // @ game+0x13622d0
	void InitializeTutoOperation(struct UREDRetainerBox* REDRetainerBox, struct UImage* boximage); // Function BattlePrototype.UITutoOperation.InitializeTutoOperation // (Final|Native|Public|BlueprintCallable) // @ game+0x1362210
	void InitializeAnime(struct UWidgetAnimation* Out, struct UWidgetAnimation* In, struct UWidgetAnimation* default_none, struct UWidgetAnimation* default_); // Function BattlePrototype.UITutoOperation.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1360a30
};

// Class BattlePrototype.UITutoOperationParts
// Size: 0x3b8 (Inherited: 0x388)
struct UUITutoOperationParts : UUIBase {
	struct FName PathData; // 0x388(0x08)
	enum class EHelpImageType ImageType; // 0x390(0x01)
	char pad_391[0x27]; // 0x391(0x27)

	void setOperationRightText(struct FString RightText); // Function BattlePrototype.UITutoOperationParts.setOperationRightText // (Final|Native|Public|BlueprintCallable) // @ game+0x11c14b0
	void setOperationLeftText(struct FString LeftIconString); // Function BattlePrototype.UITutoOperationParts.setOperationLeftText // (Final|Native|Public|BlueprintCallable) // @ game+0x1362d30
	void InitializeRightText(struct UTextBlock* textRight); // Function BattlePrototype.UITutoOperationParts.InitializeRightText // (Final|Native|Public|BlueprintCallable) // @ game+0x125e820
	void InitializeLeftText(struct UImage* imageLeft, struct UTextBlock* textleft, struct USpacer* Spacer); // Function BattlePrototype.UITutoOperationParts.InitializeLeftText // (Final|Native|Public|BlueprintCallable) // @ game+0x1360d40
};

// Class BattlePrototype.UITutoTipsParts
// Size: 0x450 (Inherited: 0x388)
struct UUITutoTipsParts : UUIBase {
	bool bMovieStopFlag; // 0x388(0x01)
	enum class EHelpImageType ImageType; // 0x389(0x01)
	char pad_38A[0x6]; // 0x38a(0x06)
	struct FString pathname; // 0x390(0x10)
	bool Load; // 0x3a0(0x01)
	bool Failure; // 0x3a1(0x01)
	char pad_3A2[0x2]; // 0x3a2(0x02)
	struct FName PathData; // 0x3a4(0x08)
	enum class TutoMoviePlayType PlaySelect; // 0x3ac(0x01)
	char pad_3AD[0x53]; // 0x3ad(0x53)
	struct TMap<struct UTexture2D*, int32_t> ReleaseTipsTextures; // 0x400(0x50)

	void TextureRelease(); // Function BattlePrototype.UITutoTipsParts.TextureRelease // (Final|Native|Public|BlueprintCallable) // @ game+0x13628b0
	void StopMovieForce(); // Function BattlePrototype.UITutoTipsParts.StopMovieForce // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void SetVisiblePageUI(bool Flag); // Function BattlePrototype.UITutoTipsParts.SetVisiblePageUI // (Final|Native|Public|BlueprintCallable) // @ game+0x1362720
	void setPageText(struct FString MainText, struct FString TitleText, int32_t pageNo, int32_t pageMax); // Function BattlePrototype.UITutoTipsParts.setPageText // (Final|Native|Public|BlueprintCallable) // @ game+0x1362e10
	void setImageType(struct FString pathname, enum class EHelpImageType ImageType); // Function BattlePrototype.UITutoTipsParts.setImageType // (Final|Native|Public|BlueprintCallable) // @ game+0x1362c10
	struct UTexture2D* LoadTipsTexture(struct FString Path); // Function BattlePrototype.UITutoTipsParts.LoadTipsTexture // (Final|Native|Public|BlueprintCallable) // @ game+0x13625d0
	bool isPlayMovie(); // Function BattlePrototype.UITutoTipsParts.isPlayMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isMovieStop(); // Function BattlePrototype.UITutoTipsParts.isMovieStop // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	bool isLoadFailure(); // Function BattlePrototype.UITutoTipsParts.isLoadFailure // (Final|Native|Public|BlueprintCallable) // @ game+0x1362bf0
	bool isLoad(); // Function BattlePrototype.UITutoTipsParts.isLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x1362bd0
	void InitializeText(struct UTextBlock* textTitle, struct UTextBlock* TextMain, struct UTextBlock* textPage1, struct UTextBlock* textPage2, struct UTextBlock* textSlash); // Function BattlePrototype.UITutoTipsParts.InitializeText // (Final|Native|Public|BlueprintCallable) // @ game+0x1361000
	bool initializeMovie(); // Function BattlePrototype.UITutoTipsParts.initializeMovie // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
	void InitializeArrow(int32_t Index, struct UUIHelpParts* arrow); // Function BattlePrototype.UITutoTipsParts.InitializeArrow // (Final|Native|Public|BlueprintCallable) // @ game+0x1360c80
	void InitializeAnime(struct UWidgetAnimation* default1_, struct UWidgetAnimation* default2_, struct UWidgetAnimation* default_none); // Function BattlePrototype.UITutoTipsParts.InitializeAnime // (Final|Native|Public|BlueprintCallable) // @ game+0x1360b80
};

// Class BattlePrototype.UIVitalityEN01
// Size: 0x418 (Inherited: 0x3e8)
struct UUIVitalityEN01 : UUIHealthControl {
	char pad_3E8[0x30]; // 0x3e8(0x30)

	void SetLevel(int32_t Level); // Function BattlePrototype.UIVitalityEN01.SetLevel // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UImage* imageIcon1, struct UImage* imageIcon2, struct UImage* imageIcon3, struct UImage* imageIcon4, struct UImage* imageIcon5, struct UTextBlock* textBossName, struct UImage* imageBarNormal, struct UImage* imageBarOverride, struct UImage* imageBarAdd); // Function BattlePrototype.UIVitalityEN01.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x13613d0
};

// Class BattlePrototype.UIVitalityEN02
// Size: 0x448 (Inherited: 0x3e8)
struct UUIVitalityEN02 : UUIHealthControl {
	char pad_3E8[0x48]; // 0x3e8(0x48)
	struct UUIBrainCrashGauge* BrainCrashGauge; // 0x430(0x08)
	bool BrainCrashGaugeDrawFlag; // 0x438(0x01)
	char pad_439[0xf]; // 0x439(0x0f)

	void SetSubQuestTarget(struct FName Name); // Function BattlePrototype.UIVitalityEN02.SetSubQuestTarget // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void SetLevel(int32_t Level); // Function BattlePrototype.UIVitalityEN02.SetLevel // (Event|Public|BlueprintEvent) // @ game+0x1685580
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault01, struct UWidgetAnimation* animDefault02, struct UWidgetAnimation* animDefault03, struct UWidgetAnimation* animDefault04, struct UWidgetAnimation* animDefault05, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UImage* imageIcon1, struct UImage* imageIcon2, struct UImage* imageIcon3, struct UImage* imageIcon4, struct UImage* imageIcon5, struct UImage* imageBarNormal, struct UImage* imageBarOverride, struct UImage* imageBarAdd, struct UTextBlock* textEnemyName); // Function BattlePrototype.UIVitalityEN02.InitializeThis // (Final|Native|Public|BlueprintCallable) // @ game+0x1361750
};

// Class BattlePrototype.UIVitalityPLBase
// Size: 0x468 (Inherited: 0x3e8)
struct UUIVitalityPLBase : UUIHealthControl {
	char pad_3E8[0x30]; // 0x3e8(0x30)
	struct UCharacterVitalityDataAsset* WaveDesignerDataAsset; // 0x418(0x08)
	char pad_420[0x30]; // 0x420(0x30)
	float gaugeWidth_; // 0x450(0x04)
	char pad_454[0x4]; // 0x454(0x04)
	struct TArray<struct UMaterialInstanceDynamic*> gaugeMaterialInstDynamics_; // 0x458(0x10)

	void SetName(enum class EPlayerID CharaID); // Function BattlePrototype.UIVitalityPLBase.SetName // (Native|Public|BlueprintCallable) // @ game+0x13626a0
	void InitializeThisParam(struct UImage* imageIcon1, struct UImage* imageIcon2, struct UImage* imageIcon3, struct UImage* imageIcon4, struct UImage* imageIcon5, struct UTextBlock* textPlayerName, struct UTextBlock* _textMaxHP, struct UTextBlock* _textCurrentHP); // Function BattlePrototype.UIVitalityPLBase.InitializeThisParam // (Final|Native|Public|BlueprintCallable) // @ game+0x1361fd0
	void InitializeThis(struct UWidgetAnimation* animDefaultNone, struct UWidgetAnimation* animDefault, struct UWidgetAnimation* animIn, struct UWidgetAnimation* animOut, struct UImage* imageIcon1, struct UImage* imageIcon2, struct UImage* imageIcon3, struct UImage* imageIcon4, struct UImage* imageIcon5, struct UImage* imageBarNormal, struct UImage* imageBarOverride, struct UImage* imageBarAdd, struct UTextBlock* textPlayerName, struct UTextBlock* _textMaxHP, struct UTextBlock* _textCurrentHP); // Function BattlePrototype.UIVitalityPLBase.InitializeThis // (Native|Protected|BlueprintCallable) // @ game+0x1361bd0
	bool CreateDynamicGaugeMaterial(); // Function BattlePrototype.UIVitalityPLBase.CreateDynamicGaugeMaterial // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UIVitalityPL01
// Size: 0x468 (Inherited: 0x468)
struct UUIVitalityPL01 : UUIVitalityPLBase {
};

// Class BattlePrototype.UIVitalityPL02
// Size: 0x468 (Inherited: 0x468)
struct UUIVitalityPL02 : UUIVitalityPLBase {
};

// Class BattlePrototype.UIVitalityPL03
// Size: 0x468 (Inherited: 0x468)
struct UUIVitalityPL03 : UUIVitalityPLBase {
};

// Class BattlePrototype.CharacterVitalityDataAsset
// Size: 0x60 (Inherited: 0x30)
struct UCharacterVitalityDataAsset : UDataAsset {
	float OccurrenceSlowSpeed; // 0x30(0x04)
	float DelayTimeBeforeNextWave; // 0x34(0x04)
	float AllWaveDeleteTime; // 0x38(0x04)
	int32_t CenterWaveRandomRangeMin; // 0x3c(0x04)
	int32_t CenterWaveRandomRangeMax; // 0x40(0x04)
	int32_t SideWaveRandomRangeMin; // 0x44(0x04)
	int32_t SideWaveRandomRangeMax; // 0x48(0x04)
	int32_t CenterWaveRandomRightMoveRange; // 0x4c(0x04)
	int32_t CenterWaveRandomLeftMoveRange; // 0x50(0x04)
	int32_t SideWaveRandomMinMoveRange; // 0x54(0x04)
	int32_t SideWaveRandomMaxMoveRange; // 0x58(0x04)
	float SpecialGapBaseValue; // 0x5c(0x04)
};

// Class BattlePrototype.UIWishList
// Size: 0x3a0 (Inherited: 0x388)
struct UUIWishList : UUIBase {
	char pad_388[0x18]; // 0x388(0x18)

	void UpdateStateThis(int32_t State, int32_t SubState, float DeltaSeconds); // Function BattlePrototype.UIWishList.UpdateStateThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x1370f00
	void InitializeThis(struct UUIItemTrade* uiTrade, struct UUIShopItemDetails* uiItemDetail, struct UUIShopPartyStatus* uiPartyStatus); // Function BattlePrototype.UIWishList.InitializeThis // (Final|Native|Protected|BlueprintCallable) // @ game+0x136cee0
	void InitializeCommonParts(struct UTextBlock* textHelp, struct UUIGuide* uiKeyGuide); // Function BattlePrototype.UIWishList.InitializeCommonParts // (Final|Native|Protected|BlueprintCallable) // @ game+0x136cd70
	void CloseWishList(); // Function BattlePrototype.UIWishList.CloseWishList // (Final|Native|Public|BlueprintCallable) // @ game+0x1369960
};

// Class BattlePrototype.UIWorldMap
// Size: 0x398 (Inherited: 0x388)
struct UUIWorldMap : UUIBase {
	char pad_388[0x8]; // 0x388(0x08)
	bool bFlagOpenDirect; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)

	void updateWorldMapMouseFocus(); // Function BattlePrototype.UIWorldMap.updateWorldMapMouseFocus // (Final|Native|Public|BlueprintCallable) // @ game+0x134fc50
	void SetDebugUnlockFlag(bool UnlockFlag); // Function BattlePrototype.UIWorldMap.SetDebugUnlockFlag // (Event|Public|BlueprintEvent) // @ game+0x1685580
	bool IsDecide(); // Function BattlePrototype.UIWorldMap.IsDecide // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	bool IsChange(); // Function BattlePrototype.UIWorldMap.IsChange // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void InitializeScrollBox(struct UREDScrollBox* ScrollBox); // Function BattlePrototype.UIWorldMap.InitializeScrollBox // (Final|Native|Public|BlueprintCallable) // @ game+0x132c5e0
	void GetPortalName(int32_t Index, struct FName Name); // Function BattlePrototype.UIWorldMap.GetPortalName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void GetLocationName(int32_t Index, struct FString Name); // Function BattlePrototype.UIWorldMap.GetLocationName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void GetCurrentPortalName(struct FName Name); // Function BattlePrototype.UIWorldMap.GetCurrentPortalName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void GetCurrentPortalID(int32_t PortalID); // Function BattlePrototype.UIWorldMap.GetCurrentPortalID // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void GetCurrentLocationName(struct FString Name); // Function BattlePrototype.UIWorldMap.GetCurrentLocationName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void GetCurrentLocationID(int32_t LocationId); // Function BattlePrototype.UIWorldMap.GetCurrentLocationID // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void GetCurrentAreaID(int32_t areaId); // Function BattlePrototype.UIWorldMap.GetCurrentAreaID // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1685580
	void ClearCursorMemory(); // Function BattlePrototype.UIWorldMap.ClearCursorMemory // (Event|Public|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.UserDataAccessor
// Size: 0x48 (Inherited: 0x28)
struct UUserDataAccessor : UObject {
	struct FUserData UserData; // 0x28(0x20)
};

// Class BattlePrototype.UserParamManager
// Size: 0x610 (Inherited: 0x28)
struct UUserParamManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct FUserParam m_userParam; // 0x38(0x3e8)
	struct UCharactersParameterManager* m_pCharaParamManage; // 0x420(0x08)
	struct UWorldmapOpenParam* m_worldmapOpenParamM; // 0x428(0x08)
	struct UWorldmapOpenParam* m_worldmapOpenParamF; // 0x430(0x08)
	struct TMap<struct FName, int32_t> m_transObjMap; // 0x438(0x50)
	struct TArray<int32_t> m_tradeWishList; // 0x488(0x10)
	struct UQuestParamManager* m_questParamManager; // 0x498(0x08)
	struct UBrainMessageParamManager* m_brainMessageParamManager; // 0x4a0(0x08)
	struct ULoadTipsParamManager* m_loadingTipsParamManager; // 0x4a8(0x08)
	struct UOptionParam* m_optionParam; // 0x4b0(0x08)
	struct UPurposeMessageParamManager* m_purposeMessageParamManager; // 0x4b8(0x08)
	struct ULibraryEnemyParam* m_libraryEnemyParam; // 0x4c0(0x08)
	struct ULibraryCharacterParam* m_libraryCharaParam; // 0x4c8(0x08)
	struct FUserSystemParam m_UserSystemParam; // 0x4d0(0x06)
	char pad_4D6[0x2]; // 0x4d6(0x02)
	struct UPresentInfoParam* m_presentInfoParam; // 0x4d8(0x08)
	struct UTipsCountParamManager* m_tipsCountParamManager; // 0x4e0(0x08)
	struct TArray<struct FName> m_seenAjitoPatternList; // 0x4e8(0x10)
	struct UBattleLogBuffer* m_battleLogBuffer; // 0x4f8(0x08)
	struct TArray<struct FName> m_AllAddContentsNameList; // 0x500(0x10)
	struct TArray<struct FName> m_AppliedAddContentsNameList; // 0x510(0x10)
	struct TArray<struct FName> m_NotifiedNotAppliedAddContentsNameList; // 0x520(0x10)
	char pad_530[0x8]; // 0x530(0x08)
	struct TArray<struct FUserItemInfo> m_mapUsableItemList; // 0x538(0x10)
	bool m_isForceNewGameFlowFlag; // 0x548(0x01)
	char pad_549[0xf]; // 0x549(0x0f)
	struct TArray<struct FName> m_PurchasedAddContentNameList; // 0x558(0x10)
	struct FMulticastInlineDelegate bondsProgressEvent; // 0x568(0x10)
	struct FMulticastInlineDelegate bondsLevelEvent; // 0x578(0x10)
	struct FMulticastInlineDelegate sasEquipExtendEvent; // 0x588(0x10)
	struct FMulticastInlineDelegate sasEquipEvent; // 0x598(0x10)
	struct FMulticastInlineDelegate sasEquipStatusEvent; // 0x5a8(0x10)
	struct FMulticastInlineDelegate wmSelectableChangeEvent; // 0x5b8(0x10)
	struct FMulticastInlineDelegate onStartBondsEpisodeEvent; // 0x5c8(0x10)
	struct FMulticastInlineDelegate onEndBondsEpisodeEvent; // 0x5d8(0x10)
	struct FMulticastInlineDelegate OnChangeNoticeUiStateDelegate; // 0x5e8(0x10)
	struct FMulticastInlineDelegate OnChangeNoticeUiStateRemoveDelegate; // 0x5f8(0x10)
	char pad_608[0x8]; // 0x608(0x08)

	bool WorldmapSetLocationSelectable_WithPortal(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo, bool isSelectable, bool isForce, bool isAreaAll); // Function BattlePrototype.UserParamManager.WorldmapSetLocationSelectable_WithPortal // (Final|Native|Public|BlueprintCallable) // @ game+0x13729b0
	bool WorldmapSetLocationSelectable(int32_t LocationNo, int32_t AreaNo, bool isSelectable, bool isForce, bool isAreaAll); // Function BattlePrototype.UserParamManager.WorldmapSetLocationSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1372640
	bool WorldmapSetLocationNotSelectable(int32_t LocationNo, bool isNotSelectable); // Function BattlePrototype.UserParamManager.WorldmapSetLocationNotSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x13723d0
	bool WorldmapSetLocationNewOpen(int32_t LocationNo, int32_t AreaNo, bool isNewOpen, bool isAreaAll); // Function BattlePrototype.UserParamManager.WorldmapSetLocationNewOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x13720f0
	bool WorldmapSetAllLocationNotSelectable(bool isNotSelectable); // Function BattlePrototype.UserParamManager.WorldmapSetAllLocationNotSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1372060
	bool WorldmapOpenLocation(int32_t LocationNo, int32_t AreaNo, bool isSelectable); // Function BattlePrototype.UserParamManager.WorldmapOpenLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x1371e30
	bool WorldmapIsLocationSelectable(int32_t LocationNo, int32_t AreaNo); // Function BattlePrototype.UserParamManager.WorldmapIsLocationSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1371c80
	bool WorldmapIsLocationNotSelectable(int32_t LocationNo); // Function BattlePrototype.UserParamManager.WorldmapIsLocationNotSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1371ab0
	bool WorldmapIsLocationNewOpen(int32_t LocationNo, int32_t AreaNo); // Function BattlePrototype.UserParamManager.WorldmapIsLocationNewOpen // (Final|Native|Public|BlueprintCallable) // @ game+0x1371900
	bool WorldmapIsAllLocationNotSelectable(); // Function BattlePrototype.UserParamManager.WorldmapIsAllLocationNotSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x13718d0
	bool WorldmapGetOpenParam(struct TArray<struct FWorldmapOpenLCParam> openedList); // Function BattlePrototype.UserParamManager.WorldmapGetOpenParam // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13716e0
	bool WorldmapCloseLocation(int32_t LocationNo, int32_t AreaNo, bool isAreaAll); // Function BattlePrototype.UserParamManager.WorldmapCloseLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x13714b0
	void WorldmapCheckOpenFromProgressIDAndCharaID(enum class EPlayerID playerId, int32_t ProgressId, bool checkNearly); // Function BattlePrototype.UserParamManager.WorldmapCheckOpenFromProgressIDAndCharaID // (Final|Native|Public|BlueprintCallable) // @ game+0x13713a0
	void WorldmapCheckOpenFromProgressID(int32_t ProgressId, bool checkNearly); // Function BattlePrototype.UserParamManager.WorldmapCheckOpenFromProgressID // (Final|Native|Public|BlueprintCallable) // @ game+0x1371230
	bool UpdateTeamBondsLevel(enum class EPlayerID playerId, int32_t ProgressNo, bool isSingleLvUp); // Function BattlePrototype.UserParamManager.UpdateTeamBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1371000
	bool UpdatePresentItemInfo(enum class EPlayerID sendCharaID, enum class EPlayerID recvCharaID, struct FName ItemId); // Function BattlePrototype.UserParamManager.UpdatePresentItemInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1370cd0
	bool UpdateBondsLevel(enum class EPlayerID playerId, enum class EPlayerID TargetID, bool isSingleLvUp); // Function BattlePrototype.UserParamManager.UpdateBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1370bc0
	void TempDisableSkill(bool bDisable); // Function BattlePrototype.UserParamManager.TempDisableSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x1370b30
	void StartBondsEpisode(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.StartBondsEpisode // (Final|Native|Public|BlueprintCallable) // @ game+0x1370890
	void SetZeroEpClear(bool Flag); // Function BattlePrototype.UserParamManager.SetZeroEpClear // (Final|Native|Public|BlueprintCallable) // @ game+0x1370750
	bool SetWishList(struct TArray<int32_t> wishList); // Function BattlePrototype.UserParamManager.SetWishList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1370690
	bool SetTransferObjectByName(struct FName ItemId, int32_t ObjectID, bool isOverwrite); // Function BattlePrototype.UserParamManager.SetTransferObjectByName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1370450
	bool SetTransferObject(int32_t ItemId, int32_t ObjectID, bool isOverwrite); // Function BattlePrototype.UserParamManager.SetTransferObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1370220
	void SetTitleProductFlag(bool Flag); // Function BattlePrototype.UserParamManager.SetTitleProductFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x13700e0
	void SetTeamBondsProgress(enum class EPlayerID playerId, int32_t Progress); // Function BattlePrototype.UserParamManager.SetTeamBondsProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x136ff30
	void SetTeamBondsLevel(enum class EPlayerID playerId, int32_t teamBondsLevel); // Function BattlePrototype.UserParamManager.SetTeamBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136fe70
	void SetSkillPoint(int32_t Point); // Function BattlePrototype.UserParamManager.SetSkillPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x136fdf0
	void SetSelectSaveSlot(int32_t selectSlot); // Function BattlePrototype.UserParamManager.SetSelectSaveSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x136fc70
	void SetSelectNewGame(bool selectSlot); // Function BattlePrototype.UserParamManager.SetSelectNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x136fbf0
	void SetSelectedScenario(int32_t Value); // Function BattlePrototype.UserParamManager.SetSelectedScenario // (Final|Native|Public|BlueprintCallable) // @ game+0x136fd70
	void SetSelectedMapUsableItem(struct FName ItemId); // Function BattlePrototype.UserParamManager.SetSelectedMapUsableItem // (Final|Native|Public|BlueprintCallable) // @ game+0x136fcf0
	void SetSeenAjitoPattern(struct FName AjitoPatternName); // Function BattlePrototype.UserParamManager.SetSeenAjitoPattern // (Final|Native|Public|BlueprintCallable) // @ game+0x136fb70
	void SetSASEquipStatus(enum class E_SASKindNative kind, enum class ESASEquipStatus Status, bool bNotEquip); // Function BattlePrototype.UserParamManager.SetSASEquipStatus // (Final|Native|Public|BlueprintCallable) // @ game+0x136fa60
	void SetReceiveOrderQuestID(int32_t ID); // Function BattlePrototype.UserParamManager.SetReceiveOrderQuestID // (Final|Native|Public|BlueprintCallable) // @ game+0x136f9e0
	void SetPurchasedAddContentNameList(struct TArray<struct FName> list); // Function BattlePrototype.UserParamManager.SetPurchasedAddContentNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136f8e0
	void SetPrivacyPolicy(bool Flag); // Function BattlePrototype.UserParamManager.SetPrivacyPolicy // (Final|Native|Public|BlueprintCallable) // @ game+0x136f860
	void SetNpcAccessoryExtend2(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.SetNpcAccessoryExtend2 // (Final|Native|Public|BlueprintCallable) // @ game+0x136f7e0
	void SetNpcAccessoryExtend1(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.SetNpcAccessoryExtend1 // (Final|Native|Public|BlueprintCallable) // @ game+0x136f760
	void SetNotifiedNotAppliedAddContentsNameList(struct TArray<struct FName> nameList); // Function BattlePrototype.UserParamManager.SetNotifiedNotAppliedAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136f660
	void SetMoney(int32_t Value); // Function BattlePrototype.UserParamManager.SetMoney // (Final|Native|Public|BlueprintCallable) // @ game+0x136f5e0
	void SetMemberSlotInfo(int32_t Index, int32_t ID); // Function BattlePrototype.UserParamManager.SetMemberSlotInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x136f520
	void SetLibraryTerminologyFlag(int32_t ID, char Flag); // Function BattlePrototype.UserParamManager.SetLibraryTerminologyFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x136f460
	void SetLibraryEpisodeFlag(int32_t ID, char Flag); // Function BattlePrototype.UserParamManager.SetLibraryEpisodeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x136f3a0
	void SetLibraryEnemyFlag(int32_t ID, char Flag); // Function BattlePrototype.UserParamManager.SetLibraryEnemyFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x136f2e0
	void SetLearnedSkill(enum class EPlayerID playerId, enum class EPlayerSkill SkillID, bool bLearn); // Function BattlePrototype.UserParamManager.SetLearnedSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x136f1d0
	void SetItemNum(struct FName ID, int32_t Num); // Function BattlePrototype.UserParamManager.SetItemNum // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136f100
	void SetItemKind(struct FName ID, int32_t Num); // Function BattlePrototype.UserParamManager.SetItemKind // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136f030
	void SetIsForceNewGameFlowFlag(bool Flag); // Function BattlePrototype.UserParamManager.SetIsForceNewGameFlowFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x136efb0
	void SetIsExNewGameFlow(bool Flag); // Function BattlePrototype.UserParamManager.SetIsExNewGameFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x136ee00
	void SetIsExNewGame_TakeOverCharacterLevel(bool Flag); // Function BattlePrototype.UserParamManager.SetIsExNewGame_TakeOverCharacterLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136ef20
	void SetIsExNewGame_TakeOverBrainMap(bool Flag); // Function BattlePrototype.UserParamManager.SetIsExNewGame_TakeOverBrainMap // (Final|Native|Public|BlueprintCallable) // @ game+0x136ee90
	void SetGameDifficulty(enum class HCGameDifficulty diffuculty); // Function BattlePrototype.UserParamManager.SetGameDifficulty // (Final|Native|Public|BlueprintCallable) // @ game+0x136ecd0
	void SetGameClearState(enum class EGameClearState State); // Function BattlePrototype.UserParamManager.SetGameClearState // (Final|Native|Public|BlueprintCallable) // @ game+0x136eba0
	void SetGameClear(bool Flag); // Function BattlePrototype.UserParamManager.SetGameClear // (Final|Native|Public|BlueprintCallable) // @ game+0x136ea60
	void SetExtendEquipSAS(bool bExtend); // Function BattlePrototype.UserParamManager.SetExtendEquipSAS // (Final|Native|Public|BlueprintCallable) // @ game+0x136e9d0
	void SetEula(bool Flag); // Function BattlePrototype.UserParamManager.SetEula // (Final|Native|Public|BlueprintCallable) // @ game+0x136e950
	void SetEquipSAS(enum class E_SASButton Button, enum class E_SASKindNative kind); // Function BattlePrototype.UserParamManager.SetEquipSAS // (Final|Native|Public|BlueprintCallable) // @ game+0x136e890
	void SetClearLapNum(int32_t Num); // Function BattlePrototype.UserParamManager.SetClearLapNum // (Final|Native|Public|BlueprintCallable) // @ game+0x136e810
	void SetCeBank(bool Flag); // Function BattlePrototype.UserParamManager.SetCeBank // (Final|Native|Public|BlueprintCallable) // @ game+0x136e790
	void SetBondsValue(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t Value); // Function BattlePrototype.UserParamManager.SetBondsValue // (Final|Native|Public|BlueprintCallable) // @ game+0x136e690
	void SetBondsProgress(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t Progress); // Function BattlePrototype.UserParamManager.SetBondsProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x136e590
	void SetBondsMaxLevel(int32_t maxLevel); // Function BattlePrototype.UserParamManager.SetBondsMaxLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136e510
	void SetBondsLevel(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t Level, bool adjustExp); // Function BattlePrototype.UserParamManager.SetBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136e3c0
	void SetBondsFValue(enum class EPlayerID playerId, enum class EPlayerID TargetID, float Value); // Function BattlePrototype.UserParamManager.SetBondsFValue // (Final|Native|Public|BlueprintCallable) // @ game+0x136e2c0
	void SetBattlefieldRandomSeed(int32_t Seed); // Function BattlePrototype.UserParamManager.SetBattlefieldRandomSeed // (Final|Native|Public|BlueprintCallable) // @ game+0x136e240
	void SetBattlefieldInfos(struct TMap<struct FString, struct FBattlefieldInfo> Infos); // Function BattlePrototype.UserParamManager.SetBattlefieldInfos // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136e110
	void SetAppliedAddContentsNameList(struct TArray<struct FName> list); // Function BattlePrototype.UserParamManager.SetAppliedAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136e010
	void SetAllAddContentsNameList(struct TArray<struct FName> list); // Function BattlePrototype.UserParamManager.SetAllAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136df10
	void ResetTotalPlayTimeCount(); // Function BattlePrototype.UserParamManager.ResetTotalPlayTimeCount // (Final|Native|Public|BlueprintCallable) // @ game+0x136def0
	void ResetMapGimmickUseTimesAll(); // Function BattlePrototype.UserParamManager.ResetMapGimmickUseTimesAll // (Final|Native|Public|BlueprintCallable) // @ game+0x136ded0
	void ResetMapGimmickUseTimes(enum class EMapGimmickType Type); // Function BattlePrototype.UserParamManager.ResetMapGimmickUseTimes // (Final|Native|Public|BlueprintCallable) // @ game+0x136de50
	void ResetLearnedSkill(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.ResetLearnedSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x136ddd0
	void ResetBattlefieldInfos(); // Function BattlePrototype.UserParamManager.ResetBattlefieldInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x136dd00
	bool RemoveWishList(int32_t Content); // Function BattlePrototype.UserParamManager.RemoveWishList // (Final|Native|Public|BlueprintCallable) // @ game+0x136dc70
	void RemoveItemList(struct FName _ID); // Function BattlePrototype.UserParamManager.RemoveItemList // (Final|Native|Public|BlueprintCallable) // @ game+0x136dbf0
	void RegisterUseMapGimmick(enum class EMapGimmickType Type); // Function BattlePrototype.UserParamManager.RegisterUseMapGimmick // (Final|Native|Public|BlueprintCallable) // @ game+0x136db70
	void ReCalcSkillPoint(); // Function BattlePrototype.UserParamManager.ReCalcSkillPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x136db50
	void OnSetEventProgressID(int32_t ProgressNo); // Function BattlePrototype.UserParamManager.OnSetEventProgressID // (Final|Native|Public|BlueprintCallable) // @ game+0x136dad0
	bool IsValidLibraryTerminologyFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.IsValidLibraryTerminologyFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136da10
	bool IsValidLibraryEpisodeFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.IsValidLibraryEpisodeFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136d950
	bool IsValidLibraryEnemyFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.IsValidLibraryEnemyFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136d890
	bool IsSeenAjitoPattern(struct FName AjitoPatternName); // Function BattlePrototype.UserParamManager.IsSeenAjitoPattern // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136d740
	bool IsSASEquipAble(enum class E_SASKindNative kind); // Function BattlePrototype.UserParamManager.IsSASEquipAble // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136d6b0
	bool IsNpcAccesoryExtend2(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.IsNpcAccesoryExtend2 // (Final|Native|Public|BlueprintCallable) // @ game+0x136d620
	bool IsNpcAccesoryExtend1(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.IsNpcAccesoryExtend1 // (Final|Native|Public|BlueprintCallable) // @ game+0x136d590
	bool IsLearnedSkill(enum class EPlayerID playerId, enum class EPlayerSkill SkillID); // Function BattlePrototype.UserParamManager.IsLearnedSkill // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136d4c0
	bool IsHaveRepairItem(); // Function BattlePrototype.UserParamManager.IsHaveRepairItem // (Final|Native|Public|BlueprintCallable) // @ game+0x136d3d0
	bool IsForceNewGameFlowFlag(); // Function BattlePrototype.UserParamManager.IsForceNewGameFlowFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136d3b0
	bool IsExtendEquipSAS(); // Function BattlePrototype.UserParamManager.IsExtendEquipSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136d380
	bool IsExNewGameFlow(); // Function BattlePrototype.UserParamManager.IsExNewGameFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x136d260
	bool IsExNewGame_TakeOverCharacterLevel(); // Function BattlePrototype.UserParamManager.IsExNewGame_TakeOverCharacterLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136d2c0
	bool IsExNewGame_TakeOverBrainMap(); // Function BattlePrototype.UserParamManager.IsExNewGame_TakeOverBrainMap // (Final|Native|Public|BlueprintCallable) // @ game+0x136d290
	bool IsExistInWishList(int32_t Content); // Function BattlePrototype.UserParamManager.IsExistInWishList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136d2f0
	bool IsEquipSAS(enum class E_SASKindNative kind); // Function BattlePrototype.UserParamManager.IsEquipSAS // (Final|Native|Public|BlueprintCallable) // @ game+0x136d1d0
	bool IsBrainTalkOnceCheck_InSaveData_Find(enum class EBrainTalkCategory _Category, struct FName _ID); // Function BattlePrototype.UserParamManager.IsBrainTalkOnceCheck_InSaveData_Find // (Final|Native|Public|BlueprintCallable) // @ game+0x136d000
	bool isBattleFieldCheckToWorldMapSystems(); // Function BattlePrototype.UserParamManager.isBattleFieldCheckToWorldMapSystems // (Final|Native|Public|BlueprintCallable) // @ game+0x1372d70
	void InitializeTotalPlayTime(); // Function BattlePrototype.UserParamManager.InitializeTotalPlayTime // (Final|Native|Public|BlueprintCallable) // @ game+0x136cfe0
	void InitializeParam(bool isNewGame); // Function BattlePrototype.UserParamManager.InitializeParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136ce50
	void InitializeItemParam(); // Function BattlePrototype.UserParamManager.InitializeItemParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136ce30
	bool GetZeroEpClear(); // Function BattlePrototype.UserParamManager.GetZeroEpClear // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136cd50
	struct UWorldmapOpenParam* GetWorldmapOpenParam(); // Function BattlePrototype.UserParamManager.GetWorldmapOpenParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136cd20
	int32_t GetWishListNum(); // Function BattlePrototype.UserParamManager.GetWishListNum // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136ccf0
	struct TArray<int32_t> GetWishList(); // Function BattlePrototype.UserParamManager.GetWishList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136cc60
	bool GetTransferObjectByName(struct FName ItemId, int32_t ObjectID, bool isRemove); // Function BattlePrototype.UserParamManager.GetTransferObjectByName // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x136c9e0
	bool GetTransferObject(int32_t ItemId, int32_t ObjectID, bool isRemove); // Function BattlePrototype.UserParamManager.GetTransferObject // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x136c780
	int32_t GetTotalPlayTime(bool isRealData); // Function BattlePrototype.UserParamManager.GetTotalPlayTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136c6f0
	bool GetTitleProductFlag(); // Function BattlePrototype.UserParamManager.GetTitleProductFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136c6d0
	struct UTipsCountParamManager* GetTipsCountParam(); // Function BattlePrototype.UserParamManager.GetTipsCountParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136c6a0
	int32_t GetTeamBondsProgress(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.GetTeamBondsProgress // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136c550
	int32_t GetTeamBondsMaxLevel(); // Function BattlePrototype.UserParamManager.GetTeamBondsMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x8506a0
	int32_t GetTeamBondsLevel(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.GetTeamBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136c380
	int32_t GetSkillPoint(); // Function BattlePrototype.UserParamManager.GetSkillPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136c350
	int32_t GetSelectSaveSlot(); // Function BattlePrototype.UserParamManager.GetSelectSaveSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x136c2c0
	bool GetSelectNewGame(); // Function BattlePrototype.UserParamManager.GetSelectNewGame // (Final|Native|Public|BlueprintCallable) // @ game+0x136c2a0
	int32_t GetSelectedScenario(); // Function BattlePrototype.UserParamManager.GetSelectedScenario // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136c320
	struct FName GetSelectedMapUsableItem(); // Function BattlePrototype.UserParamManager.GetSelectedMapUsableItem // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136c2e0
	enum class ESASEquipStatus GetSASEquipStatus(enum class E_SASKindNative kind); // Function BattlePrototype.UserParamManager.GetSASEquipStatus // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136c110
	int32_t GetReceiveOrderQuestID(); // Function BattlePrototype.UserParamManager.GetReceiveOrderQuestID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136c0e0
	struct UQuestParamManager* GetQuestParamManager(); // Function BattlePrototype.UserParamManager.GetQuestParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x136c0b0
	struct UPurposeMessageParamManager* GetPurposeMessageParamManager(); // Function BattlePrototype.UserParamManager.GetPurposeMessageParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x136c080
	struct TArray<struct FName> GetPurchasedAddContentNameList(); // Function BattlePrototype.UserParamManager.GetPurchasedAddContentNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136bf30
	bool GetPrivacyPolicy(); // Function BattlePrototype.UserParamManager.GetPrivacyPolicy // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136bf10
	bool GetPresentItemInfoList(enum class EPlayerID sendCharaID, enum class EPlayerID recvCharaID, struct TArray<struct FPresentInfoData> itemList); // Function BattlePrototype.UserParamManager.GetPresentItemInfoList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136bc80
	struct UPresentInfoParam* GetPresentInfoParam(); // Function BattlePrototype.UserParamManager.GetPresentInfoParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136bc50
	struct UOptionParam* GetOptionParam(); // Function BattlePrototype.UserParamManager.GetOptionParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136bc20
	int32_t GetNpcAccessoryExtendNum(enum class EPlayerID playerId); // Function BattlePrototype.UserParamManager.GetNpcAccessoryExtendNum // (Final|Native|Public|BlueprintCallable) // @ game+0x136bb90
	struct TArray<struct FName> GetNotifiedNotAppliedAddContentsNameList(); // Function BattlePrototype.UserParamManager.GetNotifiedNotAppliedAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136bad0
	bool GetMoneyDirty(); // Function BattlePrototype.UserParamManager.GetMoneyDirty // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136ba20
	int32_t GetMoney(); // Function BattlePrototype.UserParamManager.GetMoney // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b970
	struct FMemberSlotInfo GetMemberSlotInfo(int32_t Index); // Function BattlePrototype.UserParamManager.GetMemberSlotInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b8e0
	struct FUserItemInfo GetMapUsableItemListPrevInfo(int32_t CurrentIndex); // Function BattlePrototype.UserParamManager.GetMapUsableItemListPrevInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b840
	int32_t GetMapUsableItemListPrevIndex(int32_t CurrentIndex); // Function BattlePrototype.UserParamManager.GetMapUsableItemListPrevIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b7b0
	int32_t GetMapUsableItemListNum(); // Function BattlePrototype.UserParamManager.GetMapUsableItemListNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b780
	struct FUserItemInfo GetMapUsableItemListNextInfo(int32_t CurrentIndex); // Function BattlePrototype.UserParamManager.GetMapUsableItemListNextInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b6e0
	int32_t GetMapUsableItemListNextIndex(int32_t CurrentIndex); // Function BattlePrototype.UserParamManager.GetMapUsableItemListNextIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b650
	struct FUserItemInfo GetMapUsableItemListInfo(int32_t Index); // Function BattlePrototype.UserParamManager.GetMapUsableItemListInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b5b0
	struct TMap<enum class EMapGimmickType, int32_t> GetMapGimmickUseTimes(); // Function BattlePrototype.UserParamManager.GetMapGimmickUseTimes // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b460
	struct ULoadTipsParamManager* GetLoadTipsParamManager(); // Function BattlePrototype.UserParamManager.GetLoadTipsParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x136b430
	char GetLibraryTerminologyFlag(int32_t ID); // Function BattlePrototype.UserParamManager.GetLibraryTerminologyFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b3a0
	char GetLibraryEpisodeFlag(int32_t ID); // Function BattlePrototype.UserParamManager.GetLibraryEpisodeFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b310
	struct ULibraryEnemyParam* GetLibraryEnemyParam(); // Function BattlePrototype.UserParamManager.GetLibraryEnemyParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136b2e0
	char GetLibraryEnemyFlag(int32_t ID); // Function BattlePrototype.UserParamManager.GetLibraryEnemyFlag // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b250
	struct ULibraryCharacterParam* GetLibraryCharaParam(); // Function BattlePrototype.UserParamManager.GetLibraryCharaParam // (Final|Native|Public|BlueprintCallable) // @ game+0x136b220
	int32_t GetLastTradeShopID(); // Function BattlePrototype.UserParamManager.GetLastTradeShopID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b1f0
	int32_t GetLastShopID(); // Function BattlePrototype.UserParamManager.GetLastShopID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b1c0
	int32_t GetLastAcquisitionTime(struct FName ID); // Function BattlePrototype.UserParamManager.GetLastAcquisitionTime // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x136b120
	int32_t GetItemNum(struct FName ID); // Function BattlePrototype.UserParamManager.GetItemNum // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x136afc0
	struct TArray<struct FUserItemInfo> GetItemList(); // Function BattlePrototype.UserParamManager.GetItemList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136af80
	bool GetIsProgressBondsEpisode(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.GetIsProgressBondsEpisode // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136ad70
	bool GetHasPresentedItemInfoList(enum class EPlayerID sendCharaID, enum class EPlayerID recvCharaID, struct TArray<struct FPresentInfoData> itemList, bool includeEvent); // Function BattlePrototype.UserParamManager.GetHasPresentedItemInfoList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x136aa30
	enum class HCGameDifficulty GetGameDifficulty(); // Function BattlePrototype.UserParamManager.GetGameDifficulty // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136a980
	enum class EGameClearState GetGameClearState(); // Function BattlePrototype.UserParamManager.GetGameClearState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136a8e0
	bool GetGameClear(); // Function BattlePrototype.UserParamManager.GetGameClear // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136a8c0
	bool GetEula(); // Function BattlePrototype.UserParamManager.GetEula // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136a8a0
	enum class E_SASKindNative GetEquipSAS(enum class E_SASButton Button); // Function BattlePrototype.UserParamManager.GetEquipSAS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136a810
	int32_t GetClearLapNum(); // Function BattlePrototype.UserParamManager.GetClearLapNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136a7e0
	bool GetCeBank(); // Function BattlePrototype.UserParamManager.GetCeBank // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x136a7c0
	struct UBrainMessageParamManager* GetBrainMessageParamManager(); // Function BattlePrototype.UserParamManager.GetBrainMessageParamManager // (Final|Native|Public|BlueprintCallable) // @ game+0x136a790
	int32_t GetBondsValue(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.GetBondsValue // (Final|Native|Public|BlueprintCallable) // @ game+0x136a6c0
	int32_t GetBondsProgress(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.GetBondsProgress // (Final|Native|Public|BlueprintCallable) // @ game+0x136a5f0
	int32_t GetBondsMaxLevel(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.GetBondsMaxLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136a520
	int32_t GetBondsLevel(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.GetBondsLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x136a450
	float GetBondsFValue(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.GetBondsFValue // (Final|Native|Public|BlueprintCallable) // @ game+0x136a380
	struct UBattleLogBuffer* GetBattleLogBuffer(); // Function BattlePrototype.UserParamManager.GetBattleLogBuffer // (Final|Native|Public|BlueprintCallable) // @ game+0x136a100
	int32_t GetBattlefieldRandomSeed(); // Function BattlePrototype.UserParamManager.GetBattlefieldRandomSeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x12a69f0
	struct TMap<struct FString, struct FBattlefieldInfo> GetBattlefieldInfos(); // Function BattlePrototype.UserParamManager.GetBattlefieldInfos // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x136a130
	struct TArray<struct FName> GetAppliedAddContentsNameList(); // Function BattlePrototype.UserParamManager.GetAppliedAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x136a040
	struct TArray<struct FName> GetAllAddContentsNameList(); // Function BattlePrototype.UserParamManager.GetAllAddContentsNameList // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1369f80
	void EndBondsEpisode(bool IsCancel); // Function BattlePrototype.UserParamManager.EndBondsEpisode // (Final|Native|Public|BlueprintCallable) // @ game+0x1369e30
	void DeleteLibraryTerminologyFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.DeleteLibraryTerminologyFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1369bb0
	void DeleteLibraryEpisodeFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.DeleteLibraryEpisodeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1369af0
	void DeleteLibraryEnemyFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.DeleteLibraryEnemyFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1369a30
	void DeleteItemKind(struct FName ID); // Function BattlePrototype.UserParamManager.DeleteItemKind // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13699a0
	void DeleteItemAll(); // Function BattlePrototype.UserParamManager.DeleteItemAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1369980
	void ClearWorldmapOpenParamAllFromSelectSenario(); // Function BattlePrototype.UserParamManager.ClearWorldmapOpenParamAllFromSelectSenario // (Final|Native|Public|BlueprintCallable) // @ game+0x1369940
	void ClearMoneyDirty(); // Function BattlePrototype.UserParamManager.ClearMoneyDirty // (Final|Native|Public|BlueprintCallable) // @ game+0x13698b0
	bool CheckTeamBondsLevelUp(enum class EPlayerID playerId, int32_t ProgressNo); // Function BattlePrototype.UserParamManager.CheckTeamBondsLevelUp // (Final|Native|Public|BlueprintCallable) // @ game+0x1369700
	bool CheckStartTeamBondsEpisode(enum class EPlayerID playerId, int32_t episodeNo); // Function BattlePrototype.UserParamManager.CheckStartTeamBondsEpisode // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1369530
	bool CheckHaveItemCapacityWithRetNum(struct FName ID, int32_t Num, enum class ECanBeAddedItems canBeAdded, int32_t retNum); // Function BattlePrototype.UserParamManager.CheckHaveItemCapacityWithRetNum // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1369310
	bool CheckHaveItemCapacity(struct FName ID, int32_t Num); // Function BattlePrototype.UserParamManager.CheckHaveItemCapacity // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1369230
	bool CheckBondsLevelUp(enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParamManager.CheckBondsLevelUp // (Final|Native|Public|BlueprintCallable) // @ game+0x1369160
	void AppendAppliedAddContentsNameList(struct FName AddContentName); // Function BattlePrototype.UserParamManager.AppendAppliedAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x1369010
	bool AddWishList(int32_t Content); // Function BattlePrototype.UserParamManager.AddWishList // (Final|Native|Public|BlueprintCallable) // @ game+0x1368ed0
	void AddSkillPoint(int32_t Point); // Function BattlePrototype.UserParamManager.AddSkillPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x1368e50
	void AddNotifiedNotAppliedAddContentsNameList(struct FName addName); // Function BattlePrototype.UserParamManager.AddNotifiedNotAppliedAddContentsNameList // (Final|Native|Public|BlueprintCallable) // @ game+0x1368db0
	bool AddMoney(int32_t Value); // Function BattlePrototype.UserParamManager.AddMoney // (Final|Native|Public|BlueprintCallable) // @ game+0x1368c60
	void AddLibraryTerminologyFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.AddLibraryTerminologyFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1368ba0
	void AddLibraryEpisodeFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.AddLibraryEpisodeFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1368ae0
	void AddLibraryEnemyFlag(int32_t ID, enum class LIBRARY_FLAG Flag); // Function BattlePrototype.UserParamManager.AddLibraryEnemyFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x1368a20
	bool AddItemNum(struct FName ID, int32_t Num, bool isUpdateMapUsableItemList_NotUsed, bool IsDispGetLog); // Function BattlePrototype.UserParamManager.AddItemNum // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1368710
	void AddClearLapNum(); // Function BattlePrototype.UserParamManager.AddClearLapNum // (Final|Native|Public|BlueprintCallable) // @ game+0x13686f0
	void AddBrainTalkOnceCheck_InSaveData(enum class EBrainTalkCategory _Category, struct FName _ID); // Function BattlePrototype.UserParamManager.AddBrainTalkOnceCheck_InSaveData // (Final|Native|Public|BlueprintCallable) // @ game+0x1368620
	void AddBondsValue(enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t Value); // Function BattlePrototype.UserParamManager.AddBondsValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1368430
	void AddBondsFValue(enum class EPlayerID playerId, enum class EPlayerID TargetID, float Value); // Function BattlePrototype.UserParamManager.AddBondsFValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1368330
};

// Class BattlePrototype.UserParameterUtility
// Size: 0x28 (Inherited: 0x28)
struct UUserParameterUtility : UBlueprintFunctionLibrary {

	bool WorldmapSetLocationSelectable_WithPortal(struct UObject* WorldContextObject, int32_t LocationNo, int32_t AreaNo, int32_t PortalNo, bool isSelectable, bool isForce, bool isAreaAll); // Function BattlePrototype.UserParameterUtility.WorldmapSetLocationSelectable_WithPortal // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1372b70
	bool WorldmapSetLocationSelectable(struct UObject* WorldContextObject, int32_t LocationNo, int32_t AreaNo, bool isSelectable, bool isForce, bool isAreaAll); // Function BattlePrototype.UserParameterUtility.WorldmapSetLocationSelectable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13727f0
	bool WorldmapSetLocationNotSelectableAll(struct UObject* WorldContextObject, bool isNotSelectable); // Function BattlePrototype.UserParameterUtility.WorldmapSetLocationNotSelectableAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1372580
	bool WorldmapSetLocationNotSelectable(struct UObject* WorldContextObject, int32_t LocationId, bool isNotSelectable); // Function BattlePrototype.UserParameterUtility.WorldmapSetLocationNotSelectable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1372490
	bool WorldmapSetLocationNewOpen(struct UObject* WorldContextObject, int32_t LocationNo, int32_t AreaNo, bool isNewOpen, bool isAreaAll); // Function BattlePrototype.UserParameterUtility.WorldmapSetLocationNewOpen // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1372250
	bool WorldmapOpenLocation(struct UObject* WorldContextObject, int32_t LocationNo, int32_t AreaNo, bool isSelectable); // Function BattlePrototype.UserParameterUtility.WorldmapOpenLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1371f30
	bool WorldmapIsLocationSelectable(struct UObject* WorldContextObject, int32_t LocationNo, int32_t AreaNo); // Function BattlePrototype.UserParameterUtility.WorldmapIsLocationSelectable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1371d40
	bool WorldmapIsLocationNotSelectableAll(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.WorldmapIsLocationNotSelectableAll // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1371c00
	bool WorldmapIsLocationNotSelectable(struct UObject* WorldContextObject, int32_t LocationId); // Function BattlePrototype.UserParameterUtility.WorldmapIsLocationNotSelectable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1371b40
	bool WorldmapIsLocationNewOpen(struct UObject* WorldContextObject, int32_t LocationId, int32_t areaId); // Function BattlePrototype.UserParameterUtility.WorldmapIsLocationNewOpen // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13719c0
	bool WorldmapGetOpenParam(struct UObject* WorldContextObject, struct TArray<struct FWorldmapOpenLCParam> openedList); // Function BattlePrototype.UserParameterUtility.WorldmapGetOpenParam // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x13717c0
	bool WorldmapCloseLocation(struct UObject* WorldContextObject, int32_t LocationNo, int32_t AreaNo, bool isAreaAll); // Function BattlePrototype.UserParameterUtility.WorldmapCloseLocation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13715b0
	void WorldmapCheckOpenFromProgressID(struct UObject* WorldContextObject, int32_t ProgressId); // Function BattlePrototype.UserParameterUtility.WorldmapCheckOpenFromProgressID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13712f0
	bool UpdateTeamBondsLevel(struct UObject* WorldContextObject, enum class EPlayerID playerId, int32_t ProgressNo, bool isSingleLvUp); // Function BattlePrototype.UserParameterUtility.UpdateTeamBondsLevel // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1371100
	bool UpdatePresentItemInfo(struct UObject* WorldContextObject, enum class EPlayerID sendCharaID, enum class EPlayerID recvCharaID, struct FName ItemId); // Function BattlePrototype.UserParameterUtility.UpdatePresentItemInfo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1370dd0
	void StartDLCBondsEpisode(struct UObject* WorldContextObject, struct FName bondsID); // Function BattlePrototype.UserParameterUtility.StartDLCBondsEpisode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1370a80
	void StartBondsEpisode(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerID TargetID, int32_t bondsEpNumber); // Function BattlePrototype.UserParameterUtility.StartBondsEpisode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1370950
	void SetZeroEpClear(struct UObject* WorldContextObject, bool zeroEpFlag); // Function BattlePrototype.UserParameterUtility.SetZeroEpClear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13707d0
	bool SetTransferObjectByName(struct UObject* WorldContextObject, struct FName ItemId, int32_t ObjectID, bool isOverwrite); // Function BattlePrototype.UserParameterUtility.SetTransferObjectByName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1370560
	bool SetTransferObject(struct UObject* WorldContextObject, int32_t ItemId, int32_t ObjectID, bool isOverwrite); // Function BattlePrototype.UserParameterUtility.SetTransferObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1370320
	void SetTitleProductFlag(struct UObject* WorldContextObject, bool endingAfterFlag); // Function BattlePrototype.UserParameterUtility.SetTitleProductFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1370160
	void SetTeamBondsProgress(struct UObject* WorldContextObject, enum class EPlayerID playerId, int32_t Progress); // Function BattlePrototype.UserParameterUtility.SetTeamBondsProgress // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136fff0
	void SetGameDifficulty(struct UObject* WorldContextObject, enum class HCGameDifficulty diffuculty); // Function BattlePrototype.UserParameterUtility.SetGameDifficulty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136ed50
	void SetGameClearState(struct UObject* WorldContextObject, enum class EGameClearState State); // Function BattlePrototype.UserParameterUtility.SetGameClearState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136ec20
	void SetGameClear(struct UObject* WorldContextObject, bool clearFlag); // Function BattlePrototype.UserParameterUtility.SetGameClear // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136eae0
	void ResetDispTipsState(struct UObject* WorldContextObject, enum class EHelpTutorial helpID); // Function BattlePrototype.UserParameterUtility.ResetDispTipsState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136dd20
	bool IsTipsDispEnable(struct UObject* WorldContextObject, enum class EHelpTutorial helpID); // Function BattlePrototype.UserParameterUtility.IsTipsDispEnable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136d7d0
	bool IsHelpTutoIDMini(struct UObject* WorldContextObject, enum class EHelpTutorial helpID); // Function BattlePrototype.UserParameterUtility.IsHelpTutoIDMini // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136d400
	bool IsDispTipsOrMiniTips(struct UObject* WorldContextObject, enum class EHelpTutorial helpID); // Function BattlePrototype.UserParameterUtility.IsDispTipsOrMiniTips // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x136d110
	bool GetTransferObjectByName(struct UObject* WorldContextObject, struct FName ItemId, int32_t ObjectID, bool isRemove); // Function BattlePrototype.UserParameterUtility.GetTransferObjectByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x136cb10
	bool GetTransferObject(struct UObject* WorldContextObject, int32_t ItemId, int32_t ObjectID, bool isRemove); // Function BattlePrototype.UserParameterUtility.GetTransferObject // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x136c890
	int32_t GetTeamBondsProgress(struct UObject* WorldContextObject, enum class EPlayerID playerId); // Function BattlePrototype.UserParameterUtility.GetTeamBondsProgress // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x136c5e0
	int32_t GetTeamBondsMaxLevel(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetTeamBondsMaxLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x136c4d0
	int32_t GetTeamBondsLevel(struct UObject* WorldContextObject, enum class EPlayerID playerId); // Function BattlePrototype.UserParameterUtility.GetTeamBondsLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x136c410
	struct USaveLoadExSystemParamManager* GetSaveLoadExSystemParamManager(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetSaveLoadExSystemParamManager // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136c220
	bool GetSasControllChange(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetSasControllChange // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136c1a0
	struct FName GetPurposeMessage(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetPurposeMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136bff0
	bool GetPresentItemInfoList(struct UObject* WorldContextObject, enum class EPlayerID sendCharaID, enum class EPlayerID recvCharaID, struct TArray<struct FPresentInfoData> itemList); // Function BattlePrototype.UserParameterUtility.GetPresentItemInfoList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x136bdb0
	int32_t GetNextTips(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetNextTips // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136ba50
	int32_t GetMoney(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetMoney // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136b9a0
	int32_t GetItemNum(struct UObject* WorldContextObject, struct FName ItemId); // Function BattlePrototype.UserParameterUtility.GetItemNum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136b060
	bool GetIsProgressBondsEpisode(struct UObject* WorldContextObject, enum class EPlayerID playerId, enum class EPlayerID TargetID); // Function BattlePrototype.UserParameterUtility.GetIsProgressBondsEpisode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x136ae60
	bool GetHasPresentedItemInfoList(struct UObject* WorldContextObject, enum class EPlayerID sendCharaID, enum class EPlayerID recvCharaID, struct TArray<struct FPresentInfoData> itemList, bool includeEvent); // Function BattlePrototype.UserParameterUtility.GetHasPresentedItemInfoList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x136abb0
	enum class HCGameDifficulty GetGameDifficulty(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetGameDifficulty // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x136a9b0
	enum class EGameClearState GetGameClearState(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.GetGameClearState // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136a900
	int32_t GetBeginningTips(struct UObject* WorldContextObject, enum class EPlayerID Player, int32_t ProgressNo, int32_t nextLocation); // Function BattlePrototype.UserParameterUtility.GetBeginningTips // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x136a250
	void EndBondsEpisode(struct UObject* WorldContextObject, bool IsCancel); // Function BattlePrototype.UserParameterUtility.EndBondsEpisode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1369ec0
	float DisplayTipsOrMiniTipsByHelpID(struct UObject* WorldContextObject, enum class EHelpTutorial helpID, bool notPauseControll, bool notCloseOfPause, bool isPlayableCheck, bool IsFade); // Function BattlePrototype.UserParameterUtility.DisplayTipsOrMiniTipsByHelpID // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1369c70
	void ClearRetryTips(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.ClearRetryTips // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13698d0
	bool CheckTeamBondsLevelUp(struct UObject* WorldContextObject, enum class EPlayerID playerId, int32_t ProgressNo); // Function BattlePrototype.UserParameterUtility.CheckTeamBondsLevelUp // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13697c0
	bool CheckStartTeamBondsEpisode(struct UObject* WorldContextObject, enum class EPlayerID playerId, int32_t episodeNo); // Function BattlePrototype.UserParameterUtility.CheckStartTeamBondsEpisode // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1369600
	bool CheckIsNeedRetryTips(struct UObject* WorldContextObject); // Function BattlePrototype.UserParameterUtility.CheckIsNeedRetryTips // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13694b0
	bool CheckAppliedAddContent(struct UObject* WorldContextObject, struct FName contentName); // Function BattlePrototype.UserParameterUtility.CheckAppliedAddContent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x13690a0
	void AllOpenBrainMessageIgnorConditionsAndLock(struct UObject* WorldContextObject, int32_t targetThread); // Function BattlePrototype.UserParameterUtility.AllOpenBrainMessageIgnorConditionsAndLock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1368f60
	bool AddMoney(struct UObject* WorldContextObject, int32_t Money); // Function BattlePrototype.UserParameterUtility.AddMoney // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1368cf0
	bool AddItemNum(struct UObject* WorldContextObject, struct FName ItemId, int32_t itemNum, bool isUpdateMapUsable, bool isDispLog); // Function BattlePrototype.UserParameterUtility.AddItemNum // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1368890
	void AddBrainMessageIgnorConditions(struct UObject* WorldContextObject, int32_t threadNumber, int32_t messageNum); // Function BattlePrototype.UserParameterUtility.AddBrainMessageIgnorConditions // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1368530
	void AddBattleLogBuffer(struct UObject* WorldContextObject, struct FBattleLogParam Param); // Function BattlePrototype.UserParameterUtility.AddBattleLogBuffer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1368220
};

// Class BattlePrototype.WakeUpEventForPostureBase
// Size: 0x280 (Inherited: 0x230)
struct AWakeUpEventForPostureBase : AActor {
	char pad_230[0x8]; // 0x230(0x08)
	bool isDoBeginPlay; // 0x238(0x01)
	char pad_239[0x7]; // 0x239(0x07)
	struct UBoxComponent* EventBoxComponent; // 0x240(0x08)
	struct FName scenarioFlagRowName; // 0x248(0x08)
	bool isInnerRange; // 0x250(0x01)
	char pad_251[0x3]; // 0x251(0x03)
	float eventStartWaitTime; // 0x254(0x04)
	struct FVector Direction; // 0x258(0x0c)
	float directionAcceptRange; // 0x264(0x04)
	float moveAcceptRange; // 0x268(0x04)
	float conditionEnableElapsedTime; // 0x26c(0x04)
	char pad_270[0x10]; // 0x270(0x10)

	void Setup(); // Function BattlePrototype.WakeUpEventForPostureBase.Setup // (Final|Native|Public|BlueprintCallable) // @ game+0x8518d0
	bool DoEvent(); // Function BattlePrototype.WakeUpEventForPostureBase.DoEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1685580
};

// Class BattlePrototype.WeaponChargeInterface
// Size: 0x28 (Inherited: 0x28)
struct UWeaponChargeInterface : UInterface {

	bool CheckWeaponChargeLevelDeficit(int32_t CheckLevel); // Function BattlePrototype.WeaponChargeInterface.CheckWeaponChargeLevelDeficit // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1685580
};

// Class BattlePrototype.WorldmapBatchOpenData
// Size: 0x58 (Inherited: 0x28)
struct UWorldmapBatchOpenData : UObject {
	struct UDataTable* RefCheckTableM; // 0x28(0x08)
	struct UDataTable* RefCheckTableF; // 0x30(0x08)
	char pad_38[0x20]; // 0x38(0x20)

	bool UnloadDataTable(); // Function BattlePrototype.WorldmapBatchOpenData.UnloadDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x13750d0
	bool LoadDataTable(); // Function BattlePrototype.WorldmapBatchOpenData.LoadDataTable // (Final|Native|Public|BlueprintCallable) // @ game+0x1374960
	bool IsValidResource(); // Function BattlePrototype.WorldmapBatchOpenData.IsValidResource // (Final|Native|Public|BlueprintCallable) // @ game+0x1374930
	int32_t GetMainLocationIDFromSublocationID(int32_t subLocationID); // Function BattlePrototype.WorldmapBatchOpenData.GetMainLocationIDFromSublocationID // (Final|Native|Public|BlueprintCallable) // @ game+0x1374530
};

// Class BattlePrototype.WorldmapOpenParam
// Size: 0x90 (Inherited: 0x28)
struct UWorldmapOpenParam : UObject {
	char pad_28[0x10]; // 0x28(0x10)
	struct TMap<int32_t, struct FWorldmapOpenLCParam> openParam; // 0x38(0x50)
	bool notSelectableAll; // 0x88(0x01)
	char pad_89[0x7]; // 0x89(0x07)

	bool SetLocationSelectable(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo, bool isSelectable, bool isForce, bool isAllArea); // Function BattlePrototype.WorldmapOpenParam.SetLocationSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1374f10
	void SetLocationNotSelectableAll_FromBF(bool isNotSelectable); // Function BattlePrototype.WorldmapOpenParam.SetLocationNotSelectableAll_FromBF // (Final|Native|Public|BlueprintCallable) // @ game+0x1374e80
	void SetLocationNotSelectableAll(bool isNotSelectable); // Function BattlePrototype.WorldmapOpenParam.SetLocationNotSelectableAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1374df0
	void SetLocationNotSelectable(int32_t LocationNo, bool isNotSelectable); // Function BattlePrototype.WorldmapOpenParam.SetLocationNotSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1374d30
	bool SetLocationNewOpened(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo, bool isNewOpened, bool isAllArea); // Function BattlePrototype.WorldmapOpenParam.SetLocationNewOpened // (Final|Native|Public|BlueprintCallable) // @ game+0x1374b90
	bool OpenLocation(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo, bool isSelectable); // Function BattlePrototype.WorldmapOpenParam.OpenLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x1374990
	bool IsLocationSelectable(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo); // Function BattlePrototype.WorldmapOpenParam.IsLocationSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x1374830
	bool IsLocationNotSelectableAll(); // Function BattlePrototype.WorldmapOpenParam.IsLocationNotSelectableAll // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1177530
	bool IsLocationNotSelectable(int32_t LocationNo); // Function BattlePrototype.WorldmapOpenParam.IsLocationNotSelectable // (Final|Native|Public|BlueprintCallable) // @ game+0x13747a0
	bool IsLocationNewOpened(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo); // Function BattlePrototype.WorldmapOpenParam.IsLocationNewOpened // (Final|Native|Public|BlueprintCallable) // @ game+0x13746a0
	bool GetOpenedList(struct TArray<struct FWorldmapOpenLCParam> openedList); // Function BattlePrototype.WorldmapOpenParam.GetOpenedList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x13745c0
	bool GetLocationNotSelectableAll_FromBF(); // Function BattlePrototype.WorldmapOpenParam.GetLocationNotSelectableAll_FromBF // (Final|Native|Public|BlueprintCallable) // @ game+0x1374510
	bool CloseLocation(int32_t LocationNo, int32_t AreaNo, int32_t PortalNo, bool isAllArea); // Function BattlePrototype.WorldmapOpenParam.CloseLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x13743d0
	void ClearAll(); // Function BattlePrototype.WorldmapOpenParam.ClearAll // (Final|Native|Public|BlueprintCallable) // @ game+0x13743b0
	void CheckOpenFromProgressID(int32_t ProgressId, bool checkNearly); // Function BattlePrototype.WorldmapOpenParam.CheckOpenFromProgressID // (Final|Native|Public|BlueprintCallable) // @ game+0x13742f0
};

// Class BattlePrototype.Wp0200AnimInstance
// Size: 0x3f0 (Inherited: 0x270)
struct UWp0200AnimInstance : UAnimInstance {
	struct TWeakObjectPtr<struct USceneComponent> OwnerMeshComponent; // 0x270(0x08)
	struct FVector WeaponScale; // 0x278(0x0c)
	struct FVector Location0; // 0x284(0x0c)
	struct FRotator Rotation0; // 0x290(0x0c)
	struct FVector Scale0; // 0x29c(0x0c)
	struct FVector Location1; // 0x2a8(0x0c)
	struct FRotator Rotation1; // 0x2b4(0x0c)
	struct FVector Scale1; // 0x2c0(0x0c)
	struct FVector Location2; // 0x2cc(0x0c)
	struct FRotator Rotation2; // 0x2d8(0x0c)
	struct FVector Scale2; // 0x2e4(0x0c)
	struct FVector Location3; // 0x2f0(0x0c)
	struct FRotator Rotation3; // 0x2fc(0x0c)
	struct FVector Scale3; // 0x308(0x0c)
	struct FVector Location4; // 0x314(0x0c)
	struct FRotator Rotation4; // 0x320(0x0c)
	struct FVector Scale4; // 0x32c(0x0c)
	struct FVector Location5; // 0x338(0x0c)
	struct FRotator Rotation5; // 0x344(0x0c)
	struct FVector Scale5; // 0x350(0x0c)
	struct FVector Location6; // 0x35c(0x0c)
	struct FRotator Rotation6; // 0x368(0x0c)
	struct FVector Scale6; // 0x374(0x0c)
	struct FVector Location7; // 0x380(0x0c)
	struct FRotator Rotation7; // 0x38c(0x0c)
	struct FVector Scale7; // 0x398(0x0c)
	struct FVector Location8; // 0x3a4(0x0c)
	struct FRotator Rotation8; // 0x3b0(0x0c)
	struct FVector Scale8; // 0x3bc(0x0c)
	struct FVector Location9; // 0x3c8(0x0c)
	struct FRotator Rotation9; // 0x3d4(0x0c)
	struct FVector Scale9; // 0x3e0(0x0c)
	char pad_3EC[0x4]; // 0x3ec(0x04)
};

// Class BattlePrototype.Wp0400AnimInstance
// Size: 0x590 (Inherited: 0x270)
struct UWp0400AnimInstance : UAnimInstance {
	struct TWeakObjectPtr<struct USceneComponent> OwnerMeshComponent; // 0x270(0x08)
	struct FVector RightForeArmLocation; // 0x278(0x0c)
	struct FRotator RightForeArmRotation; // 0x284(0x0c)
	struct FVector RightForeArmScale; // 0x290(0x0c)
	struct FVector RightForeArmRollLocation; // 0x29c(0x0c)
	struct FRotator RightForeArmRollRotation; // 0x2a8(0x0c)
	struct FVector RightForeArmRollScale; // 0x2b4(0x0c)
	struct FVector RightHandLocation; // 0x2c0(0x0c)
	struct FRotator RightHandRotation; // 0x2cc(0x0c)
	struct FVector RightHandScale; // 0x2d8(0x0c)
	struct FVector RightHandHelpLocation; // 0x2e4(0x0c)
	struct FRotator RightHandHelpRotation; // 0x2f0(0x0c)
	struct FVector RightHandHelpScale; // 0x2fc(0x0c)
	struct FVector RightHandThumb1Location; // 0x308(0x0c)
	struct FRotator RightHandThumb1Rotation; // 0x314(0x0c)
	struct FVector RightHandThumb1Scale; // 0x320(0x0c)
	struct FVector RightHandThumb2Location; // 0x32c(0x0c)
	struct FRotator RightHandThumb2Rotation; // 0x338(0x0c)
	struct FVector RightHandThumb2Scale; // 0x344(0x0c)
	struct FVector RightHandThumb3Location; // 0x350(0x0c)
	struct FRotator RightHandThumb3Rotation; // 0x35c(0x0c)
	struct FVector RightHandThumb3Scale; // 0x368(0x0c)
	struct FVector RightHandIndex1Location; // 0x374(0x0c)
	struct FRotator RightHandIndex1Rotation; // 0x380(0x0c)
	struct FVector RightHandIndex1Scale; // 0x38c(0x0c)
	struct FVector RightHandIndex2Location; // 0x398(0x0c)
	struct FRotator RightHandIndex2Rotation; // 0x3a4(0x0c)
	struct FVector RightHandIndex2Scale; // 0x3b0(0x0c)
	struct FVector RightHandIndex3Location; // 0x3bc(0x0c)
	struct FRotator RightHandIndex3Rotation; // 0x3c8(0x0c)
	struct FVector RightHandIndex3Scale; // 0x3d4(0x0c)
	struct FVector RightHandMiddleLocation; // 0x3e0(0x0c)
	struct FRotator RightHandMiddleRotation; // 0x3ec(0x0c)
	struct FVector RightHandMiddleScale; // 0x3f8(0x0c)
	struct FVector RightHandMiddle1Location; // 0x404(0x0c)
	struct FRotator RightHandMiddle1Rotation; // 0x410(0x0c)
	struct FVector RightHandMiddle1Scale; // 0x41c(0x0c)
	struct FVector RightHandMiddle2Location; // 0x428(0x0c)
	struct FRotator RightHandMiddle2Rotation; // 0x434(0x0c)
	struct FVector RightHandMiddle2Scale; // 0x440(0x0c)
	struct FVector RightHandMiddle3Location; // 0x44c(0x0c)
	struct FRotator RightHandMiddle3Rotation; // 0x458(0x0c)
	struct FVector RightHandMiddle3Scale; // 0x464(0x0c)
	struct FVector RightHandRingLocation; // 0x470(0x0c)
	struct FRotator RightHandRingRotation; // 0x47c(0x0c)
	struct FVector RightHandRingScale; // 0x488(0x0c)
	struct FVector RightHandRing1ocation; // 0x494(0x0c)
	struct FRotator RightHandRing1Rotation; // 0x4a0(0x0c)
	struct FVector RightHandRing1Scale; // 0x4ac(0x0c)
	struct FVector RightHandRing2Location; // 0x4b8(0x0c)
	struct FRotator RightHandRing2Rotation; // 0x4c4(0x0c)
	struct FVector RightHandRing2Scale; // 0x4d0(0x0c)
	struct FVector RightHandRing3Location; // 0x4dc(0x0c)
	struct FRotator RightHandRing3Rotation; // 0x4e8(0x0c)
	struct FVector RightHandRing3Scale; // 0x4f4(0x0c)
	struct FVector RightHandPinkyLocation; // 0x500(0x0c)
	struct FRotator RightHandPinkyRotation; // 0x50c(0x0c)
	struct FVector RightHandPinkyScale; // 0x518(0x0c)
	struct FVector RightHandPinky1Location; // 0x524(0x0c)
	struct FRotator RightHandPinky1Rotation; // 0x530(0x0c)
	struct FVector RightHandPinky1Scale; // 0x53c(0x0c)
	struct FVector RightHandPinky2Location; // 0x548(0x0c)
	struct FRotator RightHandPinky2Rotation; // 0x554(0x0c)
	struct FVector RightHandPinky2Scale; // 0x560(0x0c)
	struct FVector RightHandPinky3Location; // 0x56c(0x0c)
	struct FRotator RightHandPinky3Rotation; // 0x578(0x0c)
	struct FVector RightHandPinky3Scale; // 0x584(0x0c)
};

// Class BattlePrototype.XGameStreamingManager
// Size: 0x50 (Inherited: 0x38)
struct UXGameStreamingManager : URSTickableManagerBase {
	char pad_38[0x8]; // 0x38(0x08)
	struct URSGameInstance* _gameInstance; // 0x40(0x08)
	char pad_48[0x8]; // 0x48(0x08)

	void SetFixedLayout(enum class ETouchControlLayout layout, float sec); // Function BattlePrototype.XGameStreamingManager.SetFixedLayout // (Final|Native|Public|BlueprintCallable) // @ game+0x1374ad0
	void SetEventPauseFlag(bool Flag); // Function BattlePrototype.XGameStreamingManager.SetEventPauseFlag // (Final|Native|Public|BlueprintCallable) // @ game+0x11b6870
};

