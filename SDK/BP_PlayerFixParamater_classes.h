// BlueprintGeneratedClass BP_PlayerFixParamater.BP_PlayerFixParamater_C
// Size: 0x50c (Inherited: 0xc0)
struct UBP_PlayerFixParamater_C : UActorComponent {
	float INPUT_STICK_DODGE; // 0xc0(0x04)
	float INPUT_STICK_DEADZONE; // 0xc4(0x04)
	float DODGE_DISTANCE_SCALE; // 0xc8(0x04)
	float THROW_OBJ_IGNORE_TIME_SECONDS; // 0xcc(0x04)
	float THROW_OBJ_SLOW_RATE; // 0xd0(0x04)
	float SprintCameraLength; // 0xd4(0x04)
	float SprintCurveMaxAngle; // 0xd8(0x04)
	float JUMP_STEP_IN; // 0xdc(0x04)
	float FORWARD_THROW_ANGLE; // 0xe0(0x04)
	float LR_THROW_ANGLE; // 0xe4(0x04)
	float DODGE_ATTACK_ACCEPT_TIME; // 0xe8(0x04)
	float JUMP_ATTACK_INTERVAL; // 0xec(0x04)
	float DOWN_TIME_MIN; // 0xf0(0x04)
	float DOWN_TIME_MAX; // 0xf4(0x04)
	float DODGE_TARGET_ROTATE_ANGLE_NEAR; // 0xf8(0x04)
	float DODGE_TARGET_ROTATE_ANGLE_FAR; // 0xfc(0x04)
	float DODGE_TARGET_ROTATE_DIST_NEAR; // 0x100(0x04)
	float DODGE_TARGET_ROTATE_DIST_FAR; // 0x104(0x04)
	float THROW_LOOP_SECONDS; // 0x108(0x04)
	float FALL_LOOP_SECONDS; // 0x10c(0x04)
	float COMBO_TIME; // 0x110(0x04)
	float LOCKON_MOVE_SECONDS; // 0x114(0x04)
	float LOCKON_MOVE_SECONDS_REMOVE_STICK; // 0x118(0x04)
	float LOCKON_PARAM_RESET_ANGLE; // 0x11c(0x04)
	float BORING_IDLE_TRANSITION_TIME; // 0x120(0x04)
	float BankPower; // 0x124(0x04)
	float LOCKON_CAMERA_HEIGHT; // 0x128(0x04)
	float LOCKON_SEARCH_DISTANCE; // 0x12c(0x04)
	float LOCKON_SEARCH_YAW; // 0x130(0x04)
	float LOCKON_SEARCH_PITCH; // 0x134(0x04)
	float LOCKON_MOB_DISTANCE; // 0x138(0x04)
	float LOCKON_DISTANCE; // 0x13c(0x04)
	float LOCKON_TRACE_2ND_Z_OFFSET; // 0x140(0x04)
	float BankBackPower; // 0x144(0x04)
	float BARRAGE_ATTACK_INPUT_INTERVAL; // 0x148(0x04)
	float RUN_THROW_LOOP_SECONDS; // 0x14c(0x04)
	float RUN_FALL_LOOP_SECONDS; // 0x150(0x04)
	enum class EEasingFunc InterpIK_Type; // 0x154(0x01)
	char pad_155[0x3]; // 0x155(0x03)
	float LAND_EFFECT_SWITCH_SPEED; // 0x158(0x04)
	float CAMERA_TRACKING_ENABLE_ANGLE; // 0x15c(0x04)
	float CAMERA_TRACKING_INTERP_SECONDS; // 0x160(0x04)
	float CAMERA_TRACKING_MAX_SPEED; // 0x164(0x04)
	float CAMERA_TRACKING_UPPER_PITCH; // 0x168(0x04)
	float CAMERA_TRACKING_LOWER_PITCH; // 0x16c(0x04)
	float CAPTURE_CAMERA_LENGTH; // 0x170(0x04)
	float CAPTURE_CAMERA_INTERP_SECONDS; // 0x174(0x04)
	float CAMERA_DEFAULT_HEIGHT; // 0x178(0x04)
	float SPRINT_JUMP_SPEED; // 0x17c(0x04)
	float LOCKON_ANGLE_PLAY; // 0x180(0x04)
	float NPC_RANGE_NEAR; // 0x184(0x04)
	float NPC_RANGE_FAR; // 0x188(0x04)
	float FLOOTED_DODGE_DISTANCE_RATE; // 0x18c(0x04)
	float CAMERA_PITCH_MAX_UP_ANGLE; // 0x190(0x04)
	float CAMERA_PITCH_MAX_LOW_ANGLE; // 0x194(0x04)
	float LockonForceStopLength; // 0x198(0x04)
	float LockonForceStopRadius; // 0x19c(0x04)
	float LockonForceStopAngle; // 0x1a0(0x04)
	float LockonNoInputDirAdjustAngle; // 0x1a4(0x04)
	float LockonDodgeForceStopLength; // 0x1a8(0x04)
	float CONFUSION_CURE_RATE; // 0x1ac(0x04)
	float CONFUSION_FRIEND_TARGET_PRIORITY_OFFSET; // 0x1b0(0x04)
	float DODGE_TELEPO_DISTANCE_RATE; // 0x1b4(0x04)
	float PsychicWeakHitStopRate; // 0x1b8(0x04)
	float PsychicWeakHitStopSeconds; // 0x1bc(0x04)
	float MaterialChangeWeakHitStopRate; // 0x1c0(0x04)
	float MaterialChangeWeakHitStopSeconds; // 0x1c4(0x04)
	float EnemyBadStatusHitStopRate; // 0x1c8(0x04)
	float EnemyBadStatusHitStopSeconds; // 0x1cc(0x04)
	float BrainCrashTriggerStopRate; // 0x1d0(0x04)
	float BrainCrashTriggerStopSeconds; // 0x1d4(0x04)
	float ArmorBreakStopRate; // 0x1d8(0x04)
	float ArmorBreakStopSeconds; // 0x1dc(0x04)
	float PlayerBadStatusHitStopRate; // 0x1e0(0x04)
	float PlayerBadStatusHitStopSeconds; // 0x1e4(0x04)
	struct FName WeaponMaterialBattleClaimantName; // 0x1e8(0x08)
	float COPY_TIME_DEFAULT; // 0x1f0(0x04)
	float COPY_TIME_ATTACK; // 0x1f4(0x04)
	struct TArray<struct FVector> BulletOffset; // 0x1f8(0x10)
	struct TArray<struct FRotator> BulletRotator; // 0x208(0x10)
	float BulletRotatorRundomMin; // 0x218(0x04)
	float BulletRotatorRundomMax; // 0x21c(0x04)
	float COPY_PRTICLE_TIME_RATE; // 0x220(0x04)
	float COPY_OBJ_DELAY_TIME; // 0x224(0x04)
	float COPY_OBJ_ATTACK_RATE; // 0x228(0x04)
	float StealthAttackBoostRate; // 0x22c(0x04)
	float NPC_FPRCE_WARP_DISTANCE; // 0x230(0x04)
	float NPC_FPRCE_WARP_DISTANCE_BATTLE; // 0x234(0x04)
	float NPC_WARY_HP_RATE_2; // 0x238(0x04)
	float NPC_WARY_HP_RATE_3; // 0x23c(0x04)
	float NPC_WARY_PROBABILITY_DOWN_2; // 0x240(0x04)
	float NPC_WARY_PROBABILITY_DOWN_3; // 0x244(0x04)
	float HardenDamageCutRate; // 0x248(0x04)
	float HardenKeepTime; // 0x24c(0x04)
	float HardenIntervalTime; // 0x250(0x04)
	float AttackD1WaitTime; // 0x254(0x04)
	float INTERCEPT_RANGE; // 0x258(0x04)
	int32_t AutoCounterRate; // 0x25c(0x04)
	float AutoCounterRadiusRate; // 0x260(0x04)
	float AutoCounterHalfHeightRate; // 0x264(0x04)
	float AutoCounterCoolDownTimeMin; // 0x268(0x04)
	float AutoCounterCoolDownTimeMax; // 0x26c(0x04)
	float INPUT_STICK_WALK; // 0x270(0x04)
	float INPUT_STICK_RUN; // 0x274(0x04)
	float LOCKON_ANGLE_PLAY_CAMERAMOVE; // 0x278(0x04)
	float NPC_ATTACK_PROBABILITY_UP_TIME_2; // 0x27c(0x04)
	float NPC_ATTACK_PROBABILITY_UP_TIME_3; // 0x280(0x04)
	float NPC_ATTACK_PROBABILITY_UP_VALUE_2; // 0x284(0x04)
	float NPC_ATTACK_PROBABILITY_UP_VALUE_3; // 0x288(0x04)
	float NPC_MOVE_PROBABILITY_DOWN_TIME; // 0x28c(0x04)
	float NPC_MOVE_PROBABILITY_DOWN_VALUE; // 0x290(0x04)
	float COPY_OBJ_ATTACK_RATE_COMBO; // 0x294(0x04)
	float COPY_TIME_OFF; // 0x298(0x04)
	float ExPsychicWeakHitStopRate; // 0x29c(0x04)
	float ExPsychicWeakHitStopSeconds; // 0x2a0(0x04)
	float ExPsychicHitStopRate; // 0x2a4(0x04)
	float ExPsychicHitStopSeconds; // 0x2a8(0x04)
	float AllThrowPsychicHitStopRate; // 0x2ac(0x04)
	float AllThrowPsychicHitStopSeconds; // 0x2b0(0x04)
	float EnemyDeadNormalAttackHitStopRate; // 0x2b4(0x04)
	float EnemyDeadNormalAttackHitStopSeconds; // 0x2b8(0x04)
	float EnemyDeadPsychicAttackHitStopRate; // 0x2bc(0x04)
	float EnemyDeadPsychicAttackHitStopSeconds; // 0x2c0(0x04)
	float UniqueObjectHitStopRate; // 0x2c4(0x04)
	float UniqueObjectHitStopSeconds; // 0x2c8(0x04)
	float EnablePsychicAttackHitStopRate; // 0x2cc(0x04)
	float EnablePsychicAttackHitStopSeconds; // 0x2d0(0x04)
	float EnableNormalAttackHitStopRate; // 0x2d4(0x04)
	float EnableNormalAttackHitStopSeconds; // 0x2d8(0x04)
	float ComboPsychicAttackHitStopRate; // 0x2dc(0x04)
	float ComboPsychicAttackHitStopSeconds; // 0x2e0(0x04)
	float DirectShotHitStopRate; // 0x2e4(0x04)
	float DirectShotHitStopSeconds; // 0x2e8(0x04)
	float InterceptAttackHitStopRate; // 0x2ec(0x04)
	float InterceptAttackHitStopSeconds; // 0x2f0(0x04)
	float EDeadPsychicAttackDelayTime; // 0x2f4(0x04)
	float EDeadNormalAttackDelayTime; // 0x2f8(0x04)
	float ArmorBreakDelayTime; // 0x2fc(0x04)
	float BrainCrashTriggerDelayTime; // 0x300(0x04)
	float EBadStatusDelayTime; // 0x304(0x04)
	float AllThrowPsychicDelayTime; // 0x308(0x04)
	float UniqueObjectDelayTime; // 0x30c(0x04)
	float EnablePsychicAttackDelayTime; // 0x310(0x04)
	float EnableNormalAttackDelayTime; // 0x314(0x04)
	float ComboPsychicAttackDelayTime; // 0x318(0x04)
	float DirectShotDelayTime; // 0x31c(0x04)
	float InterceptAttackDelayTime; // 0x320(0x04)
	float PBadStatusDelayTime; // 0x324(0x04)
	float EnemyUniqueAttackHitStopRate; // 0x328(0x04)
	float EnemyUniqueAttackHitStopSeconds; // 0x32c(0x04)
	float EnemyDownHitStopRate; // 0x330(0x04)
	float EnemyDownHitStopSeconds; // 0x334(0x04)
	float EnemyReactionLHitStopRate; // 0x338(0x04)
	float EnemyReactionLHitStopSeconds; // 0x33c(0x04)
	int32_t BONDS_LEVEL_MIN; // 0x340(0x04)
	int32_t BONDS_LEVEL_MAX; // 0x344(0x04)
	float EnemyNormalAttackHitStopRate; // 0x348(0x04)
	float EnemyNormalAttackHitStopSeconds; // 0x34c(0x04)
	float HitStopStartDelayTime; // 0x350(0x04)
	float EnemyBlowHitStopRate; // 0x354(0x04)
	float EnemyBlowHitStopSeconds; // 0x358(0x04)
	float EnemyAddDamageHitStopRate; // 0x35c(0x04)
	float EnemyAddDamageHitStopSeconds; // 0x360(0x04)
	float HitStopMDelayTime; // 0x364(0x04)
	float HitStopLDelayTime; // 0x368(0x04)
	char pad_36C[0x4]; // 0x36c(0x04)
	struct TArray<int32_t> HitStopDelayTypeList; // 0x370(0x10)
	float EnemyDownPsychicHitStopRate; // 0x380(0x04)
	float EnemyDownPsychicHitStopSeconds; // 0x384(0x04)
	float EnemyReactionLPsychicHitStopRate; // 0x388(0x04)
	float EnemyReactionLPsychicHitStopSeconds; // 0x38c(0x04)
	float ENPCReactionSRate; // 0x390(0x04)
	float ENPCReactionSSec; // 0x394(0x04)
	float ENPCUniqueReactionRate; // 0x398(0x04)
	float ENPCUniqueReactionSec; // 0x39c(0x04)
	float RouteWinceBonus; // 0x3a0(0x04)
	float RouteKnockBackBonus; // 0x3a4(0x04)
	float RouteDownBonus; // 0x3a8(0x04)
	float HardenDamageRateMin; // 0x3ac(0x04)
	float HardenDamageRateMax; // 0x3b0(0x04)
	float HardenDamageSubTimeMin; // 0x3b4(0x04)
	float HardenDamageSubTimeMax; // 0x3b8(0x04)
	float HardenDamageRateMin_NPC; // 0x3bc(0x04)
	float HardenDamageRateMax_NPC; // 0x3c0(0x04)
	float HardenDamageSubTimeMin_NPC; // 0x3c4(0x04)
	float HardenDamageSubTimeMax_NPC; // 0x3c8(0x04)
	float HardenDamageRateMin_EM; // 0x3cc(0x04)
	float HardenDamageRateMax_EM; // 0x3d0(0x04)
	float HardenDamageSubTimeMin_EM; // 0x3d4(0x04)
	float HardenDamageSubTimeMax_EM; // 0x3d8(0x04)
	float COVER_DAMAGE_HP_RATE; // 0x3dc(0x04)
	struct TArray<int32_t> COVER_DAMAGE_PROBABILITY_LETHAL; // 0x3e0(0x10)
	struct TArray<int32_t> COVER_DAMAGE_PROBABILITY_DAMAGE; // 0x3f0(0x10)
	float COVER_DAMAGE_INTERVAL; // 0x400(0x04)
	float AutoStealthWithCh0700; // 0x404(0x04)
	float ENPCNormalAttackRate; // 0x408(0x04)
	float ENPCNormalAttackSec; // 0x40c(0x04)
	float COPY_ATTACK_RATE; // 0x410(0x04)
	float COPY_ATTACK_RATE_PLAYER; // 0x414(0x04)
	float BRAIN_CRASH_ATTACK_PERCENT; // 0x418(0x04)
	float EnpcSpTriggerAttackStopRate; // 0x41c(0x04)
	float EnpcSpTriggerAttackStopSec; // 0x420(0x04)
	float PSYCHIC_COST; // 0x424(0x04)
	float PSYCHIC_UNIQUE_COST; // 0x428(0x04)
	char pad_42C[0x4]; // 0x42c(0x04)
	struct TArray<enum class EPlayerHitStopType> PsychicObjPullAttackCauseTypeList; // 0x430(0x10)
	float PSYCHIC_GAUGE_MAX_DEFAULT; // 0x440(0x04)
	float PSYCHIC_GAUGE_AUTO_RECOVERY; // 0x444(0x04)
	float PSYCHIC_GAUGE_AUTO_RECOVERY_BATTLE; // 0x448(0x04)
	char pad_44C[0x4]; // 0x44c(0x04)
	struct TArray<float> ITEM_COOL_TIME_LIST; // 0x450(0x10)
	float PSYCHIC_GAUGE_ADD_DEFEATED; // 0x460(0x04)
	float PSYCHIC_GAUGE_ADD_DEFEATED_BRAINCRASH; // 0x464(0x04)
	float PsychicObjSlamHitStopRate; // 0x468(0x04)
	float PsychicObjSlamHitStopSeconds; // 0x46c(0x04)
	struct TArray<enum class EPlayerHitStopType> BrainFieldPsychicObjAttackCauseTypeList; // 0x470(0x10)
	float BrainfieldDropPsychicAttackRate; // 0x480(0x04)
	float BrainfieldDropPsychicAttackSec; // 0x484(0x04)
	float PLAYER_DYING_HP_RATE; // 0x488(0x04)
	float RESSURRECT_HP_RATE; // 0x48c(0x04)
	float AUTO_RESSURRECT_HP_RATE; // 0x490(0x04)
	float AUTO_RESSURRECT_TIME; // 0x494(0x04)
	float NPC_HERO_CRASH_RATE; // 0x498(0x04)
	float AssassinAttackFailedPowerRate; // 0x49c(0x04)
	float NPC_ASSIST_ATTACK_PROBABILITY_UP_VALUE; // 0x4a0(0x04)
	float DODGE_INVINCIBLE_TIME; // 0x4a4(0x04)
	float NPC_ATTACK_DAMAGE_RATE; // 0x4a8(0x04)
	float NPC_DEFENCE_DAMAGE_RATE; // 0x4ac(0x04)
	float NOT_BATTLE_EXP_RATE; // 0x4b0(0x04)
	float ADD_BONDS_KILL_ENEMY; // 0x4b4(0x04)
	int32_t STRONG_ENEMY_LV; // 0x4b8(0x04)
	int32_t STRONG_ENEMY_LV_DIFF; // 0x4bc(0x04)
	int32_t STRONG_BOSS_LV_DIFF; // 0x4c0(0x04)
	float NPC_REVIVE_DISTANCE; // 0x4c4(0x04)
	int32_t BRAINTALK_SAS_COMBO_CH0100; // 0x4c8(0x04)
	int32_t BRAINTALK_SAS_COMBO_CH0200; // 0x4cc(0x04)
	float BRAINTALK_SAS_COMBO_INTERVAL_CH0100; // 0x4d0(0x04)
	float BRAINTALK_SAS_COMBO_INTERVAL_CH0200; // 0x4d4(0x04)
	float NPC_REVIVE_DISTANCE_FAR; // 0x4d8(0x04)
	float BRAINTALK_FALL_HEIGHT; // 0x4dc(0x04)
	float SAS_EXTENDSTEALTH_TIME; // 0x4e0(0x04)
	float SAS_EXTENDSTEALTH_TIME_LONG; // 0x4e4(0x04)
	float PSYCHIC_COMBO_COST; // 0x4e8(0x04)
	float EM8010_METAMORPHOSIS_ATTACK_SCALE; // 0x4ec(0x04)
	struct TArray<enum class EPlayerHitStopType> UniqueObjHitInvincibleCauseTypeList; // 0x4f0(0x10)
	float FLYING_ACTION_LIMIT_DISTANCE; // 0x500(0x04)
	float COPY_REACTION_RATE; // 0x504(0x04)
	float COPY_BADSTATUS_RATE; // 0x508(0x04)
};

