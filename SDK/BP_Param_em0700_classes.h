// BlueprintGeneratedClass BP_Param_em0700.BP_Param_em0700_C
// Size: 0x200 (Inherited: 0xc0)
struct UBP_Param_em0700_C : UActorComponent {
	float FloatingHeight; // 0xc0(0x04)
	float FlyLowerHeight; // 0xc4(0x04)
	float FlyHighest; // 0xc8(0x04)
	float MissileFirstFireHormingAngle; // 0xcc(0x04)
	float MissileHormingAngle; // 0xd0(0x04)
	float MissileInterpHorming; // 0xd4(0x04)
	float MissileSpeed; // 0xd8(0x04)
	float LariatSpeed; // 0xdc(0x04)
	struct TArray<float> TakeoffProbablity; // 0xe0(0x10)
	struct TArray<enum class Enum_em0700> TakeoffAction; // 0xf0(0x10)
	float FlyAttackForceChangeProbability; // 0x100(0x04)
	float FlyAttackForceChangeDistance; // 0x104(0x04)
	float GroundAttackForceChangeProbability; // 0x108(0x04)
	float GroundAttackForceChangeDistance; // 0x10c(0x04)
	float FallSpeed; // 0x110(0x04)
	float LandCheckLength; // 0x114(0x04)
	float CounterFlyAttackProbability; // 0x118(0x04)
	float CounterFlyAttackMinLength; // 0x11c(0x04)
	struct TArray<enum class Enum_em0700> CounterFlyAction; // 0x120(0x10)
	struct TArray<enum class Enum_em0700> CounterGroundAction; // 0x130(0x10)
	float CounterAttackProbability; // 0x140(0x04)
	float CounterAttackMinLength; // 0x144(0x04)
	float WalkLR_Angle; // 0x148(0x04)
	float MoveAttackSpeed; // 0x14c(0x04)
	float GroundLariatReserveTime; // 0x150(0x04)
	float LariatHeightOffset; // 0x154(0x04)
	float LariatHeightOffsetSimple; // 0x158(0x04)
	float LariatSpeedSimple; // 0x15c(0x04)
	float FlameObjAddScale; // 0x160(0x04)
	float ElectricObjAddScale; // 0x164(0x04)
	struct TArray<float> HeightList; // 0x168(0x10)
	float HeightStateTimer; // 0x178(0x04)
	float CheckEnemyAroundLength; // 0x17c(0x04)
	float CheckEnemyAroundIntervalTime; // 0x180(0x04)
	float MachinegunSignMoveSpeed; // 0x184(0x04)
	float BreakawayCheckLength; // 0x188(0x04)
	float BreakawayUpTime; // 0x18c(0x04)
	float BreakawayDownTime; // 0x190(0x04)
	float BreakawayUpHeight; // 0x194(0x04)
	float BreakawayUpWaitTime; // 0x198(0x04)
	float BreakawayDownWaitTime; // 0x19c(0x04)
	float BreakawayMoveTime; // 0x1a0(0x04)
	float BreakawayMoveSpeed; // 0x1a4(0x04)
	float AvoidSpeed; // 0x1a8(0x04)
	float AvoidTime; // 0x1ac(0x04)
	float NormalAttackAvoidDistance; // 0x1b0(0x04)
	float EscapeSpeed; // 0x1b4(0x04)
	float CheckWallDistance; // 0x1b8(0x04)
	float CheckCharaDistance; // 0x1bc(0x04)
	float LowEvaluateDistance; // 0x1c0(0x04)
	float HighSpeedAttackTriggerDistance; // 0x1c4(0x04)
	float HighSpeedAttackTriggerWallDistance; // 0x1c8(0x04)
	int32_t HighSpeedTriggerHitWallCount; // 0x1cc(0x04)
	float StealthLostFallActionTime; // 0x1d0(0x04)
	float TelepoApproachIgnoreTime; // 0x1d4(0x04)
	float EffectiveSas_WinceRate; // 0x1d8(0x04)
	float EffectiveSas_KnockbackRate; // 0x1dc(0x04)
	float EffectiveSas_DownRate; // 0x1e0(0x04)
	float EffectiveSas_CrashRate; // 0x1e4(0x04)
	float HighSpeedAttackStopTargetDistance; // 0x1e8(0x04)
	float HighSpeedAttackFlyAdjustSpeed; // 0x1ec(0x04)
	float EffectiveSas_Ground_WinceRate; // 0x1f0(0x04)
	float EffectiveSas_Ground_KnockBackRate; // 0x1f4(0x04)
	float EffectiveSas_Ground_DownRate; // 0x1f8(0x04)
	float EffectiveSas_Ground_CrashRate; // 0x1fc(0x04)
};

